/**\n * Test Edge Function to verify Deno runtime and basic functionality\n */\n\nexport default async function handler(request: Request, context: any): Promise<Response> {\n  const headers = new Headers({\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'Content-Type': 'application/json'\n  });\n\n  if (request.method === 'OPTIONS') {\n    return new Response(null, { status: 200, headers });\n  }\n\n  try {\n    // Test Deno runtime capabilities\n    const denoVersion = Deno.version;\n    const now = new Date();\n    const country = context.geo?.country || 'Unknown';\n    const city = context.geo?.city || 'Unknown';\n\n    // Test Web Crypto API availability\n    const cryptoAvailable = typeof crypto !== 'undefined' && \n                           typeof crypto.subtle !== 'undefined';\n\n    // Test environment variables\n    const envTest = Deno.env.get('NETLIFY') || 'Not set';\n\n    const testData = {\n      success: true,\n      message: 'Edge Functions are working correctly!',\n      runtime: {\n        deno: denoVersion,\n        timestamp: now.toISOString(),\n        location: {\n          country,\n          city\n        }\n      },\n      capabilities: {\n        webCrypto: cryptoAvailable,\n        environment: envTest,\n        fetch: typeof fetch !== 'undefined',\n        textEncoder: typeof TextEncoder !== 'undefined',\n        textDecoder: typeof TextDecoder !== 'undefined'\n      },\n      headers: Object.fromEntries(request.headers.entries()),\n      url: request.url,\n      method: request.method\n    };\n\n    return new Response(\n      JSON.stringify(testData, null, 2),\n      { status: 200, headers }\n    );\n\n  } catch (error) {\n    console.error('Edge function test error:', error);\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: error.message,\n        stack: error.stack\n      }),\n      { status: 500, headers }\n    );\n  }\n}\n\nexport const config = {\n  path: '/api/test-edge'\n};"