[build]
  command = "npm run build:production"
  publish = "public"
  base = ""
  ignore = "git diff --quiet $CACHED_COMMIT_REF $COMMIT_REF"
  
# Build environment optimization
[build.processing]
  skip_processing = false
  
[build.processing.css]
  bundle = true
  minify = true
  
[build.processing.js]
  bundle = true
  minify = true
  
[build.processing.html]
  pretty_urls = true

# =============================================================================
# NETLIFY BUILD ENVIRONMENT VARIABLES
# =============================================================================
# These are build-time environment variables available during the build process
# For runtime secrets, use Netlify's environment variable dashboard
[build.environment]
  # Core Build Settings
  HUGO_VERSION = "0.121.0"
  HUGO_ENV = "production"
  NODE_VERSION = "18"
  GO_VERSION = "1.21"
  NODE_ENV = "production"
  
  # Build Identification
  BUILD_ID = "2025-08-25-unified-env-config"
  
  # Build Performance
  NETLIFY_USE_YARN = "false"
  HUGO_CACHEDIR = "/opt/build/cache/hugo"
  NETLIFY_FUNCTIONS_ENABLED = "true"
  
  # Site Configuration (Public - safe for client-side)
  VITE_API_URL = "/api"
  VITE_SITE_URL = "https://vocal-pony-24e3de.netlify.app"
  API_BASE_URL = "https://vocal-pony-24e3de.netlify.app/api"
  SITE_URL = "https://vocal-pony-24e3de.netlify.app"
  
  # Netlify Specific
  NETLIFY_FUNCTIONS_URL = "https://vocal-pony-24e3de.netlify.app/.netlify/functions"
  
  # CORS Configuration
  CORS_ORIGIN = "https://vocal-pony-24e3de.netlify.app"
  ALLOWED_ORIGINS = "https://vocal-pony-24e3de.netlify.app"
  
  # Supabase Public Configuration (Safe for build-time)
  NEXT_PUBLIC_SUPABASE_URL = "https://tdmzayzkqyegvfgxlolj.supabase.co"
  SUPABASE_URL = "https://tdmzayzkqyegvfgxlolj.supabase.co"
  
  # Admin Panel Configuration
  ADMIN_PANEL_ENABLED = "true"
  ADMIN_CACHE_BUSTING = "true"
  ADMIN_EMERGENCY_ACCESS = "true"
  
  # Feature Flags for Production
  ENABLE_ANALYTICS = "true"
  ENABLE_CONTACT_FORM = "true"
  ENABLE_SEARCH = "true"
  ENABLE_BLOG = "true"
  DEBUG = "false"
  MAINTENANCE_MODE = "false"
  
  # Performance Settings
  COMPRESSION_ENABLED = "true"
  CACHE_TTL = "300"
  
[context.production]
  command = "npm run build:production"
  
  [context.production.environment]
    HUGO_ENV = "production"
    NODE_ENV = "production"
    BUILD_MODE = "production"
    HUGO_ENABLEGITINFO = "true"
    
[context.branch-deploy]
  command = "npm run build:staging"
  
  [context.branch-deploy.environment]
    HUGO_ENV = "staging"
    NODE_ENV = "development"
    BUILD_MODE = "staging"
    
[context.deploy-preview]
  command = "npm run build:preview"
  
  [context.deploy-preview.environment]
    HUGO_ENV = "development"
    NODE_ENV = "development"
    BUILD_MODE = "preview"

# Security Headers - Enhanced Security
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    Cross-Origin-Embedder-Policy = "require-corp"
    Cross-Origin-Opener-Policy = "same-origin"
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; connect-src 'self' https:; font-src 'self' data: https:; form-action 'self'; base-uri 'self'; object-src 'none'; frame-ancestors 'none';"
    Permissions-Policy = "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=(), interest-cohort=()"

# Admin panel headers - Strong cache busting
[[headers]]
  for = "/admin/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://tdmzayzkqyegvfgxlolj.supabase.co; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; connect-src 'self' https://tdmzayzkqyegvfgxlolj.supabase.co https:; font-src 'self' data: https:;"
    Cache-Control = "no-cache, no-store, must-revalidate, max-age=0, private"
    Pragma = "no-cache"
    Expires = "0"
    ETag = "false"
    Last-Modified = ""
    Vary = "*"

# Admin API headers - Strong cache busting
[[headers]]
  for = "/api/admin/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Cache-Control = "no-cache, no-store, must-revalidate, max-age=0, private"
    Pragma = "no-cache"
    Expires = "0"
    ETag = "false"
    Last-Modified = ""
    Vary = "*"

# Admin HTML files - Aggressive cache busting
[[headers]]
  for = "/admin*.html"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate, max-age=0, private"
    Pragma = "no-cache"
    Expires = "0"
    ETag = "false"
    Last-Modified = ""
    Vary = "*"

# Admin JavaScript files - No caching for admin scripts
[[headers]]
  for = "/admin/js/*"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate, max-age=0, private"
    Pragma = "no-cache"
    Expires = "0"
    ETag = "false"
    Last-Modified = ""
    Vary = "*"

# Admin CSS files - No caching for admin styles
[[headers]]
  for = "/admin/css/*"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate, max-age=0, private"
    Pragma = "no-cache"
    Expires = "0"
    ETag = "false"
    Last-Modified = ""
    Vary = "*"

# CSS caching with proper versioning
[[headers]]
  for = "/css/main.css"
  [headers.values]
    Cache-Control = "public, max-age=3600, must-revalidate"
    ETag = "true"

[[headers]]
  for = "/css/links-unified.css"
  [headers.values]
    Cache-Control = "public, max-age=3600, must-revalidate"
    ETag = "true"

# Asset Optimization
[[headers]]
  for = "*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.css"
  [headers.values]
    Cache-Control = "public, max-age=3600, must-revalidate"

[[headers]]
  for = "*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

# WebP Images - Modern format optimization
[[headers]]
  for = "*.webp"
  [headers.values]
    Cache-Control = "public, max-age=31536000"
    Vary = "Accept"

# AVIF Images - Next-gen format
[[headers]]
  for = "*.avif"
  [headers.values]
    Cache-Control = "public, max-age=31536000"
    Vary = "Accept"

# Form Handling Security
[[headers]]
  for = "/contact"
  [headers.values]
    X-Robots-Tag = "noindex, nofollow"
    X-Frame-Options = "DENY"

[[headers]]
  for = "/api/contact"
  [headers.values]
    X-Robots-Tag = "noindex, nofollow"
    Access-Control-Allow-Methods = "POST, OPTIONS"
    Access-Control-Allow-Headers = "Content-Type, Authorization"

# Page Speed Optimization - Removed incorrect preloads

# Admin Panel Routes with cache busting - Must come before API routes
[[redirects]]
  from = "/admin"
  to = "/admin/dashboard.html"
  status = 200
  force = true
  headers = {Cache-Control = "no-cache, no-store, must-revalidate, max-age=0"}

[[redirects]]
  from = "/admin/"
  to = "/admin/dashboard.html"
  status = 200
  force = true
  headers = {Cache-Control = "no-cache, no-store, must-revalidate, max-age=0"}

# Admin static files with enhanced cache busting
[[redirects]]
  from = "/admin/*"
  to = "/admin/:splat?v=2025-08-25-v5"
  status = 200
  force = true
  headers = {Cache-Control = "no-cache, no-store, must-revalidate, max-age=0, private"}
  
# Admin integration test page
[[redirects]]
  from = "/admin/test"
  to = "/tests/admin-integration-test.html"
  status = 200
  force = false

# Admin API endpoints with authentication
[[redirects]]
  from = "/api/admin/*"
  to = "/.netlify/functions/:splat"
  status = 200
  force = true
  headers = {X-Forwarded-For = ":client_ip"}

# API Proxy Rules for Production Deployment
# Route API calls to Netlify Functions
[[redirects]]
  from = "/api/health"
  to = "/.netlify/functions/health"
  status = 200
  force = true

[[redirects]]
  from = "/api/auth/login"
  to = "/.netlify/functions/auth-login"
  status = 200
  force = true
  headers = {X-Forwarded-For = ":client_ip"}

[[redirects]]
  from = "/api/admin-auth"
  to = "/.netlify/edge-functions/admin-auth"
  status = 200
  force = true
  headers = {X-Forwarded-For = ":client_ip"}

[[redirects]]
  from = "/api/auth/logout"
  to = "/.netlify/functions/auth-logout"
  status = 200
  force = true
  headers = {X-Forwarded-For = ":client_ip"}

[[redirects]]
  from = "/api/auth/refresh"
  to = "/.netlify/functions/auth"
  status = 200
  force = true
  headers = {X-Forwarded-For = ":client_ip"}

[[redirects]]
  from = "/api/auth/*"
  to = "/.netlify/functions/auth"
  status = 200
  force = true
  headers = {X-Forwarded-For = ":client_ip"}

[[redirects]]
  from = "/api/contact"
  to = "/.netlify/functions/contact"
  status = 200
  force = true
  headers = {X-Forwarded-For = ":client_ip"}

# Future API endpoints
[[redirects]]
  from = "/api/content/*"
  to = "/.netlify/functions/content"
  status = 200
  force = false

[[redirects]]
  from = "/api/portfolio/*"
  to = "/.netlify/functions/portfolio"
  status = 200
  force = false

[[redirects]]
  from = "/api/media/*"
  to = "/.netlify/functions/media"
  status = 200
  force = false

# Fallback for unmatched API routes
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/fallback"
  status = 200
  force = false

# Static file serving for admin assets
[[redirects]]
  from = "/admin/js/*"
  to = "/admin/js/:splat"
  status = 200
  force = true

[[redirects]]
  from = "/admin/css/*"
  to = "/admin/css/:splat"
  status = 200
  force = true

[[redirects]]
  from = "/admin/utils/*"
  to = "/admin/utils/:splat"
  status = 200
  force = true

# Domain Redirects
[[redirects]]
  from = "https://vocal-pony-24e3de.netlify.app/*"
  to = "https://vocal-pony-24e3de.netlify.app/:splat"
  status = 301
  force = true

# Legacy URL Redirects
[[redirects]]
  from = "/learn/*"
  to = "/tools/:splat"
  status = 301

[[redirects]]
  from = "/make/*"
  to = "/writing/:splat"
  status = 301

# Function Configuration
[functions]
  directory = "netlify/functions"
  node_bundler = "esbuild"

# Edge Functions Configuration and Routing
[[edge_functions]]
  function = "auth-login"
  path = "/api/auth/login"

[[edge_functions]]
  function = "admin-auth"
  path = "/api/admin-auth"

[[edge_functions]]
  function = "auth-verify"
  path = "/api/auth/verify"

[[edge_functions]]
  function = "auth-logout"
  path = "/api/auth/logout"

# Admin authentication middleware
[[edge_functions]]
  function = "auth-middleware"
  path = "/admin/dashboard.html"

[[edge_functions]]
  function = "auth-middleware"
  path = "/admin/*/index.html"

[[edge_functions]]
  function = "auth-middleware"
  path = "/api/admin/*"

# Protected API endpoints
[[edge_functions]]
  function = "auth-middleware"
  path = "/api/portfolio/*"

[[edge_functions]]
  function = "auth-middleware"
  path = "/api/content/*"

[[edge_functions]]
  function = "test-edge"
  path = "/api/test-edge"

# Function-specific configurations
[functions."auth-login"]
  timeout = 30

[functions."auth-me"]
  timeout = 30

[functions."auth-logout"]
  timeout = 30

[functions."test-auth"]
  timeout = 30

[functions."auth"]
  timeout = 30

[functions."health"]
  timeout = 30

[functions."content"]
  timeout = 30

[functions."portfolio"]
  timeout = 30

[functions."media"]
  timeout = 30

# Build Plugins Configuration
# Enable these plugins for production builds after testing
# Disabled by default to avoid local development conflicts

# Performance monitoring
# [[plugins]]
#   package = "@netlify/plugin-lighthouse"
#   [plugins.inputs]
#     thresholds = { performance = 0.8, accessibility = 0.9, best-practices = 0.8, seo = 0.9 }

# Hugo resource caching for faster builds
# [[plugins]]
#   package = "netlify-plugin-hugo-cache-resources"

# SEO - Submit sitemap to search engines
# [[plugins]]
#   package = "netlify-plugin-submit-sitemap"
#   [plugins.inputs]
#     baseUrl = "https://vocal-pony-24e3de.netlify.app"
#     sitemapPath = "/sitemap.xml"
#     providers = ["google", "bing"]

# Form processing and spam protection
[[plugins]]
  package = "netlify-plugin-form-submissions"

# Development Settings
[dev]
  framework = "hugo"
  targetPort = 1313
  port = 8888
  publish = "public"
  autoLaunch = false