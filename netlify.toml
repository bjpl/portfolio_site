[build]
  command = "rm -rf public && hugo --minify --cleanDestinationDir --gc"
  publish = "public"
  base = ""

[build.environment]
  HUGO_VERSION = "0.121.0"
  HUGO_ENV = "production"
  NODE_VERSION = "18"
  GO_VERSION = "1.21"
  BUILD_ID = "2025-08-21-v3-force-clear"
  VITE_API_URL = "/api"
  VITE_SITE_URL = "https://vocal-pony-24e3de.netlify.app"
  API_BASE_URL = "https://vocal-pony-24e3de.netlify.app/api"
  NETLIFY_FUNCTIONS_URL = "https://vocal-pony-24e3de.netlify.app/.netlify/functions"
  CORS_ORIGIN = "https://vocal-pony-24e3de.netlify.app"
  NODE_ENV = "production"
  
[context.production]
  command = "rm -rf public && hugo --minify --cleanDestinationDir --gc"
  
[context.branch-deploy]
  command = "rm -rf public && hugo --minify --cleanDestinationDir --gc"

# Security Headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; connect-src 'self' https:; font-src 'self' data: https:;"
    Permissions-Policy = "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()"

# Admin panel headers
[[headers]]
  for = "/admin/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://tdmzayzkqyegvfgxlolj.supabase.co; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; connect-src 'self' https://tdmzayzkqyegvfgxlolj.supabase.co https:; font-src 'self' data: https:;"
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"

# Admin API headers
[[headers]]
  for = "/api/admin/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"

# CSS caching with proper versioning
[[headers]]
  for = "/css/main.css"
  [headers.values]
    Cache-Control = "public, max-age=3600, must-revalidate"
    ETag = "true"

[[headers]]
  for = "/css/links-unified.css"
  [headers.values]
    Cache-Control = "public, max-age=3600, must-revalidate"
    ETag = "true"

# Asset Optimization
[[headers]]
  for = "*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.css"
  [headers.values]
    Cache-Control = "public, max-age=3600, must-revalidate"

[[headers]]
  for = "*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

# Page Speed Optimization - Removed incorrect preloads

# Admin Panel Routes - Must come before API routes
[[redirects]]
  from = "/admin"
  to = "/admin/index.html"
  status = 200
  force = true

[[redirects]]
  from = "/admin/"
  to = "/admin/index.html"
  status = 200
  force = true

# Admin static files
[[redirects]]
  from = "/admin/*"
  to = "/admin/:splat"
  status = 200
  force = true

# Admin API endpoints with authentication
[[redirects]]
  from = "/api/admin/*"
  to = "/.netlify/functions/:splat"
  status = 200
  force = true
  headers = {X-Forwarded-For = ":client_ip"}

# API Proxy Rules for Production Deployment
# Route API calls to Netlify Functions
[[redirects]]
  from = "/api/health"
  to = "/.netlify/functions/health"
  status = 200
  force = true

[[redirects]]
  from = "/api/auth/login"
  to = "/.netlify/functions/auth-login"
  status = 200
  force = true
  headers = {X-Forwarded-For = ":client_ip"}

[[redirects]]
  from = "/api/admin-auth"
  to = "/.netlify/edge-functions/admin-auth"
  status = 200
  force = true
  headers = {X-Forwarded-For = ":client_ip"}

[[redirects]]
  from = "/api/auth/logout"
  to = "/.netlify/functions/auth-logout"
  status = 200
  force = true
  headers = {X-Forwarded-For = ":client_ip"}

[[redirects]]
  from = "/api/auth/refresh"
  to = "/.netlify/functions/auth"
  status = 200
  force = true
  headers = {X-Forwarded-For = ":client_ip"}

[[redirects]]
  from = "/api/auth/*"
  to = "/.netlify/functions/auth"
  status = 200
  force = true
  headers = {X-Forwarded-For = ":client_ip"}

[[redirects]]
  from = "/api/contact"
  to = "/.netlify/functions/contact"
  status = 200
  force = true
  headers = {X-Forwarded-For = ":client_ip"}

# Future API endpoints
[[redirects]]
  from = "/api/content/*"
  to = "/.netlify/functions/content"
  status = 200
  force = false

[[redirects]]
  from = "/api/portfolio/*"
  to = "/.netlify/functions/portfolio"
  status = 200
  force = false

[[redirects]]
  from = "/api/media/*"
  to = "/.netlify/functions/media"
  status = 200
  force = false

# Fallback for unmatched API routes
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/fallback"
  status = 200
  force = false

# Static file serving for admin assets
[[redirects]]
  from = "/admin/js/*"
  to = "/admin/js/:splat"
  status = 200
  force = true

[[redirects]]
  from = "/admin/css/*"
  to = "/admin/css/:splat"
  status = 200
  force = true

[[redirects]]
  from = "/admin/utils/*"
  to = "/admin/utils/:splat"
  status = 200
  force = true

# Domain Redirects
[[redirects]]
  from = "https://vocal-pony-24e3de.netlify.app/*"
  to = "https://vocal-pony-24e3de.netlify.app/:splat"
  status = 301
  force = true

# Legacy URL Redirects
[[redirects]]
  from = "/learn/*"
  to = "/tools/:splat"
  status = 301

[[redirects]]
  from = "/make/*"
  to = "/writing/:splat"
  status = 301

# Function Configuration
[functions]
  directory = "netlify/functions"
  node_bundler = "esbuild"

# Edge Functions Configuration and Routing
[[edge_functions]]
  function = "auth-login"
  path = "/api/auth/login"

[[edge_functions]]
  function = "admin-auth"
  path = "/api/admin-auth"

[[edge_functions]]
  function = "auth-verify"
  path = "/api/auth/verify"

[[edge_functions]]
  function = "auth-logout"
  path = "/api/auth/logout"

# Admin authentication middleware
[[edge_functions]]
  function = "auth-middleware"
  path = "/admin/dashboard.html"

[[edge_functions]]
  function = "auth-middleware"
  path = "/admin/*/index.html"

[[edge_functions]]
  function = "auth-middleware"
  path = "/api/admin/*"

# Protected API endpoints
[[edge_functions]]
  function = "auth-middleware"
  path = "/api/portfolio/*"

[[edge_functions]]
  function = "auth-middleware"
  path = "/api/content/*"

[[edge_functions]]
  function = "test-edge"
  path = "/api/test-edge"

# Function-specific configurations
[functions."auth-login"]
  timeout = 30

[functions."auth-me"]
  timeout = 30

[functions."auth"]
  timeout = 30

[functions."content"]
  timeout = 30

[functions."portfolio"]
  timeout = 30

[functions."media"]
  timeout = 30

# Build Plugins (disabled for local development to avoid Node.js version conflicts)
# [[plugins]]
#   package = "@netlify/plugin-lighthouse"

# [[plugins]]
#   package = "netlify-plugin-hugo-cache-resources"

# [[plugins]]
#   package = "netlify-plugin-submit-sitemap"

#   [plugins.inputs]
#     baseUrl = "https://vocal-pony-24e3de.netlify.app"
#     sitemapPath = "/sitemap.xml"

# Development Settings
[dev]
  framework = "hugo"
  targetPort = 1313
  port = 8888
  publish = "public"
  autoLaunch = false