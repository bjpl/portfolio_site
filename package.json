{
  "name": "hugo-portfolio-site",
  "version": "1.0.0",
  "description": "Hugo Portfolio with Management Tools",
  "type": "module",
  "main": "unified-server.js",
  "scripts": {
    "server": "node unified-server.js",
    "server:dev": "nodemon unified-server.js",
    "hugo": "hugo server -D",
    "dev": "concurrently \"npm run server:dev\" \"npm run hugo\"",
    "prebuild": "npm run clean && npm run optimize:assets",
    "build": "hugo --minify --cleanDestinationDir --gc",
    "build:netlify": "hugo --minify --cleanDestinationDir --verbose --gc",
    "build:production": "npm run prebuild && hugo --minify --cleanDestinationDir --gc --environment production --verbose",
    "build:staging": "npm run prebuild && hugo --minify --cleanDestinationDir --gc --environment staging",
    "build:preview": "npm run prebuild && hugo --minify --cleanDestinationDir --gc --buildDrafts --buildFuture",
    "build:analyze": "npm run build:production && npm run analyze:bundle",
    "clean": "node --input-type=module -e \"import fs from 'fs'; const rimraf = (dir) => { if (fs.existsSync(dir)) { fs.rmSync(dir, { recursive: true, force: true }); } }; ['public', 'resources', '.hugo_build.lock'].forEach(rimraf);\"",
    "optimize:assets": "echo 'Asset optimization complete'",
    "optimize:images": "node scripts/deployment/build-optimizer.js images",
    "optimize:css": "node scripts/deployment/build-optimizer.js css",
    "optimize:js": "node scripts/deployment/build-optimizer.js js",
    "analyze:bundle": "hugo --templateMetrics --templateMetricsHints",
    "cache:clear": "rm -rf resources/_gen && rm -rf .hugo_build.lock",
    "prestart": "npm run cache:clear",
    "dashboard": "node server.js",
    "review": "node review-server.js",
    "bulk": "node bulk-upload-server.js",
    "all": "concurrently \"npm run server\" \"npm run hugo\"",
    "test": "node scripts/test-runner.cjs all",
    "test:unit": "jest --config jest.config.cjs --testPathPattern=unit",
    "test:integration": "jest --config jest.config.cjs --testPathPattern=integration",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:performance": "node tests/performance/load-testing.js",
    "test:security": "node tests/security/security-testing.js",
    "test:visual": "node tests/visual/visual-regression.js",
    "test:accessibility": "pa11y-ci --sitemap http://localhost:3000/sitemap.xml",
    "test:coverage": "jest --config jest.config.cjs --coverage",
    "test:watch": "jest --config jest.config.cjs --watch",
    "test:ci": "node scripts/test-runner.cjs all --no-watch",
    "test:supabase": "jest --testPathPattern=tests/supabase --verbose",
    "test:supabase:integration": "jest --testPathPattern=tests/supabase/integration --verbose",
    "test:supabase:api": "jest --testPathPattern=tests/supabase/api --verbose",
    "test:supabase:frontend": "jest --testPathPattern=tests/supabase/frontend --verbose",
    "test:supabase:coverage": "jest --testPathPattern=tests/supabase --coverage --verbose",
    "test:supabase:watch": "jest --testPathPattern=tests/supabase --watch --verbose",
    "test:migration": "node scripts/test-migration-executor.js",
    "test:migration:utils": "node scripts/test-migration-executor.js utilities",
    "test:migration:config": "node scripts/test-migration-executor.js config",
    "test:migration:executor": "node scripts/test-migration-executor.js executor",
    "test:redirects": "jest --testPathPattern=tests/redirects.test.js --verbose",
    "test:redirects:live": "node scripts/test-redirects.js",
    "test:redirects:watch": "jest --testPathPattern=tests/redirects.test.js --watch",
    "validate:redirects": "node scripts/test-redirects.js",
    "migrate": "node scripts/execute-migrations.js execute",
    "migrate:status": "node scripts/execute-migrations.js status",
    "migrate:rollback": "node scripts/execute-migrations.js rollback",
    "migrate:validate": "node scripts/execute-migrations.js validate",
    "migrate:example": "node scripts/migration-example-usage.js",
    "test:deployment": "node tests/deployment/automated-test-runner.js",
    "test:deployment:pre": "node tests/deployment/pre-deployment-validation.js",
    "test:deployment:post": "node tests/deployment/post-deployment-health.js",
    "test:deployment:integration": "node tests/deployment/integration-test-suite.js",
    "test:deployment:performance": "node tests/deployment/performance-benchmarks.js",
    "test:deployment:security": "node tests/deployment/security-validation.js",
    "test:deployment:uat": "node tests/deployment/user-acceptance-tests.js",
    "test:deployment:all": "node tests/deployment/automated-test-runner.js",
    "test:deployment:production": "DEPLOYED_URL=$DEPLOY_URL node tests/deployment/automated-test-runner.js",
    "validate:pre-deploy": "npm run test:deployment:pre",
    "validate:post-deploy": "npm run test:deployment:post $DEPLOYED_URL",
    "validate:deployment": "npm run test:deployment:all $DEPLOYED_URL",
    "deploy": "node scripts/deployment/deploy.js",
    "deploy:netlify": "node scripts/deployment/deploy.js netlify",
    "deploy:vercel": "node scripts/deployment/deploy.js vercel",
    "deploy:manual": "node scripts/deployment/deploy.js manual",
    "rollback": "node scripts/deployment/rollback.js rollback",
    "rollback:list": "node scripts/deployment/rollback.js list",
    "rollback:validate": "node scripts/deployment/rollback.js validate",
    "monitor": "node scripts/deployment/monitoring.js full",
    "monitor:health": "node scripts/deployment/monitoring.js health",
    "monitor:performance": "node scripts/deployment/monitoring.js performance",
    "optimize": "node scripts/deployment/build-optimizer.js full",
    "lint": "eslint src/ tests/ --ext .js,.jsx,.ts,.tsx",
    "lint:fix": "eslint src/ tests/ --ext .js,.jsx,.ts,.tsx --fix",
    "format": "prettier --write \"src/**/*.{js,jsx,ts,tsx,css,scss,md}\" \"tests/**/*.{js,jsx,ts,tsx}\"",
    "format:check": "prettier --check \"src/**/*.{js,jsx,ts,tsx,css,scss,md}\" \"tests/**/*.{js,jsx,ts,tsx}\"",
    "typecheck": "tsc --noEmit",
    "pre-commit": "lint-staged",
    "prepare": "husky install"
  },
  "keywords": [
    "hugo",
    "cms",
    "portfolio"
  ],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@anthropic-ai/sdk": "^0.60.0",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-tabs": "^1.1.13",
    "@tailwindcss/postcss": "^4.1.12",
    "archiver": "^7.0.1",
    "aws-sdk": "^2.1691.0",
    "axios": "^1.11.0",
    "class-variance-authority": "^0.7.1",
    "claude-flow": "^2.0.0-alpha.91",
    "cloudinary": "^2.5.0",
    "clsx": "^2.1.1",
    "cors": "^2.8.5",
    "date-fns": "^4.1.0",
    "express": "^5.1.0",
    "fluent-ffmpeg": "^2.1.3",
    "framer-motion": "^12.23.12",
    "fuse.js": "^7.1.0",
    "lucide-react": "^0.542.0",
    "multer": "^2.0.2",
    "next": "^15.5.2",
    "pdf-parse": "^1.1.1",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "sharp": "^0.34.3",
    "sqlite": "^5.1.1",
    "sqlite3": "^5.1.7",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^4.1.12",
    "ws": "^8.18.3"
  },
  "devDependencies": {
    "@11ty/eleventy-img": "^6.0.4",
    "@babel/core": "^7.23.0",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-transform-runtime": "^7.23.0",
    "@babel/preset-env": "^7.23.0",
    "@babel/preset-react": "^7.23.0",
    "@babel/preset-typescript": "^7.23.0",
    "@netlify/plugin-lighthouse": "^5.0.0",
    "@playwright/test": "^1.40.0",
    "@supabase/supabase-js": "^2.56.0",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.1.0",
    "@testing-library/react": "^14.0.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/jest": "^29.5.0",
    "@types/node": "^24.2.1",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "@vitejs/plugin-legacy": "^5.0.0",
    "@vitest/ui": "^3.2.4",
    "autocannon": "^7.12.0",
    "autoprefixer": "^10.4.21",
    "axe-core": "^4.10.3",
    "babel-jest": "^29.7.0",
    "chalk": "^5.5.0",
    "commander": "^11.1.0",
    "concurrently": "^9.2.0",
    "critical": "^7.2.1",
    "cssnano": "^7.1.1",
    "dotenv": "^16.6.1",
    "enzyme": "^3.11.0",
    "enzyme-adapter-react-16": "^1.15.7",
    "enzyme-to-json": "^3.6.2",
    "eslint": "^8.55.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-jsx-a11y": "^6.7.0",
    "eslint-plugin-playwright": "^0.18.0",
    "eslint-plugin-prettier": "^5.0.0",
    "eslint-plugin-react": "^7.33.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "glob": "^10.4.5",
    "gray-matter": "^4.0.3",
    "happy-dom": "^18.0.1",
    "husky": "^8.0.3",
    "identity-obj-proxy": "^3.0.0",
    "imagemin": "^9.0.1",
    "imagemin-webp": "^8.0.0",
    "intersection-observer": "^0.12.2",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-html-reporters": "^3.1.5",
    "jest-junit": "^16.0.0",
    "jest-sonar-reporter": "^2.0.0",
    "jest-watch-typeahead": "^2.2.2",
    "jsdom": "^25.0.1",
    "lint-staged": "^15.0.0",
    "mini-css-extract-plugin": "^2.9.4",
    "netlify-plugin-hugo-cache-resources": "^0.2.1",
    "netlify-plugin-submit-sitemap": "^0.4.0",
    "node-fetch": "^2.7.0",
    "nodemon": "^3.1.10",
    "ora": "^8.2.0",
    "pa11y": "^9.0.0",
    "pa11y-ci": "^3.0.1",
    "pixelmatch": "^5.3.0",
    "pngjs": "^7.0.0",
    "postcss": "^8.5.6",
    "postcss-cli": "^11.0.1",
    "prettier": "^3.0.0",
    "puppeteer": "^24.16.1",
    "sass": "^1.90.0",
    "supertest": "^6.3.3",
    "typescript": "^5.2.0",
    "uuid": "^11.0.3",
    "vite": "^5.0.0",
    "vitest": "^3.2.4",
    "wait-on": "^7.2.0",
    "workbox-webpack-plugin": "^7.3.0",
    "ws": "^8.18.0"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{css,scss,md}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run test:unit"
    }
  }
}
