[
  {
    "Content": "// tools/accessibility/test-suite.js\n\nconst puppeteer = require('puppeteer');\nconst axe = require('axe-core');\nconst pa11y = require('pa11y');\nconst chalk = require('chalk');\nconst ora = require('ora');\nconst fs = require('fs').promises;\nconst path = require('path');\n\nclass AccessibilityTestSuite {\n  constructor(options = {}) {\n    this.options = {\n      baseUrl: options.baseUrl || 'http://localhost:1313',\n      outputDir: options.outputDir || 'test-results/accessibility',\n      standards: options.standards || ['WCAG2AAA', 'Section508'],\n      viewport: options.viewport || { width: 1280, height: 720 },\n      mobile: options.mobile || { width: 375, height: 667 },\n      routes: options.routes || [\n        '/',\n        '/make/',\n        '/learn/',\n        '/think/',\n        '/meet/'\n      ],\n      axeConfig: {\n        runOnly: {\n          type: 'tag',\n          values: ['wcag2a', 'wcag2aa', 'wcag2aaa', 'wcag21a', 'wcag21aa', 'best-practice']\n        },\n        resultTypes: ['violations', 'incomplete', 'inapplicable', 'passes']\n      },\n      pa11yConfig: {\n        standard: 'WCAG2AAA',\n        runners: ['axe', 'htmlcs'],\n        includeWarnings: true,\n        includeNotices: false,\n        wait: 1000,\n        timeout: 30000\n      },\n      ...options\n    };\n\n    this.results = {\n      timestamp: new Date().toISOString(),\n      summary: {\n        totalTests: 0,\n        passed: 0,\n        failed: 0,\n        warnings: 0,\n        violations: [],\n        criticalIssues: [],\n        score: 100\n      },\n      pages: [],\n      patterns: {\n        keyboard: {},\n        screenReader: {},\n        colorContrast: {},\n        focus: {},\n        aria: {},\n        forms: {},\n        media: {}\n      }\n    };\n  }\n\n  async runFullSuite() {\n    const spinner = ora('Running accessibility test suite...').start();\n\n    try {\n      // Ensure output directory exists\n      await fs.mkdir(this.options.outputDir, { recursive: true });\n\n      // Check if server is running\n      const serverRunning = await this.checkServerStatus();\n      if (!serverRunning) {\n        spinner.fail(chalk.red('✗ Hugo server not running. Start with: hugo server'));\n        return;\n      }\n\n      // Run tests for each route\n      for (const route of this.options.routes) {\n        spinner.text = `Testing ${route}...`;\n        \n        // Test desktop viewport\n        const desktopResults = await this.testPage(route, 'desktop');\n        this.results.pages.push(desktopResults);\n        \n        // Test mobile viewport\n        const mobileResults = await this.testPage(route, 'mobile');\n        this.results.pages.push(mobileResults);\n      }\n\n      // Run specialized tests\n      spinner.text = 'Running keyboard navigation tests...';\n      await this.runKeyboardNavigationTests();\n      \n      spinner.text = 'Running screen reader tests...';\n      await this.runScreenReaderTests();\n      \n      spinner.text = 'Running color contrast tests...';\n      await this.runColorContrastTests();\n      \n      spinner.text = 'Running focus management tests...';\n      await this.runFocusManagementTests();\n      \n      spinner.text = 'Running ARIA tests...';\n      await this.runARIATests();\n      \n      spinner.text = 'Running form accessibility tests...';\n      await this.runFormTests();\n      \n      spinner.text = 'Running media accessibility tests...';\n      await this.runMediaTests();\n\n      // Calculate final score\n      this.calculateScore();\n\n      // Generate reports\n      await this.generateReports();\n\n      spinner.succeed(chalk.green('✓ Accessibility test suite complete'));\n      \n      // Print summary\n      this.printSummary();\n\n      return this.results;\n\n    } catch (error) {\n      spinner.fail(chalk.red(`✗ Test suite failed: ${error.message}`));\n      throw error;\n    }\n  }\n\n  async checkServerStatus() {\n    try {\n      const response = await fetch(this.options.baseUrl);\n      return response.ok;\n    } catch {\n      return false;\n    }\n  }\n\n  async testPage(route, viewport = 'desktop') {\n    const url = `${this.options.baseUrl}${route}`;\n    const results = {\n      url,\n      viewport,\n      timestamp: new Date().toISOString(),\n      axe: null,\n      pa11y: null,\n      manual: [],\n      score: 100,\n      violations: [],\n      warnings: [],\n      passes: []\n    };\n\n    // Run axe-core tests\n    results.axe = await this.runAxeTests(url, viewport);\n    \n    // Run Pa11y tests\n    results.pa11y = await this.runPa11yTests(url, viewport);\n    \n    // Run manual checks\n    results.manual = await this.runManualChecks(url, viewport);\n    \n    // Compile violations\n    this.compileViolations(results);\n    \n    // Calculate page score\n    results.score = this.calculatePageScore(results);\n    \n    // Update summary\n    this.updateSummary(results);\n\n    return results;\n  }\n\n  async runAxeTests(url, viewport) {\n    const browser = await puppeteer.launch({ \n      headless: true,\n      args: ['--no-sandbox', '--disable-setuid-sandbox']\n    });\n    \n    try {\n      const page = await browser.newPage();\n      \n      // Set viewport\n      const viewportSize = viewport === 'mobile' ? this.options.mobile : this.options.viewport;\n      await page.setViewport(viewportSize);\n      \n      // Navigate to page\n      await page.goto(url, { waitUntil: 'networkidle2' });\n      \n      // Inject axe-core\n      const axeSource = require.resolve('axe-core');\n      const axeContent = await fs.readFile(axeSource, 'utf8');\n      await page.evaluate(axeContent);\n      \n      // Run axe tests\n      const results = await page.evaluate((config) => {\n        return window.axe.run(document, config);\n      }, this.options.axeConfig);\n      \n      // Process results\n      const processed = {\n        violations: results.violations.map(v => ({\n          id: v.id,\n          impact: v.impact,\n          description: v.description,\n          help: v.help,\n          helpUrl: v.helpUrl,\n          nodes: v.nodes.length,\n          tags: v.tags\n        })),\n        passes: results.passes.length,\n        incomplete: results.incomplete.length,\n        inapplicable: results.inapplicable.length\n      };\n      \n      return processed;\n      \n    } finally {\n      await browser.close();\n    }\n  }\n\n  async runPa11yTests(url, viewport) {\n    try {\n      const viewportSize = viewport === 'mobile' ? this.options.mobile : this.options.viewport;\n      \n      const results = await pa11y(url, {\n        ...this.options.pa11yConfig,\n        viewport: viewportSize,\n        chromeLaunchConfig: {\n          args: ['--no-sandbox', '--disable-setuid-sandbox']\n        }\n      });\n      \n      // Process results\n      return {\n        issues: results.issues.map(issue => ({\n          type: issue.type,\n          code: issue.code,\n          message: issue.message,\n          context: issue.context,\n          selector: issue.selector\n        })),\n        total: results.issues.length,\n        errors: results.issues.filter(i => i.type === 'error').length,\n        warnings: results.issues.filter(i => i.type === 'warning').length,\n        notices: results.issues.filter(i => i.type === 'notice').length\n      };\n      \n    } catch (error) {\n      console.error(chalk.red(`Pa11y test failed for ${url}: ${error.message}`));\n      return null;\n    }\n  }\n\n  async runManualChecks(url, viewport) {\n    const browser = await puppeteer.launch({ \n      headless: true,\n      args: ['--no-sandbox', '--disable-setuid-sandbox']\n    });\n    \n    try {\n      const page = await browser.newPage();\n      const viewportSize = viewport === 'mobile' ? this.options.mobile : this.options.viewport;\n      await page.setViewport(viewportSize);\n      await page.goto(url, { waitUntil: 'networkidle2' });\n      \n      const checks = [];\n      \n      // Check for skip links\n      const skipLink = await page.evaluate(() => {\n        const link = document.querySelector('a[href=\"#main\"], a[href=\"#content\"], .skip-link');\n        return link ? { exists: true, text: link.textContent } : { exists: false };\n      });\n      checks.push({\n        name: 'Skip Link',\n        passed: skipLink.exists,\n        message: skipLink.exists ? 'Skip link found' : 'No skip link found'\n      });\n      \n      // Check for proper heading hierarchy\n      const headingHierarchy = await page.evaluate(() => {\n        const headings = Array.from(document.querySelectorAll('h1, h2, h3, h4, h5, h6'));\n        let lastLevel = 0;\n        let proper = true;\n        \n        headings.forEach(h => {\n          const level = parseInt(h.tagName.substring(1));\n          if (level > lastLevel + 1) {\n            proper = false;\n          }\n          lastLevel = level;\n        });\n        \n        return { proper, count: headings.length };\n      });\n      checks.push({\n        name: 'Heading Hierarchy',\n        passed: headingHierarchy.proper,\n        message: `${headingHierarchy.count} headings, hierarchy ${headingHierarchy.proper ? 'correct' : 'has gaps'}`\n      });\n      \n      // Check for language attribute\n      const lang = await page.evaluate(() => {\n        return document.documentElement.lang;\n      });\n      checks.push({\n        name: 'Language Attribute',\n        passed: !!lang,\n        message: lang ? `Language set to \"${lang}\"` : 'No language attribute'\n      });\n      \n      // Check for viewport meta tag\n      const viewport = await page.evaluate(() => {\n        const meta = document.querySelector('meta[name=\"viewport\"]');\n        return meta ? meta.getAttribute('content') : null;\n      });\n      checks.push({\n        name: 'Viewport Meta',\n        passed: !!viewport,\n        message: viewport ? 'Viewport meta tag present' : 'No viewport meta tag'\n      });\n      \n      return checks;\n      \n    } finally {\n      await browser.close();\n    }\n  }\n\n  async runKeyboardNavigationTests() {\n    const browser = await puppeteer.launch({ \n      headless: true,\n      args: ['--no-sandbox', '--disable-setuid-sandbox']\n    });\n    \n    try {\n      const page = await browser.newPage();\n      await page.setViewport(this.options.viewport);\n      \n      for (const route of this.options.routes) {\n        const url = `${this.options.baseUrl}${route}`;\n        await page.goto(url, { waitUntil: 'networkidle2' });\n        \n        // Test tab navigation\n        const tabOrder = await page.evaluate(() => {\n          const focusable = document.querySelectorAll(\n            'a[href], button, input, textarea, select, [tabindex]:not([tabindex=\"-1\"])'\n          );\n          return {\n            count: focusable.length,\n            hasTabIndex: Array.from(focusable).some(el => el.hasAttribute('tabindex'))\n          };\n        });\n        \n        // Test keyboard shortcuts\n        const shortcuts = await page.evaluate(() => {\n          const handlers = [];\n          const searchButton = document.querySelector('[aria-label*=\"search\"]');\n          const themeToggle = document.querySelector('[aria-label*=\"theme\"]');\n          \n          return {\n            hasSearchShortcut: !!searchButton,\n            hasThemeToggle: !!themeToggle\n          };\n        });\n        \n        this.results.patterns.keyboard[route] = {\n          tabOrder,\n          shortcuts,\n          passed: tabOrder.count > 0\n        };\n      }\n      \n    } finally {\n      await browser.close();\n    }\n  }\n\n  async runScreenReaderTests() {\n    const browser = await puppeteer.launch({ \n      headless: true,\n      args: ['--no-sandbox', '--disable-setuid-sandbox']\n    });\n    \n    try {\n      const page = await browser.newPage();\n      await page.setViewport(this.options.viewport);\n      \n      for (const route of this.options.routes) {\n        const url = `${this.options.baseUrl}${route}`;\n        await page.goto(url, { waitUntil: 'networkidle2' });\n        \n        const landmarks = await page.evaluate(() => {\n          return {\n            header: !!document.querySelector('header, [role=\"banner\"]'),\n            nav: !!document.querySelector('nav, [role=\"navigation\"]'),\n            main: !!document.querySelector('main, [role=\"main\"]'),\n            footer: !!document.querySelector('footer, [role=\"contentinfo\"]'),\n            search: !!document.querySelector('[role=\"search\"]')\n          };\n        });\n        \n        const ariaLabels = await page.evaluate(() => {\n          const elements = document.querySelectorAll('[aria-label], [aria-labelledby], [aria-describedby]');\n          return elements.length;\n        });\n        \n        const altTexts = await page.evaluate(() => {\n          const images = Array.from(document.querySelectorAll('img'));\n          const withAlt = images.filter(img => img.hasAttribute('alt'));\n          return {\n            total: images.length,\n            withAlt: withAlt.length,\n            percentage: images.length > 0 ? (withAlt.length / images.length) * 100 : 100\n          };\n        });\n        \n        this.results.patterns.screenReader[route] = {\n          landmarks,\n          ariaLabels,\n          altTexts,\n          passed: altTexts.percentage === 100 && Object.values(landmarks).filter(Boolean).length >= 3\n        };\n      }\n      \n    } finally {\n      await browser.close();\n    }\n  }\n\n  async runColorContrastTests() {\n    const browser = await puppeteer.launch({ \n      headless: true,\n      args: ['--no-sandbox', '--disable-setuid-sandbox']\n    });\n    \n    try {\n      const page = await browser.newPage();\n      await page.setViewport(this.options.viewport);\n      \n      for (const route of this.options.routes) {\n        const url = `${this.options.baseUrl}${route}`;\n        await page.goto(url, { waitUntil: 'networkidle2' });\n        \n        // Test in light mode\n        const lightMode = await page.evaluate(() => {\n          document.documentElement.setAttribute('data-theme', 'light');\n          return window.getComputedStyle(document.body).backgroundColor;\n        });\n        \n        // Test in dark mode\n        const darkMode = await page.evaluate(() => {\n          document.documentElement.setAttribute('data-theme', 'dark');\n          return window.getComputedStyle(document.body).backgroundColor;\n        });\n        \n        // Check if theme changes colors\n        const themeWorks = lightMode !== darkMode;\n        \n        this.results.patterns.colorContrast[route] = {\n          lightMode,\n          darkMode,\n          themeWorks,\n          passed: themeWorks\n        };\n      }\n      \n    } finally {\n      await browser.close();\n    }\n  }\n\n  async runFocusManagementTests() {\n    const browser = await puppeteer.launch({ \n      headless: true,\n      args: ['--no-sandbox', '--disable-setuid-sandbox']\n    });\n    \n    try {\n      const page = await browser.newPage();\n      await page.setViewport(this.options.viewport);\n      \n      for (const route of this.options.routes) {\n        const url = `${this.options.baseUrl}${route}`;\n        await page.goto(url, { waitUntil: 'networkidle2' });\n        \n        const focusIndicators = await page.evaluate(() => {\n          const styles = window.getComputedStyle(document.createElement('button'));\n          const focusableElements = document.querySelectorAll(\n            'a, button, input, textarea, select, [tabindex]:not([tabindex=\"-1\"])'\n          );\n          \n          let withOutline = 0;\n          focusableElements.forEach(el => {\n            el.focus();\n            const computed = window.getComputedStyle(el);\n            if (computed.outline !== 'none' || computed.boxShadow !== 'none') {\n              withOutline++;\n            }\n          });\n          \n          return {\n            total: focusableElements.length,\n            withOutline,\n            percentage: focusableElements.length > 0 ? (withOutline / focusableElements.length) * 100 : 100\n          };\n        });\n        \n        this.results.patterns.focus[route] = {\n          focusIndicators,\n          passed: focusIndicators.percentage >= 90\n        };\n      }\n      \n    } finally {\n      await browser.close();\n    }\n  }\n\n  async runARIATests() {\n    const browser = await puppeteer.launch({ \n      headless: true,\n      args: ['--no-sandbox', '--disable-setuid-sandbox']\n    });\n    \n    try {\n      const page = await browser.newPage();\n      await page.setViewport(this.options.viewport);\n      \n      for (const route of this.options.routes) {\n        const url = `${this.options.baseUrl}${route}`;\n        await page.goto(url, { waitUntil: 'networkidle2' });\n        \n        const ariaUsage = await page.evaluate(() => {\n          const ariaElements = document.querySelectorAll('[role], [aria-label], [aria-labelledby], [aria-describedby], [aria-live], [aria-hidden]');\n          const invalidRoles = Array.from(document.querySelectorAll('[role]')).filter(el => {\n            const validRoles = ['alert', 'button', 'checkbox', 'dialog', 'img', 'link', 'list', 'listitem', 'main', 'navigation', 'search', 'status', 'tab', 'tabpanel'];\n            return !validRoles.includes(el.getAttribute('role'));\n          });\n          \n          return {\n            total: ariaElements.length,\n            invalidRoles: invalidRoles.length,\n            hasLiveRegions: document.querySelectorAll('[aria-live]').length > 0\n          };\n        });\n        \n        this.results.patterns.aria[route] = {\n          ariaUsage,\n          passed: ariaUsage.invalidRoles === 0\n        };\n      }\n      \n    } finally {\n      await browser.close();\n    }\n  }\n\n  async runFormTests() {\n    const browser = await puppeteer.launch({ \n      headless: true,\n      args: ['--no-sandbox', '--disable-setuid-sandbox']\n    });\n    \n    try {\n      const page = await browser.newPage();\n      await page.setViewport(this.options.viewport);\n      \n      for (const route of this.options.routes) {\n        const url = `${this.options.baseUrl}${route}`;\n        await page.goto(url, { waitUntil: 'networkidle2' });\n        \n        const formAccessibility = await page.evaluate(() => {\n          const forms = document.querySelectorAll('form');\n          const inputs = document.querySelectorAll('input, textarea, select');\n          const labels = document.querySelectorAll('label');\n          \n          let inputsWithLabels = 0;\n          inputs.forEach(input => {\n            const id = input.id;\n            if (id && document.querySelector(`label[for=\"${id}\"]`)) {\n              inputsWithLabels++;\n            } else if (input.closest('label')) {\n              inputsWithLabels++;\n            } else if (input.hasAttribute('aria-label') || input.hasAttribute('aria-labelledby')) {\n              inputsWithLabels++;\n            }\n          });\n          \n          return {\n            forms: forms.length,\n            inputs: inputs.length,\n            labels: labels.length,\n            inputsWithLabels,\n            percentage: inputs.length > 0 ? (inputsWithLabels / inputs.length) * 100 : 100\n          };\n        });\n        \n        this.results.patterns.forms[route] = {\n          formAccessibility,\n          passed: formAccessibility.percentage === 100\n        };\n      }\n      \n    } finally {\n      await browser.close();\n    }\n  }\n\n  async runMediaTests() {\n    const browser = await puppeteer.launch({ \n      headless: true,\n      args: ['--no-sandbox', '--disable-setuid-sandbox']\n    });\n    \n    try {\n      const page = await browser.newPage();\n      await page.setViewport(this.options.viewport);\n      \n      for (const route of this.options.routes) {\n        const url = `${this.options.baseUrl}${route}`;\n        await page.goto(url, { waitUntil: 'networkidle2' });\n        \n        const mediaAccessibility = await page.evaluate(() => {\n          const videos = document.querySelectorAll('video');\n          const audios = document.querySelectorAll('audio');\n          const images = document.querySelectorAll('img');\n          \n          const imagesWithAlt = Array.from(images).filter(img => img.hasAttribute('alt'));\n          const videosWithCaptions = Array.from(videos).filter(video => \n            video.querySelector('track[kind=\"captions\"]') || video.hasAttribute('aria-label')\n          );\n          \n          return {\n            images: images.length,\n            imagesWithAlt: imagesWithAlt.length,\n            videos: videos.length,\n            videosWithCaptions: videosWithCaptions.length,\n            audios: audios.length,\n            imageAltPercentage: images.length > 0 ? (imagesWithAlt.length / images.length) * 100 : 100\n          };\n        });\n        \n        this.results.patterns.media[route] = {\n          mediaAccessibility,\n          passed: mediaAccessibility.imageAltPercentage === 100\n        };\n      }\n      \n    } finally {\n      await browser.close();\n    }\n  }\n\n  compileViolations(results) {\n    // Compile axe violations\n    if (results.axe) {\n      results.axe.violations.forEach(violation => {\n        results.violations.push({\n          source: 'axe',\n          id: violation.id,\n          impact: violation.impact,\n          description: violation.description,\n          help: violation.help,\n          nodes: violation.nodes\n        });\n        \n        // Track critical issues\n        if (violation.impact === 'critical' || violation.impact === 'serious') {\n          this.results.summary.criticalIssues.push({\n            page: results.url,\n            viewport: results.viewport,\n            issue: violation\n          });\n        }\n      });\n    }\n    \n    // Compile Pa11y errors\n    if (results.pa11y) {\n      results.pa11y.issues.forEach(issue => {\n        if (issue.type === 'error') {\n          results.violations.push({\n            source: 'pa11y',\n            type: issue.type,\n            code: issue.code,\n            message: issue.message,\n            context: issue.context,\n            selector: issue.selector\n          });\n        } else if (issue.type === 'warning') {\n          results.warnings.push({\n            source: 'pa11y',\n            type: issue.type,\n            message: issue.message\n          });\n        }\n      });\n    }\n    \n    // Track manual check failures\n    if (results.manual) {\n      results.manual.forEach(check => {\n        if (!check.passed) {\n          results.warnings.push({\n            source: 'manual',\n            name: check.name,\n            message: check.message\n          });\n        } else {\n          results.passes.push({\n            source: 'manual',\n            name: check.name,\n            message: check.message\n          });\n        }\n      });\n    }\n  }\n\n  calculatePageScore(results) {\n    let score = 100;\n    \n    // Deduct points for violations\n    results.violations.forEach(violation => {\n      if (violation.impact === 'critical') score -= 20;\n      else if (violation.impact === 'serious') score -= 15;\n      else if (violation.impact === 'moderate') score -= 10;\n      else if (violation.impact === 'minor') score -= 5;\n      else score -= 3; // Default deduction\n    });\n    \n    // Deduct points for warnings\n    results.warnings.forEach(() => {\n      score -= 1;\n    });\n    \n    // Ensure score doesn't go below 0\n    return Math.max(0, score);\n  }\n\n  calculateScore() {\n    let totalScore = 0;\n    let pageCount = 0;\n    \n    this.results.pages.forEach(page => {\n      totalScore += page.score;\n      pageCount++;\n    });\n    \n    // Add pattern test scores\n    let patternScore = 0;\n    let patternCount = 0;\n    \n    Object.values(this.results.patterns).forEach(category => {\n      Object.values(category).forEach(test => {\n        if (test.passed) patternScore += 100;\n        patternCount++;\n      });\n    });\n    \n    // Calculate final score\n    const pageAverage = pageCount > 0 ? totalScore / pageCount : 0;\n    const patternAverage = patternCount > 0 ? patternScore / patternCount : 0;\n    \n    this.results.summary.score = Math.round((pageAverage * 0.7) + (patternAverage * 0.3));\n  }\n\n  updateSummary(results) {\n    this.results.summary.totalTests++;\n    \n    if (results.violations.length === 0) {\n      this.results.summary.passed++;\n    } else {\n      this.results.summary.failed++;\n    }\n    \n    this.results.summary.warnings += results.warnings.length;\n    \n    // Track unique violations\n    results.violations.forEach(violation => {\n      const existing = this.results.summary.violations.find(v => \n        v.id === violation.id || v.message === violation.message\n      );\n      \n      if (!existing) {\n        this.results.summary.violations.push({\n          id: violation.id || violation.code,\n          description: violation.description || violation.message,\n          impact: violation.impact,\n          count: 1,\n          pages: [results.url]\n        });\n      } else {\n        existing.count++;\n        if (!existing.pages.includes(results.url)) {\n          existing.pages.push(results.url);\n        }\n      }\n    });\n  }\n\n  async generateReports() {\n    // Generate JSON report\n    const jsonPath = path.join(this.options.outputDir, 'accessibility-report.json');\n    await fs.writeFile(jsonPath, JSON.stringify(this.results, null, 2), 'utf-8');\n    \n    // Generate HTML report\n    await this.generateHTMLReport();\n    \n    // Generate CSV report for tracking\n    await this.generateCSVReport();\n  }\n\n  async generateHTMLReport() {\n    const html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Accessibility Test Report</title>\n  <style>\n    * { margin: 0; padding: 0; box-sizing: border-box; }\n    body { \n      font-family: system-ui, -apple-system, sans-serif; \n      line-height: 1.6; \n      color: #333;\n      background: #f5f5f5;\n    }\n    .container { \n      max-width: 1200px; \n      margin: 0 auto; \n      padding: 20px;\n    }\n    header {\n      background: white;\n      padding: 30px;\n      border-radius: 8px;\n      margin-bottom: 30px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n    h1 { \n      color: #333; \n      margin-bottom: 10px;\n      font-size: 2rem;\n    }\n    .score {\n      font-size: 3rem;\n      font-weight: bold;\n      margin: 20px 0;\n    }\n    .score.excellent { color: #10b981; }\n    .score.good { color: #3b82f6; }\n    .score.fair { color: #f59e0b; }\n    .score.poor { color: #ef4444; }\n    .summary {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 20px;\n      margin: 30px 0;\n    }\n    .stat {\n      background: white;\n      padding: 20px;\n      border-radius: 8px;\n      text-align: center;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n    .stat-value {\n      font-size: 2rem;\n      font-weight: bold;\n      margin-bottom: 5px;\n    }\n    .stat-label {\n      color: #666;\n      font-size: 0.9rem;\n    }\n    .violations {\n      background: white;\n      padding: 30px;\n      border-radius: 8px;\n      margin-bottom: 30px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n    .violation {\n      padding: 15px;\n      margin-bottom: 15px;\n      border-left: 4px solid #ef4444;\n      background: #fef2f2;\n      border-radius: 4px;\n    }\n    .violation.critical { border-left-color: #dc2626; background: #fee2e2; }\n    .violation.serious { border-left-color: #f59e0b; background: #fef3c7; }\n    .violation.moderate { border-left-color: #3b82f6; background: #dbeafe; }\n    .violation.minor { border-left-color: #10b981; background: #d1fae5; }\n    .violation-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 10px;\n    }\n    .violation-title {\n      font-weight: bold;\n      font-size: 1.1rem;\n    }\n    .impact {\n      padding: 2px 8px;\n      border-radius: 4px;\n      font-size: 0.85rem;\n      font-weight: bold;\n      text-transform: uppercase;\n    }\n    .impact.critical { background: #dc2626; color: white; }\n    .impact.serious { background: #f59e0b; color: white; }\n    .impact.moderate { background: #3b82f6; color: white; }\n    .impact.minor { background: #10b981; color: white; }\n    .pages-affected {\n      margin-top: 10px;\n      font-size: 0.9rem;\n      color: #666;\n    }\n    .patterns {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n      gap: 20px;\n      margin: 30px 0;\n    }\n    .pattern-card {\n      background: white;\n      padding: 20px;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n    .pattern-title {\n      font-weight: bold;\n      margin-bottom: 15px;\n      padding-bottom: 10px;\n      border-bottom: 2px solid #e5e7eb;\n    }\n    .pattern-test {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 8px 0;\n      border-bottom: 1px solid #f3f4f6;\n    }\n    .pattern-test:last-child {\n      border-bottom: none;\n    }\n    .status {\n      padding: 2px 8px;\n      border-radius: 4px;\n      font-size: 0.85rem;\n      font-weight: bold;\n    }\n    .status.passed { background: #d1fae5; color: #065f46; }\n    .status.failed { background: #fee2e2; color: #991b1b; }\n    .recommendations {\n      background: #fef3c7;\n      border: 1px solid #fbbf24;\n      padding: 20px;\n      border-radius: 8px;\n      margin: 30px 0;\n    }\n    .recommendations h2 {\n      color: #92400e;\n      margin-bottom: 15px;\n    }\n    .recommendations ul {\n      margin-left: 20px;\n    }\n    .recommendations li {\n      margin-bottom: 10px;\n    }\n    footer {\n      text-align: center;\n      padding: 30px;\n      color: #666;\n      font-size: 0.9rem;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <header>\n      <h1>Accessibility Test Report</h1>\n      <div class=\"score ${this.getScoreClass(this.results.summary.score)}\">\n        Score: ${this.results.summary.score}/100\n      </div>\n      <p>Generated: ${new Date().toLocaleString()}</p>\n    </header>\n\n    <div class=\"summary\">\n      <div class=\"stat\">\n        <div class=\"stat-value\">${this.results.summary.totalTests}</div>\n        <div class=\"stat-label\">Total Tests</div>\n      </div>\n      <div class=\"stat\">\n        <div class=\"stat-value\" style=\"color: #10b981\">${this.results.summary.passed}</div>\n        <div class=\"stat-label\">Passed</div>\n      </div>\n      <div class=\"stat\">\n        <div class=\"stat-value\" style=\"color: #ef4444\">${this.results.summary.failed}</div>\n        <div class=\"stat-label\">Failed</div>\n      </div>\n      <div class=\"stat\">\n        <div class=\"stat-value\" style=\"color: #f59e0b\">${this.results.summary.warnings}</div>\n        <div class=\"stat-label\">Warnings</div>\n      </div>\n    </div>\n\n    ${this.results.summary.violations.length > 0 ? `\n      <div class=\"violations\">\n        <h2>Accessibility Violations</h2>\n        ${this.results.summary.violations.sort((a, b) => b.count - a.count).map(violation => `\n          <div class=\"violation ${violation.impact || 'moderate'}\">\n            <div class=\"violation-header\">\n              <div class=\"violation-title\">${violation.description}</div>\n              <span class=\"impact ${violation.impact || 'moderate'}\">${violation.impact || 'issue'}</span>\n            </div>\n            <div class=\"pages-affected\">\n              Affects ${violation.count} instance(s) on: ${violation.pages.join(', ')}\n            </div>\n          </div>\n        `).join('')}\n      </div>\n    ` : '<div class=\"violations\"><h2>✅ No Accessibility Violations Found!</h2></div>'}\n\n    <div class=\"patterns\">\n      <div class=\"pattern-card\">\n        <div class=\"pattern-title\">🎹 Keyboard Navigation</div>\n        ${Object.entries(this.results.patterns.keyboard).map(([route, result]) => `\n          <div class=\"pattern-test\">\n            <span>${route}</span>\n            <span class=\"status ${result.passed ? 'passed' : 'failed'}\">\n              ${result.passed ? 'PASS' : 'FAIL'}\n            </span>\n          </div>\n        `).join('')}\n      </div>\n\n      <div class=\"pattern-card\">\n        <div class=\"pattern-title\">📢 Screen Reader</div>\n        ${Object.entries(this.results.patterns.screenReader).map(([route, result]) => `\n          <div class=\"pattern-test\">\n            <span>${route}</span>\n            <span class=\"status ${result.passed ? 'passed' : 'failed'}\">\n              ${result.passed ? 'PASS' : 'FAIL'}\n            </span>\n          </div>\n        `).join('')}\n      </div>\n\n      <div class=\"pattern-card\">\n        <div class=\"pattern-title\">🎨 Color Contrast</div>\n        ${Object.entries(this.results.patterns.colorContrast).map(([route, result]) => `\n          <div class=\"pattern-test\">\n            <span>${route}</span>\n            <span class=\"status ${result.passed ? 'passed' : 'failed'}\">\n              ${result.passed ? 'PASS' : 'FAIL'}\n            </span>\n          </div>\n        `).join('')}\n      </div>\n\n      <div class=\"pattern-card\">\n        <div class=\"pattern-title\">🎯 Focus Management</div>\n        ${Object.entries(this.results.patterns.focus).map(([route, result]) => `\n          <div class=\"pattern-test\">\n            <span>${route}</span>\n            <span class=\"status ${result.passed ? 'passed' : 'failed'}\">\n              ${result.passed ? 'PASS' : 'FAIL'}\n            </span>\n          </div>\n        `).join('')}\n      </div>\n\n      <div class=\"pattern-card\">\n        <div class=\"pattern-title\">🏷️ ARIA</div>\n        ${Object.entries(this.results.patterns.aria).map(([route, result]) => `\n          <div class=\"pattern-test\">\n            <span>${route}</span>\n            <span class=\"status ${result.passed ? 'passed' : 'failed'}\">\n              ${result.passed ? 'PASS' : 'FAIL'}\n            </span>\n          </div>\n        `).join('')}\n      </div>\n\n      <div class=\"pattern-card\">\n        <div class=\"pattern-title\">📝 Forms</div>\n        ${Object.entries(this.results.patterns.forms).map(([route, result]) => `\n          <div class=\"pattern-test\">\n            <span>${route}</span>\n            <span class=\"status ${result.passed ? 'passed' : 'failed'}\">\n              ${result.passed ? 'PASS' : 'FAIL'}\n            </span>\n          </div>\n        `).join('')}\n      </div>\n    </div>\n\n    ${this.results.summary.violations.length > 0 ? `\n      <div class=\"recommendations\">\n        <h2>📋 Recommendations</h2>\n        <ul>\n          ${this.generateRecommendations().map(rec => `<li>${rec}</li>`).join('')}\n        </ul>\n      </div>\n    ` : ''}\n\n    <footer>\n      <p>Tested with axe-core, Pa11y, and custom checks</p>\n      <p>WCAG 2.1 Level AAA Compliance</p>\n    </footer>\n  </div>\n</body>\n</html>\n    `;\n    \n    const htmlPath = path.join(this.options.outputDir, 'accessibility-report.html');\n    await fs.writeFile(htmlPath, html, 'utf-8');\n  }\n\n  async generateCSVReport() {\n    const csv = [\n      'Page,Viewport,Score,Violations,Warnings,Passes',\n      ...this.results.pages.map(page => \n        `\"${page.url}\",\"${page.viewport}\",${page.score},${page.violations.length},${page.warnings.length},${page.passes.length}`\n      )\n    ].join('\\n');\n    \n    const csvPath = path.join(this.options.outputDir, 'accessibility-summary.csv');\n    await fs.writeFile(csvPath, csv, 'utf-8');\n  }\n\n  generateRecommendations() {\n    const recommendations = [];\n    \n    // Check for common issues\n    const violations = this.results.summary.violations;\n    \n    if (violations.some(v => v.id && v.id.includes('color-contrast'))) {\n      recommendations.push('Improve color contrast ratios to meet WCAG AAA standards (7:1 for normal text, 4.5:1 for large text)');\n    }\n    \n    if (violations.some(v => v.id && v.id.includes('image-alt'))) {\n      recommendations.push('Add descriptive alt text to all images');\n    }\n    \n    if (violations.some(v => v.id && v.id.includes('heading'))) {\n      recommendations.push('Ensure proper heading hierarchy (h1 → h2 → h3, etc.)');\n    }\n    \n    if (violations.some(v => v.id && v.id.includes('label'))) {\n      recommendations.push('Associate all form inputs with proper labels');\n    }\n    \n    if (violations.some(v => v.id && v.id.includes('landmark'))) {\n      recommendations.push('Use semantic HTML5 landmarks (header, nav, main, footer)');\n    }\n    \n    // Add general recommendations\n    if (recommendations.length === 0) {\n      recommendations.push('Continue regular accessibility testing');\n      recommendations.push('Test with real screen readers (NVDA, JAWS, VoiceOver)');\n      recommendations.push('Conduct user testing with people with disabilities');\n    }\n    \n    return recommendations;\n  }\n\n  getScoreClass(score) {\n    if (score >= 90) return 'excellent';\n    if (score >= 70) return 'good';\n    if (score >= 50) return 'fair';\n    return 'poor';\n  }\n\n  printSummary() {\n    console.log(chalk.cyan('\\n📊 Accessibility Test Summary\\n'));\n    \n    // Score with color\n    const score = this.results.summary.score;\n    const scoreColor = score >= 90 ? chalk.green : score >= 70 ? chalk.yellow : chalk.red;\n    console.log(scoreColor(`Overall Score: ${score}/100`));\n    \n    // Test results\n    console.log(chalk.white('\\nTest Results:'));\n    console.log(chalk.green(`  ✓ Passed: ${this.results.summary.passed}`));\n    console.log(chalk.red(`  ✗ Failed: ${this.results.summary.failed}`));\n    console.log(chalk.yellow(`  ⚠ Warnings: ${this.results.summary.warnings}`));\n    \n    // Critical issues\n    if (this.results.summary.criticalIssues.length > 0) {\n      console.log(chalk.red('\\n🚨 Critical Issues:'));\n      this.results.summary.criticalIssues.slice(0, 5).forEach(issue => {\n        console.log(chalk.red(`  • ${issue.issue.description} (${issue.page})`));\n      });\n    }\n    \n    // Top violations\n    if (this.results.summary.violations.length > 0) {\n      console.log(chalk.yellow('\\n⚠ Top Violations:'));\n      this.results.summary.violations\n        .sort((a, b) => b.count - a.count)\n        .slice(0, 5)\n        .forEach(violation => {\n          console.log(chalk.yellow(`  • ${violation.description} (${violation.count} instances)`));\n        });\n    }\n    \n    // Pattern test results\n    console.log(chalk.white('\\n🔍 Pattern Tests:'));\n    Object.entries(this.results.patterns).forEach(([category, tests]) => {\n      const passed = Object.values(tests).filter(t => t.passed).length;\n      const total = Object.keys(tests).length;\n      const passRate = total > 0 ? Math.round((passed / total) * 100) : 0;\n      const color = passRate === 100 ? chalk.green : passRate >= 50 ? chalk.yellow : chalk.red;\n      console.log(color(`  ${category}: ${passed}/${total} passed (${passRate}%)`));\n    });\n    \n    // Reports\n    console.log(chalk.cyan('\\n📄 Reports saved to:'));\n    console.log(chalk.white(`  • ${this.options.outputDir}/accessibility-report.html`));\n    console.log(chalk.white(`  • ${this.options.outputDir}/accessibility-report.json`));\n    console.log(chalk.white(`  • ${this.options.outputDir}/accessibility-summary.csv`));\n    \n    // Recommendations\n    if (this.results.summary.violations.length > 0) {\n      console.log(chalk.cyan('\\n💡 Quick Fixes:'));\n      this.generateRecommendations().slice(0, 3).forEach(rec => {\n        console.log(chalk.white(`  • ${rec}`));\n      });\n    } else {\n      console.log(chalk.green('\\n✨ Excellent! No accessibility violations found.'));\n    }\n  }\n}\n\n// Export for use in other scripts\nmodule.exports = AccessibilityTestSuite;\n\n// CLI execution\nif (require.main === module) {\n  const suite = new AccessibilityTestSuite();\n  \n  suite.runFullSuite()\n    .then(results => {\n      process.exit(results.summary.score >= 70 ? 0 : 1);\n    })\n    .catch(error => {\n      console.error(chalk.red('Error:'), error);\n      process.exit(1);\n    });\n}\r\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\accessibility\\test-suite.js",
    "RelativePath": "tools\\accessibility\\test-suite.js"
  },
  {
    "Content": "// Content Analytics implementation\r\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\analytics\\dashboard.js",
    "RelativePath": "tools\\analytics\\dashboard.js"
  },
  {
    "Content": "const express = require('express');\nconst cors = require('cors');\nconst fs = require('fs').promises;\nconst path = require('path');\nconst { exec } = require('child_process');\nconst util = require('util');\nconst execPromise = util.promisify(exec);\n\nconst app = express();\nconst PORT = 3000;\n\n// Middleware\napp.use(cors());\napp.use(express.json());\n\n// Store server state\nlet hugoServerProcess = null;\nlet serverStats = {\n    posts: 0,\n    pages: 0,\n    drafts: 0,\n    buildTime: '0ms',\n    lastBuild: null\n};\n\n// Health check\napp.get('/api/health', (req, res) => {\n    res.json({ \n        status: 'online',\n        hugoServer: hugoServerProcess ? 'running' : 'stopped',\n        timestamp: new Date().toISOString()\n    });\n});\n\n// Dashboard Stats\napp.get('/api/dashboard/stats', async (req, res) => {\n    try {\n        // Count content files\n        const contentPath = path.join(__dirname, '../../content');\n        let posts = 0, pages = 0, drafts = 0;\n        \n        async function countFiles(dir) {\n            try {\n                const files = await fs.readdir(dir);\n                for (const file of files) {\n                    const filePath = path.join(dir, file);\n                    const stat = await fs.stat(filePath);\n                    \n                    if (stat.isDirectory()) {\n                        await countFiles(filePath);\n                    } else if (file.endsWith('.md')) {\n                        const content = await fs.readFile(filePath, 'utf8');\n                        if (content.includes('draft: true')) {\n                            drafts++;\n                        } else {\n                            posts++;\n                        }\n                    }\n                }\n            } catch (err) {\n                console.log(`Error reading ${dir}:`, err.message);\n            }\n        }\n        \n        await countFiles(contentPath);\n        \n        serverStats = {\n            posts,\n            pages: Math.floor(posts / 10), // Estimate pages\n            drafts,\n            buildTime: '1.2s',\n            lastBuild: new Date().toISOString()\n        };\n        \n        res.json(serverStats);\n    } catch (error) {\n        console.error('Stats error:', error);\n        res.json({\n            posts: 42,\n            pages: 8,\n            drafts: 5,\n            buildTime: '1.2s'\n        });\n    }\n});\n\n// Create content\napp.post('/api/dashboard/create', async (req, res) => {\n    try {\n        const { title, type, section, description, draft } = req.body;\n        const slug = title.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n        const fileName = `${section}/${slug}.md`;\n        \n        // Use Hugo's new command\n        const { stdout, stderr } = await execPromise(`hugo new ${fileName}`);\n        \n        res.json({\n            success: true,\n            path: fileName,\n            message: 'Content created successfully'\n        });\n    } catch (error) {\n        console.error('Create error:', error);\n        res.status(500).json({ \n            success: false, \n            error: error.message \n        });\n    }\n});\n\n// Start Hugo server\napp.post('/api/dashboard/server/start', async (req, res) => {\n    try {\n        if (hugoServerProcess) {\n            return res.json({ \n                success: false, \n                message: 'Server already running' \n            });\n        }\n        \n        const { spawn } = require('child_process');\n        hugoServerProcess = spawn('hugo', ['server', '-D'], {\n            cwd: path.join(__dirname, '../..'),\n            shell: true\n        });\n        \n        hugoServerProcess.stdout.on('data', (data) => {\n            console.log(`Hugo: ${data}`);\n        });\n        \n        hugoServerProcess.stderr.on('data', (data) => {\n            console.error(`Hugo Error: ${data}`);\n        });\n        \n        hugoServerProcess.on('close', (code) => {\n            console.log(`Hugo server exited with code ${code}`);\n            hugoServerProcess = null;\n        });\n        \n        // Wait a bit for server to start\n        await new Promise(resolve => setTimeout(resolve, 2000));\n        \n        res.json({ \n            success: true, \n            message: 'Hugo server started',\n            url: 'http://localhost:1313'\n        });\n    } catch (error) {\n        console.error('Start server error:', error);\n        res.status(500).json({ \n            success: false, \n            error: error.message \n        });\n    }\n});\n\n// Stop Hugo server\napp.post('/api/dashboard/server/stop', (req, res) => {\n    try {\n        if (!hugoServerProcess) {\n            return res.json({ \n                success: false, \n                message: 'Server not running' \n            });\n        }\n        \n        hugoServerProcess.kill();\n        hugoServerProcess = null;\n        \n        res.json({ \n            success: true, \n            message: 'Hugo server stopped' \n        });\n    } catch (error) {\n        console.error('Stop server error:', error);\n        res.status(500).json({ \n            success: false, \n            error: error.message \n        });\n    }\n});\n\n// Build site\napp.post('/api/dashboard/build', async (req, res) => {\n    try {\n        const startTime = Date.now();\n        const { stdout, stderr } = await execPromise('hugo --minify');\n        const buildTime = Date.now() - startTime;\n        \n        res.json({\n            success: true,\n            time: `${buildTime}ms`,\n            output: stdout,\n            message: 'Site built successfully'\n        });\n    } catch (error) {\n        console.error('Build error:', error);\n        res.status(500).json({ \n            success: false, \n            error: error.message \n        });\n    }\n});\n\n// Get content list\napp.get('/api/review/content', async (req, res) => {\n    try {\n        const { status, section, search, limit = 10 } = req.query;\n        const contentPath = path.join(__dirname, '../../content');\n        const contentList = [];\n        \n        async function scanContent(dir, basePath = '') {\n            try {\n                const files = await fs.readdir(dir);\n                for (const file of files) {\n                    const filePath = path.join(dir, file);\n                    const stat = await fs.stat(filePath);\n                    \n                    if (stat.isDirectory()) {\n                        await scanContent(filePath, path.join(basePath, file));\n                    } else if (file.endsWith('.md') && !file.startsWith('_')) {\n                        const content = await fs.readFile(filePath, 'utf8');\n                        const titleMatch = content.match(/title:\\s*\"([^\"]+)\"/);\n                        const draftMatch = content.match(/draft:\\s*(true|false)/);\n                        \n                        contentList.push({\n                            id: Buffer.from(filePath).toString('base64'),\n                            title: titleMatch ? titleMatch[1] : file.replace('.md', ''),\n                            path: path.join(basePath, file),\n                            status: draftMatch && draftMatch[1] === 'true' ? 'draft' : 'published',\n                            modified: stat.mtime,\n                            wordCount: content.split(/\\s+/).length\n                        });\n                    }\n                }\n            } catch (err) {\n                console.log(`Error scanning ${dir}:`, err.message);\n            }\n        }\n        \n        await scanContent(contentPath);\n        \n        // Apply filters\n        let filtered = contentList;\n        if (status) {\n            filtered = filtered.filter(item => item.status === status);\n        }\n        if (search) {\n            const searchLower = search.toLowerCase();\n            filtered = filtered.filter(item => \n                item.title.toLowerCase().includes(searchLower) ||\n                item.path.toLowerCase().includes(searchLower)\n            );\n        }\n        \n        // Sort by modified date\n        filtered.sort((a, b) => new Date(b.modified) - new Date(a.modified));\n        \n        // Limit results\n        if (limit) {\n            filtered = filtered.slice(0, parseInt(limit));\n        }\n        \n        res.json(filtered);\n    } catch (error) {\n        console.error('Content list error:', error);\n        res.json([]);\n    }\n});\n\n// Get specific content\napp.get('/api/review/content/:id', async (req, res) => {\n    try {\n        const filePath = Buffer.from(req.params.id, 'base64').toString();\n        const content = await fs.readFile(filePath, 'utf8');\n        \n        // Parse front matter and content\n        const frontMatterMatch = content.match(/^---\\n([\\s\\S]*?)\\n---\\n([\\s\\S]*)$/);\n        \n        res.json({\n            id: req.params.id,\n            frontMatter: frontMatterMatch ? frontMatterMatch[1] : '',\n            content: frontMatterMatch ? frontMatterMatch[2] : content,\n            raw: content\n        });\n    } catch (error) {\n        console.error('Get content error:', error);\n        res.status(404).json({ \n            error: 'Content not found' \n        });\n    }\n});\n\n// Save content\napp.post('/api/review/content/:id/save', async (req, res) => {\n    try {\n        const filePath = Buffer.from(req.params.id, 'base64').toString();\n        const { frontMatter, content } = req.body;\n        \n        const fullContent = `---\\n${frontMatter}\\n---\\n${content}`;\n        await fs.writeFile(filePath, fullContent, 'utf8');\n        \n        res.json({\n            success: true,\n            message: 'Content saved successfully'\n        });\n    } catch (error) {\n        console.error('Save content error:', error);\n        res.status(500).json({ \n            success: false, \n            error: error.message \n        });\n    }\n});\n\n// Quality check\napp.post('/api/review/quality', (req, res) => {\n    const { content, title } = req.body;\n    const wordCount = content ? content.split(/\\s+/).length : 0;\n    const hasTitle = title && title.length > 0;\n    const hasMetaDescription = content && content.includes('description:');\n    \n    const checks = [\n        {\n            status: hasTitle ? 'pass' : 'fail',\n            message: hasTitle ? 'Title present' : 'Missing title',\n            type: 'title'\n        },\n        {\n            status: hasMetaDescription ? 'pass' : 'warning',\n            message: hasMetaDescription ? 'SEO meta description present' : 'Missing meta description',\n            type: 'meta',\n            fixable: true\n        },\n        {\n            status: wordCount > 300 ? 'pass' : 'warning',\n            message: `Word count: ${wordCount} words`,\n            type: 'wordcount'\n        },\n        {\n            status: 'pass',\n            message: 'Valid front matter',\n            type: 'frontmatter'\n        }\n    ];\n    \n    const score = Math.round(\n        (checks.filter(c => c.status === 'pass').length / checks.length) * 100\n    );\n    \n    res.json({ score, checks });\n});\n\n// Start server\napp.listen(PORT, () => {\n    console.log(`\n╔════════════════════════════════════════╗\n║                                        ║\n║    Hugo Management API Server          ║\n║    Running on http://localhost:${PORT}    ║\n║                                        ║\n║    Endpoints:                          ║\n║    GET  /api/health                    ║\n║    GET  /api/dashboard/stats           ║\n║    POST /api/dashboard/create          ║\n║    POST /api/dashboard/server/start    ║\n║    POST /api/dashboard/server/stop     ║\n║    POST /api/dashboard/build           ║\n║    GET  /api/review/content            ║\n║    GET  /api/review/content/:id        ║\n║    POST /api/review/content/:id/save   ║\n║    POST /api/review/quality            ║\n║                                        ║\n╚════════════════════════════════════════╝\n    `);\n});\r\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\server.js",
    "RelativePath": "tools\\backend\\server.js"
  },
  {
    "Content": "1.3.8 / 2022-02-02\n==================\n\n  * deps: mime-types@~2.1.34\n    - deps: mime-db@~1.51.0\n  * deps: negotiator@0.6.3\n\n1.3.7 / 2019-04-29\n==================\n\n  * deps: negotiator@0.6.2\n    - Fix sorting charset, encoding, and language with extra parameters\n\n1.3.6 / 2019-04-28\n==================\n\n  * deps: mime-types@~2.1.24\n    - deps: mime-db@~1.40.0\n\n1.3.5 / 2018-02-28\n==================\n\n  * deps: mime-types@~2.1.18\n    - deps: mime-db@~1.33.0\n\n1.3.4 / 2017-08-22\n==================\n\n  * deps: mime-types@~2.1.16\n    - deps: mime-db@~1.29.0\n\n1.3.3 / 2016-05-02\n==================\n\n  * deps: mime-types@~2.1.11\n    - deps: mime-db@~1.23.0\n  * deps: negotiator@0.6.1\n    - perf: improve `Accept` parsing speed\n    - perf: improve `Accept-Charset` parsing speed\n    - perf: improve `Accept-Encoding` parsing speed\n    - perf: improve `Accept-Language` parsing speed\n\n1.3.2 / 2016-03-08\n==================\n\n  * deps: mime-types@~2.1.10\n    - Fix extension of `application/dash+xml`\n    - Update primary extension for `audio/mp4`\n    - deps: mime-db@~1.22.0\n\n1.3.1 / 2016-01-19\n==================\n\n  * deps: mime-types@~2.1.9\n    - deps: mime-db@~1.21.0\n\n1.3.0 / 2015-09-29\n==================\n\n  * deps: mime-types@~2.1.7\n    - deps: mime-db@~1.19.0\n  * deps: negotiator@0.6.0\n    - Fix including type extensions in parameters in `Accept` parsing\n    - Fix parsing `Accept` parameters with quoted equals\n    - Fix parsing `Accept` parameters with quoted semicolons\n    - Lazy-load modules from main entry point\n    - perf: delay type concatenation until needed\n    - perf: enable strict mode\n    - perf: hoist regular expressions\n    - perf: remove closures getting spec properties\n    - perf: remove a closure from media type parsing\n    - perf: remove property delete from media type parsing\n\n1.2.13 / 2015-09-06\n===================\n\n  * deps: mime-types@~2.1.6\n    - deps: mime-db@~1.18.0\n\n1.2.12 / 2015-07-30\n===================\n\n  * deps: mime-types@~2.1.4\n    - deps: mime-db@~1.16.0\n\n1.2.11 / 2015-07-16\n===================\n\n  * deps: mime-types@~2.1.3\n    - deps: mime-db@~1.15.0\n\n1.2.10 / 2015-07-01\n===================\n\n  * deps: mime-types@~2.1.2\n    - deps: mime-db@~1.14.0\n\n1.2.9 / 2015-06-08\n==================\n\n  * deps: mime-types@~2.1.1\n    - perf: fix deopt during mapping\n\n1.2.8 / 2015-06-07\n==================\n\n  * deps: mime-types@~2.1.0\n    - deps: mime-db@~1.13.0\n  * perf: avoid argument reassignment & argument slice\n  * perf: avoid negotiator recursive construction\n  * perf: enable strict mode\n  * perf: remove unnecessary bitwise operator\n\n1.2.7 / 2015-05-10\n==================\n\n  * deps: negotiator@0.5.3\n    - Fix media type parameter matching to be case-insensitive\n\n1.2.6 / 2015-05-07\n==================\n\n  * deps: mime-types@~2.0.11\n    - deps: mime-db@~1.9.1\n  * deps: negotiator@0.5.2\n    - Fix comparing media types with quoted values\n    - Fix splitting media types with quoted commas\n\n1.2.5 / 2015-03-13\n==================\n\n  * deps: mime-types@~2.0.10\n    - deps: mime-db@~1.8.0\n\n1.2.4 / 2015-02-14\n==================\n\n  * Support Node.js 0.6\n  * deps: mime-types@~2.0.9\n    - deps: mime-db@~1.7.0\n  * deps: negotiator@0.5.1\n    - Fix preference sorting to be stable for long acceptable lists\n\n1.2.3 / 2015-01-31\n==================\n\n  * deps: mime-types@~2.0.8\n    - deps: mime-db@~1.6.0\n\n1.2.2 / 2014-12-30\n==================\n\n  * deps: mime-types@~2.0.7\n    - deps: mime-db@~1.5.0\n\n1.2.1 / 2014-12-30\n==================\n\n  * deps: mime-types@~2.0.5\n    - deps: mime-db@~1.3.1\n\n1.2.0 / 2014-12-19\n==================\n\n  * deps: negotiator@0.5.0\n    - Fix list return order when large accepted list\n    - Fix missing identity encoding when q=0 exists\n    - Remove dynamic building of Negotiator class\n\n1.1.4 / 2014-12-10\n==================\n\n  * deps: mime-types@~2.0.4\n    - deps: mime-db@~1.3.0\n\n1.1.3 / 2014-11-09\n==================\n\n  * deps: mime-types@~2.0.3\n    - deps: mime-db@~1.2.0\n\n1.1.2 / 2014-10-14\n==================\n\n  * deps: negotiator@0.4.9\n    - Fix error when media type has invalid parameter\n\n1.1.1 / 2014-09-28\n==================\n\n  * deps: mime-types@~2.0.2\n    - deps: mime-db@~1.1.0\n  * deps: negotiator@0.4.8\n    - Fix all negotiations to be case-insensitive\n    - Stable sort preferences of same quality according to client order\n\n1.1.0 / 2014-09-02\n==================\n\n  * update `mime-types`\n\n1.0.7 / 2014-07-04\n==================\n\n  * Fix wrong type returned from `type` when match after unknown extension\n\n1.0.6 / 2014-06-24\n==================\n\n  * deps: negotiator@0.4.7\n\n1.0.5 / 2014-06-20\n==================\n\n * fix crash when unknown extension given\n\n1.0.4 / 2014-06-19\n==================\n\n  * use `mime-types`\n\n1.0.3 / 2014-06-11\n==================\n\n  * deps: negotiator@0.4.6\n    - Order by specificity when quality is the same\n\n1.0.2 / 2014-05-29\n==================\n\n  * Fix interpretation when header not in request\n  * deps: pin negotiator@0.4.5\n\n1.0.1 / 2014-01-18\n==================\n\n  * Identity encoding isn't always acceptable\n  * deps: negotiator@~0.4.0\n\n1.0.0 / 2013-12-27\n==================\n\n  * Genesis\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\accepts\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\accepts\\HISTORY.md"
  },
  {
    "Content": "/*!\n * accepts\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Negotiator = require('negotiator')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Accepts\n\n/**\n * Create a new Accepts object for the given req.\n *\n * @param {object} req\n * @public\n */\n\nfunction Accepts (req) {\n  if (!(this instanceof Accepts)) {\n    return new Accepts(req)\n  }\n\n  this.headers = req.headers\n  this.negotiator = new Negotiator(req)\n}\n\n/**\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single mime type string\n * such as \"application/json\", the extension name\n * such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     this.types('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     this.types('html');\n *     // => \"html\"\n *     this.types('text/html');\n *     // => \"text/html\"\n *     this.types('json', 'text');\n *     // => \"json\"\n *     this.types('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     this.types('image/png');\n *     this.types('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     this.types(['html', 'json']);\n *     this.types('html', 'json');\n *     // => \"json\"\n *\n * @param {String|Array} types...\n * @return {String|Array|Boolean}\n * @public\n */\n\nAccepts.prototype.type =\nAccepts.prototype.types = function (types_) {\n  var types = types_\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i]\n    }\n  }\n\n  // no types, return all requested types\n  if (!types || types.length === 0) {\n    return this.negotiator.mediaTypes()\n  }\n\n  // no accept header, return first given type\n  if (!this.headers.accept) {\n    return types[0]\n  }\n\n  var mimes = types.map(extToMime)\n  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime))\n  var first = accepts[0]\n\n  return first\n    ? types[mimes.indexOf(first)]\n    : false\n}\n\n/**\n * Return accepted encodings or best fit based on `encodings`.\n *\n * Given `Accept-Encoding: gzip, deflate`\n * an array sorted by quality is returned:\n *\n *     ['gzip', 'deflate']\n *\n * @param {String|Array} encodings...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.encoding =\nAccepts.prototype.encodings = function (encodings_) {\n  var encodings = encodings_\n\n  // support flattened arguments\n  if (encodings && !Array.isArray(encodings)) {\n    encodings = new Array(arguments.length)\n    for (var i = 0; i < encodings.length; i++) {\n      encodings[i] = arguments[i]\n    }\n  }\n\n  // no encodings, return all requested encodings\n  if (!encodings || encodings.length === 0) {\n    return this.negotiator.encodings()\n  }\n\n  return this.negotiator.encodings(encodings)[0] || false\n}\n\n/**\n * Return accepted charsets or best fit based on `charsets`.\n *\n * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\n * an array sorted by quality is returned:\n *\n *     ['utf-8', 'utf-7', 'iso-8859-1']\n *\n * @param {String|Array} charsets...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.charset =\nAccepts.prototype.charsets = function (charsets_) {\n  var charsets = charsets_\n\n  // support flattened arguments\n  if (charsets && !Array.isArray(charsets)) {\n    charsets = new Array(arguments.length)\n    for (var i = 0; i < charsets.length; i++) {\n      charsets[i] = arguments[i]\n    }\n  }\n\n  // no charsets, return all requested charsets\n  if (!charsets || charsets.length === 0) {\n    return this.negotiator.charsets()\n  }\n\n  return this.negotiator.charsets(charsets)[0] || false\n}\n\n/**\n * Return accepted languages or best fit based on `langs`.\n *\n * Given `Accept-Language: en;q=0.8, es, pt`\n * an array sorted by quality is returned:\n *\n *     ['es', 'pt', 'en']\n *\n * @param {String|Array} langs...\n * @return {Array|String}\n * @public\n */\n\nAccepts.prototype.lang =\nAccepts.prototype.langs =\nAccepts.prototype.language =\nAccepts.prototype.languages = function (languages_) {\n  var languages = languages_\n\n  // support flattened arguments\n  if (languages && !Array.isArray(languages)) {\n    languages = new Array(arguments.length)\n    for (var i = 0; i < languages.length; i++) {\n      languages[i] = arguments[i]\n    }\n  }\n\n  // no languages, return all requested languages\n  if (!languages || languages.length === 0) {\n    return this.negotiator.languages()\n  }\n\n  return this.negotiator.languages(languages)[0] || false\n}\n\n/**\n * Convert extnames to mime.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction extToMime (type) {\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if mime is valid.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction validMime (type) {\n  return typeof type === 'string'\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\accepts\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\accepts\\index.js"
  },
  {
    "Content": "# accepts\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][github-actions-ci-image]][github-actions-ci-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nHigher level content negotiation based on [negotiator](https://www.npmjs.com/package/negotiator).\nExtracted from [koa](https://www.npmjs.com/package/koa) for general use.\n\nIn addition to negotiator, it allows:\n\n- Allows types as an array or arguments list, ie `(['text/html', 'application/json'])`\n  as well as `('text/html', 'application/json')`.\n- Allows type shorthands such as `json`.\n- Returns `false` when no types match\n- Treats non-existent headers as `*`\n\n## Installation\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install accepts\n```\n\n## API\n\n```js\nvar accepts = require('accepts')\n```\n\n### accepts(req)\n\nCreate a new `Accepts` object for the given `req`.\n\n#### .charset(charsets)\n\nReturn the first accepted charset. If nothing in `charsets` is accepted,\nthen `false` is returned.\n\n#### .charsets()\n\nReturn the charsets that the request accepts, in the order of the client's\npreference (most preferred first).\n\n#### .encoding(encodings)\n\nReturn the first accepted encoding. If nothing in `encodings` is accepted,\nthen `false` is returned.\n\n#### .encodings()\n\nReturn the encodings that the request accepts, in the order of the client's\npreference (most preferred first).\n\n#### .language(languages)\n\nReturn the first accepted language. If nothing in `languages` is accepted,\nthen `false` is returned.\n\n#### .languages()\n\nReturn the languages that the request accepts, in the order of the client's\npreference (most preferred first).\n\n#### .type(types)\n\nReturn the first accepted type (and it is returned as the same text as what\nappears in the `types` array). If nothing in `types` is accepted, then `false`\nis returned.\n\nThe `types` array can contain full MIME types or file extensions. Any value\nthat is not a full MIME types is passed to `require('mime-types').lookup`.\n\n#### .types()\n\nReturn the types that the request accepts, in the order of the client's\npreference (most preferred first).\n\n## Examples\n\n### Simple type negotiation\n\nThis simple example shows how to use `accepts` to return a different typed\nrespond body based on what the client wants to accept. The server lists it's\npreferences in order and will get back the best match between the client and\nserver.\n\n```js\nvar accepts = require('accepts')\nvar http = require('http')\n\nfunction app (req, res) {\n  var accept = accepts(req)\n\n  // the order of this list is significant; should be server preferred order\n  switch (accept.type(['json', 'html'])) {\n    case 'json':\n      res.setHeader('Content-Type', 'application/json')\n      res.write('{\"hello\":\"world!\"}')\n      break\n    case 'html':\n      res.setHeader('Content-Type', 'text/html')\n      res.write('<b>hello, world!</b>')\n      break\n    default:\n      // the fallback is text/plain, so no need to specify it above\n      res.setHeader('Content-Type', 'text/plain')\n      res.write('hello, world!')\n      break\n  }\n\n  res.end()\n}\n\nhttp.createServer(app).listen(3000)\n```\n\nYou can test this out with the cURL program:\n```sh\ncurl -I -H'Accept: text/html' http://localhost:3000/\n```\n\n## License\n\n[MIT](LICENSE)\n\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/accepts/master\n[coveralls-url]: https://coveralls.io/r/jshttp/accepts?branch=master\n[github-actions-ci-image]: https://badgen.net/github/checks/jshttp/accepts/master?label=ci\n[github-actions-ci-url]: https://github.com/jshttp/accepts/actions/workflows/ci.yml\n[node-version-image]: https://badgen.net/npm/node/accepts\n[node-version-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/accepts\n[npm-url]: https://npmjs.org/package/accepts\n[npm-version-image]: https://badgen.net/npm/v/accepts\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\accepts\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\accepts\\README.md"
  },
  {
    "Content": "'use strict'\n\n/**\n * Expose `arrayFlatten`.\n */\nmodule.exports = arrayFlatten\n\n/**\n * Recursive flatten function with depth.\n *\n * @param  {Array}  array\n * @param  {Array}  result\n * @param  {Number} depth\n * @return {Array}\n */\nfunction flattenWithDepth (array, result, depth) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (depth > 0 && Array.isArray(value)) {\n      flattenWithDepth(value, result, depth - 1)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Recursive flatten function. Omitting depth is slightly faster.\n *\n * @param  {Array} array\n * @param  {Array} result\n * @return {Array}\n */\nfunction flattenForever (array, result) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (Array.isArray(value)) {\n      flattenForever(value, result)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Flatten an array, with the ability to define a depth.\n *\n * @param  {Array}  array\n * @param  {Number} depth\n * @return {Array}\n */\nfunction arrayFlatten (array, depth) {\n  if (depth == null) {\n    return flattenForever(array, [])\n  }\n\n  return flattenWithDepth(array, [], depth)\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\array-flatten\\array-flatten.js",
    "RelativePath": "tools\\backend\\node_modules\\array-flatten\\array-flatten.js"
  },
  {
    "Content": "# Array Flatten\n\n[![NPM version][npm-image]][npm-url]\n[![NPM downloads][downloads-image]][downloads-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n\n> Flatten an array of nested arrays into a single flat array. Accepts an optional depth.\n\n## Installation\n\n```\nnpm install array-flatten --save\n```\n\n## Usage\n\n```javascript\nvar flatten = require('array-flatten')\n\nflatten([1, [2, [3, [4, [5], 6], 7], 8], 9])\n//=> [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nflatten([1, [2, [3, [4, [5], 6], 7], 8], 9], 2)\n//=> [1, 2, 3, [4, [5], 6], 7, 8, 9]\n\n(function () {\n  flatten(arguments) //=> [1, 2, 3]\n})(1, [2, 3])\n```\n\n## License\n\nMIT\n\n[npm-image]: https://img.shields.io/npm/v/array-flatten.svg?style=flat\n[npm-url]: https://npmjs.org/package/array-flatten\n[downloads-image]: https://img.shields.io/npm/dm/array-flatten.svg?style=flat\n[downloads-url]: https://npmjs.org/package/array-flatten\n[travis-image]: https://img.shields.io/travis/blakeembrey/array-flatten.svg?style=flat\n[travis-url]: https://travis-ci.org/blakeembrey/array-flatten\n[coveralls-image]: https://img.shields.io/coveralls/blakeembrey/array-flatten.svg?style=flat\n[coveralls-url]: https://coveralls.io/r/blakeembrey/array-flatten?branch=master\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\array-flatten\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\array-flatten\\README.md"
  },
  {
    "Content": "1.20.3 / 2024-09-10\n===================\n\n  * deps: qs@6.13.0\n  * add `depth` option to customize the depth level in the parser\n  * IMPORTANT: The default `depth` level for parsing URL-encoded data is now `32` (previously was `Infinity`)\n\n1.20.2 / 2023-02-21\n===================\n\n  * Fix strict json error message on Node.js 19+\n  * deps: content-type@~1.0.5\n    - perf: skip value escaping when unnecessary\n  * deps: raw-body@2.5.2\n\n1.20.1 / 2022-10-06\n===================\n\n  * deps: qs@6.11.0\n  * perf: remove unnecessary object clone\n\n1.20.0 / 2022-04-02\n===================\n\n  * Fix error message for json parse whitespace in `strict`\n  * Fix internal error when inflated body exceeds limit\n  * Prevent loss of async hooks context\n  * Prevent hanging when request already read\n  * deps: depd@2.0.0\n    - Replace internal `eval` usage with `Function` constructor\n    - Use instance methods on `process` to check for listeners\n  * deps: http-errors@2.0.0\n    - deps: depd@2.0.0\n    - deps: statuses@2.0.1\n  * deps: on-finished@2.4.1\n  * deps: qs@6.10.3\n  * deps: raw-body@2.5.1\n    - deps: http-errors@2.0.0\n\n1.19.2 / 2022-02-15\n===================\n\n  * deps: bytes@3.1.2\n  * deps: qs@6.9.7\n    * Fix handling of `__proto__` keys\n  * deps: raw-body@2.4.3\n    - deps: bytes@3.1.2\n\n1.19.1 / 2021-12-10\n===================\n\n  * deps: bytes@3.1.1\n  * deps: http-errors@1.8.1\n    - deps: inherits@2.0.4\n    - deps: toidentifier@1.0.1\n    - deps: setprototypeof@1.2.0\n  * deps: qs@6.9.6\n  * deps: raw-body@2.4.2\n    - deps: bytes@3.1.1\n    - deps: http-errors@1.8.1\n  * deps: safe-buffer@5.2.1\n  * deps: type-is@~1.6.18\n\n1.19.0 / 2019-04-25\n===================\n\n  * deps: bytes@3.1.0\n    - Add petabyte (`pb`) support\n  * deps: http-errors@1.7.2\n    - Set constructor name when possible\n    - deps: setprototypeof@1.1.1\n    - deps: statuses@'>= 1.5.0 < 2'\n  * deps: iconv-lite@0.4.24\n    - Added encoding MIK\n  * deps: qs@6.7.0\n    - Fix parsing array brackets after index\n  * deps: raw-body@2.4.0\n    - deps: bytes@3.1.0\n    - deps: http-errors@1.7.2\n    - deps: iconv-lite@0.4.24\n  * deps: type-is@~1.6.17\n    - deps: mime-types@~2.1.24\n    - perf: prevent internal `throw` on invalid type\n\n1.18.3 / 2018-05-14\n===================\n\n  * Fix stack trace for strict json parse error\n  * deps: depd@~1.1.2\n    - perf: remove argument reassignment\n  * deps: http-errors@~1.6.3\n    - deps: depd@~1.1.2\n    - deps: setprototypeof@1.1.0\n    - deps: statuses@'>= 1.3.1 < 2'\n  * deps: iconv-lite@0.4.23\n    - Fix loading encoding with year appended\n    - Fix deprecation warnings on Node.js 10+\n  * deps: qs@6.5.2\n  * deps: raw-body@2.3.3\n    - deps: http-errors@1.6.3\n    - deps: iconv-lite@0.4.23\n  * deps: type-is@~1.6.16\n    - deps: mime-types@~2.1.18\n\n1.18.2 / 2017-09-22\n===================\n\n  * deps: debug@2.6.9\n  * perf: remove argument reassignment\n\n1.18.1 / 2017-09-12\n===================\n\n  * deps: content-type@~1.0.4\n    - perf: remove argument reassignment\n    - perf: skip parameter parsing when no parameters\n  * deps: iconv-lite@0.4.19\n    - Fix ISO-8859-1 regression\n    - Update Windows-1255\n  * deps: qs@6.5.1\n    - Fix parsing & compacting very deep objects\n  * deps: raw-body@2.3.2\n    - deps: iconv-lite@0.4.19\n\n1.18.0 / 2017-09-08\n===================\n\n  * Fix JSON strict violation error to match native parse error\n  * Include the `body` property on verify errors\n  * Include the `type` property on all generated errors\n  * Use `http-errors` to set status code on errors\n  * deps: bytes@3.0.0\n  * deps: debug@2.6.8\n  * deps: depd@~1.1.1\n    - Remove unnecessary `Buffer` loading\n  * deps: http-errors@~1.6.2\n    - deps: depd@1.1.1\n  * deps: iconv-lite@0.4.18\n    - Add support for React Native\n    - Add a warning if not loaded as utf-8\n    - Fix CESU-8 decoding in Node.js 8\n    - Improve speed of ISO-8859-1 encoding\n  * deps: qs@6.5.0\n  * deps: raw-body@2.3.1\n    - Use `http-errors` for standard emitted errors\n    - deps: bytes@3.0.0\n    - deps: iconv-lite@0.4.18\n    - perf: skip buffer decoding on overage chunk\n  * perf: prevent internal `throw` when missing charset\n\n1.17.2 / 2017-05-17\n===================\n\n  * deps: debug@2.6.7\n    - Fix `DEBUG_MAX_ARRAY_LENGTH`\n    - deps: ms@2.0.0\n  * deps: type-is@~1.6.15\n    - deps: mime-types@~2.1.15\n\n1.17.1 / 2017-03-06\n===================\n\n  * deps: qs@6.4.0\n    - Fix regression parsing keys starting with `[`\n\n1.17.0 / 2017-03-01\n===================\n\n  * deps: http-errors@~1.6.1\n    - Make `message` property enumerable for `HttpError`s\n    - deps: setprototypeof@1.0.3\n  * deps: qs@6.3.1\n    - Fix compacting nested arrays\n\n1.16.1 / 2017-02-10\n===================\n\n  * deps: debug@2.6.1\n    - Fix deprecation messages in WebStorm and other editors\n    - Undeprecate `DEBUG_FD` set to `1` or `2`\n\n1.16.0 / 2017-01-17\n===================\n\n  * deps: debug@2.6.0\n    - Allow colors in workers\n    - Deprecated `DEBUG_FD` environment variable\n    - Fix error when running under React Native\n    - Use same color for same namespace\n    - deps: ms@0.7.2\n  * deps: http-errors@~1.5.1\n    - deps: inherits@2.0.3\n    - deps: setprototypeof@1.0.2\n    - deps: statuses@'>= 1.3.1 < 2'\n  * deps: iconv-lite@0.4.15\n    - Added encoding MS-31J\n    - Added encoding MS-932\n    - Added encoding MS-936\n    - Added encoding MS-949\n    - Added encoding MS-950\n    - Fix GBK/GB18030 handling of Euro character\n  * deps: qs@6.2.1\n    - Fix array parsing from skipping empty values\n  * deps: raw-body@~2.2.0\n    - deps: iconv-lite@0.4.15\n  * deps: type-is@~1.6.14\n    - deps: mime-types@~2.1.13\n\n1.15.2 / 2016-06-19\n===================\n\n  * deps: bytes@2.4.0\n  * deps: content-type@~1.0.2\n    - perf: enable strict mode\n  * deps: http-errors@~1.5.0\n    - Use `setprototypeof` module to replace `__proto__` setting\n    - deps: statuses@'>= 1.3.0 < 2'\n    - perf: enable strict mode\n  * deps: qs@6.2.0\n  * deps: raw-body@~2.1.7\n    - deps: bytes@2.4.0\n    - perf: remove double-cleanup on happy path\n  * deps: type-is@~1.6.13\n    - deps: mime-types@~2.1.11\n\n1.15.1 / 2016-05-05\n===================\n\n  * deps: bytes@2.3.0\n    - Drop partial bytes on all parsed units\n    - Fix parsing byte string that looks like hex\n  * deps: raw-body@~2.1.6\n    - deps: bytes@2.3.0\n  * deps: type-is@~1.6.12\n    - deps: mime-types@~2.1.10\n\n1.15.0 / 2016-02-10\n===================\n\n  * deps: http-errors@~1.4.0\n    - Add `HttpError` export, for `err instanceof createError.HttpError`\n    - deps: inherits@2.0.1\n    - deps: statuses@'>= 1.2.1 < 2'\n  * deps: qs@6.1.0\n  * deps: type-is@~1.6.11\n    - deps: mime-types@~2.1.9\n\n1.14.2 / 2015-12-16\n===================\n\n  * deps: bytes@2.2.0\n  * deps: iconv-lite@0.4.13\n  * deps: qs@5.2.0\n  * deps: raw-body@~2.1.5\n    - deps: bytes@2.2.0\n    - deps: iconv-lite@0.4.13\n  * deps: type-is@~1.6.10\n    - deps: mime-types@~2.1.8\n\n1.14.1 / 2015-09-27\n===================\n\n  * Fix issue where invalid charset results in 400 when `verify` used\n  * deps: iconv-lite@0.4.12\n    - Fix CESU-8 decoding in Node.js 4.x\n  * deps: raw-body@~2.1.4\n    - Fix masking critical errors from `iconv-lite`\n    - deps: iconv-lite@0.4.12\n  * deps: type-is@~1.6.9\n    - deps: mime-types@~2.1.7\n\n1.14.0 / 2015-09-16\n===================\n\n  * Fix JSON strict parse error to match syntax errors\n  * Provide static `require` analysis in `urlencoded` parser\n  * deps: depd@~1.1.0\n    - Support web browser loading\n  * deps: qs@5.1.0\n  * deps: raw-body@~2.1.3\n    - Fix sync callback when attaching data listener causes sync read\n  * deps: type-is@~1.6.8\n    - Fix type error when given invalid type to match against\n    - deps: mime-types@~2.1.6\n\n1.13.3 / 2015-07-31\n===================\n\n  * deps: type-is@~1.6.6\n    - deps: mime-types@~2.1.4\n\n1.13.2 / 2015-07-05\n===================\n\n  * deps: iconv-lite@0.4.11\n  * deps: qs@4.0.0\n    - Fix dropping parameters like `hasOwnProperty`\n    - Fix user-visible incompatibilities from 3.1.0\n    - Fix various parsing edge cases\n  * deps: raw-body@~2.1.2\n    - Fix error stack traces to skip `makeError`\n    - deps: iconv-lite@0.4.11\n  * deps: type-is@~1.6.4\n    - deps: mime-types@~2.1.2\n    - perf: enable strict mode\n    - perf: remove argument reassignment\n\n1.13.1 / 2015-06-16\n===================\n\n  * deps: qs@2.4.2\n    - Downgraded from 3.1.0 because of user-visible incompatibilities\n\n1.13.0 / 2015-06-14\n===================\n\n  * Add `statusCode` property on `Error`s, in addition to `status`\n  * Change `type` default to `application/json` for JSON parser\n  * Change `type` default to `application/x-www-form-urlencoded` for urlencoded parser\n  * Provide static `require` analysis\n  * Use the `http-errors` module to generate errors\n  * deps: bytes@2.1.0\n    - Slight optimizations\n  * deps: iconv-lite@0.4.10\n    - The encoding UTF-16 without BOM now defaults to UTF-16LE when detection fails\n    - Leading BOM is now removed when decoding\n  * deps: on-finished@~2.3.0\n    - Add defined behavior for HTTP `CONNECT` requests\n    - Add defined behavior for HTTP `Upgrade` requests\n    - deps: ee-first@1.1.1\n  * deps: qs@3.1.0\n    - Fix dropping parameters like `hasOwnProperty`\n    - Fix various parsing edge cases\n    - Parsed object now has `null` prototype\n  * deps: raw-body@~2.1.1\n    - Use `unpipe` module for unpiping requests\n    - deps: iconv-lite@0.4.10\n  * deps: type-is@~1.6.3\n    - deps: mime-types@~2.1.1\n    - perf: reduce try block size\n    - perf: remove bitwise operations\n  * perf: enable strict mode\n  * perf: remove argument reassignment\n  * perf: remove delete call\n\n1.12.4 / 2015-05-10\n===================\n\n  * deps: debug@~2.2.0\n  * deps: qs@2.4.2\n    - Fix allowing parameters like `constructor`\n  * deps: on-finished@~2.2.1\n  * deps: raw-body@~2.0.1\n    - Fix a false-positive when unpiping in Node.js 0.8\n    - deps: bytes@2.0.1\n  * deps: type-is@~1.6.2\n    - deps: mime-types@~2.0.11\n\n1.12.3 / 2015-04-15\n===================\n\n  * Slight efficiency improvement when not debugging\n  * deps: depd@~1.0.1\n  * deps: iconv-lite@0.4.8\n    - Add encoding alias UNICODE-1-1-UTF-7\n  * deps: raw-body@1.3.4\n    - Fix hanging callback if request aborts during read\n    - deps: iconv-lite@0.4.8\n\n1.12.2 / 2015-03-16\n===================\n\n  * deps: qs@2.4.1\n    - Fix error when parameter `hasOwnProperty` is present\n\n1.12.1 / 2015-03-15\n===================\n\n  * deps: debug@~2.1.3\n    - Fix high intensity foreground color for bold\n    - deps: ms@0.7.0\n  * deps: type-is@~1.6.1\n    - deps: mime-types@~2.0.10\n\n1.12.0 / 2015-02-13\n===================\n\n  * add `debug` messages\n  * accept a function for the `type` option\n  * use `content-type` to parse `Content-Type` headers\n  * deps: iconv-lite@0.4.7\n    - Gracefully support enumerables on `Object.prototype`\n  * deps: raw-body@1.3.3\n    - deps: iconv-lite@0.4.7\n  * deps: type-is@~1.6.0\n    - fix argument reassignment\n    - fix false-positives in `hasBody` `Transfer-Encoding` check\n    - support wildcard for both type and subtype (`*/*`)\n    - deps: mime-types@~2.0.9\n\n1.11.0 / 2015-01-30\n===================\n\n  * make internal `extended: true` depth limit infinity\n  * deps: type-is@~1.5.6\n    - deps: mime-types@~2.0.8\n\n1.10.2 / 2015-01-20\n===================\n\n  * deps: iconv-lite@0.4.6\n    - Fix rare aliases of single-byte encodings\n  * deps: raw-body@1.3.2\n    - deps: iconv-lite@0.4.6\n\n1.10.1 / 2015-01-01\n===================\n\n  * deps: on-finished@~2.2.0\n  * deps: type-is@~1.5.5\n    - deps: mime-types@~2.0.7\n\n1.10.0 / 2014-12-02\n===================\n\n  * make internal `extended: true` array limit dynamic\n\n1.9.3 / 2014-11-21\n==================\n\n  * deps: iconv-lite@0.4.5\n    - Fix Windows-31J and X-SJIS encoding support\n  * deps: qs@2.3.3\n    - Fix `arrayLimit` behavior\n  * deps: raw-body@1.3.1\n    - deps: iconv-lite@0.4.5\n  * deps: type-is@~1.5.3\n    - deps: mime-types@~2.0.3\n\n1.9.2 / 2014-10-27\n==================\n\n  * deps: qs@2.3.2\n    - Fix parsing of mixed objects and values\n\n1.9.1 / 2014-10-22\n==================\n\n  * deps: on-finished@~2.1.1\n    - Fix handling of pipelined requests\n  * deps: qs@2.3.0\n    - Fix parsing of mixed implicit and explicit arrays\n  * deps: type-is@~1.5.2\n    - deps: mime-types@~2.0.2\n\n1.9.0 / 2014-09-24\n==================\n\n  * include the charset in \"unsupported charset\" error message\n  * include the encoding in \"unsupported content encoding\" error message\n  * deps: depd@~1.0.0\n\n1.8.4 / 2014-09-23\n==================\n\n  * fix content encoding to be case-insensitive\n\n1.8.3 / 2014-09-19\n==================\n\n  * deps: qs@2.2.4\n    - Fix issue with object keys starting with numbers truncated\n\n1.8.2 / 2014-09-15\n==================\n\n  * deps: depd@0.4.5\n\n1.8.1 / 2014-09-07\n==================\n\n  * deps: media-typer@0.3.0\n  * deps: type-is@~1.5.1\n\n1.8.0 / 2014-09-05\n==================\n\n  * make empty-body-handling consistent between chunked requests\n    - empty `json` produces `{}`\n    - empty `raw` produces `new Buffer(0)`\n    - empty `text` produces `''`\n    - empty `urlencoded` produces `{}`\n  * deps: qs@2.2.3\n    - Fix issue where first empty value in array is discarded\n  * deps: type-is@~1.5.0\n    - fix `hasbody` to be true for `content-length: 0`\n\n1.7.0 / 2014-09-01\n==================\n\n  * add `parameterLimit` option to `urlencoded` parser\n  * change `urlencoded` extended array limit to 100\n  * respond with 413 when over `parameterLimit` in `urlencoded`\n\n1.6.7 / 2014-08-29\n==================\n\n  * deps: qs@2.2.2\n    - Remove unnecessary cloning\n\n1.6.6 / 2014-08-27\n==================\n\n  * deps: qs@2.2.0\n    - Array parsing fix\n    - Performance improvements\n\n1.6.5 / 2014-08-16\n==================\n\n  * deps: on-finished@2.1.0\n\n1.6.4 / 2014-08-14\n==================\n\n  * deps: qs@1.2.2\n\n1.6.3 / 2014-08-10\n==================\n\n  * deps: qs@1.2.1\n\n1.6.2 / 2014-08-07\n==================\n\n  * deps: qs@1.2.0\n    - Fix parsing array of objects\n\n1.6.1 / 2014-08-06\n==================\n\n  * deps: qs@1.1.0\n    - Accept urlencoded square brackets\n    - Accept empty values in implicit array notation\n\n1.6.0 / 2014-08-05\n==================\n\n  * deps: qs@1.0.2\n    - Complete rewrite\n    - Limits array length to 20\n    - Limits object depth to 5\n    - Limits parameters to 1,000\n\n1.5.2 / 2014-07-27\n==================\n\n  * deps: depd@0.4.4\n    - Work-around v8 generating empty stack traces\n\n1.5.1 / 2014-07-26\n==================\n\n  * deps: depd@0.4.3\n    - Fix exception when global `Error.stackTraceLimit` is too low\n\n1.5.0 / 2014-07-20\n==================\n\n  * deps: depd@0.4.2\n    - Add `TRACE_DEPRECATION` environment variable\n    - Remove non-standard grey color from color output\n    - Support `--no-deprecation` argument\n    - Support `--trace-deprecation` argument\n  * deps: iconv-lite@0.4.4\n    - Added encoding UTF-7\n  * deps: raw-body@1.3.0\n    - deps: iconv-lite@0.4.4\n    - Added encoding UTF-7\n    - Fix `Cannot switch to old mode now` error on Node.js 0.10+\n  * deps: type-is@~1.3.2\n\n1.4.3 / 2014-06-19\n==================\n\n  * deps: type-is@1.3.1\n    - fix global variable leak\n\n1.4.2 / 2014-06-19\n==================\n\n  * deps: type-is@1.3.0\n    - improve type parsing\n\n1.4.1 / 2014-06-19\n==================\n\n  * fix urlencoded extended deprecation message\n\n1.4.0 / 2014-06-19\n==================\n\n  * add `text` parser\n  * add `raw` parser\n  * check accepted charset in content-type (accepts utf-8)\n  * check accepted encoding in content-encoding (accepts identity)\n  * deprecate `bodyParser()` middleware; use `.json()` and `.urlencoded()` as needed\n  * deprecate `urlencoded()` without provided `extended` option\n  * lazy-load urlencoded parsers\n  * parsers split into files for reduced mem usage\n  * support gzip and deflate bodies\n    - set `inflate: false` to turn off\n  * deps: raw-body@1.2.2\n    - Support all encodings from `iconv-lite`\n\n1.3.1 / 2014-06-11\n==================\n\n  * deps: type-is@1.2.1\n    - Switch dependency from mime to mime-types@1.0.0\n\n1.3.0 / 2014-05-31\n==================\n\n  * add `extended` option to urlencoded parser\n\n1.2.2 / 2014-05-27\n==================\n\n  * deps: raw-body@1.1.6\n    - assert stream encoding on node.js 0.8\n    - assert stream encoding on node.js < 0.10.6\n    - deps: bytes@1\n\n1.2.1 / 2014-05-26\n==================\n\n  * invoke `next(err)` after request fully read\n    - prevents hung responses and socket hang ups\n\n1.2.0 / 2014-05-11\n==================\n\n  * add `verify` option\n  * deps: type-is@1.2.0\n    - support suffix matching\n\n1.1.2 / 2014-05-11\n==================\n\n  * improve json parser speed\n\n1.1.1 / 2014-05-11\n==================\n\n  * fix repeated limit parsing with every request\n\n1.1.0 / 2014-05-10\n==================\n\n  * add `type` option\n  * deps: pin for safety and consistency\n\n1.0.2 / 2014-04-14\n==================\n\n  * use `type-is` module\n\n1.0.1 / 2014-03-20\n==================\n\n  * lower default limits to 100kb\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\body-parser\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\body-parser\\HISTORY.md"
  },
  {
    "Content": "/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('body-parser')\n\n/**\n * Cache of loaded parsers.\n * @private\n */\n\nvar parsers = Object.create(null)\n\n/**\n * @typedef Parsers\n * @type {function}\n * @property {function} json\n * @property {function} raw\n * @property {function} text\n * @property {function} urlencoded\n */\n\n/**\n * Module exports.\n * @type {Parsers}\n */\n\nexports = module.exports = deprecate.function(bodyParser,\n  'bodyParser: use individual json/urlencoded middlewares')\n\n/**\n * JSON parser.\n * @public\n */\n\nObject.defineProperty(exports, 'json', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('json')\n})\n\n/**\n * Raw parser.\n * @public\n */\n\nObject.defineProperty(exports, 'raw', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('raw')\n})\n\n/**\n * Text parser.\n * @public\n */\n\nObject.defineProperty(exports, 'text', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('text')\n})\n\n/**\n * URL-encoded parser.\n * @public\n */\n\nObject.defineProperty(exports, 'urlencoded', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('urlencoded')\n})\n\n/**\n * Create a middleware to parse json and urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @deprecated\n * @public\n */\n\nfunction bodyParser (options) {\n  // use default type for parsers\n  var opts = Object.create(options || null, {\n    type: {\n      configurable: true,\n      enumerable: true,\n      value: undefined,\n      writable: true\n    }\n  })\n\n  var _urlencoded = exports.urlencoded(opts)\n  var _json = exports.json(opts)\n\n  return function bodyParser (req, res, next) {\n    _json(req, res, function (err) {\n      if (err) return next(err)\n      _urlencoded(req, res, next)\n    })\n  }\n}\n\n/**\n * Create a getter for loading a parser.\n * @private\n */\n\nfunction createParserGetter (name) {\n  return function get () {\n    return loadParser(name)\n  }\n}\n\n/**\n * Load a parser module.\n * @private\n */\n\nfunction loadParser (parserName) {\n  var parser = parsers[parserName]\n\n  if (parser !== undefined) {\n    return parser\n  }\n\n  // this uses a switch for static require analysis\n  switch (parserName) {\n    case 'json':\n      parser = require('./lib/types/json')\n      break\n    case 'raw':\n      parser = require('./lib/types/raw')\n      break\n    case 'text':\n      parser = require('./lib/types/text')\n      break\n    case 'urlencoded':\n      parser = require('./lib/types/urlencoded')\n      break\n  }\n\n  // store to prevent invoking require()\n  return (parsers[parserName] = parser)\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\body-parser\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\body-parser\\index.js"
  },
  {
    "Content": "# body-parser\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Build Status][ci-image]][ci-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n[![OpenSSF Scorecard Badge][ossf-scorecard-badge]][ossf-scorecard-visualizer]\n\nNode.js body parsing middleware.\n\nParse incoming request bodies in a middleware before your handlers, available\nunder the `req.body` property.\n\n**Note** As `req.body`'s shape is based on user-controlled input, all\nproperties and values in this object are untrusted and should be validated\nbefore trusting. For example, `req.body.foo.toString()` may fail in multiple\nways, for example the `foo` property may not be there or may not be a string,\nand `toString` may not be a function and instead a string or other user input.\n\n[Learn about the anatomy of an HTTP transaction in Node.js](https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/).\n\n_This does not handle multipart bodies_, due to their complex and typically\nlarge nature. For multipart bodies, you may be interested in the following\nmodules:\n\n  * [busboy](https://www.npmjs.org/package/busboy#readme) and\n    [connect-busboy](https://www.npmjs.org/package/connect-busboy#readme)\n  * [multiparty](https://www.npmjs.org/package/multiparty#readme) and\n    [connect-multiparty](https://www.npmjs.org/package/connect-multiparty#readme)\n  * [formidable](https://www.npmjs.org/package/formidable#readme)\n  * [multer](https://www.npmjs.org/package/multer#readme)\n\nThis module provides the following parsers:\n\n  * [JSON body parser](#bodyparserjsonoptions)\n  * [Raw body parser](#bodyparserrawoptions)\n  * [Text body parser](#bodyparsertextoptions)\n  * [URL-encoded form body parser](#bodyparserurlencodedoptions)\n\nOther body parsers you might be interested in:\n\n- [body](https://www.npmjs.org/package/body#readme)\n- [co-body](https://www.npmjs.org/package/co-body#readme)\n\n## Installation\n\n```sh\n$ npm install body-parser\n```\n\n## API\n\n```js\nvar bodyParser = require('body-parser')\n```\n\nThe `bodyParser` object exposes various factories to create middlewares. All\nmiddlewares will populate the `req.body` property with the parsed body when\nthe `Content-Type` request header matches the `type` option, or an empty\nobject (`{}`) if there was no body to parse, the `Content-Type` was not matched,\nor an error occurred.\n\nThe various errors returned by this module are described in the\n[errors section](#errors).\n\n### bodyParser.json([options])\n\nReturns middleware that only parses `json` and only looks at requests where\nthe `Content-Type` header matches the `type` option. This parser accepts any\nUnicode encoding of the body and supports automatic inflation of `gzip` and\n`deflate` encodings.\n\nA new `body` object containing the parsed data is populated on the `request`\nobject after the middleware (i.e. `req.body`).\n\n#### Options\n\nThe `json` function takes an optional `options` object that may contain any of\nthe following keys:\n\n##### inflate\n\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\n`false`, deflated bodies are rejected. Defaults to `true`.\n\n##### limit\n\nControls the maximum request body size. If this is a number, then the value\nspecifies the number of bytes; if it is a string, the value is passed to the\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\nto `'100kb'`.\n\n##### reviver\n\nThe `reviver` option is passed directly to `JSON.parse` as the second\nargument. You can find more information on this argument\n[in the MDN documentation about JSON.parse](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Example.3A_Using_the_reviver_parameter).\n\n##### strict\n\nWhen set to `true`, will only accept arrays and objects; when `false` will\naccept anything `JSON.parse` accepts. Defaults to `true`.\n\n##### type\n\nThe `type` option is used to determine what media type the middleware will\nparse. This option can be a string, array of strings, or a function. If not a\nfunction, `type` option is passed directly to the\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\nbe an extension name (like `json`), a mime type (like `application/json`), or\na mime type with a wildcard (like `*/*` or `*/json`). If a function, the `type`\noption is called as `fn(req)` and the request is parsed if it returns a truthy\nvalue. Defaults to `application/json`.\n\n##### verify\n\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\nencoding of the request. The parsing can be aborted by throwing an error.\n\n### bodyParser.raw([options])\n\nReturns middleware that parses all bodies as a `Buffer` and only looks at\nrequests where the `Content-Type` header matches the `type` option. This\nparser supports automatic inflation of `gzip` and `deflate` encodings.\n\nA new `body` object containing the parsed data is populated on the `request`\nobject after the middleware (i.e. `req.body`). This will be a `Buffer` object\nof the body.\n\n#### Options\n\nThe `raw` function takes an optional `options` object that may contain any of\nthe following keys:\n\n##### inflate\n\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\n`false`, deflated bodies are rejected. Defaults to `true`.\n\n##### limit\n\nControls the maximum request body size. If this is a number, then the value\nspecifies the number of bytes; if it is a string, the value is passed to the\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\nto `'100kb'`.\n\n##### type\n\nThe `type` option is used to determine what media type the middleware will\nparse. This option can be a string, array of strings, or a function.\nIf not a function, `type` option is passed directly to the\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this\ncan be an extension name (like `bin`), a mime type (like\n`application/octet-stream`), or a mime type with a wildcard (like `*/*` or\n`application/*`). If a function, the `type` option is called as `fn(req)`\nand the request is parsed if it returns a truthy value. Defaults to\n`application/octet-stream`.\n\n##### verify\n\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\nencoding of the request. The parsing can be aborted by throwing an error.\n\n### bodyParser.text([options])\n\nReturns middleware that parses all bodies as a string and only looks at\nrequests where the `Content-Type` header matches the `type` option. This\nparser supports automatic inflation of `gzip` and `deflate` encodings.\n\nA new `body` string containing the parsed data is populated on the `request`\nobject after the middleware (i.e. `req.body`). This will be a string of the\nbody.\n\n#### Options\n\nThe `text` function takes an optional `options` object that may contain any of\nthe following keys:\n\n##### defaultCharset\n\nSpecify the default character set for the text content if the charset is not\nspecified in the `Content-Type` header of the request. Defaults to `utf-8`.\n\n##### inflate\n\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\n`false`, deflated bodies are rejected. Defaults to `true`.\n\n##### limit\n\nControls the maximum request body size. If this is a number, then the value\nspecifies the number of bytes; if it is a string, the value is passed to the\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\nto `'100kb'`.\n\n##### type\n\nThe `type` option is used to determine what media type the middleware will\nparse. This option can be a string, array of strings, or a function. If not\na function, `type` option is passed directly to the\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\nbe an extension name (like `txt`), a mime type (like `text/plain`), or a mime\ntype with a wildcard (like `*/*` or `text/*`). If a function, the `type`\noption is called as `fn(req)` and the request is parsed if it returns a\ntruthy value. Defaults to `text/plain`.\n\n##### verify\n\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\nencoding of the request. The parsing can be aborted by throwing an error.\n\n### bodyParser.urlencoded([options])\n\nReturns middleware that only parses `urlencoded` bodies and only looks at\nrequests where the `Content-Type` header matches the `type` option. This\nparser accepts only UTF-8 encoding of the body and supports automatic\ninflation of `gzip` and `deflate` encodings.\n\nA new `body` object containing the parsed data is populated on the `request`\nobject after the middleware (i.e. `req.body`). This object will contain\nkey-value pairs, where the value can be a string or array (when `extended` is\n`false`), or any type (when `extended` is `true`).\n\n#### Options\n\nThe `urlencoded` function takes an optional `options` object that may contain\nany of the following keys:\n\n##### extended\n\nThe `extended` option allows to choose between parsing the URL-encoded data\nwith the `querystring` library (when `false`) or the `qs` library (when\n`true`). The \"extended\" syntax allows for rich objects and arrays to be\nencoded into the URL-encoded format, allowing for a JSON-like experience\nwith URL-encoded. For more information, please\n[see the qs library](https://www.npmjs.org/package/qs#readme).\n\nDefaults to `true`, but using the default has been deprecated. Please\nresearch into the difference between `qs` and `querystring` and choose the\nappropriate setting.\n\n##### inflate\n\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\n`false`, deflated bodies are rejected. Defaults to `true`.\n\n##### limit\n\nControls the maximum request body size. If this is a number, then the value\nspecifies the number of bytes; if it is a string, the value is passed to the\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\nto `'100kb'`.\n\n##### parameterLimit\n\nThe `parameterLimit` option controls the maximum number of parameters that\nare allowed in the URL-encoded data. If a request contains more parameters\nthan this value, a 413 will be returned to the client. Defaults to `1000`.\n\n##### type\n\nThe `type` option is used to determine what media type the middleware will\nparse. This option can be a string, array of strings, or a function. If not\na function, `type` option is passed directly to the\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\nbe an extension name (like `urlencoded`), a mime type (like\n`application/x-www-form-urlencoded`), or a mime type with a wildcard (like\n`*/x-www-form-urlencoded`). If a function, the `type` option is called as\n`fn(req)` and the request is parsed if it returns a truthy value. Defaults\nto `application/x-www-form-urlencoded`.\n\n##### verify\n\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\nencoding of the request. The parsing can be aborted by throwing an error.\n\n#### depth\n\nThe `depth` option is used to configure the maximum depth of the `qs` library when `extended` is `true`. This allows you to limit the amount of keys that are parsed and can be useful to prevent certain types of abuse. Defaults to `32`. It is recommended to keep this value as low as possible.\n\n## Errors\n\nThe middlewares provided by this module create errors using the\n[`http-errors` module](https://www.npmjs.com/package/http-errors). The errors\nwill typically have a `status`/`statusCode` property that contains the suggested\nHTTP response code, an `expose` property to determine if the `message` property\nshould be displayed to the client, a `type` property to determine the type of\nerror without matching against the `message`, and a `body` property containing\nthe read body, if available.\n\nThe following are the common errors created, though any error can come through\nfor various reasons.\n\n### content encoding unsupported\n\nThis error will occur when the request had a `Content-Encoding` header that\ncontained an encoding but the \"inflation\" option was set to `false`. The\n`status` property is set to `415`, the `type` property is set to\n`'encoding.unsupported'`, and the `charset` property will be set to the\nencoding that is unsupported.\n\n### entity parse failed\n\nThis error will occur when the request contained an entity that could not be\nparsed by the middleware. The `status` property is set to `400`, the `type`\nproperty is set to `'entity.parse.failed'`, and the `body` property is set to\nthe entity value that failed parsing.\n\n### entity verify failed\n\nThis error will occur when the request contained an entity that could not be\nfailed verification by the defined `verify` option. The `status` property is\nset to `403`, the `type` property is set to `'entity.verify.failed'`, and the\n`body` property is set to the entity value that failed verification.\n\n### request aborted\n\nThis error will occur when the request is aborted by the client before reading\nthe body has finished. The `received` property will be set to the number of\nbytes received before the request was aborted and the `expected` property is\nset to the number of expected bytes. The `status` property is set to `400`\nand `type` property is set to `'request.aborted'`.\n\n### request entity too large\n\nThis error will occur when the request body's size is larger than the \"limit\"\noption. The `limit` property will be set to the byte limit and the `length`\nproperty will be set to the request body's length. The `status` property is\nset to `413` and the `type` property is set to `'entity.too.large'`.\n\n### request size did not match content length\n\nThis error will occur when the request's length did not match the length from\nthe `Content-Length` header. This typically occurs when the request is malformed,\ntypically when the `Content-Length` header was calculated based on characters\ninstead of bytes. The `status` property is set to `400` and the `type` property\nis set to `'request.size.invalid'`.\n\n### stream encoding should not be set\n\nThis error will occur when something called the `req.setEncoding` method prior\nto this middleware. This module operates directly on bytes only and you cannot\ncall `req.setEncoding` when using this module. The `status` property is set to\n`500` and the `type` property is set to `'stream.encoding.set'`.\n\n### stream is not readable\n\nThis error will occur when the request is no longer readable when this middleware\nattempts to read it. This typically means something other than a middleware from\nthis module read the request body already and the middleware was also configured to\nread the same request. The `status` property is set to `500` and the `type`\nproperty is set to `'stream.not.readable'`.\n\n### too many parameters\n\nThis error will occur when the content of the request exceeds the configured\n`parameterLimit` for the `urlencoded` parser. The `status` property is set to\n`413` and the `type` property is set to `'parameters.too.many'`.\n\n### unsupported charset \"BOGUS\"\n\nThis error will occur when the request had a charset parameter in the\n`Content-Type` header, but the `iconv-lite` module does not support it OR the\nparser does not support it. The charset is contained in the message as well\nas in the `charset` property. The `status` property is set to `415`, the\n`type` property is set to `'charset.unsupported'`, and the `charset` property\nis set to the charset that is unsupported.\n\n### unsupported content encoding \"bogus\"\n\nThis error will occur when the request had a `Content-Encoding` header that\ncontained an unsupported encoding. The encoding is contained in the message\nas well as in the `encoding` property. The `status` property is set to `415`,\nthe `type` property is set to `'encoding.unsupported'`, and the `encoding`\nproperty is set to the encoding that is unsupported.\n\n### The input exceeded the depth\n\nThis error occurs when using `bodyParser.urlencoded` with the `extended` property set to `true` and the input exceeds the configured `depth` option. The `status` property is set to `400`. It is recommended to review the `depth` option and evaluate if it requires a higher value. When the `depth` option is set to `32` (default value), the error will not be thrown.\n\n## Examples\n\n### Express/Connect top-level generic\n\nThis example demonstrates adding a generic JSON and URL-encoded parser as a\ntop-level middleware, which will parse the bodies of all incoming requests.\nThis is the simplest setup.\n\n```js\nvar express = require('express')\nvar bodyParser = require('body-parser')\n\nvar app = express()\n\n// parse application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded({ extended: false }))\n\n// parse application/json\napp.use(bodyParser.json())\n\napp.use(function (req, res) {\n  res.setHeader('Content-Type', 'text/plain')\n  res.write('you posted:\\n')\n  res.end(JSON.stringify(req.body, null, 2))\n})\n```\n\n### Express route-specific\n\nThis example demonstrates adding body parsers specifically to the routes that\nneed them. In general, this is the most recommended way to use body-parser with\nExpress.\n\n```js\nvar express = require('express')\nvar bodyParser = require('body-parser')\n\nvar app = express()\n\n// create application/json parser\nvar jsonParser = bodyParser.json()\n\n// create application/x-www-form-urlencoded parser\nvar urlencodedParser = bodyParser.urlencoded({ extended: false })\n\n// POST /login gets urlencoded bodies\napp.post('/login', urlencodedParser, function (req, res) {\n  res.send('welcome, ' + req.body.username)\n})\n\n// POST /api/users gets JSON bodies\napp.post('/api/users', jsonParser, function (req, res) {\n  // create user in req.body\n})\n```\n\n### Change accepted type for parsers\n\nAll the parsers accept a `type` option which allows you to change the\n`Content-Type` that the middleware will parse.\n\n```js\nvar express = require('express')\nvar bodyParser = require('body-parser')\n\nvar app = express()\n\n// parse various different custom JSON types as JSON\napp.use(bodyParser.json({ type: 'application/*+json' }))\n\n// parse some custom thing into a Buffer\napp.use(bodyParser.raw({ type: 'application/vnd.custom-type' }))\n\n// parse an HTML body into a string\napp.use(bodyParser.text({ type: 'text/html' }))\n```\n\n## License\n\n[MIT](LICENSE)\n\n[ci-image]: https://badgen.net/github/checks/expressjs/body-parser/master?label=ci\n[ci-url]: https://github.com/expressjs/body-parser/actions/workflows/ci.yml\n[coveralls-image]: https://badgen.net/coveralls/c/github/expressjs/body-parser/master\n[coveralls-url]: https://coveralls.io/r/expressjs/body-parser?branch=master\n[node-version-image]: https://badgen.net/npm/node/body-parser\n[node-version-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/body-parser\n[npm-url]: https://npmjs.org/package/body-parser\n[npm-version-image]: https://badgen.net/npm/v/body-parser\n[ossf-scorecard-badge]: https://api.scorecard.dev/projects/github.com/expressjs/body-parser/badge\n[ossf-scorecard-visualizer]: https://ossf.github.io/scorecard-visualizer/#/projects/github.com/expressjs/body-parser",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\body-parser\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\body-parser\\README.md"
  },
  {
    "Content": "# Security Policies and Procedures\n\n## Reporting a Bug\n\nThe Express team and community take all security bugs seriously. Thank you\nfor improving the security of Express. We appreciate your efforts and\nresponsible disclosure and will make every effort to acknowledge your\ncontributions.\n\nReport security bugs by emailing the current owner(s) of `body-parser`. This\ninformation can be found in the npm registry using the command\n`npm owner ls body-parser`.\nIf unsure or unable to get the information from the above, open an issue\nin the [project issue tracker](https://github.com/expressjs/body-parser/issues)\nasking for the current contact information.\n\nTo ensure the timely response to your report, please ensure that the entirety\nof the report is contained within the email body and not solely behind a web\nlink or an attachment.\n\nAt least one owner will acknowledge your email within 48 hours, and will send a\nmore detailed response within 48 hours indicating the next steps in handling\nyour report. After the initial reply to your report, the owners will\nendeavor to keep you informed of the progress towards a fix and full\nannouncement, and may ask for additional information or guidance.\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\body-parser\\SECURITY.md",
    "RelativePath": "tools\\backend\\node_modules\\body-parser\\SECURITY.md"
  },
  {
    "Content": "/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar destroy = require('destroy')\nvar getBody = require('raw-body')\nvar iconv = require('iconv-lite')\nvar onFinished = require('on-finished')\nvar unpipe = require('unpipe')\nvar zlib = require('zlib')\n\n/**\n * Module exports.\n */\n\nmodule.exports = read\n\n/**\n * Read a request into a buffer and parse.\n *\n * @param {object} req\n * @param {object} res\n * @param {function} next\n * @param {function} parse\n * @param {function} debug\n * @param {object} options\n * @private\n */\n\nfunction read (req, res, next, parse, debug, options) {\n  var length\n  var opts = options\n  var stream\n\n  // flag as parsed\n  req._body = true\n\n  // read options\n  var encoding = opts.encoding !== null\n    ? opts.encoding\n    : null\n  var verify = opts.verify\n\n  try {\n    // get the content stream\n    stream = contentstream(req, debug, opts.inflate)\n    length = stream.length\n    stream.length = undefined\n  } catch (err) {\n    return next(err)\n  }\n\n  // set raw-body options\n  opts.length = length\n  opts.encoding = verify\n    ? null\n    : encoding\n\n  // assert charset is supported\n  if (opts.encoding === null && encoding !== null && !iconv.encodingExists(encoding)) {\n    return next(createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n      charset: encoding.toLowerCase(),\n      type: 'charset.unsupported'\n    }))\n  }\n\n  // read body\n  debug('read body')\n  getBody(stream, opts, function (error, body) {\n    if (error) {\n      var _error\n\n      if (error.type === 'encoding.unsupported') {\n        // echo back charset\n        _error = createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n          charset: encoding.toLowerCase(),\n          type: 'charset.unsupported'\n        })\n      } else {\n        // set status code on error\n        _error = createError(400, error)\n      }\n\n      // unpipe from stream and destroy\n      if (stream !== req) {\n        unpipe(req)\n        destroy(stream, true)\n      }\n\n      // read off entire request\n      dump(req, function onfinished () {\n        next(createError(400, _error))\n      })\n      return\n    }\n\n    // verify\n    if (verify) {\n      try {\n        debug('verify body')\n        verify(req, res, body, encoding)\n      } catch (err) {\n        next(createError(403, err, {\n          body: body,\n          type: err.type || 'entity.verify.failed'\n        }))\n        return\n      }\n    }\n\n    // parse\n    var str = body\n    try {\n      debug('parse body')\n      str = typeof body !== 'string' && encoding !== null\n        ? iconv.decode(body, encoding)\n        : body\n      req.body = parse(str)\n    } catch (err) {\n      next(createError(400, err, {\n        body: str,\n        type: err.type || 'entity.parse.failed'\n      }))\n      return\n    }\n\n    next()\n  })\n}\n\n/**\n * Get the content stream of the request.\n *\n * @param {object} req\n * @param {function} debug\n * @param {boolean} [inflate=true]\n * @return {object}\n * @api private\n */\n\nfunction contentstream (req, debug, inflate) {\n  var encoding = (req.headers['content-encoding'] || 'identity').toLowerCase()\n  var length = req.headers['content-length']\n  var stream\n\n  debug('content-encoding \"%s\"', encoding)\n\n  if (inflate === false && encoding !== 'identity') {\n    throw createError(415, 'content encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n\n  switch (encoding) {\n    case 'deflate':\n      stream = zlib.createInflate()\n      debug('inflate body')\n      req.pipe(stream)\n      break\n    case 'gzip':\n      stream = zlib.createGunzip()\n      debug('gunzip body')\n      req.pipe(stream)\n      break\n    case 'identity':\n      stream = req\n      stream.length = length\n      break\n    default:\n      throw createError(415, 'unsupported content encoding \"' + encoding + '\"', {\n        encoding: encoding,\n        type: 'encoding.unsupported'\n      })\n  }\n\n  return stream\n}\n\n/**\n * Dump the contents of a request.\n *\n * @param {object} req\n * @param {function} callback\n * @api private\n */\n\nfunction dump (req, callback) {\n  if (onFinished.isFinished(req)) {\n    callback(null)\n  } else {\n    onFinished(req, callback)\n    req.resume()\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\body-parser\\lib\\read.js",
    "RelativePath": "tools\\backend\\node_modules\\body-parser\\lib\\read.js"
  },
  {
    "Content": "/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:json')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = json\n\n/**\n * RegExp to match the first non-space in a string.\n *\n * Allowed whitespace is defined in RFC 7159:\n *\n *    ws = *(\n *            %x20 /              ; Space\n *            %x09 /              ; Horizontal tab\n *            %x0A /              ; Line feed or New line\n *            %x0D )              ; Carriage return\n */\n\nvar FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*([^\\x20\\x09\\x0a\\x0d])/ // eslint-disable-line no-control-regex\n\nvar JSON_SYNTAX_CHAR = '#'\nvar JSON_SYNTAX_REGEXP = /#+/g\n\n/**\n * Create a middleware to parse JSON bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction json (options) {\n  var opts = options || {}\n\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var inflate = opts.inflate !== false\n  var reviver = opts.reviver\n  var strict = opts.strict !== false\n  var type = opts.type || 'application/json'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    if (body.length === 0) {\n      // special-case empty json body, as it's a common client-side mistake\n      // TODO: maybe make this configurable or part of \"strict\" option\n      return {}\n    }\n\n    if (strict) {\n      var first = firstchar(body)\n\n      if (first !== '{' && first !== '[') {\n        debug('strict violation')\n        throw createStrictSyntaxError(body, first)\n      }\n    }\n\n    try {\n      debug('parse json')\n      return JSON.parse(body, reviver)\n    } catch (e) {\n      throw normalizeJsonSyntaxError(e, {\n        message: e.message,\n        stack: e.stack\n      })\n    }\n  }\n\n  return function jsonParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset per RFC 7159 sec 8.1\n    var charset = getCharset(req) || 'utf-8'\n    if (charset.slice(0, 4) !== 'utf-') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Create strict violation syntax error matching native error.\n *\n * @param {string} str\n * @param {string} char\n * @return {Error}\n * @private\n */\n\nfunction createStrictSyntaxError (str, char) {\n  var index = str.indexOf(char)\n  var partial = ''\n\n  if (index !== -1) {\n    partial = str.substring(0, index) + JSON_SYNTAX_CHAR\n\n    for (var i = index + 1; i < str.length; i++) {\n      partial += JSON_SYNTAX_CHAR\n    }\n  }\n\n  try {\n    JSON.parse(partial); /* istanbul ignore next */ throw new SyntaxError('strict violation')\n  } catch (e) {\n    return normalizeJsonSyntaxError(e, {\n      message: e.message.replace(JSON_SYNTAX_REGEXP, function (placeholder) {\n        return str.substring(index, index + placeholder.length)\n      }),\n      stack: e.stack\n    })\n  }\n}\n\n/**\n * Get the first non-whitespace character in a string.\n *\n * @param {string} str\n * @return {function}\n * @private\n */\n\nfunction firstchar (str) {\n  var match = FIRST_CHAR_REGEXP.exec(str)\n\n  return match\n    ? match[1]\n    : undefined\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Normalize a SyntaxError for JSON.parse.\n *\n * @param {SyntaxError} error\n * @param {object} obj\n * @return {SyntaxError}\n */\n\nfunction normalizeJsonSyntaxError (error, obj) {\n  var keys = Object.getOwnPropertyNames(error)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    if (key !== 'stack' && key !== 'message') {\n      delete error[key]\n    }\n  }\n\n  // replace stack before message for Node.js 0.10 and below\n  error.stack = obj.stack.replace(error.message, obj.message)\n  error.message = obj.message\n\n  return error\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\body-parser\\lib\\types\\json.js",
    "RelativePath": "tools\\backend\\node_modules\\body-parser\\lib\\types\\json.js"
  },
  {
    "Content": "/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar debug = require('debug')('body-parser:raw')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = raw\n\n/**\n * Create a middleware to parse raw bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction raw (options) {\n  var opts = options || {}\n\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/octet-stream'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function rawParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: null,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\body-parser\\lib\\types\\raw.js",
    "RelativePath": "tools\\backend\\node_modules\\body-parser\\lib\\types\\raw.js"
  },
  {
    "Content": "/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar debug = require('debug')('body-parser:text')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = text\n\n/**\n * Create a middleware to parse text bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction text (options) {\n  var opts = options || {}\n\n  var defaultCharset = opts.defaultCharset || 'utf-8'\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'text/plain'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function textParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // get charset\n    var charset = getCharset(req) || defaultCharset\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\body-parser\\lib\\types\\text.js",
    "RelativePath": "tools\\backend\\node_modules\\body-parser\\lib\\types\\text.js"
  },
  {
    "Content": "/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:urlencoded')\nvar deprecate = require('depd')('body-parser')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = urlencoded\n\n/**\n * Cache of parser modules.\n */\n\nvar parsers = Object.create(null)\n\n/**\n * Create a middleware to parse urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction urlencoded (options) {\n  var opts = options || {}\n\n  // notice because option default will flip in next major\n  if (opts.extended === undefined) {\n    deprecate('undefined extended: provide extended option')\n  }\n\n  var extended = opts.extended !== false\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/x-www-form-urlencoded'\n  var verify = opts.verify || false\n  var depth = typeof opts.depth !== 'number'\n    ? Number(opts.depth || 32)\n    : opts.depth\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate query parser\n  var queryparse = extended\n    ? extendedparser(opts)\n    : simpleparser(opts)\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    return body.length\n      ? queryparse(body)\n      : {}\n  }\n\n  return function urlencodedParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset\n    var charset = getCharset(req) || 'utf-8'\n    if (charset !== 'utf-8') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      debug: debug,\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify,\n      depth: depth\n    })\n  }\n}\n\n/**\n * Get the extended query parser.\n *\n * @param {object} options\n */\n\nfunction extendedparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n\n  var depth = typeof options.depth !== 'number'\n    ? Number(options.depth || 32)\n    : options.depth\n  var parse = parser('qs')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isNaN(depth) || depth < 0) {\n    throw new TypeError('option depth must be a zero or a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    var arrayLimit = Math.max(100, paramCount)\n\n    debug('parse extended urlencoding')\n    try {\n      return parse(body, {\n        allowPrototypes: true,\n        arrayLimit: arrayLimit,\n        depth: depth,\n        strictDepth: true,\n        parameterLimit: parameterLimit\n      })\n    } catch (err) {\n      if (err instanceof RangeError) {\n        throw createError(400, 'The input exceeded the depth', {\n          type: 'querystring.parse.rangeError'\n        })\n      } else {\n        throw err\n      }\n    }\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Count the number of parameters, stopping once limit reached\n *\n * @param {string} body\n * @param {number} limit\n * @api private\n */\n\nfunction parameterCount (body, limit) {\n  var count = 0\n  var index = 0\n\n  while ((index = body.indexOf('&', index)) !== -1) {\n    count++\n    index++\n\n    if (count === limit) {\n      return undefined\n    }\n  }\n\n  return count\n}\n\n/**\n * Get parser for module name dynamically.\n *\n * @param {string} name\n * @return {function}\n * @api private\n */\n\nfunction parser (name) {\n  var mod = parsers[name]\n\n  if (mod !== undefined) {\n    return mod.parse\n  }\n\n  // this uses a switch for static require analysis\n  switch (name) {\n    case 'qs':\n      mod = require('qs')\n      break\n    case 'querystring':\n      mod = require('querystring')\n      break\n  }\n\n  // store to prevent invoking require()\n  parsers[name] = mod\n\n  return mod.parse\n}\n\n/**\n * Get the simple query parser.\n *\n * @param {object} options\n */\n\nfunction simpleparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('querystring')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    debug('parse urlencoding')\n    return parse(body, undefined, undefined, { maxKeys: parameterLimit })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\body-parser\\lib\\types\\urlencoded.js",
    "RelativePath": "tools\\backend\\node_modules\\body-parser\\lib\\types\\urlencoded.js"
  },
  {
    "Content": "3.1.2 / 2022-01-27\n==================\n\n  * Fix return value for un-parsable strings\n\n3.1.1 / 2021-11-15\n==================\n\n  * Fix \"thousandsSeparator\" incorrecting formatting fractional part\n\n3.1.0 / 2019-01-22\n==================\n\n  * Add petabyte (`pb`) support\n\n3.0.0 / 2017-08-31\n==================\n\n  * Change \"kB\" to \"KB\" in format output\n  * Remove support for Node.js 0.6\n  * Remove support for ComponentJS\n\n2.5.0 / 2017-03-24\n==================\n\n  * Add option \"unit\"\n\n2.4.0 / 2016-06-01\n==================\n\n  * Add option \"unitSeparator\"\n\n2.3.0 / 2016-02-15\n==================\n\n  * Drop partial bytes on all parsed units\n  * Fix non-finite numbers to `.format` to return `null`\n  * Fix parsing byte string that looks like hex\n  * perf: hoist regular expressions\n\n2.2.0 / 2015-11-13\n==================\n\n  * add option \"decimalPlaces\"\n  * add option \"fixedDecimals\"\n\n2.1.0 / 2015-05-21\n==================\n\n  * add `.format` export\n  * add `.parse` export\n\n2.0.2 / 2015-05-20\n==================\n\n  * remove map recreation\n  * remove unnecessary object construction\n\n2.0.1 / 2015-05-07\n==================\n\n  * fix browserify require\n  * remove node.extend dependency\n\n2.0.0 / 2015-04-12\n==================\n\n  * add option \"case\"\n  * add option \"thousandsSeparator\"\n  * return \"null\" on invalid parse input\n  * support proper round-trip: bytes(bytes(num)) === num\n  * units no longer case sensitive when parsing\n\n1.0.0 / 2014-05-05\n==================\n\n * add negative support. fixes #6\n\n0.3.0 / 2014-03-19\n==================\n\n * added terabyte support\n\n0.2.1 / 2013-04-01\n==================\n\n  * add .component\n\n0.2.0 / 2012-10-28\n==================\n\n  * bytes(200).should.eql('200b')\n\n0.1.0 / 2012-07-04\n==================\n\n  * add bytes to string conversion [yields]\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\bytes\\History.md",
    "RelativePath": "tools\\backend\\node_modules\\bytes\\History.md"
  },
  {
    "Content": "/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5),\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.split('.').map(function (s, i) {\n      return i === 0\n        ? s.replace(formatThousandsRegExp, thousandsSeparator)\n        : s\n    }).join('.');\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  if (isNaN(floatValue)) {\n    return null;\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\bytes\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\bytes\\index.js"
  },
  {
    "Content": "# Bytes utility\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Build Status][ci-image]][ci-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nUtility to parse a string bytes (ex: `1TB`) to bytes (`1099511627776`) and vice-versa.\n\n## Installation\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```bash\n$ npm install bytes\n```\n\n## Usage\n\n```js\nvar bytes = require('bytes');\n```\n\n#### bytes(number｜string value, [options]): number｜string｜null\n\nDefault export function. Delegates to either `bytes.format` or `bytes.parse` based on the type of `value`.\n\n**Arguments**\n\n| Name    | Type     | Description        |\n|---------|----------|--------------------|\n| value   | `number`｜`string` | Number value to format or string value to parse |\n| options | `Object` | Conversion options for `format` |\n\n**Returns**\n\n| Name    | Type             | Description                                     |\n|---------|------------------|-------------------------------------------------|\n| results | `string`｜`number`｜`null` | Return null upon error. Numeric value in bytes, or string value otherwise. |\n\n**Example**\n\n```js\nbytes(1024);\n// output: '1KB'\n\nbytes('1KB');\n// output: 1024\n```\n\n#### bytes.format(number value, [options]): string｜null\n\nFormat the given value in bytes into a string. If the value is negative, it is kept as such. If it is a float, it is\n rounded.\n\n**Arguments**\n\n| Name    | Type     | Description        |\n|---------|----------|--------------------|\n| value   | `number` | Value in bytes     |\n| options | `Object` | Conversion options |\n\n**Options**\n\n| Property          | Type   | Description                                                                             |\n|-------------------|--------|-----------------------------------------------------------------------------------------|\n| decimalPlaces | `number`｜`null` | Maximum number of decimal places to include in output. Default value to `2`. |\n| fixedDecimals | `boolean`｜`null` | Whether to always display the maximum number of decimal places. Default value to `false` |\n| thousandsSeparator | `string`｜`null` | Example of values: `' '`, `','` and `'.'`... Default value to `''`. |\n| unit | `string`｜`null` | The unit in which the result will be returned (B/KB/MB/GB/TB). Default value to `''` (which means auto detect). |\n| unitSeparator | `string`｜`null` | Separator to use between number and unit. Default value to `''`. |\n\n**Returns**\n\n| Name    | Type             | Description                                     |\n|---------|------------------|-------------------------------------------------|\n| results | `string`｜`null` | Return null upon error. String value otherwise. |\n\n**Example**\n\n```js\nbytes.format(1024);\n// output: '1KB'\n\nbytes.format(1000);\n// output: '1000B'\n\nbytes.format(1000, {thousandsSeparator: ' '});\n// output: '1 000B'\n\nbytes.format(1024 * 1.7, {decimalPlaces: 0});\n// output: '2KB'\n\nbytes.format(1024, {unitSeparator: ' '});\n// output: '1 KB'\n```\n\n#### bytes.parse(string｜number value): number｜null\n\nParse the string value into an integer in bytes. If no unit is given, or `value`\nis a number, it is assumed the value is in bytes.\n\nSupported units and abbreviations are as follows and are case-insensitive:\n\n  * `b` for bytes\n  * `kb` for kilobytes\n  * `mb` for megabytes\n  * `gb` for gigabytes\n  * `tb` for terabytes\n  * `pb` for petabytes\n\nThe units are in powers of two, not ten. This means 1kb = 1024b according to this parser.\n\n**Arguments**\n\n| Name          | Type   | Description        |\n|---------------|--------|--------------------|\n| value   | `string`｜`number` | String to parse, or number in bytes.   |\n\n**Returns**\n\n| Name    | Type        | Description             |\n|---------|-------------|-------------------------|\n| results | `number`｜`null` | Return null upon error. Value in bytes otherwise. |\n\n**Example**\n\n```js\nbytes.parse('1KB');\n// output: 1024\n\nbytes.parse('1024');\n// output: 1024\n\nbytes.parse(1024);\n// output: 1024\n```\n\n## License\n\n[MIT](LICENSE)\n\n[ci-image]: https://badgen.net/github/checks/visionmedia/bytes.js/master?label=ci\n[ci-url]: https://github.com/visionmedia/bytes.js/actions?query=workflow%3Aci\n[coveralls-image]: https://badgen.net/coveralls/c/github/visionmedia/bytes.js/master\n[coveralls-url]: https://coveralls.io/r/visionmedia/bytes.js?branch=master\n[downloads-image]: https://badgen.net/npm/dm/bytes\n[downloads-url]: https://npmjs.org/package/bytes\n[npm-image]: https://badgen.net/npm/v/bytes\n[npm-url]: https://npmjs.org/package/bytes\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\bytes\\Readme.md",
    "RelativePath": "tools\\backend\\node_modules\\bytes\\Readme.md"
  },
  {
    "Content": "'use strict';\n\nvar bind = require('function-bind');\n\nvar $apply = require('./functionApply');\nvar $call = require('./functionCall');\nvar $reflectApply = require('./reflectApply');\n\n/** @type {import('./actualApply')} */\nmodule.exports = $reflectApply || bind.call($call, $apply);\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\call-bind-apply-helpers\\actualApply.js",
    "RelativePath": "tools\\backend\\node_modules\\call-bind-apply-helpers\\actualApply.js"
  },
  {
    "Content": "'use strict';\n\nvar bind = require('function-bind');\nvar $apply = require('./functionApply');\nvar actualApply = require('./actualApply');\n\n/** @type {import('./applyBind')} */\nmodule.exports = function applyBind() {\n\treturn actualApply(bind, $apply, arguments);\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\call-bind-apply-helpers\\applyBind.js",
    "RelativePath": "tools\\backend\\node_modules\\call-bind-apply-helpers\\applyBind.js"
  },
  {
    "Content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v1.0.2](https://github.com/ljharb/call-bind-apply-helpers/compare/v1.0.1...v1.0.2) - 2025-02-12\n\n### Commits\n\n- [types] improve inferred types [`e6f9586`](https://github.com/ljharb/call-bind-apply-helpers/commit/e6f95860a3c72879cb861a858cdfb8138fbedec1)\n- [Dev Deps] update `@arethetypeswrong/cli`, `@ljharb/tsconfig`, `@types/tape`, `es-value-fixtures`, `for-each`, `has-strict-mode`, `object-inspect` [`e43d540`](https://github.com/ljharb/call-bind-apply-helpers/commit/e43d5409f97543bfbb11f345d47d8ce4e066d8c1)\n\n## [v1.0.1](https://github.com/ljharb/call-bind-apply-helpers/compare/v1.0.0...v1.0.1) - 2024-12-08\n\n### Commits\n\n- [types] `reflectApply`: fix types [`4efc396`](https://github.com/ljharb/call-bind-apply-helpers/commit/4efc3965351a4f02cc55e836fa391d3d11ef2ef8)\n- [Fix] `reflectApply`: oops, Reflect is not a function [`83cc739`](https://github.com/ljharb/call-bind-apply-helpers/commit/83cc7395de6b79b7730bdf092f1436f0b1263c75)\n- [Dev Deps] update `@arethetypeswrong/cli` [`80bd5d3`](https://github.com/ljharb/call-bind-apply-helpers/commit/80bd5d3ae58b4f6b6995ce439dd5a1bcb178a940)\n\n## v1.0.0 - 2024-12-05\n\n### Commits\n\n- Initial implementation, tests, readme [`7879629`](https://github.com/ljharb/call-bind-apply-helpers/commit/78796290f9b7430c9934d6f33d94ae9bc89fce04)\n- Initial commit [`3f1dc16`](https://github.com/ljharb/call-bind-apply-helpers/commit/3f1dc164afc43285631b114a5f9dd9137b2b952f)\n- npm init [`081df04`](https://github.com/ljharb/call-bind-apply-helpers/commit/081df048c312fcee400922026f6e97281200a603)\n- Only apps should have lockfiles [`5b9ca0f`](https://github.com/ljharb/call-bind-apply-helpers/commit/5b9ca0fe8101ebfaf309c549caac4e0a017ed930)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\call-bind-apply-helpers\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\call-bind-apply-helpers\\CHANGELOG.md"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./functionApply')} */\nmodule.exports = Function.prototype.apply;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\call-bind-apply-helpers\\functionApply.js",
    "RelativePath": "tools\\backend\\node_modules\\call-bind-apply-helpers\\functionApply.js"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./functionCall')} */\nmodule.exports = Function.prototype.call;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\call-bind-apply-helpers\\functionCall.js",
    "RelativePath": "tools\\backend\\node_modules\\call-bind-apply-helpers\\functionCall.js"
  },
  {
    "Content": "'use strict';\n\nvar bind = require('function-bind');\nvar $TypeError = require('es-errors/type');\n\nvar $call = require('./functionCall');\nvar $actualApply = require('./actualApply');\n\n/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */\nmodule.exports = function callBindBasic(args) {\n\tif (args.length < 1 || typeof args[0] !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\treturn $actualApply(bind, $call, args);\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\call-bind-apply-helpers\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\call-bind-apply-helpers\\index.js"
  },
  {
    "Content": "# call-bind-apply-helpers <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![dependency status][deps-svg]][deps-url]\n[![dev dependency status][dev-deps-svg]][dev-deps-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\nHelper functions around Function call/apply/bind, for use in `call-bind`.\n\nThe only packages that should likely ever use this package directly are `call-bind` and `get-intrinsic`.\nPlease use `call-bind` unless you have a very good reason not to.\n\n## Getting started\n\n```sh\nnpm install --save call-bind-apply-helpers\n```\n\n## Usage/Examples\n\n```js\nconst assert = require('assert');\nconst callBindBasic = require('call-bind-apply-helpers');\n\nfunction f(a, b) {\n\tassert.equal(this, 1);\n\tassert.equal(a, 2);\n\tassert.equal(b, 3);\n\tassert.equal(arguments.length, 2);\n}\n\nconst fBound = callBindBasic([f, 1]);\n\ndelete Function.prototype.call;\ndelete Function.prototype.bind;\n\nfBound(2, 3);\n```\n\n## Tests\n\nClone the repo, `npm install`, and run `npm test`\n\n[package-url]: https://npmjs.org/package/call-bind-apply-helpers\n[npm-version-svg]: https://versionbadg.es/ljharb/call-bind-apply-helpers.svg\n[deps-svg]: https://david-dm.org/ljharb/call-bind-apply-helpers.svg\n[deps-url]: https://david-dm.org/ljharb/call-bind-apply-helpers\n[dev-deps-svg]: https://david-dm.org/ljharb/call-bind-apply-helpers/dev-status.svg\n[dev-deps-url]: https://david-dm.org/ljharb/call-bind-apply-helpers#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/call-bind-apply-helpers.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/call-bind-apply-helpers.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/call-bind-apply-helpers.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=call-bind-apply-helpers\n[codecov-image]: https://codecov.io/gh/ljharb/call-bind-apply-helpers/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/ljharb/call-bind-apply-helpers/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/call-bind-apply-helpers\n[actions-url]: https://github.com/ljharb/call-bind-apply-helpers/actions\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\call-bind-apply-helpers\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\call-bind-apply-helpers\\README.md"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./reflectApply')} */\nmodule.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\call-bind-apply-helpers\\reflectApply.js",
    "RelativePath": "tools\\backend\\node_modules\\call-bind-apply-helpers\\reflectApply.js"
  },
  {
    "Content": "'use strict';\n\nvar callBind = require('../');\nvar hasStrictMode = require('has-strict-mode')();\nvar forEach = require('for-each');\nvar inspect = require('object-inspect');\nvar v = require('es-value-fixtures');\n\nvar test = require('tape');\n\ntest('callBindBasic', function (t) {\n\tforEach(v.nonFunctions, function (nonFunction) {\n\t\tt['throws'](\n\t\t\t// @ts-expect-error\n\t\t\tfunction () { callBind([nonFunction]); },\n\t\t\tTypeError,\n\t\t\tinspect(nonFunction) + ' is not a function'\n\t\t);\n\t});\n\n\tvar sentinel = { sentinel: true };\n\t/** @type {<T, A extends number, B extends number>(this: T, a: A, b: B) => [T | undefined, A, B]} */\n\tvar func = function (a, b) {\n\t\t// eslint-disable-next-line no-invalid-this\n\t\treturn [!hasStrictMode && this === global ? undefined : this, a, b];\n\t};\n\tt.equal(func.length, 2, 'original function length is 2');\n\n\t/** type {(thisArg: unknown, a: number, b: number) => [unknown, number, number]} */\n\tvar bound = callBind([func]);\n\t/** type {((a: number, b: number) => [typeof sentinel, typeof a, typeof b])} */\n\tvar boundR = callBind([func, sentinel]);\n\t/** type {((b: number) => [typeof sentinel, number, typeof b])} */\n\tvar boundArg = callBind([func, sentinel, /** @type {const} */ (1)]);\n\n\t// @ts-expect-error\n\tt.deepEqual(bound(), [undefined, undefined, undefined], 'bound func with no args');\n\n\t// @ts-expect-error\n\tt.deepEqual(func(), [undefined, undefined, undefined], 'unbound func with too few args');\n\t// @ts-expect-error\n\tt.deepEqual(bound(1, 2), [hasStrictMode ? 1 : Object(1), 2, undefined], 'bound func too few args');\n\t// @ts-expect-error\n\tt.deepEqual(boundR(), [sentinel, undefined, undefined], 'bound func with receiver, with too few args');\n\t// @ts-expect-error\n\tt.deepEqual(boundArg(), [sentinel, 1, undefined], 'bound func with receiver and arg, with too few args');\n\n\tt.deepEqual(func(1, 2), [undefined, 1, 2], 'unbound func with right args');\n\tt.deepEqual(bound(1, 2, 3), [hasStrictMode ? 1 : Object(1), 2, 3], 'bound func with right args');\n\tt.deepEqual(boundR(1, 2), [sentinel, 1, 2], 'bound func with receiver, with right args');\n\tt.deepEqual(boundArg(2), [sentinel, 1, 2], 'bound func with receiver and arg, with right arg');\n\n\t// @ts-expect-error\n\tt.deepEqual(func(1, 2, 3), [undefined, 1, 2], 'unbound func with too many args');\n\t// @ts-expect-error\n\tt.deepEqual(bound(1, 2, 3, 4), [hasStrictMode ? 1 : Object(1), 2, 3], 'bound func with too many args');\n\t// @ts-expect-error\n\tt.deepEqual(boundR(1, 2, 3), [sentinel, 1, 2], 'bound func with receiver, with too many args');\n\t// @ts-expect-error\n\tt.deepEqual(boundArg(2, 3), [sentinel, 1, 2], 'bound func with receiver and arg, with too many args');\n\n\tt.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\call-bind-apply-helpers\\test\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\call-bind-apply-helpers\\test\\index.js"
  },
  {
    "Content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v1.0.4](https://github.com/ljharb/call-bound/compare/v1.0.3...v1.0.4) - 2025-03-03\n\n### Commits\n\n- [types] improve types [`e648922`](https://github.com/ljharb/call-bound/commit/e6489222a9e54f350fbf952ceabe51fd8b6027ff)\n- [Dev Deps] update `@arethetypeswrong/cli`, `@ljharb/tsconfig`, `@types/tape`, `es-value-fixtures`, `for-each`, `has-strict-mode`, `object-inspect` [`a42a5eb`](https://github.com/ljharb/call-bound/commit/a42a5ebe6c1b54fcdc7997c7dc64fdca9e936719)\n- [Deps] update `call-bind-apply-helpers`, `get-intrinsic` [`f529eac`](https://github.com/ljharb/call-bound/commit/f529eac132404c17156bbc23ab2297a25d0f20b8)\n\n## [v1.0.3](https://github.com/ljharb/call-bound/compare/v1.0.2...v1.0.3) - 2024-12-15\n\n### Commits\n\n- [Refactor] use `call-bind-apply-helpers` instead of `call-bind` [`5e0b134`](https://github.com/ljharb/call-bound/commit/5e0b13496df14fb7d05dae9412f088da8d3f75be)\n- [Deps] update `get-intrinsic` [`41fc967`](https://github.com/ljharb/call-bound/commit/41fc96732a22c7b7e8f381f93ccc54bb6293be2e)\n- [readme] fix example [`79a0137`](https://github.com/ljharb/call-bound/commit/79a0137723f7c6d09c9c05452bbf8d5efb5d6e49)\n- [meta] add `sideEffects` flag [`08b07be`](https://github.com/ljharb/call-bound/commit/08b07be7f1c03f67dc6f3cdaf0906259771859f7)\n\n## [v1.0.2](https://github.com/ljharb/call-bound/compare/v1.0.1...v1.0.2) - 2024-12-10\n\n### Commits\n\n- [Dev Deps] update `@arethetypeswrong/cli`, `@ljharb/tsconfig`, `gopd` [`e6a5ffe`](https://github.com/ljharb/call-bound/commit/e6a5ffe849368fe4f74dfd6cdeca1b9baa39e8d5)\n- [Deps] update `call-bind`, `get-intrinsic` [`2aeb5b5`](https://github.com/ljharb/call-bound/commit/2aeb5b521dc2b2683d1345c753ea1161de2d1c14)\n- [types] improve return type [`1a0c9fe`](https://github.com/ljharb/call-bound/commit/1a0c9fe3114471e7ca1f57d104e2efe713bb4871)\n\n## v1.0.1 - 2024-12-05\n\n### Commits\n\n- Initial implementation, tests, readme, types [`6d94121`](https://github.com/ljharb/call-bound/commit/6d94121a9243602e506334069f7a03189fe3363d)\n- Initial commit [`0eae867`](https://github.com/ljharb/call-bound/commit/0eae867334ea025c33e6e91cdecfc9df96680cf9)\n- npm init [`71b2479`](https://github.com/ljharb/call-bound/commit/71b2479c6723e0b7d91a6b663613067e98b7b275)\n- Only apps should have lockfiles [`c3754a9`](https://github.com/ljharb/call-bound/commit/c3754a949b7f9132b47e2d18c1729889736741eb)\n- [actions] skip `npm ls` in node &lt; 10 [`74275a5`](https://github.com/ljharb/call-bound/commit/74275a5186b8caf6309b6b97472bdcb0df4683a8)\n- [Dev Deps] add missing peer dep [`1354de8`](https://github.com/ljharb/call-bound/commit/1354de8679413e4ae9c523d85f76fa7a5e032d97)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\call-bound\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\call-bound\\CHANGELOG.md"
  },
  {
    "Content": "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBindBasic = require('call-bind-apply-helpers');\n\n/** @type {(thisArg: string, searchString: string, position?: number) => number} */\nvar $indexOf = callBindBasic([GetIntrinsic('%String.prototype.indexOf%')]);\n\n/** @type {import('.')} */\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\t/* eslint no-extra-parens: 0 */\n\n\tvar intrinsic = /** @type {(this: unknown, ...args: unknown[]) => unknown} */ (GetIntrinsic(name, !!allowMissing));\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBindBasic(/** @type {const} */ ([intrinsic]));\n\t}\n\treturn intrinsic;\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\call-bound\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\call-bound\\index.js"
  },
  {
    "Content": "# call-bound <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![dependency status][deps-svg]][deps-url]\n[![dev dependency status][dev-deps-svg]][dev-deps-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\nRobust call-bound JavaScript intrinsics, using `call-bind` and `get-intrinsic`.\n\n## Getting started\n\n```sh\nnpm install --save call-bound\n```\n\n## Usage/Examples\n\n```js\nconst assert = require('assert');\nconst callBound = require('call-bound');\n\nconst slice = callBound('Array.prototype.slice');\n\ndelete Function.prototype.call;\ndelete Function.prototype.bind;\ndelete Array.prototype.slice;\n\nassert.deepEqual(slice([1, 2, 3, 4], 1, -1), [2, 3]);\n```\n\n## Tests\n\nClone the repo, `npm install`, and run `npm test`\n\n[package-url]: https://npmjs.org/package/call-bound\n[npm-version-svg]: https://versionbadg.es/ljharb/call-bound.svg\n[deps-svg]: https://david-dm.org/ljharb/call-bound.svg\n[deps-url]: https://david-dm.org/ljharb/call-bound\n[dev-deps-svg]: https://david-dm.org/ljharb/call-bound/dev-status.svg\n[dev-deps-url]: https://david-dm.org/ljharb/call-bound#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/call-bound.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/call-bound.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/call-bound.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=call-bound\n[codecov-image]: https://codecov.io/gh/ljharb/call-bound/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/ljharb/call-bound/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/call-bound\n[actions-url]: https://github.com/ljharb/call-bound/actions\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\call-bound\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\call-bound\\README.md"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\n\nvar callBound = require('../');\n\n/** @template {true} T @template U @typedef {T extends U ? T : never} AssertType */\n\ntest('callBound', function (t) {\n\t// static primitive\n\tt.equal(callBound('Array.length'), Array.length, 'Array.length yields itself');\n\tt.equal(callBound('%Array.length%'), Array.length, '%Array.length% yields itself');\n\n\t// static non-function object\n\tt.equal(callBound('Array.prototype'), Array.prototype, 'Array.prototype yields itself');\n\tt.equal(callBound('%Array.prototype%'), Array.prototype, '%Array.prototype% yields itself');\n\tt.equal(callBound('Array.constructor'), Array.constructor, 'Array.constructor yields itself');\n\tt.equal(callBound('%Array.constructor%'), Array.constructor, '%Array.constructor% yields itself');\n\n\t// static function\n\tt.equal(callBound('Date.parse'), Date.parse, 'Date.parse yields itself');\n\tt.equal(callBound('%Date.parse%'), Date.parse, '%Date.parse% yields itself');\n\n\t// prototype primitive\n\tt.equal(callBound('Error.prototype.message'), Error.prototype.message, 'Error.prototype.message yields itself');\n\tt.equal(callBound('%Error.prototype.message%'), Error.prototype.message, '%Error.prototype.message% yields itself');\n\n\tvar x = callBound('Object.prototype.toString');\n\tvar y = callBound('%Object.prototype.toString%');\n\n\t// prototype function\n\tt.notEqual(x, Object.prototype.toString, 'Object.prototype.toString does not yield itself');\n\tt.notEqual(y, Object.prototype.toString, '%Object.prototype.toString% does not yield itself');\n\tt.equal(x(true), Object.prototype.toString.call(true), 'call-bound Object.prototype.toString calls into the original');\n\tt.equal(y(true), Object.prototype.toString.call(true), 'call-bound %Object.prototype.toString% calls into the original');\n\n\tt['throws'](\n\t\t// @ts-expect-error\n\t\tfunction () { callBound('does not exist'); },\n\t\tSyntaxError,\n\t\t'nonexistent intrinsic throws'\n\t);\n\tt['throws'](\n\t\t// @ts-expect-error\n\t\tfunction () { callBound('does not exist', true); },\n\t\tSyntaxError,\n\t\t'allowMissing arg still throws for unknown intrinsic'\n\t);\n\n\tt.test('real but absent intrinsic', { skip: typeof WeakRef !== 'undefined' }, function (st) {\n\t\tst['throws'](\n\t\t\tfunction () { callBound('WeakRef'); },\n\t\t\tTypeError,\n\t\t\t'real but absent intrinsic throws'\n\t\t);\n\t\tst.equal(callBound('WeakRef', true), undefined, 'allowMissing arg avoids exception');\n\t\tst.end();\n\t});\n\n\tt.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\call-bound\\test\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\call-bound\\test\\index.js"
  },
  {
    "Content": "0.5.4 / 2021-12-10\n==================\n\n  * deps: safe-buffer@5.2.1\n\n0.5.3 / 2018-12-17\n==================\n\n  * Use `safe-buffer` for improved Buffer API\n\n0.5.2 / 2016-12-08\n==================\n\n  * Fix `parse` to accept any linear whitespace character\n\n0.5.1 / 2016-01-17\n==================\n\n  * perf: enable strict mode\n\n0.5.0 / 2014-10-11\n==================\n\n  * Add `parse` function\n\n0.4.0 / 2014-09-21\n==================\n\n  * Expand non-Unicode `filename` to the full ISO-8859-1 charset\n\n0.3.0 / 2014-09-20\n==================\n\n  * Add `fallback` option\n  * Add `type` option\n\n0.2.0 / 2014-09-19\n==================\n\n  * Reduce ambiguity of file names with hex escape in buggy browsers\n\n0.1.2 / 2014-09-19\n==================\n\n  * Fix periodic invalid Unicode filename header\n\n0.1.1 / 2014-09-19\n==================\n\n  * Fix invalid characters appearing in `filename*` parameter\n\n0.1.0 / 2014-09-18\n==================\n\n  * Make the `filename` argument optional\n\n0.0.0 / 2014-09-18\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\content-disposition\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\content-disposition\\HISTORY.md"
  },
  {
    "Content": "/*!\n * content-disposition\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = contentDisposition\nmodule.exports.parse = parse\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar basename = require('path').basename\nvar Buffer = require('safe-buffer').Buffer\n\n/**\n * RegExp to match non attr-char, *after* encodeURIComponent (i.e. not including \"%\")\n * @private\n */\n\nvar ENCODE_URL_ATTR_CHAR_REGEXP = /[\\x00-\\x20\"'()*,/:;<=>?@[\\\\\\]{}\\x7f]/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match percent encoding escape.\n * @private\n */\n\nvar HEX_ESCAPE_REGEXP = /%[0-9A-Fa-f]{2}/\nvar HEX_ESCAPE_REPLACE_REGEXP = /%([0-9A-Fa-f]{2})/g\n\n/**\n * RegExp to match non-latin1 characters.\n * @private\n */\n\nvar NON_LATIN1_REGEXP = /[^\\x20-\\x7e\\xa0-\\xff]/g\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n * @private\n */\n\nvar QESC_REGEXP = /\\\\([\\u0000-\\u007f])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n * @private\n */\n\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp for various RFC 2616 grammar\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * HT            = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n * @private\n */\n\nvar PARAM_REGEXP = /;[\\x09\\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*=[\\x09\\x20]*(\"(?:[\\x20!\\x23-\\x5b\\x5d-\\x7e\\x80-\\xff]|\\\\[\\x20-\\x7e])*\"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*/g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\x20-\\x7e\\x80-\\xff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/\n\n/**\n * RegExp for various RFC 5987 grammar\n *\n * ext-value     = charset  \"'\" [ language ] \"'\" value-chars\n * charset       = \"UTF-8\" / \"ISO-8859-1\" / mime-charset\n * mime-charset  = 1*mime-charsetc\n * mime-charsetc = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"%\" / \"&\"\n *               / \"+\" / \"-\" / \"^\" / \"_\" / \"`\"\n *               / \"{\" / \"}\" / \"~\"\n * language      = ( 2*3ALPHA [ extlang ] )\n *               / 4ALPHA\n *               / 5*8ALPHA\n * extlang       = *3( \"-\" 3ALPHA )\n * value-chars   = *( pct-encoded / attr-char )\n * pct-encoded   = \"%\" HEXDIG HEXDIG\n * attr-char     = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"&\" / \"+\" / \"-\" / \".\"\n *               / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n * @private\n */\n\nvar EXT_VALUE_REGEXP = /^([A-Za-z0-9!#$%&+\\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/\n\n/**\n * RegExp for various RFC 6266 grammar\n *\n * disposition-type = \"inline\" | \"attachment\" | disp-ext-type\n * disp-ext-type    = token\n * disposition-parm = filename-parm | disp-ext-parm\n * filename-parm    = \"filename\" \"=\" value\n *                  | \"filename*\" \"=\" ext-value\n * disp-ext-parm    = token \"=\" value\n *                  | ext-token \"=\" ext-value\n * ext-token        = <the characters in token, followed by \"*\">\n * @private\n */\n\nvar DISPOSITION_TYPE_REGEXP = /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*(?:$|;)/ // eslint-disable-line no-control-regex\n\n/**\n * Create an attachment Content-Disposition header.\n *\n * @param {string} [filename]\n * @param {object} [options]\n * @param {string} [options.type=attachment]\n * @param {string|boolean} [options.fallback=true]\n * @return {string}\n * @public\n */\n\nfunction contentDisposition (filename, options) {\n  var opts = options || {}\n\n  // get type\n  var type = opts.type || 'attachment'\n\n  // get parameters\n  var params = createparams(filename, opts.fallback)\n\n  // format into string\n  return format(new ContentDisposition(type, params))\n}\n\n/**\n * Create parameters object from filename and fallback.\n *\n * @param {string} [filename]\n * @param {string|boolean} [fallback=true]\n * @return {object}\n * @private\n */\n\nfunction createparams (filename, fallback) {\n  if (filename === undefined) {\n    return\n  }\n\n  var params = {}\n\n  if (typeof filename !== 'string') {\n    throw new TypeError('filename must be a string')\n  }\n\n  // fallback defaults to true\n  if (fallback === undefined) {\n    fallback = true\n  }\n\n  if (typeof fallback !== 'string' && typeof fallback !== 'boolean') {\n    throw new TypeError('fallback must be a string or boolean')\n  }\n\n  if (typeof fallback === 'string' && NON_LATIN1_REGEXP.test(fallback)) {\n    throw new TypeError('fallback must be ISO-8859-1 string')\n  }\n\n  // restrict to file base name\n  var name = basename(filename)\n\n  // determine if name is suitable for quoted string\n  var isQuotedString = TEXT_REGEXP.test(name)\n\n  // generate fallback name\n  var fallbackName = typeof fallback !== 'string'\n    ? fallback && getlatin1(name)\n    : basename(fallback)\n  var hasFallback = typeof fallbackName === 'string' && fallbackName !== name\n\n  // set extended filename parameter\n  if (hasFallback || !isQuotedString || HEX_ESCAPE_REGEXP.test(name)) {\n    params['filename*'] = name\n  }\n\n  // set filename parameter\n  if (isQuotedString || hasFallback) {\n    params.filename = hasFallback\n      ? fallbackName\n      : name\n  }\n\n  return params\n}\n\n/**\n * Format object to Content-Disposition header.\n *\n * @param {object} obj\n * @param {string} obj.type\n * @param {object} [obj.parameters]\n * @return {string}\n * @private\n */\n\nfunction format (obj) {\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || typeof type !== 'string' || !TOKEN_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  // start with normalized type\n  var string = String(type).toLowerCase()\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      var val = param.substr(-1) === '*'\n        ? ustring(parameters[param])\n        : qstring(parameters[param])\n\n      string += '; ' + param + '=' + val\n    }\n  }\n\n  return string\n}\n\n/**\n * Decode a RFC 5987 field value (gracefully).\n *\n * @param {string} str\n * @return {string}\n * @private\n */\n\nfunction decodefield (str) {\n  var match = EXT_VALUE_REGEXP.exec(str)\n\n  if (!match) {\n    throw new TypeError('invalid extended field value')\n  }\n\n  var charset = match[1].toLowerCase()\n  var encoded = match[2]\n  var value\n\n  // to binary string\n  var binary = encoded.replace(HEX_ESCAPE_REPLACE_REGEXP, pdecode)\n\n  switch (charset) {\n    case 'iso-8859-1':\n      value = getlatin1(binary)\n      break\n    case 'utf-8':\n      value = Buffer.from(binary, 'binary').toString('utf8')\n      break\n    default:\n      throw new TypeError('unsupported charset in extended field')\n  }\n\n  return value\n}\n\n/**\n * Get ISO-8859-1 version of string.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction getlatin1 (val) {\n  // simple Unicode -> ISO-8859-1 transformation\n  return String(val).replace(NON_LATIN1_REGEXP, '?')\n}\n\n/**\n * Parse Content-Disposition header string.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string || typeof string !== 'string') {\n    throw new TypeError('argument string is required')\n  }\n\n  var match = DISPOSITION_TYPE_REGEXP.exec(string)\n\n  if (!match) {\n    throw new TypeError('invalid type format')\n  }\n\n  // normalize type\n  var index = match[0].length\n  var type = match[1].toLowerCase()\n\n  var key\n  var names = []\n  var params = {}\n  var value\n\n  // calculate index to start at\n  index = PARAM_REGEXP.lastIndex = match[0].substr(-1) === ';'\n    ? index - 1\n    : index\n\n  // match parameters\n  while ((match = PARAM_REGEXP.exec(string))) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (names.indexOf(key) !== -1) {\n      throw new TypeError('invalid duplicate parameter')\n    }\n\n    names.push(key)\n\n    if (key.indexOf('*') + 1 === key.length) {\n      // decode extended value\n      key = key.slice(0, -1)\n      value = decodefield(value)\n\n      // overwrite existing value\n      params[key] = value\n      continue\n    }\n\n    if (typeof params[key] === 'string') {\n      continue\n    }\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(QESC_REGEXP, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  return new ContentDisposition(type, params)\n}\n\n/**\n * Percent decode a single character.\n *\n * @param {string} str\n * @param {string} hex\n * @return {string}\n * @private\n */\n\nfunction pdecode (str, hex) {\n  return String.fromCharCode(parseInt(hex, 16))\n}\n\n/**\n * Percent encode a single character.\n *\n * @param {string} char\n * @return {string}\n * @private\n */\n\nfunction pencode (char) {\n  return '%' + String(char)\n    .charCodeAt(0)\n    .toString(16)\n    .toUpperCase()\n}\n\n/**\n * Quote a string for HTTP.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Encode a Unicode string for HTTP (RFC 5987).\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction ustring (val) {\n  var str = String(val)\n\n  // percent encode as UTF-8\n  var encoded = encodeURIComponent(str)\n    .replace(ENCODE_URL_ATTR_CHAR_REGEXP, pencode)\n\n  return 'UTF-8\\'\\'' + encoded\n}\n\n/**\n * Class for parsed Content-Disposition header for v8 optimization\n *\n * @public\n * @param {string} type\n * @param {object} parameters\n * @constructor\n */\n\nfunction ContentDisposition (type, parameters) {\n  this.type = type\n  this.parameters = parameters\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\content-disposition\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\content-disposition\\index.js"
  },
  {
    "Content": "# content-disposition\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][github-actions-ci-image]][github-actions-ci-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nCreate and parse HTTP `Content-Disposition` header\n\n## Installation\n\n```sh\n$ npm install content-disposition\n```\n\n## API\n\n```js\nvar contentDisposition = require('content-disposition')\n```\n\n### contentDisposition(filename, options)\n\nCreate an attachment `Content-Disposition` header value using the given file name,\nif supplied. The `filename` is optional and if no file name is desired, but you\nwant to specify `options`, set `filename` to `undefined`.\n\n```js\nres.setHeader('Content-Disposition', contentDisposition('∫ maths.pdf'))\n```\n\n**note** HTTP headers are of the ISO-8859-1 character set. If you are writing this\nheader through a means different from `setHeader` in Node.js, you'll want to specify\nthe `'binary'` encoding in Node.js.\n\n#### Options\n\n`contentDisposition` accepts these properties in the options object.\n\n##### fallback\n\nIf the `filename` option is outside ISO-8859-1, then the file name is actually\nstored in a supplemental field for clients that support Unicode file names and\na ISO-8859-1 version of the file name is automatically generated.\n\nThis specifies the ISO-8859-1 file name to override the automatic generation or\ndisables the generation all together, defaults to `true`.\n\n  - A string will specify the ISO-8859-1 file name to use in place of automatic\n    generation.\n  - `false` will disable including a ISO-8859-1 file name and only include the\n    Unicode version (unless the file name is already ISO-8859-1).\n  - `true` will enable automatic generation if the file name is outside ISO-8859-1.\n\nIf the `filename` option is ISO-8859-1 and this option is specified and has a\ndifferent value, then the `filename` option is encoded in the extended field\nand this set as the fallback field, even though they are both ISO-8859-1.\n\n##### type\n\nSpecifies the disposition type, defaults to `\"attachment\"`. This can also be\n`\"inline\"`, or any other value (all values except inline are treated like\n`attachment`, but can convey additional information if both parties agree to\nit). The type is normalized to lower-case.\n\n### contentDisposition.parse(string)\n\n```js\nvar disposition = contentDisposition.parse('attachment; filename=\"EURO rates.txt\"; filename*=UTF-8\\'\\'%e2%82%ac%20rates.txt')\n```\n\nParse a `Content-Disposition` header string. This automatically handles extended\n(\"Unicode\") parameters by decoding them and providing them under the standard\nparameter name. This will return an object with the following properties (examples\nare shown for the string `'attachment; filename=\"EURO rates.txt\"; filename*=UTF-8\\'\\'%e2%82%ac%20rates.txt'`):\n\n - `type`: The disposition type (always lower case). Example: `'attachment'`\n\n - `parameters`: An object of the parameters in the disposition (name of parameter\n   always lower case and extended versions replace non-extended versions). Example:\n   `{filename: \"€ rates.txt\"}`\n\n## Examples\n\n### Send a file for download\n\n```js\nvar contentDisposition = require('content-disposition')\nvar destroy = require('destroy')\nvar fs = require('fs')\nvar http = require('http')\nvar onFinished = require('on-finished')\n\nvar filePath = '/path/to/public/plans.pdf'\n\nhttp.createServer(function onRequest (req, res) {\n  // set headers\n  res.setHeader('Content-Type', 'application/pdf')\n  res.setHeader('Content-Disposition', contentDisposition(filePath))\n\n  // send file\n  var stream = fs.createReadStream(filePath)\n  stream.pipe(res)\n  onFinished(res, function () {\n    destroy(stream)\n  })\n})\n```\n\n## Testing\n\n```sh\n$ npm test\n```\n\n## References\n\n- [RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1][rfc-2616]\n- [RFC 5987: Character Set and Language Encoding for Hypertext Transfer Protocol (HTTP) Header Field Parameters][rfc-5987]\n- [RFC 6266: Use of the Content-Disposition Header Field in the Hypertext Transfer Protocol (HTTP)][rfc-6266]\n- [Test Cases for HTTP Content-Disposition header field (RFC 6266) and the Encodings defined in RFCs 2047, 2231 and 5987][tc-2231]\n\n[rfc-2616]: https://tools.ietf.org/html/rfc2616\n[rfc-5987]: https://tools.ietf.org/html/rfc5987\n[rfc-6266]: https://tools.ietf.org/html/rfc6266\n[tc-2231]: http://greenbytes.de/tech/tc2231/\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/content-disposition.svg\n[npm-url]: https://npmjs.org/package/content-disposition\n[node-version-image]: https://img.shields.io/node/v/content-disposition.svg\n[node-version-url]: https://nodejs.org/en/download\n[coveralls-image]: https://img.shields.io/coveralls/jshttp/content-disposition.svg\n[coveralls-url]: https://coveralls.io/r/jshttp/content-disposition?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/content-disposition.svg\n[downloads-url]: https://npmjs.org/package/content-disposition\n[github-actions-ci-image]: https://img.shields.io/github/workflow/status/jshttp/content-disposition/ci/master?label=ci\n[github-actions-ci-url]: https://github.com/jshttp/content-disposition?query=workflow%3Aci\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\content-disposition\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\content-disposition\\README.md"
  },
  {
    "Content": "1.0.5 / 2023-01-29\n==================\n\n  * perf: skip value escaping when unnecessary\n\n1.0.4 / 2017-09-11\n==================\n\n  * perf: skip parameter parsing when no parameters\n\n1.0.3 / 2017-09-10\n==================\n\n  * perf: remove argument reassignment\n\n1.0.2 / 2016-05-09\n==================\n\n  * perf: enable strict mode\n\n1.0.1 / 2015-02-13\n==================\n\n  * Improve missing `Content-Type` header error message\n\n1.0.0 / 2015-02-01\n==================\n\n  * Initial implementation, derived from `media-typer@0.3.0`\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\content-type\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\content-type\\HISTORY.md"
  },
  {
    "Content": "/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/ // eslint-disable-line no-control-regex\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.slice(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value.charCodeAt(0) === 0x22 /* \" */) {\n        // remove quotes\n        value = value.slice(1, -1)\n\n        // remove escapes\n        if (value.indexOf('\\\\') !== -1) {\n          value = value.replace(QESC_REGEXP, '$1')\n        }\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\content-type\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\content-type\\index.js"
  },
  {
    "Content": "# content-type\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Node.js Version][node-image]][node-url]\n[![Build Status][ci-image]][ci-url]\n[![Coverage Status][coveralls-image]][coveralls-url]\n\nCreate and parse HTTP Content-Type header according to RFC 7231\n\n## Installation\n\n```sh\n$ npm install content-type\n```\n\n## API\n\n```js\nvar contentType = require('content-type')\n```\n\n### contentType.parse(string)\n\n```js\nvar obj = contentType.parse('image/svg+xml; charset=utf-8')\n```\n\nParse a `Content-Type` header. This will return an object with the following\nproperties (examples are shown for the string `'image/svg+xml; charset=utf-8'`):\n\n - `type`: The media type (the type and subtype, always lower case).\n   Example: `'image/svg+xml'`\n\n - `parameters`: An object of the parameters in the media type (name of parameter\n   always lower case). Example: `{charset: 'utf-8'}`\n\nThrows a `TypeError` if the string is missing or invalid.\n\n### contentType.parse(req)\n\n```js\nvar obj = contentType.parse(req)\n```\n\nParse the `Content-Type` header from the given `req`. Short-cut for\n`contentType.parse(req.headers['content-type'])`.\n\nThrows a `TypeError` if the `Content-Type` header is missing or invalid.\n\n### contentType.parse(res)\n\n```js\nvar obj = contentType.parse(res)\n```\n\nParse the `Content-Type` header set on the given `res`. Short-cut for\n`contentType.parse(res.getHeader('content-type'))`.\n\nThrows a `TypeError` if the `Content-Type` header is missing or invalid.\n\n### contentType.format(obj)\n\n```js\nvar str = contentType.format({\n  type: 'image/svg+xml',\n  parameters: { charset: 'utf-8' }\n})\n```\n\nFormat an object into a `Content-Type` header. This will return a string of the\ncontent type for the given object with the following properties (examples are\nshown that produce the string `'image/svg+xml; charset=utf-8'`):\n\n - `type`: The media type (will be lower-cased). Example: `'image/svg+xml'`\n\n - `parameters`: An object of the parameters in the media type (name of the\n   parameter will be lower-cased). Example: `{charset: 'utf-8'}`\n\nThrows a `TypeError` if the object contains an invalid type or parameter names.\n\n## License\n\n[MIT](LICENSE)\n\n[ci-image]: https://badgen.net/github/checks/jshttp/content-type/master?label=ci\n[ci-url]: https://github.com/jshttp/content-type/actions/workflows/ci.yml\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/content-type/master\n[coveralls-url]: https://coveralls.io/r/jshttp/content-type?branch=master\n[node-image]: https://badgen.net/npm/node/content-type\n[node-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/content-type\n[npm-url]: https://npmjs.org/package/content-type\n[npm-version-image]: https://badgen.net/npm/v/content-type\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\content-type\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\content-type\\README.md"
  },
  {
    "Content": "/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n */\n\nvar cookieNameRegExp = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/;\n\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n */\n\nvar cookieValueRegExp = /^(\"?)[\\u0021\\u0023-\\u002B\\u002D-\\u003A\\u003C-\\u005B\\u005D-\\u007E]*\\1$/;\n\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */\n\nvar domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */\n\nvar pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [opt]\n * @return {object}\n * @public\n */\n\nfunction parse(str, opt) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {};\n  var len = str.length;\n  // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n  if (len < 2) return obj;\n\n  var dec = (opt && opt.decode) || decode;\n  var index = 0;\n  var eqIdx = 0;\n  var endIdx = 0;\n\n  do {\n    eqIdx = str.indexOf('=', index);\n    if (eqIdx === -1) break; // No more cookie pairs.\n\n    endIdx = str.indexOf(';', index);\n\n    if (endIdx === -1) {\n      endIdx = len;\n    } else if (eqIdx > endIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1;\n      continue;\n    }\n\n    var keyStartIdx = startIndex(str, index, eqIdx);\n    var keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n    var key = str.slice(keyStartIdx, keyEndIdx);\n\n    // only assign once\n    if (!obj.hasOwnProperty(key)) {\n      var valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n      var valEndIdx = endIndex(str, endIdx, valStartIdx);\n\n      if (str.charCodeAt(valStartIdx) === 0x22 /* \" */ && str.charCodeAt(valEndIdx - 1) === 0x22 /* \" */) {\n        valStartIdx++;\n        valEndIdx--;\n      }\n\n      var val = str.slice(valStartIdx, valEndIdx);\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  } while (index < len);\n\n  return obj;\n}\n\nfunction startIndex(str, index, max) {\n  do {\n    var code = str.charCodeAt(index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index;\n  } while (++index < max);\n  return max;\n}\n\nfunction endIndex(str, index, min) {\n  while (index > min) {\n    var code = str.charCodeAt(--index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index + 1;\n  }\n  return min;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [opt]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, opt) {\n  var enc = (opt && opt.encode) || encodeURIComponent;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!cookieNameRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (!cookieValueRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n  if (!opt) return str;\n\n  if (null != opt.maxAge) {\n    var maxAge = Math.floor(opt.maxAge);\n\n    if (!isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + maxAge;\n  }\n\n  if (opt.domain) {\n    if (!domainValueRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!pathValueRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.partitioned) {\n    str += '; Partitioned'\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase() : opt.priority;\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]';\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\cookie\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\cookie\\index.js"
  },
  {
    "Content": "# cookie\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Node.js Version][node-image]][node-url]\n[![Build Status][ci-image]][ci-url]\n[![Coverage Status][coveralls-image]][coveralls-url]\n\nBasic HTTP cookie parser and serializer for HTTP servers.\n\n## Installation\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install cookie\n```\n\n## API\n\n```js\nvar cookie = require('cookie');\n```\n\n### cookie.parse(str, options)\n\nParse an HTTP `Cookie` header string and returning an object of all cookie name-value pairs.\nThe `str` argument is the string representing a `Cookie` header value and `options` is an\noptional object containing additional parsing options.\n\n```js\nvar cookies = cookie.parse('foo=bar; equation=E%3Dmc%5E2');\n// { foo: 'bar', equation: 'E=mc^2' }\n```\n\n#### Options\n\n`cookie.parse` accepts these properties in the options object.\n\n##### decode\n\nSpecifies a function that will be used to decode a cookie's value. Since the value of a cookie\nhas a limited character set (and must be a simple string), this function can be used to decode\na previously-encoded cookie value into a JavaScript string or other object.\n\nThe default function is the global `decodeURIComponent`, which will decode any URL-encoded\nsequences into their byte representations.\n\n**note** if an error is thrown from this function, the original, non-decoded cookie value will\nbe returned as the cookie's value.\n\n### cookie.serialize(name, value, options)\n\nSerialize a cookie name-value pair into a `Set-Cookie` header string. The `name` argument is the\nname for the cookie, the `value` argument is the value to set the cookie to, and the `options`\nargument is an optional object containing additional serialization options.\n\n```js\nvar setCookie = cookie.serialize('foo', 'bar');\n// foo=bar\n```\n\n#### Options\n\n`cookie.serialize` accepts these properties in the options object.\n\n##### domain\n\nSpecifies the value for the [`Domain` `Set-Cookie` attribute][rfc-6265-5.2.3]. By default, no\ndomain is set, and most clients will consider the cookie to apply to only the current domain.\n\n##### encode\n\nSpecifies a function that will be used to encode a cookie's value. Since value of a cookie\nhas a limited character set (and must be a simple string), this function can be used to encode\na value into a string suited for a cookie's value.\n\nThe default function is the global `encodeURIComponent`, which will encode a JavaScript string\ninto UTF-8 byte sequences and then URL-encode any that fall outside of the cookie range.\n\n##### expires\n\nSpecifies the `Date` object to be the value for the [`Expires` `Set-Cookie` attribute][rfc-6265-5.2.1].\nBy default, no expiration is set, and most clients will consider this a \"non-persistent cookie\" and\nwill delete it on a condition like exiting a web browser application.\n\n**note** the [cookie storage model specification][rfc-6265-5.3] states that if both `expires` and\n`maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\nso if both are set, they should point to the same date and time.\n\n##### httpOnly\n\nSpecifies the `boolean` value for the [`HttpOnly` `Set-Cookie` attribute][rfc-6265-5.2.6]. When truthy,\nthe `HttpOnly` attribute is set, otherwise it is not. By default, the `HttpOnly` attribute is not set.\n\n**note** be careful when setting this to `true`, as compliant clients will not allow client-side\nJavaScript to see the cookie in `document.cookie`.\n\n##### maxAge\n\nSpecifies the `number` (in seconds) to be the value for the [`Max-Age` `Set-Cookie` attribute][rfc-6265-5.2.2].\nThe given number will be converted to an integer by rounding down. By default, no maximum age is set.\n\n**note** the [cookie storage model specification][rfc-6265-5.3] states that if both `expires` and\n`maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\nso if both are set, they should point to the same date and time.\n\n##### partitioned\n\nSpecifies the `boolean` value for the [`Partitioned` `Set-Cookie`](rfc-cutler-httpbis-partitioned-cookies)\nattribute. When truthy, the `Partitioned` attribute is set, otherwise it is not. By default, the\n`Partitioned` attribute is not set.\n\n**note** This is an attribute that has not yet been fully standardized, and may change in the future.\nThis also means many clients may ignore this attribute until they understand it.\n\nMore information about can be found in [the proposal](https://github.com/privacycg/CHIPS).\n\n##### path\n\nSpecifies the value for the [`Path` `Set-Cookie` attribute][rfc-6265-5.2.4]. By default, the path\nis considered the [\"default path\"][rfc-6265-5.1.4].\n\n##### priority\n\nSpecifies the `string` to be the value for the [`Priority` `Set-Cookie` attribute][rfc-west-cookie-priority-00-4.1].\n\n  - `'low'` will set the `Priority` attribute to `Low`.\n  - `'medium'` will set the `Priority` attribute to `Medium`, the default priority when not set.\n  - `'high'` will set the `Priority` attribute to `High`.\n\nMore information about the different priority levels can be found in\n[the specification][rfc-west-cookie-priority-00-4.1].\n\n**note** This is an attribute that has not yet been fully standardized, and may change in the future.\nThis also means many clients may ignore this attribute until they understand it.\n\n##### sameSite\n\nSpecifies the `boolean` or `string` to be the value for the [`SameSite` `Set-Cookie` attribute][rfc-6265bis-09-5.4.7].\n\n  - `true` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n  - `false` will not set the `SameSite` attribute.\n  - `'lax'` will set the `SameSite` attribute to `Lax` for lax same site enforcement.\n  - `'none'` will set the `SameSite` attribute to `None` for an explicit cross-site cookie.\n  - `'strict'` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n\nMore information about the different enforcement levels can be found in\n[the specification][rfc-6265bis-09-5.4.7].\n\n**note** This is an attribute that has not yet been fully standardized, and may change in the future.\nThis also means many clients may ignore this attribute until they understand it.\n\n##### secure\n\nSpecifies the `boolean` value for the [`Secure` `Set-Cookie` attribute][rfc-6265-5.2.5]. When truthy,\nthe `Secure` attribute is set, otherwise it is not. By default, the `Secure` attribute is not set.\n\n**note** be careful when setting this to `true`, as compliant clients will not send the cookie back to\nthe server in the future if the browser does not have an HTTPS connection.\n\n## Example\n\nThe following example uses this module in conjunction with the Node.js core HTTP server\nto prompt a user for their name and display it back on future visits.\n\n```js\nvar cookie = require('cookie');\nvar escapeHtml = require('escape-html');\nvar http = require('http');\nvar url = require('url');\n\nfunction onRequest(req, res) {\n  // Parse the query string\n  var query = url.parse(req.url, true, true).query;\n\n  if (query && query.name) {\n    // Set a new cookie with the name\n    res.setHeader('Set-Cookie', cookie.serialize('name', String(query.name), {\n      httpOnly: true,\n      maxAge: 60 * 60 * 24 * 7 // 1 week\n    }));\n\n    // Redirect back after setting cookie\n    res.statusCode = 302;\n    res.setHeader('Location', req.headers.referer || '/');\n    res.end();\n    return;\n  }\n\n  // Parse the cookies on the request\n  var cookies = cookie.parse(req.headers.cookie || '');\n\n  // Get the visitor name set in the cookie\n  var name = cookies.name;\n\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8');\n\n  if (name) {\n    res.write('<p>Welcome back, <b>' + escapeHtml(name) + '</b>!</p>');\n  } else {\n    res.write('<p>Hello, new visitor!</p>');\n  }\n\n  res.write('<form method=\"GET\">');\n  res.write('<input placeholder=\"enter your name\" name=\"name\"> <input type=\"submit\" value=\"Set Name\">');\n  res.end('</form>');\n}\n\nhttp.createServer(onRequest).listen(3000);\n```\n\n## Testing\n\n```sh\n$ npm test\n```\n\n## Benchmark\n\n```\n$ npm run bench\n\n> cookie@0.5.0 bench\n> node benchmark/index.js\n\n  node@18.18.2\n  acorn@8.10.0\n  ada@2.6.0\n  ares@1.19.1\n  brotli@1.0.9\n  cldr@43.1\n  icu@73.2\n  llhttp@6.0.11\n  modules@108\n  napi@9\n  nghttp2@1.57.0\n  nghttp3@0.7.0\n  ngtcp2@0.8.1\n  openssl@3.0.10+quic\n  simdutf@3.2.14\n  tz@2023c\n  undici@5.26.3\n  unicode@15.0\n  uv@1.44.2\n  uvwasi@0.0.18\n  v8@10.2.154.26-node.26\n  zlib@1.2.13.1-motley\n\n> node benchmark/parse-top.js\n\n  cookie.parse - top sites\n\n  14 tests completed.\n\n  parse accounts.google.com x 2,588,913 ops/sec ±0.74% (186 runs sampled)\n  parse apple.com           x 2,370,002 ops/sec ±0.69% (186 runs sampled)\n  parse cloudflare.com      x 2,213,102 ops/sec ±0.88% (188 runs sampled)\n  parse docs.google.com     x 2,194,157 ops/sec ±1.03% (184 runs sampled)\n  parse drive.google.com    x 2,265,084 ops/sec ±0.79% (187 runs sampled)\n  parse en.wikipedia.org    x   457,099 ops/sec ±0.81% (186 runs sampled)\n  parse linkedin.com        x   504,407 ops/sec ±0.89% (186 runs sampled)\n  parse maps.google.com     x 1,230,959 ops/sec ±0.98% (186 runs sampled)\n  parse microsoft.com       x   926,294 ops/sec ±0.88% (184 runs sampled)\n  parse play.google.com     x 2,311,338 ops/sec ±0.83% (185 runs sampled)\n  parse support.google.com  x 1,508,850 ops/sec ±0.86% (186 runs sampled)\n  parse www.google.com      x 1,022,582 ops/sec ±1.32% (182 runs sampled)\n  parse youtu.be            x   332,136 ops/sec ±1.02% (185 runs sampled)\n  parse youtube.com         x   323,833 ops/sec ±0.77% (183 runs sampled)\n\n> node benchmark/parse.js\n\n  cookie.parse - generic\n\n  6 tests completed.\n\n  simple      x 3,214,032 ops/sec ±1.61% (183 runs sampled)\n  decode      x   587,237 ops/sec ±1.16% (187 runs sampled)\n  unquote     x 2,954,618 ops/sec ±1.35% (183 runs sampled)\n  duplicates  x   857,008 ops/sec ±0.89% (187 runs sampled)\n  10 cookies  x   292,133 ops/sec ±0.89% (187 runs sampled)\n  100 cookies x    22,610 ops/sec ±0.68% (187 runs sampled)\n```\n\n## References\n\n- [RFC 6265: HTTP State Management Mechanism][rfc-6265]\n- [Same-site Cookies][rfc-6265bis-09-5.4.7]\n\n[rfc-cutler-httpbis-partitioned-cookies]: https://tools.ietf.org/html/draft-cutler-httpbis-partitioned-cookies/\n[rfc-west-cookie-priority-00-4.1]: https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1\n[rfc-6265bis-09-5.4.7]: https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7\n[rfc-6265]: https://tools.ietf.org/html/rfc6265\n[rfc-6265-5.1.4]: https://tools.ietf.org/html/rfc6265#section-5.1.4\n[rfc-6265-5.2.1]: https://tools.ietf.org/html/rfc6265#section-5.2.1\n[rfc-6265-5.2.2]: https://tools.ietf.org/html/rfc6265#section-5.2.2\n[rfc-6265-5.2.3]: https://tools.ietf.org/html/rfc6265#section-5.2.3\n[rfc-6265-5.2.4]: https://tools.ietf.org/html/rfc6265#section-5.2.4\n[rfc-6265-5.2.5]: https://tools.ietf.org/html/rfc6265#section-5.2.5\n[rfc-6265-5.2.6]: https://tools.ietf.org/html/rfc6265#section-5.2.6\n[rfc-6265-5.3]: https://tools.ietf.org/html/rfc6265#section-5.3\n\n## License\n\n[MIT](LICENSE)\n\n[ci-image]: https://badgen.net/github/checks/jshttp/cookie/master?label=ci\n[ci-url]: https://github.com/jshttp/cookie/actions/workflows/ci.yml\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/cookie/master\n[coveralls-url]: https://coveralls.io/r/jshttp/cookie?branch=master\n[node-image]: https://badgen.net/npm/node/cookie\n[node-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/cookie\n[npm-url]: https://npmjs.org/package/cookie\n[npm-version-image]: https://badgen.net/npm/v/cookie\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\cookie\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\cookie\\README.md"
  },
  {
    "Content": "# Security Policies and Procedures\n\n## Reporting a Bug\n\nThe `cookie` team and community take all security bugs seriously. Thank\nyou for improving the security of the project. We appreciate your efforts and\nresponsible disclosure and will make every effort to acknowledge your\ncontributions.\n\nReport security bugs by emailing the current owner(s) of `cookie`. This\ninformation can be found in the npm registry using the command\n`npm owner ls cookie`.\nIf unsure or unable to get the information from the above, open an issue\nin the [project issue tracker](https://github.com/jshttp/cookie/issues)\nasking for the current contact information.\n\nTo ensure the timely response to your report, please ensure that the entirety\nof the report is contained within the email body and not solely behind a web\nlink or an attachment.\n\nAt least one owner will acknowledge your email within 48 hours, and will send a\nmore detailed response within 48 hours indicating the next steps in handling\nyour report. After the initial reply to your report, the owners will\nendeavor to keep you informed of the progress towards a fix and full\nannouncement, and may ask for additional information or guidance.\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\cookie\\SECURITY.md",
    "RelativePath": "tools\\backend\\node_modules\\cookie\\SECURITY.md"
  },
  {
    "Content": "1.0.6 / 2015-02-03\n==================\n\n* use `npm test` instead of `make test` to run tests\n* clearer assertion messages when checking input\n\n\n1.0.5 / 2014-09-05\n==================\n\n* add license to package.json\n\n1.0.4 / 2014-06-25\n==================\n\n * corrected avoidance of timing attacks (thanks @tenbits!)\n\n1.0.3 / 2014-01-28\n==================\n\n * [incorrect] fix for timing attacks\n\n1.0.2 / 2014-01-28\n==================\n\n * fix missing repository warning\n * fix typo in test\n\n1.0.1 / 2013-04-15\n==================\n\n  * Revert \"Changed underlying HMAC algo. to sha512.\"\n  * Revert \"Fix for timing attacks on MAC verification.\"\n\n0.0.1 / 2010-01-03\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\cookie-signature\\History.md",
    "RelativePath": "tools\\backend\\node_modules\\cookie-signature\\History.md"
  },
  {
    "Content": "/**\n * Module dependencies.\n */\n\nvar crypto = require('crypto');\n\n/**\n * Sign the given `val` with `secret`.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String}\n * @api private\n */\n\nexports.sign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Cookie value must be provided as a string.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  return val + '.' + crypto\n    .createHmac('sha256', secret)\n    .update(val)\n    .digest('base64')\n    .replace(/\\=+$/, '');\n};\n\n/**\n * Unsign and decode the given `val` with `secret`,\n * returning `false` if the signature is invalid.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String|Boolean}\n * @api private\n */\n\nexports.unsign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Signed cookie string must be provided.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  var str = val.slice(0, val.lastIndexOf('.'))\n    , mac = exports.sign(str, secret);\n  \n  return sha1(mac) == sha1(val) ? str : false;\n};\n\n/**\n * Private\n */\n\nfunction sha1(str){\n  return crypto.createHash('sha1').update(str).digest('hex');\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\cookie-signature\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\cookie-signature\\index.js"
  },
  {
    "Content": "\n# cookie-signature\n\n  Sign and unsign cookies.\n\n## Example\n\n```js\nvar cookie = require('cookie-signature');\n\nvar val = cookie.sign('hello', 'tobiiscool');\nval.should.equal('hello.DGDUkGlIkCzPz+C0B064FNgHdEjox7ch8tOBGslZ5QI');\n\nvar val = cookie.sign('hello', 'tobiiscool');\ncookie.unsign(val, 'tobiiscool').should.equal('hello');\ncookie.unsign(val, 'luna').should.be.false;\n```\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2012 LearnBoost &lt;tj@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\cookie-signature\\Readme.md",
    "RelativePath": "tools\\backend\\node_modules\\cookie-signature\\Readme.md"
  },
  {
    "Content": "# contributing to `cors`\n\nCORS is a node.js package for providing a [connect](http://www.senchalabs.org/connect/)/[express](http://expressjs.com/) middleware that can be used to enable [CORS](http://en.wikipedia.org/wiki/Cross-origin_resource_sharing) with various options. Learn more about the project in [the README](README.md).\n\n## The CORS Spec\n\n[http://www.w3.org/TR/cors/](http://www.w3.org/TR/cors/)\n\n## Pull Requests Welcome\n\n* Include `'use strict';` in every javascript file.\n* 2 space indentation.\n* Please run the testing steps below before submitting.\n\n## Testing\n\n```bash\n$ npm install\n$ npm test\n```\n\n## Interactive Testing Harness\n\n[http://node-cors-client.herokuapp.com](http://node-cors-client.herokuapp.com)\n\nRelated git repositories:\n\n* [https://github.com/TroyGoode/node-cors-server](https://github.com/TroyGoode/node-cors-server)\n* [https://github.com/TroyGoode/node-cors-client](https://github.com/TroyGoode/node-cors-client)\n\n## License\n\n[MIT License](http://www.opensource.org/licenses/mit-license.php)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\cors\\CONTRIBUTING.md",
    "RelativePath": "tools\\backend\\node_modules\\cors\\CONTRIBUTING.md"
  },
  {
    "Content": "2.8.5 / 2018-11-04\n==================\n\n  * Fix setting `maxAge` option to `0`\n\n2.8.4 / 2017-07-12\n==================\n\n  * Work-around Safari bug in default pre-flight response\n\n2.8.3 / 2017-03-29\n==================\n\n  * Fix error when options delegate missing `methods` option\n\n2.8.2 / 2017-03-28\n==================\n\n  * Fix error when frozen options are passed\n  * Send \"Vary: Origin\" when using regular expressions\n  * Send \"Vary: Access-Control-Request-Headers\" when dynamic `allowedHeaders`\n\n2.8.1 / 2016-09-08\n==================\n\nThis release only changed documentation.\n\n2.8.0 / 2016-08-23\n==================\n\n  * Add `optionsSuccessStatus` option\n\n2.7.2 / 2016-08-23\n==================\n\n  * Fix error when Node.js running in strict mode\n\n2.7.1 / 2015-05-28\n==================\n\n  * Move module into expressjs organization\n\n2.7.0 / 2015-05-28\n==================\n\n  * Allow array of matching condition as `origin` option\n  * Allow regular expression as `origin` option\n\n2.6.1 / 2015-05-28\n==================\n\n  * Update `license` in package.json\n\n2.6.0 / 2015-04-27\n==================\n\n  * Add `preflightContinue` option\n  * Fix \"Vary: Origin\" header added for \"*\"\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\cors\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\cors\\HISTORY.md"
  },
  {
    "Content": "# cors\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nCORS is a node.js package for providing a [Connect](http://www.senchalabs.org/connect/)/[Express](http://expressjs.com/) middleware that can be used to enable [CORS](http://en.wikipedia.org/wiki/Cross-origin_resource_sharing) with various options.\n\n**[Follow me (@troygoode) on Twitter!](https://twitter.com/intent/user?screen_name=troygoode)**\n\n* [Installation](#installation)\n* [Usage](#usage)\n  * [Simple Usage](#simple-usage-enable-all-cors-requests)\n  * [Enable CORS for a Single Route](#enable-cors-for-a-single-route)\n  * [Configuring CORS](#configuring-cors)\n  * [Configuring CORS Asynchronously](#configuring-cors-asynchronously)\n  * [Enabling CORS Pre-Flight](#enabling-cors-pre-flight)\n* [Configuration Options](#configuration-options)\n* [Demo](#demo)\n* [License](#license)\n* [Author](#author)\n\n## Installation\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install cors\n```\n\n## Usage\n\n### Simple Usage (Enable *All* CORS Requests)\n\n```javascript\nvar express = require('express')\nvar cors = require('cors')\nvar app = express()\n\napp.use(cors())\n\napp.get('/products/:id', function (req, res, next) {\n  res.json({msg: 'This is CORS-enabled for all origins!'})\n})\n\napp.listen(80, function () {\n  console.log('CORS-enabled web server listening on port 80')\n})\n```\n\n### Enable CORS for a Single Route\n\n```javascript\nvar express = require('express')\nvar cors = require('cors')\nvar app = express()\n\napp.get('/products/:id', cors(), function (req, res, next) {\n  res.json({msg: 'This is CORS-enabled for a Single Route'})\n})\n\napp.listen(80, function () {\n  console.log('CORS-enabled web server listening on port 80')\n})\n```\n\n### Configuring CORS\n\n```javascript\nvar express = require('express')\nvar cors = require('cors')\nvar app = express()\n\nvar corsOptions = {\n  origin: 'http://example.com',\n  optionsSuccessStatus: 200 // some legacy browsers (IE11, various SmartTVs) choke on 204\n}\n\napp.get('/products/:id', cors(corsOptions), function (req, res, next) {\n  res.json({msg: 'This is CORS-enabled for only example.com.'})\n})\n\napp.listen(80, function () {\n  console.log('CORS-enabled web server listening on port 80')\n})\n```\n\n### Configuring CORS w/ Dynamic Origin\n\n```javascript\nvar express = require('express')\nvar cors = require('cors')\nvar app = express()\n\nvar whitelist = ['http://example1.com', 'http://example2.com']\nvar corsOptions = {\n  origin: function (origin, callback) {\n    if (whitelist.indexOf(origin) !== -1) {\n      callback(null, true)\n    } else {\n      callback(new Error('Not allowed by CORS'))\n    }\n  }\n}\n\napp.get('/products/:id', cors(corsOptions), function (req, res, next) {\n  res.json({msg: 'This is CORS-enabled for a whitelisted domain.'})\n})\n\napp.listen(80, function () {\n  console.log('CORS-enabled web server listening on port 80')\n})\n```\n\nIf you do not want to block REST tools or server-to-server requests,\nadd a `!origin` check in the origin function like so:\n\n```javascript\nvar corsOptions = {\n  origin: function (origin, callback) {\n    if (whitelist.indexOf(origin) !== -1 || !origin) {\n      callback(null, true)\n    } else {\n      callback(new Error('Not allowed by CORS'))\n    }\n  }\n}\n```\n\n### Enabling CORS Pre-Flight\n\nCertain CORS requests are considered 'complex' and require an initial\n`OPTIONS` request (called the \"pre-flight request\"). An example of a\n'complex' CORS request is one that uses an HTTP verb other than\nGET/HEAD/POST (such as DELETE) or that uses custom headers. To enable\npre-flighting, you must add a new OPTIONS handler for the route you want\nto support:\n\n```javascript\nvar express = require('express')\nvar cors = require('cors')\nvar app = express()\n\napp.options('/products/:id', cors()) // enable pre-flight request for DELETE request\napp.del('/products/:id', cors(), function (req, res, next) {\n  res.json({msg: 'This is CORS-enabled for all origins!'})\n})\n\napp.listen(80, function () {\n  console.log('CORS-enabled web server listening on port 80')\n})\n```\n\nYou can also enable pre-flight across-the-board like so:\n\n```javascript\napp.options('*', cors()) // include before other routes\n```\n\n### Configuring CORS Asynchronously\n\n```javascript\nvar express = require('express')\nvar cors = require('cors')\nvar app = express()\n\nvar whitelist = ['http://example1.com', 'http://example2.com']\nvar corsOptionsDelegate = function (req, callback) {\n  var corsOptions;\n  if (whitelist.indexOf(req.header('Origin')) !== -1) {\n    corsOptions = { origin: true } // reflect (enable) the requested origin in the CORS response\n  } else {\n    corsOptions = { origin: false } // disable CORS for this request\n  }\n  callback(null, corsOptions) // callback expects two parameters: error and options\n}\n\napp.get('/products/:id', cors(corsOptionsDelegate), function (req, res, next) {\n  res.json({msg: 'This is CORS-enabled for a whitelisted domain.'})\n})\n\napp.listen(80, function () {\n  console.log('CORS-enabled web server listening on port 80')\n})\n```\n\n## Configuration Options\n\n* `origin`: Configures the **Access-Control-Allow-Origin** CORS header. Possible values:\n  - `Boolean` - set `origin` to `true` to reflect the [request origin](http://tools.ietf.org/html/draft-abarth-origin-09), as defined by `req.header('Origin')`, or set it to `false` to disable CORS.\n  - `String` - set `origin` to a specific origin. For example if you set it to `\"http://example.com\"` only requests from \"http://example.com\" will be allowed.\n  - `RegExp` - set `origin` to a regular expression pattern which will be used to test the request origin. If it's a match, the request origin will be reflected. For example the pattern `/example\\.com$/` will reflect any request that is coming from an origin ending with \"example.com\".\n  - `Array` - set `origin` to an array of valid origins. Each origin can be a `String` or a `RegExp`. For example `[\"http://example1.com\", /\\.example2\\.com$/]` will accept any request from \"http://example1.com\" or from a subdomain of \"example2.com\".\n  - `Function` - set `origin` to a function implementing some custom logic. The function takes the request origin as the first parameter and a callback (which expects the signature `err [object], allow [bool]`) as the second.\n* `methods`: Configures the **Access-Control-Allow-Methods** CORS header. Expects a comma-delimited string (ex: 'GET,PUT,POST') or an array (ex: `['GET', 'PUT', 'POST']`).\n* `allowedHeaders`: Configures the **Access-Control-Allow-Headers** CORS header. Expects a comma-delimited string (ex: 'Content-Type,Authorization') or an array (ex: `['Content-Type', 'Authorization']`). If not specified, defaults to reflecting the headers specified in the request's **Access-Control-Request-Headers** header.\n* `exposedHeaders`: Configures the **Access-Control-Expose-Headers** CORS header. Expects a comma-delimited string (ex: 'Content-Range,X-Content-Range') or an array (ex: `['Content-Range', 'X-Content-Range']`). If not specified, no custom headers are exposed.\n* `credentials`: Configures the **Access-Control-Allow-Credentials** CORS header. Set to `true` to pass the header, otherwise it is omitted.\n* `maxAge`: Configures the **Access-Control-Max-Age** CORS header. Set to an integer to pass the header, otherwise it is omitted.\n* `preflightContinue`: Pass the CORS preflight response to the next handler.\n* `optionsSuccessStatus`: Provides a status code to use for successful `OPTIONS` requests, since some legacy browsers (IE11, various SmartTVs) choke on `204`.\n\nThe default configuration is the equivalent of:\n\n```json\n{\n  \"origin\": \"*\",\n  \"methods\": \"GET,HEAD,PUT,PATCH,POST,DELETE\",\n  \"preflightContinue\": false,\n  \"optionsSuccessStatus\": 204\n}\n```\n\nFor details on the effect of each CORS header, read [this](http://www.html5rocks.com/en/tutorials/cors/) article on HTML5 Rocks.\n\n## Demo\n\nA demo that illustrates CORS working (and not working) using jQuery is available here: [http://node-cors-client.herokuapp.com/](http://node-cors-client.herokuapp.com/)\n\nCode for that demo can be found here:\n\n* Client: [https://github.com/TroyGoode/node-cors-client](https://github.com/TroyGoode/node-cors-client)\n* Server: [https://github.com/TroyGoode/node-cors-server](https://github.com/TroyGoode/node-cors-server)\n\n## License\n\n[MIT License](http://www.opensource.org/licenses/mit-license.php)\n\n## Author\n\n[Troy Goode](https://github.com/TroyGoode) ([troygoode@gmail.com](mailto:troygoode@gmail.com))\n\n[coveralls-image]: https://img.shields.io/coveralls/expressjs/cors/master.svg\n[coveralls-url]: https://coveralls.io/r/expressjs/cors?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/cors.svg\n[downloads-url]: https://npmjs.org/package/cors\n[npm-image]: https://img.shields.io/npm/v/cors.svg\n[npm-url]: https://npmjs.org/package/cors\n[travis-image]: https://img.shields.io/travis/expressjs/cors/master.svg\n[travis-url]: https://travis-ci.org/expressjs/cors\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\cors\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\cors\\README.md"
  },
  {
    "Content": "(function () {\n\n  'use strict';\n\n  var assign = require('object-assign');\n  var vary = require('vary');\n\n  var defaults = {\n    origin: '*',\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n    preflightContinue: false,\n    optionsSuccessStatus: 204\n  };\n\n  function isString(s) {\n    return typeof s === 'string' || s instanceof String;\n  }\n\n  function isOriginAllowed(origin, allowedOrigin) {\n    if (Array.isArray(allowedOrigin)) {\n      for (var i = 0; i < allowedOrigin.length; ++i) {\n        if (isOriginAllowed(origin, allowedOrigin[i])) {\n          return true;\n        }\n      }\n      return false;\n    } else if (isString(allowedOrigin)) {\n      return origin === allowedOrigin;\n    } else if (allowedOrigin instanceof RegExp) {\n      return allowedOrigin.test(origin);\n    } else {\n      return !!allowedOrigin;\n    }\n  }\n\n  function configureOrigin(options, req) {\n    var requestOrigin = req.headers.origin,\n      headers = [],\n      isAllowed;\n\n    if (!options.origin || options.origin === '*') {\n      // allow any origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: '*'\n      }]);\n    } else if (isString(options.origin)) {\n      // fixed origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: options.origin\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    } else {\n      isAllowed = isOriginAllowed(requestOrigin, options.origin);\n      // reflect origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: isAllowed ? requestOrigin : false\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureMethods(options) {\n    var methods = options.methods;\n    if (methods.join) {\n      methods = options.methods.join(','); // .methods is an array, so turn it into a string\n    }\n    return {\n      key: 'Access-Control-Allow-Methods',\n      value: methods\n    };\n  }\n\n  function configureCredentials(options) {\n    if (options.credentials === true) {\n      return {\n        key: 'Access-Control-Allow-Credentials',\n        value: 'true'\n      };\n    }\n    return null;\n  }\n\n  function configureAllowedHeaders(options, req) {\n    var allowedHeaders = options.allowedHeaders || options.headers;\n    var headers = [];\n\n    if (!allowedHeaders) {\n      allowedHeaders = req.headers['access-control-request-headers']; // .headers wasn't specified, so reflect the request headers\n      headers.push([{\n        key: 'Vary',\n        value: 'Access-Control-Request-Headers'\n      }]);\n    } else if (allowedHeaders.join) {\n      allowedHeaders = allowedHeaders.join(','); // .headers is an array, so turn it into a string\n    }\n    if (allowedHeaders && allowedHeaders.length) {\n      headers.push([{\n        key: 'Access-Control-Allow-Headers',\n        value: allowedHeaders\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureExposedHeaders(options) {\n    var headers = options.exposedHeaders;\n    if (!headers) {\n      return null;\n    } else if (headers.join) {\n      headers = headers.join(','); // .headers is an array, so turn it into a string\n    }\n    if (headers && headers.length) {\n      return {\n        key: 'Access-Control-Expose-Headers',\n        value: headers\n      };\n    }\n    return null;\n  }\n\n  function configureMaxAge(options) {\n    var maxAge = (typeof options.maxAge === 'number' || options.maxAge) && options.maxAge.toString()\n    if (maxAge && maxAge.length) {\n      return {\n        key: 'Access-Control-Max-Age',\n        value: maxAge\n      };\n    }\n    return null;\n  }\n\n  function applyHeaders(headers, res) {\n    for (var i = 0, n = headers.length; i < n; i++) {\n      var header = headers[i];\n      if (header) {\n        if (Array.isArray(header)) {\n          applyHeaders(header, res);\n        } else if (header.key === 'Vary' && header.value) {\n          vary(res, header.value);\n        } else if (header.value) {\n          res.setHeader(header.key, header.value);\n        }\n      }\n    }\n  }\n\n  function cors(options, req, res, next) {\n    var headers = [],\n      method = req.method && req.method.toUpperCase && req.method.toUpperCase();\n\n    if (method === 'OPTIONS') {\n      // preflight\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureMethods(options, req));\n      headers.push(configureAllowedHeaders(options, req));\n      headers.push(configureMaxAge(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n\n      if (options.preflightContinue) {\n        next();\n      } else {\n        // Safari (and potentially other browsers) need content-length 0,\n        //   for 204 or they just hang waiting for a body\n        res.statusCode = options.optionsSuccessStatus;\n        res.setHeader('Content-Length', '0');\n        res.end();\n      }\n    } else {\n      // actual response\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n      next();\n    }\n  }\n\n  function middlewareWrapper(o) {\n    // if options are static (either via defaults or custom options passed in), wrap in a function\n    var optionsCallback = null;\n    if (typeof o === 'function') {\n      optionsCallback = o;\n    } else {\n      optionsCallback = function (req, cb) {\n        cb(null, o);\n      };\n    }\n\n    return function corsMiddleware(req, res, next) {\n      optionsCallback(req, function (err, options) {\n        if (err) {\n          next(err);\n        } else {\n          var corsOptions = assign({}, defaults, options);\n          var originCallback = null;\n          if (corsOptions.origin && typeof corsOptions.origin === 'function') {\n            originCallback = corsOptions.origin;\n          } else if (corsOptions.origin) {\n            originCallback = function (origin, cb) {\n              cb(null, corsOptions.origin);\n            };\n          }\n\n          if (originCallback) {\n            originCallback(req.headers.origin, function (err2, origin) {\n              if (err2 || !origin) {\n                next(err2);\n              } else {\n                corsOptions.origin = origin;\n                cors(corsOptions, req, res, next);\n              }\n            });\n          } else {\n            next();\n          }\n        }\n      });\n    };\n  }\n\n  // can pass either an options hash, an options delegate, or nothing\n  module.exports = middlewareWrapper;\n\n}());\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\cors\\lib\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\cors\\lib\\index.js"
  },
  {
    "Content": "\n2.6.9 / 2017-09-22\n==================\n\n  * remove ReDoS regexp in %o formatter (#504)\n\n2.6.8 / 2017-05-18\n==================\n\n  * Fix: Check for undefined on browser globals (#462, @marbemac)\n\n2.6.7 / 2017-05-16\n==================\n\n  * Fix: Update ms to 2.0.0 to fix regular expression denial of service vulnerability (#458, @hubdotcom)\n  * Fix: Inline extend function in node implementation (#452, @dougwilson)\n  * Docs: Fix typo (#455, @msasad)\n\n2.6.5 / 2017-04-27\n==================\n  \n  * Fix: null reference check on window.documentElement.style.WebkitAppearance (#447, @thebigredgeek)\n  * Misc: clean up browser reference checks (#447, @thebigredgeek)\n  * Misc: add npm-debug.log to .gitignore (@thebigredgeek)\n\n\n2.6.4 / 2017-04-20\n==================\n\n  * Fix: bug that would occure if process.env.DEBUG is a non-string value. (#444, @LucianBuzzo)\n  * Chore: ignore bower.json in npm installations. (#437, @joaovieira)\n  * Misc: update \"ms\" to v0.7.3 (@tootallnate)\n\n2.6.3 / 2017-03-13\n==================\n\n  * Fix: Electron reference to `process.env.DEBUG` (#431, @paulcbetts)\n  * Docs: Changelog fix (@thebigredgeek)\n\n2.6.2 / 2017-03-10\n==================\n\n  * Fix: DEBUG_MAX_ARRAY_LENGTH (#420, @slavaGanzin)\n  * Docs: Add backers and sponsors from Open Collective (#422, @piamancini)\n  * Docs: Add Slackin invite badge (@tootallnate)\n\n2.6.1 / 2017-02-10\n==================\n\n  * Fix: Module's `export default` syntax fix for IE8 `Expected identifier` error\n  * Fix: Whitelist DEBUG_FD for values 1 and 2 only (#415, @pi0)\n  * Fix: IE8 \"Expected identifier\" error (#414, @vgoma)\n  * Fix: Namespaces would not disable once enabled (#409, @musikov)\n\n2.6.0 / 2016-12-28\n==================\n\n  * Fix: added better null pointer checks for browser useColors (@thebigredgeek)\n  * Improvement: removed explicit `window.debug` export (#404, @tootallnate)\n  * Improvement: deprecated `DEBUG_FD` environment variable (#405, @tootallnate)\n\n2.5.2 / 2016-12-25\n==================\n\n  * Fix: reference error on window within webworkers (#393, @KlausTrainer)\n  * Docs: fixed README typo (#391, @lurch)\n  * Docs: added notice about v3 api discussion (@thebigredgeek)\n\n2.5.1 / 2016-12-20\n==================\n\n  * Fix: babel-core compatibility\n\n2.5.0 / 2016-12-20\n==================\n\n  * Fix: wrong reference in bower file (@thebigredgeek)\n  * Fix: webworker compatibility (@thebigredgeek)\n  * Fix: output formatting issue (#388, @kribblo)\n  * Fix: babel-loader compatibility (#383, @escwald)\n  * Misc: removed built asset from repo and publications (@thebigredgeek)\n  * Misc: moved source files to /src (#378, @yamikuronue)\n  * Test: added karma integration and replaced babel with browserify for browser tests (#378, @yamikuronue)\n  * Test: coveralls integration (#378, @yamikuronue)\n  * Docs: simplified language in the opening paragraph (#373, @yamikuronue)\n\n2.4.5 / 2016-12-17\n==================\n\n  * Fix: `navigator` undefined in Rhino (#376, @jochenberger)\n  * Fix: custom log function (#379, @hsiliev)\n  * Improvement: bit of cleanup + linting fixes (@thebigredgeek)\n  * Improvement: rm non-maintainted `dist/` dir (#375, @freewil)\n  * Docs: simplified language in the opening paragraph. (#373, @yamikuronue)\n\n2.4.4 / 2016-12-14\n==================\n\n  * Fix: work around debug being loaded in preload scripts for electron (#368, @paulcbetts)\n\n2.4.3 / 2016-12-14\n==================\n\n  * Fix: navigation.userAgent error for react native (#364, @escwald)\n\n2.4.2 / 2016-12-14\n==================\n\n  * Fix: browser colors (#367, @tootallnate)\n  * Misc: travis ci integration (@thebigredgeek)\n  * Misc: added linting and testing boilerplate with sanity check (@thebigredgeek)\n\n2.4.1 / 2016-12-13\n==================\n\n  * Fix: typo that broke the package (#356)\n\n2.4.0 / 2016-12-13\n==================\n\n  * Fix: bower.json references unbuilt src entry point (#342, @justmatt)\n  * Fix: revert \"handle regex special characters\" (@tootallnate)\n  * Feature: configurable util.inspect()`options for NodeJS (#327, @tootallnate)\n  * Feature: %O`(big O) pretty-prints objects (#322, @tootallnate)\n  * Improvement: allow colors in workers (#335, @botverse)\n  * Improvement: use same color for same namespace. (#338, @lchenay)\n\n2.3.3 / 2016-11-09\n==================\n\n  * Fix: Catch `JSON.stringify()` errors (#195, Jovan Alleyne)\n  * Fix: Returning `localStorage` saved values (#331, Levi Thomason)\n  * Improvement: Don't create an empty object when no `process` (Nathan Rajlich)\n\n2.3.2 / 2016-11-09\n==================\n\n  * Fix: be super-safe in index.js as well (@TooTallNate)\n  * Fix: should check whether process exists (Tom Newby)\n\n2.3.1 / 2016-11-09\n==================\n\n  * Fix: Added electron compatibility (#324, @paulcbetts)\n  * Improvement: Added performance optimizations (@tootallnate)\n  * Readme: Corrected PowerShell environment variable example (#252, @gimre)\n  * Misc: Removed yarn lock file from source control (#321, @fengmk2)\n\n2.3.0 / 2016-11-07\n==================\n\n  * Fix: Consistent placement of ms diff at end of output (#215, @gorangajic)\n  * Fix: Escaping of regex special characters in namespace strings (#250, @zacronos)\n  * Fix: Fixed bug causing crash on react-native (#282, @vkarpov15)\n  * Feature: Enabled ES6+ compatible import via default export (#212 @bucaran)\n  * Feature: Added %O formatter to reflect Chrome's console.log capability (#279, @oncletom)\n  * Package: Update \"ms\" to 0.7.2 (#315, @DevSide)\n  * Package: removed superfluous version property from bower.json (#207 @kkirsche)\n  * Readme: fix USE_COLORS to DEBUG_COLORS\n  * Readme: Doc fixes for format string sugar (#269, @mlucool)\n  * Readme: Updated docs for DEBUG_FD and DEBUG_COLORS environment variables (#232, @mattlyons0)\n  * Readme: doc fixes for PowerShell (#271 #243, @exoticknight @unreadable)\n  * Readme: better docs for browser support (#224, @matthewmueller)\n  * Tooling: Added yarn integration for development (#317, @thebigredgeek)\n  * Misc: Renamed History.md to CHANGELOG.md (@thebigredgeek)\n  * Misc: Added license file (#226 #274, @CantemoInternal @sdaitzman)\n  * Misc: Updated contributors (@thebigredgeek)\n\n2.2.0 / 2015-05-09\n==================\n\n  * package: update \"ms\" to v0.7.1 (#202, @dougwilson)\n  * README: add logging to file example (#193, @DanielOchoa)\n  * README: fixed a typo (#191, @amir-s)\n  * browser: expose `storage` (#190, @stephenmathieson)\n  * Makefile: add a `distclean` target (#189, @stephenmathieson)\n\n2.1.3 / 2015-03-13\n==================\n\n  * Updated stdout/stderr example (#186)\n  * Updated example/stdout.js to match debug current behaviour\n  * Renamed example/stderr.js to stdout.js\n  * Update Readme.md (#184)\n  * replace high intensity foreground color for bold (#182, #183)\n\n2.1.2 / 2015-03-01\n==================\n\n  * dist: recompile\n  * update \"ms\" to v0.7.0\n  * package: update \"browserify\" to v9.0.3\n  * component: fix \"ms.js\" repo location\n  * changed bower package name\n  * updated documentation about using debug in a browser\n  * fix: security error on safari (#167, #168, @yields)\n\n2.1.1 / 2014-12-29\n==================\n\n  * browser: use `typeof` to check for `console` existence\n  * browser: check for `console.log` truthiness (fix IE 8/9)\n  * browser: add support for Chrome apps\n  * Readme: added Windows usage remarks\n  * Add `bower.json` to properly support bower install\n\n2.1.0 / 2014-10-15\n==================\n\n  * node: implement `DEBUG_FD` env variable support\n  * package: update \"browserify\" to v6.1.0\n  * package: add \"license\" field to package.json (#135, @panuhorsmalahti)\n\n2.0.0 / 2014-09-01\n==================\n\n  * package: update \"browserify\" to v5.11.0\n  * node: use stderr rather than stdout for logging (#29, @stephenmathieson)\n\n1.0.4 / 2014-07-15\n==================\n\n  * dist: recompile\n  * example: remove `console.info()` log usage\n  * example: add \"Content-Type\" UTF-8 header to browser example\n  * browser: place %c marker after the space character\n  * browser: reset the \"content\" color via `color: inherit`\n  * browser: add colors support for Firefox >= v31\n  * debug: prefer an instance `log()` function over the global one (#119)\n  * Readme: update documentation about styled console logs for FF v31 (#116, @wryk)\n\n1.0.3 / 2014-07-09\n==================\n\n  * Add support for multiple wildcards in namespaces (#122, @seegno)\n  * browser: fix lint\n\n1.0.2 / 2014-06-10\n==================\n\n  * browser: update color palette (#113, @gscottolson)\n  * common: make console logging function configurable (#108, @timoxley)\n  * node: fix %o colors on old node <= 0.8.x\n  * Makefile: find node path using shell/which (#109, @timoxley)\n\n1.0.1 / 2014-06-06\n==================\n\n  * browser: use `removeItem()` to clear localStorage\n  * browser, node: don't set DEBUG if namespaces is undefined (#107, @leedm777)\n  * package: add \"contributors\" section\n  * node: fix comment typo\n  * README: list authors\n\n1.0.0 / 2014-06-04\n==================\n\n  * make ms diff be global, not be scope\n  * debug: ignore empty strings in enable()\n  * node: make DEBUG_COLORS able to disable coloring\n  * *: export the `colors` array\n  * npmignore: don't publish the `dist` dir\n  * Makefile: refactor to use browserify\n  * package: add \"browserify\" as a dev dependency\n  * Readme: add Web Inspector Colors section\n  * node: reset terminal color for the debug content\n  * node: map \"%o\" to `util.inspect()`\n  * browser: map \"%j\" to `JSON.stringify()`\n  * debug: add custom \"formatters\"\n  * debug: use \"ms\" module for humanizing the diff\n  * Readme: add \"bash\" syntax highlighting\n  * browser: add Firebug color support\n  * browser: add colors for WebKit browsers\n  * node: apply log to `console`\n  * rewrite: abstract common logic for Node & browsers\n  * add .jshintrc file\n\n0.8.1 / 2014-04-14\n==================\n\n  * package: re-add the \"component\" section\n\n0.8.0 / 2014-03-30\n==================\n\n  * add `enable()` method for nodejs. Closes #27\n  * change from stderr to stdout\n  * remove unnecessary index.js file\n\n0.7.4 / 2013-11-13\n==================\n\n  * remove \"browserify\" key from package.json (fixes something in browserify)\n\n0.7.3 / 2013-10-30\n==================\n\n  * fix: catch localStorage security error when cookies are blocked (Chrome)\n  * add debug(err) support. Closes #46\n  * add .browser prop to package.json. Closes #42\n\n0.7.2 / 2013-02-06\n==================\n\n  * fix package.json\n  * fix: Mobile Safari (private mode) is broken with debug\n  * fix: Use unicode to send escape character to shell instead of octal to work with strict mode javascript\n\n0.7.1 / 2013-02-05\n==================\n\n  * add repository URL to package.json\n  * add DEBUG_COLORED to force colored output\n  * add browserify support\n  * fix component. Closes #24\n\n0.7.0 / 2012-05-04\n==================\n\n  * Added .component to package.json\n  * Added debug.component.js build\n\n0.6.0 / 2012-03-16\n==================\n\n  * Added support for \"-\" prefix in DEBUG [Vinay Pulim]\n  * Added `.enabled` flag to the node version [TooTallNate]\n\n0.5.0 / 2012-02-02\n==================\n\n  * Added: humanize diffs. Closes #8\n  * Added `debug.disable()` to the CS variant\n  * Removed padding. Closes #10\n  * Fixed: persist client-side variant again. Closes #9\n\n0.4.0 / 2012-02-01\n==================\n\n  * Added browser variant support for older browsers [TooTallNate]\n  * Added `debug.enable('project:*')` to browser variant [TooTallNate]\n  * Added padding to diff (moved it to the right)\n\n0.3.0 / 2012-01-26\n==================\n\n  * Added millisecond diff when isatty, otherwise UTC string\n\n0.2.0 / 2012-01-22\n==================\n\n  * Added wildcard support\n\n0.1.0 / 2011-12-02\n==================\n\n  * Added: remove colors unless stderr isatty [TooTallNate]\n\n0.0.1 / 2010-01-03\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\debug\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\debug\\CHANGELOG.md"
  },
  {
    "Content": "// Karma configuration\n// Generated on Fri Dec 16 2016 13:09:51 GMT+0000 (UTC)\n\nmodule.exports = function(config) {\n  config.set({\n\n    // base path that will be used to resolve all patterns (eg. files, exclude)\n    basePath: '',\n\n\n    // frameworks to use\n    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n    frameworks: ['mocha', 'chai', 'sinon'],\n\n\n    // list of files / patterns to load in the browser\n    files: [\n      'dist/debug.js',\n      'test/*spec.js'\n    ],\n\n\n    // list of files to exclude\n    exclude: [\n      'src/node.js'\n    ],\n\n\n    // preprocess matching files before serving them to the browser\n    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\n    preprocessors: {\n    },\n\n    // test results reporter to use\n    // possible values: 'dots', 'progress'\n    // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n    reporters: ['progress'],\n\n\n    // web server port\n    port: 9876,\n\n\n    // enable / disable colors in the output (reporters and logs)\n    colors: true,\n\n\n    // level of logging\n    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n    logLevel: config.LOG_INFO,\n\n\n    // enable / disable watching file and executing tests whenever any file changes\n    autoWatch: true,\n\n\n    // start these browsers\n    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n    browsers: ['PhantomJS'],\n\n\n    // Continuous Integration mode\n    // if true, Karma captures browsers, runs the tests and exits\n    singleRun: false,\n\n    // Concurrency level\n    // how many browser should be started simultaneous\n    concurrency: Infinity\n  })\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\debug\\karma.conf.js",
    "RelativePath": "tools\\backend\\node_modules\\debug\\karma.conf.js"
  },
  {
    "Content": "module.exports = require('./src/node');\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\debug\\node.js",
    "RelativePath": "tools\\backend\\node_modules\\debug\\node.js"
  },
  {
    "Content": "# debug\n[![Build Status](https://travis-ci.org/visionmedia/debug.svg?branch=master)](https://travis-ci.org/visionmedia/debug)  [![Coverage Status](https://coveralls.io/repos/github/visionmedia/debug/badge.svg?branch=master)](https://coveralls.io/github/visionmedia/debug?branch=master)  [![Slack](https://visionmedia-community-slackin.now.sh/badge.svg)](https://visionmedia-community-slackin.now.sh/) [![OpenCollective](https://opencollective.com/debug/backers/badge.svg)](#backers) \n[![OpenCollective](https://opencollective.com/debug/sponsors/badge.svg)](#sponsors)\n\n\n\nA tiny node.js debugging utility modelled after node core's debugging technique.\n\n**Discussion around the V3 API is under way [here](https://github.com/visionmedia/debug/issues/370)**\n\n## Installation\n\n```bash\n$ npm install debug\n```\n\n## Usage\n\n`debug` exposes a function; simply pass this function the name of your module, and it will return a decorated version of `console.error` for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole.\n\nExample _app.js_:\n\n```js\nvar debug = require('debug')('http')\n  , http = require('http')\n  , name = 'My App';\n\n// fake app\n\ndebug('booting %s', name);\n\nhttp.createServer(function(req, res){\n  debug(req.method + ' ' + req.url);\n  res.end('hello\\n');\n}).listen(3000, function(){\n  debug('listening');\n});\n\n// fake worker of some kind\n\nrequire('./worker');\n```\n\nExample _worker.js_:\n\n```js\nvar debug = require('debug')('worker');\n\nsetInterval(function(){\n  debug('doing some work');\n}, 1000);\n```\n\n The __DEBUG__ environment variable is then used to enable these based on space or comma-delimited names. Here are some examples:\n\n  ![debug http and worker](http://f.cl.ly/items/18471z1H402O24072r1J/Screenshot.png)\n\n  ![debug worker](http://f.cl.ly/items/1X413v1a3M0d3C2c1E0i/Screenshot.png)\n\n#### Windows note\n\n On Windows the environment variable is set using the `set` command.\n\n ```cmd\n set DEBUG=*,-not_this\n ```\n\n Note that PowerShell uses different syntax to set environment variables.\n\n ```cmd\n $env:DEBUG = \"*,-not_this\"\n  ```\n\nThen, run the program to be debugged as usual.\n\n## Millisecond diff\n\n  When actively developing an application it can be useful to see when the time spent between one `debug()` call and the next. Suppose for example you invoke `debug()` before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls.\n\n  ![](http://f.cl.ly/items/2i3h1d3t121M2Z1A3Q0N/Screenshot.png)\n\n  When stdout is not a TTY, `Date#toUTCString()` is used, making it more useful for logging the debug information as shown below:\n\n  ![](http://f.cl.ly/items/112H3i0e0o0P0a2Q2r11/Screenshot.png)\n\n## Conventions\n\n  If you're using this in one or more of your libraries, you _should_ use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you _should_ prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\".\n\n## Wildcards\n\n  The `*` character may be used as a wildcard. Suppose for example your library has debuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\", instead of listing all three with `DEBUG=connect:bodyParser,connect:compress,connect:session`, you may simply do `DEBUG=connect:*`, or to run everything using this module simply use `DEBUG=*`.\n\n  You can also exclude specific debuggers by prefixing them with a \"-\" character.  For example, `DEBUG=*,-connect:*` would include all debuggers except those starting with \"connect:\".\n\n## Environment Variables\n\n  When running through Node.js, you can set a few environment variables that will\n  change the behavior of the debug logging:\n\n| Name      | Purpose                                         |\n|-----------|-------------------------------------------------|\n| `DEBUG`   | Enables/disables specific debugging namespaces. |\n| `DEBUG_COLORS`| Whether or not to use colors in the debug output. |\n| `DEBUG_DEPTH` | Object inspection depth. |\n| `DEBUG_SHOW_HIDDEN` | Shows hidden properties on inspected objects. |\n\n\n  __Note:__ The environment variables beginning with `DEBUG_` end up being\n  converted into an Options object that gets used with `%o`/`%O` formatters.\n  See the Node.js documentation for\n  [`util.inspect()`](https://nodejs.org/api/util.html#util_util_inspect_object_options)\n  for the complete list.\n\n## Formatters\n\n\n  Debug uses [printf-style](https://wikipedia.org/wiki/Printf_format_string) formatting. Below are the officially supported formatters:\n\n| Formatter | Representation |\n|-----------|----------------|\n| `%O`      | Pretty-print an Object on multiple lines. |\n| `%o`      | Pretty-print an Object all on a single line. |\n| `%s`      | String. |\n| `%d`      | Number (both integer and float). |\n| `%j`      | JSON. Replaced with the string '[Circular]' if the argument contains circular references. |\n| `%%`      | Single percent sign ('%'). This does not consume an argument. |\n\n### Custom formatters\n\n  You can add custom formatters by extending the `debug.formatters` object. For example, if you wanted to add support for rendering a Buffer as hex with `%h`, you could do something like:\n\n```js\nconst createDebug = require('debug')\ncreateDebug.formatters.h = (v) => {\n  return v.toString('hex')\n}\n\n// …elsewhere\nconst debug = createDebug('foo')\ndebug('this is hex: %h', new Buffer('hello world'))\n//   foo this is hex: 68656c6c6f20776f726c6421 +0ms\n```\n\n## Browser support\n  You can build a browser-ready script using [browserify](https://github.com/substack/node-browserify),\n  or just use the [browserify-as-a-service](https://wzrd.in/) [build](https://wzrd.in/standalone/debug@latest),\n  if you don't want to build it yourself.\n\n  Debug's enable state is currently persisted by `localStorage`.\n  Consider the situation shown below where you have `worker:a` and `worker:b`,\n  and wish to debug both. You can enable this using `localStorage.debug`:\n\n```js\nlocalStorage.debug = 'worker:*'\n```\n\nAnd then refresh the page.\n\n```js\na = debug('worker:a');\nb = debug('worker:b');\n\nsetInterval(function(){\n  a('doing some work');\n}, 1000);\n\nsetInterval(function(){\n  b('doing some work');\n}, 1200);\n```\n\n#### Web Inspector Colors\n\n  Colors are also enabled on \"Web Inspectors\" that understand the `%c` formatting\n  option. These are WebKit web inspectors, Firefox ([since version\n  31](https://hacks.mozilla.org/2014/05/editable-box-model-multiple-selection-sublime-text-keys-much-more-firefox-developer-tools-episode-31/))\n  and the Firebug plugin for Firefox (any version).\n\n  Colored output looks something like:\n\n  ![](https://cloud.githubusercontent.com/assets/71256/3139768/b98c5fd8-e8ef-11e3-862a-f7253b6f47c6.png)\n\n\n## Output streams\n\n  By default `debug` will log to stderr, however this can be configured per-namespace by overriding the `log` method:\n\nExample _stdout.js_:\n\n```js\nvar debug = require('debug');\nvar error = debug('app:error');\n\n// by default stderr is used\nerror('goes to stderr!');\n\nvar log = debug('app:log');\n// set this namespace to log via console.log\nlog.log = console.log.bind(console); // don't forget to bind to console!\nlog('goes to stdout');\nerror('still goes to stderr!');\n\n// set all output to go via console.info\n// overrides all per-namespace log settings\ndebug.log = console.info.bind(console);\nerror('now goes to stdout via console.info');\nlog('still goes to stdout, but via console.info now');\n```\n\n\n## Authors\n\n - TJ Holowaychuk\n - Nathan Rajlich\n - Andrew Rhyne\n \n## Backers\n\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/debug#backer)]\n\n<a href=\"https://opencollective.com/debug/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/29/avatar.svg\"></a>\n\n\n## Sponsors\n\nBecome a sponsor and get your logo on our README on Github with a link to your site. [[Become a sponsor](https://opencollective.com/debug#sponsor)]\n\n<a href=\"https://opencollective.com/debug/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/29/avatar.svg\"></a>\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2014-2016 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\debug\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\debug\\README.md"
  },
  {
    "Content": "/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\debug\\src\\browser.js",
    "RelativePath": "tools\\backend\\node_modules\\debug\\src\\browser.js"
  },
  {
    "Content": "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\debug\\src\\debug.js",
    "RelativePath": "tools\\backend\\node_modules\\debug\\src\\debug.js"
  },
  {
    "Content": "/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\debug\\src\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\debug\\src\\index.js"
  },
  {
    "Content": "module.exports = inspectorLog;\n\n// black hole\nconst nullStream = new (require('stream').Writable)();\nnullStream._write = () => {};\n\n/**\n * Outputs a `console.log()` to the Node.js Inspector console *only*.\n */\nfunction inspectorLog() {\n  const stdout = console._stdout;\n  console._stdout = nullStream;\n  console.log.apply(console, arguments);\n  console._stdout = stdout;\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\debug\\src\\inspector-log.js",
    "RelativePath": "tools\\backend\\node_modules\\debug\\src\\inspector-log.js"
  },
  {
    "Content": "/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\debug\\src\\node.js",
    "RelativePath": "tools\\backend\\node_modules\\debug\\src\\node.js"
  },
  {
    "Content": "2.0.0 / 2018-10-26\n==================\n\n  * Drop support for Node.js 0.6\n  * Replace internal `eval` usage with `Function` constructor\n  * Use instance methods on `process` to check for listeners\n\n1.1.2 / 2018-01-11\n==================\n\n  * perf: remove argument reassignment\n  * Support Node.js 0.6 to 9.x\n\n1.1.1 / 2017-07-27\n==================\n\n  * Remove unnecessary `Buffer` loading\n  * Support Node.js 0.6 to 8.x\n\n1.1.0 / 2015-09-14\n==================\n\n  * Enable strict mode in more places\n  * Support io.js 3.x\n  * Support io.js 2.x\n  * Support web browser loading\n    - Requires bundler like Browserify or webpack\n\n1.0.1 / 2015-04-07\n==================\n\n  * Fix `TypeError`s when under `'use strict'` code\n  * Fix useless type name on auto-generated messages\n  * Support io.js 1.x\n  * Support Node.js 0.12\n\n1.0.0 / 2014-09-17\n==================\n\n  * No changes\n\n0.4.5 / 2014-09-09\n==================\n\n  * Improve call speed to functions using the function wrapper\n  * Support Node.js 0.6\n\n0.4.4 / 2014-07-27\n==================\n\n  * Work-around v8 generating empty stack traces\n\n0.4.3 / 2014-07-26\n==================\n\n  * Fix exception when global `Error.stackTraceLimit` is too low\n\n0.4.2 / 2014-07-19\n==================\n\n  * Correct call site for wrapped functions and properties\n\n0.4.1 / 2014-07-19\n==================\n\n  * Improve automatic message generation for function properties\n\n0.4.0 / 2014-07-19\n==================\n\n  * Add `TRACE_DEPRECATION` environment variable\n  * Remove non-standard grey color from color output\n  * Support `--no-deprecation` argument\n  * Support `--trace-deprecation` argument\n  * Support `deprecate.property(fn, prop, message)`\n\n0.3.0 / 2014-06-16\n==================\n\n  * Add `NO_DEPRECATION` environment variable\n\n0.2.0 / 2014-06-15\n==================\n\n  * Add `deprecate.property(obj, prop, message)`\n  * Remove `supports-color` dependency for node.js 0.8\n\n0.1.0 / 2014-06-15\n==================\n\n  * Add `deprecate.function(fn, message)`\n  * Add `process.on('deprecation', fn)` emitter\n  * Automatically generate message when omitted from `deprecate()`\n\n0.0.1 / 2014-06-15\n==================\n\n  * Fix warning for dynamic calls at singe call site\n\n0.0.0 / 2014-06-15\n==================\n\n  * Initial implementation\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\depd\\History.md",
    "RelativePath": "tools\\backend\\node_modules\\depd\\History.md"
  },
  {
    "Content": "/*!\n * depd\n * Copyright(c) 2014-2018 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar relative = require('path').relative\n\n/**\n * Module exports.\n */\n\nmodule.exports = depd\n\n/**\n * Get the path to base files on.\n */\n\nvar basePath = process.cwd()\n\n/**\n * Determine if namespace is contained in the string.\n */\n\nfunction containsNamespace (str, namespace) {\n  var vals = str.split(/[ ,]+/)\n  var ns = String(namespace).toLowerCase()\n\n  for (var i = 0; i < vals.length; i++) {\n    var val = vals[i]\n\n    // namespace contained\n    if (val && (val === '*' || val.toLowerCase() === ns)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Convert a data descriptor to accessor descriptor.\n */\n\nfunction convertDataDescriptorToAccessor (obj, prop, message) {\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n  var value = descriptor.value\n\n  descriptor.get = function getter () { return value }\n\n  if (descriptor.writable) {\n    descriptor.set = function setter (val) { return (value = val) }\n  }\n\n  delete descriptor.value\n  delete descriptor.writable\n\n  Object.defineProperty(obj, prop, descriptor)\n\n  return descriptor\n}\n\n/**\n * Create arguments string to keep arity.\n */\n\nfunction createArgumentsString (arity) {\n  var str = ''\n\n  for (var i = 0; i < arity; i++) {\n    str += ', arg' + i\n  }\n\n  return str.substr(2)\n}\n\n/**\n * Create stack string from stack.\n */\n\nfunction createStackString (stack) {\n  var str = this.name + ': ' + this.namespace\n\n  if (this.message) {\n    str += ' deprecated ' + this.message\n  }\n\n  for (var i = 0; i < stack.length; i++) {\n    str += '\\n    at ' + stack[i].toString()\n  }\n\n  return str\n}\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n  var file = site[0]\n\n  function deprecate (message) {\n    // call to self as log\n    log.call(deprecate, message)\n  }\n\n  deprecate._file = file\n  deprecate._ignored = isignored(namespace)\n  deprecate._namespace = namespace\n  deprecate._traced = istraced(namespace)\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Determine if event emitter has listeners of a given type.\n *\n * The way to do this check is done three different ways in Node.js >= 0.8\n * so this consolidates them into a minimal set using instance methods.\n *\n * @param {EventEmitter} emitter\n * @param {string} type\n * @returns {boolean}\n * @private\n */\n\nfunction eehaslisteners (emitter, type) {\n  var count = typeof emitter.listenerCount !== 'function'\n    ? emitter.listeners(type).length\n    : emitter.listenerCount(type)\n\n  return count > 0\n}\n\n/**\n * Determine if namespace is ignored.\n */\n\nfunction isignored (namespace) {\n  if (process.noDeprecation) {\n    // --no-deprecation support\n    return true\n  }\n\n  var str = process.env.NO_DEPRECATION || ''\n\n  // namespace ignored\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Determine if namespace is traced.\n */\n\nfunction istraced (namespace) {\n  if (process.traceDeprecation) {\n    // --trace-deprecation support\n    return true\n  }\n\n  var str = process.env.TRACE_DEPRECATION || ''\n\n  // namespace traced\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Display deprecation message.\n */\n\nfunction log (message, site) {\n  var haslisteners = eehaslisteners(process, 'deprecation')\n\n  // abort early if no destination\n  if (!haslisteners && this._ignored) {\n    return\n  }\n\n  var caller\n  var callFile\n  var callSite\n  var depSite\n  var i = 0\n  var seen = false\n  var stack = getStack()\n  var file = this._file\n\n  if (site) {\n    // provided site\n    depSite = site\n    callSite = callSiteLocation(stack[1])\n    callSite.name = depSite.name\n    file = callSite[0]\n  } else {\n    // get call site\n    i = 2\n    depSite = callSiteLocation(stack[i])\n    callSite = depSite\n  }\n\n  // get caller of deprecated thing in relation to file\n  for (; i < stack.length; i++) {\n    caller = callSiteLocation(stack[i])\n    callFile = caller[0]\n\n    if (callFile === file) {\n      seen = true\n    } else if (callFile === this._file) {\n      file = this._file\n    } else if (seen) {\n      break\n    }\n  }\n\n  var key = caller\n    ? depSite.join(':') + '__' + caller.join(':')\n    : undefined\n\n  if (key !== undefined && key in this._warned) {\n    // already warned\n    return\n  }\n\n  this._warned[key] = true\n\n  // generate automatic message from call site\n  var msg = message\n  if (!msg) {\n    msg = callSite === depSite || !callSite.name\n      ? defaultMessage(depSite)\n      : defaultMessage(callSite)\n  }\n\n  // emit deprecation if listeners exist\n  if (haslisteners) {\n    var err = DeprecationError(this._namespace, msg, stack.slice(i))\n    process.emit('deprecation', err)\n    return\n  }\n\n  // format and write message\n  var format = process.stderr.isTTY\n    ? formatColor\n    : formatPlain\n  var output = format.call(this, msg, caller, stack.slice(i))\n  process.stderr.write(output + '\\n', 'utf8')\n}\n\n/**\n * Get call site location as array.\n */\n\nfunction callSiteLocation (callSite) {\n  var file = callSite.getFileName() || '<anonymous>'\n  var line = callSite.getLineNumber()\n  var colm = callSite.getColumnNumber()\n\n  if (callSite.isEval()) {\n    file = callSite.getEvalOrigin() + ', ' + file\n  }\n\n  var site = [file, line, colm]\n\n  site.callSite = callSite\n  site.name = callSite.getFunctionName()\n\n  return site\n}\n\n/**\n * Generate a default message from the site.\n */\n\nfunction defaultMessage (site) {\n  var callSite = site.callSite\n  var funcName = site.name\n\n  // make useful anonymous name\n  if (!funcName) {\n    funcName = '<anonymous@' + formatLocation(site) + '>'\n  }\n\n  var context = callSite.getThis()\n  var typeName = context && callSite.getTypeName()\n\n  // ignore useless type name\n  if (typeName === 'Object') {\n    typeName = undefined\n  }\n\n  // make useful type name\n  if (typeName === 'Function') {\n    typeName = context.name || typeName\n  }\n\n  return typeName && callSite.getMethodName()\n    ? typeName + '.' + funcName\n    : funcName\n}\n\n/**\n * Format deprecation message without color.\n */\n\nfunction formatPlain (msg, caller, stack) {\n  var timestamp = new Date().toUTCString()\n\n  var formatted = timestamp +\n    ' ' + this._namespace +\n    ' deprecated ' + msg\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    at ' + stack[i].toString()\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' at ' + formatLocation(caller)\n  }\n\n  return formatted\n}\n\n/**\n * Format deprecation message with color.\n */\n\nfunction formatColor (msg, caller, stack) {\n  var formatted = '\\x1b[36;1m' + this._namespace + '\\x1b[22;39m' + // bold cyan\n    ' \\x1b[33;1mdeprecated\\x1b[22;39m' + // bold yellow\n    ' \\x1b[0m' + msg + '\\x1b[39m' // reset\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    \\x1b[36mat ' + stack[i].toString() + '\\x1b[39m' // cyan\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' \\x1b[36m' + formatLocation(caller) + '\\x1b[39m' // cyan\n  }\n\n  return formatted\n}\n\n/**\n * Format call site location.\n */\n\nfunction formatLocation (callSite) {\n  return relative(basePath, callSite[0]) +\n    ':' + callSite[1] +\n    ':' + callSite[2]\n}\n\n/**\n * Get the stack as array of call sites.\n */\n\nfunction getStack () {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = Math.max(10, limit)\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice this function off the top\n  var stack = obj.stack.slice(1)\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack\n}\n\n/**\n * Capture call site stack from v8.\n */\n\nfunction prepareObjectStackTrace (obj, stack) {\n  return stack\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n */\n\nfunction wrapfunction (fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  var args = createArgumentsString(fn.length)\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  site.name = fn.name\n\n  // eslint-disable-next-line no-new-func\n  var deprecatedfn = new Function('fn', 'log', 'deprecate', 'message', 'site',\n    '\"use strict\"\\n' +\n    'return function (' + args + ') {' +\n    'log.call(deprecate, message, site)\\n' +\n    'return fn.apply(this, arguments)\\n' +\n    '}')(fn, log, this, message, site)\n\n  return deprecatedfn\n}\n\n/**\n * Wrap property in a deprecation message.\n */\n\nfunction wrapproperty (obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n\n  var deprecate = this\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  // set site name\n  site.name = prop\n\n  // convert data descriptor\n  if ('value' in descriptor) {\n    descriptor = convertDataDescriptorToAccessor(obj, prop, message)\n  }\n\n  var get = descriptor.get\n  var set = descriptor.set\n\n  // wrap getter\n  if (typeof get === 'function') {\n    descriptor.get = function getter () {\n      log.call(deprecate, message, site)\n      return get.apply(this, arguments)\n    }\n  }\n\n  // wrap setter\n  if (typeof set === 'function') {\n    descriptor.set = function setter () {\n      log.call(deprecate, message, site)\n      return set.apply(this, arguments)\n    }\n  }\n\n  Object.defineProperty(obj, prop, descriptor)\n}\n\n/**\n * Create DeprecationError for deprecation\n */\n\nfunction DeprecationError (namespace, message, stack) {\n  var error = new Error()\n  var stackString\n\n  Object.defineProperty(error, 'constructor', {\n    value: DeprecationError\n  })\n\n  Object.defineProperty(error, 'message', {\n    configurable: true,\n    enumerable: false,\n    value: message,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'name', {\n    enumerable: false,\n    configurable: true,\n    value: 'DeprecationError',\n    writable: true\n  })\n\n  Object.defineProperty(error, 'namespace', {\n    configurable: true,\n    enumerable: false,\n    value: namespace,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'stack', {\n    configurable: true,\n    enumerable: false,\n    get: function () {\n      if (stackString !== undefined) {\n        return stackString\n      }\n\n      // prepare stack trace\n      return (stackString = createStackString.call(this, stack))\n    },\n    set: function setter (val) {\n      stackString = val\n    }\n  })\n\n  return error\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\depd\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\depd\\index.js"
  },
  {
    "Content": "# depd\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Node.js Version][node-image]][node-url]\n[![Linux Build][travis-image]][travis-url]\n[![Windows Build][appveyor-image]][appveyor-url]\n[![Coverage Status][coveralls-image]][coveralls-url]\n\nDeprecate all the things\n\n> With great modules comes great responsibility; mark things deprecated!\n\n## Install\n\nThis module is installed directly using `npm`:\n\n```sh\n$ npm install depd\n```\n\nThis module can also be bundled with systems like\n[Browserify](http://browserify.org/) or [webpack](https://webpack.github.io/),\nthough by default this module will alter it's API to no longer display or\ntrack deprecations.\n\n## API\n\n<!-- eslint-disable no-unused-vars -->\n\n```js\nvar deprecate = require('depd')('my-module')\n```\n\nThis library allows you to display deprecation messages to your users.\nThis library goes above and beyond with deprecation warnings by\nintrospection of the call stack (but only the bits that it is interested\nin).\n\nInstead of just warning on the first invocation of a deprecated\nfunction and never again, this module will warn on the first invocation\nof a deprecated function per unique call site, making it ideal to alert\nusers of all deprecated uses across the code base, rather than just\nwhatever happens to execute first.\n\nThe deprecation warnings from this module also include the file and line\ninformation for the call into the module that the deprecated function was\nin.\n\n**NOTE** this library has a similar interface to the `debug` module, and\nthis module uses the calling file to get the boundary for the call stacks,\nso you should always create a new `deprecate` object in each file and not\nwithin some central file.\n\n### depd(namespace)\n\nCreate a new deprecate function that uses the given namespace name in the\nmessages and will display the call site prior to the stack entering the\nfile this function was called from. It is highly suggested you use the\nname of your module as the namespace.\n\n### deprecate(message)\n\nCall this function from deprecated code to display a deprecation message.\nThis message will appear once per unique caller site. Caller site is the\nfirst call site in the stack in a different file from the caller of this\nfunction.\n\nIf the message is omitted, a message is generated for you based on the site\nof the `deprecate()` call and will display the name of the function called,\nsimilar to the name displayed in a stack trace.\n\n### deprecate.function(fn, message)\n\nCall this function to wrap a given function in a deprecation message on any\ncall to the function. An optional message can be supplied to provide a custom\nmessage.\n\n### deprecate.property(obj, prop, message)\n\nCall this function to wrap a given property on object in a deprecation message\non any accessing or setting of the property. An optional message can be supplied\nto provide a custom message.\n\nThe method must be called on the object where the property belongs (not\ninherited from the prototype).\n\nIf the property is a data descriptor, it will be converted to an accessor\ndescriptor in order to display the deprecation message.\n\n### process.on('deprecation', fn)\n\nThis module will allow easy capturing of deprecation errors by emitting the\nerrors as the type \"deprecation\" on the global `process`. If there are no\nlisteners for this type, the errors are written to STDERR as normal, but if\nthere are any listeners, nothing will be written to STDERR and instead only\nemitted. From there, you can write the errors in a different format or to a\nlogging source.\n\nThe error represents the deprecation and is emitted only once with the same\nrules as writing to STDERR. The error has the following properties:\n\n  - `message` - This is the message given by the library\n  - `name` - This is always `'DeprecationError'`\n  - `namespace` - This is the namespace the deprecation came from\n  - `stack` - This is the stack of the call to the deprecated thing\n\nExample `error.stack` output:\n\n```\nDeprecationError: my-cool-module deprecated oldfunction\n    at Object.<anonymous> ([eval]-wrapper:6:22)\n    at Module._compile (module.js:456:26)\n    at evalScript (node.js:532:25)\n    at startup (node.js:80:7)\n    at node.js:902:3\n```\n\n### process.env.NO_DEPRECATION\n\nAs a user of modules that are deprecated, the environment variable `NO_DEPRECATION`\nis provided as a quick solution to silencing deprecation warnings from being\noutput. The format of this is similar to that of `DEBUG`:\n\n```sh\n$ NO_DEPRECATION=my-module,othermod node app.js\n```\n\nThis will suppress deprecations from being output for \"my-module\" and \"othermod\".\nThe value is a list of comma-separated namespaces. To suppress every warning\nacross all namespaces, use the value `*` for a namespace.\n\nProviding the argument `--no-deprecation` to the `node` executable will suppress\nall deprecations (only available in Node.js 0.8 or higher).\n\n**NOTE** This will not suppress the deperecations given to any \"deprecation\"\nevent listeners, just the output to STDERR.\n\n### process.env.TRACE_DEPRECATION\n\nAs a user of modules that are deprecated, the environment variable `TRACE_DEPRECATION`\nis provided as a solution to getting more detailed location information in deprecation\nwarnings by including the entire stack trace. The format of this is the same as\n`NO_DEPRECATION`:\n\n```sh\n$ TRACE_DEPRECATION=my-module,othermod node app.js\n```\n\nThis will include stack traces for deprecations being output for \"my-module\" and\n\"othermod\". The value is a list of comma-separated namespaces. To trace every\nwarning across all namespaces, use the value `*` for a namespace.\n\nProviding the argument `--trace-deprecation` to the `node` executable will trace\nall deprecations (only available in Node.js 0.8 or higher).\n\n**NOTE** This will not trace the deperecations silenced by `NO_DEPRECATION`.\n\n## Display\n\n![message](files/message.png)\n\nWhen a user calls a function in your library that you mark deprecated, they\nwill see the following written to STDERR (in the given colors, similar colors\nand layout to the `debug` module):\n\n```\nbright cyan    bright yellow\n|              |          reset       cyan\n|              |          |           |\n▼              ▼          ▼           ▼\nmy-cool-module deprecated oldfunction [eval]-wrapper:6:22\n▲              ▲          ▲           ▲\n|              |          |           |\nnamespace      |          |           location of mycoolmod.oldfunction() call\n               |          deprecation message\n               the word \"deprecated\"\n```\n\nIf the user redirects their STDERR to a file or somewhere that does not support\ncolors, they see (similar layout to the `debug` module):\n\n```\nSun, 15 Jun 2014 05:21:37 GMT my-cool-module deprecated oldfunction at [eval]-wrapper:6:22\n▲                             ▲              ▲          ▲              ▲\n|                             |              |          |              |\ntimestamp of message          namespace      |          |             location of mycoolmod.oldfunction() call\n                                             |          deprecation message\n                                             the word \"deprecated\"\n```\n\n## Examples\n\n### Deprecating all calls to a function\n\nThis will display a deprecated message about \"oldfunction\" being deprecated\nfrom \"my-module\" on STDERR.\n\n```js\nvar deprecate = require('depd')('my-cool-module')\n\n// message automatically derived from function name\n// Object.oldfunction\nexports.oldfunction = deprecate.function(function oldfunction () {\n  // all calls to function are deprecated\n})\n\n// specific message\nexports.oldfunction = deprecate.function(function () {\n  // all calls to function are deprecated\n}, 'oldfunction')\n```\n\n### Conditionally deprecating a function call\n\nThis will display a deprecated message about \"weirdfunction\" being deprecated\nfrom \"my-module\" on STDERR when called with less than 2 arguments.\n\n```js\nvar deprecate = require('depd')('my-cool-module')\n\nexports.weirdfunction = function () {\n  if (arguments.length < 2) {\n    // calls with 0 or 1 args are deprecated\n    deprecate('weirdfunction args < 2')\n  }\n}\n```\n\nWhen calling `deprecate` as a function, the warning is counted per call site\nwithin your own module, so you can display different deprecations depending\non different situations and the users will still get all the warnings:\n\n```js\nvar deprecate = require('depd')('my-cool-module')\n\nexports.weirdfunction = function () {\n  if (arguments.length < 2) {\n    // calls with 0 or 1 args are deprecated\n    deprecate('weirdfunction args < 2')\n  } else if (typeof arguments[0] !== 'string') {\n    // calls with non-string first argument are deprecated\n    deprecate('weirdfunction non-string first arg')\n  }\n}\n```\n\n### Deprecating property access\n\nThis will display a deprecated message about \"oldprop\" being deprecated\nfrom \"my-module\" on STDERR when accessed. A deprecation will be displayed\nwhen setting the value and when getting the value.\n\n```js\nvar deprecate = require('depd')('my-cool-module')\n\nexports.oldprop = 'something'\n\n// message automatically derives from property name\ndeprecate.property(exports, 'oldprop')\n\n// explicit message\ndeprecate.property(exports, 'oldprop', 'oldprop >= 0.10')\n```\n\n## License\n\n[MIT](LICENSE)\n\n[appveyor-image]: https://badgen.net/appveyor/ci/dougwilson/nodejs-depd/master?label=windows\n[appveyor-url]: https://ci.appveyor.com/project/dougwilson/nodejs-depd\n[coveralls-image]: https://badgen.net/coveralls/c/github/dougwilson/nodejs-depd/master\n[coveralls-url]: https://coveralls.io/r/dougwilson/nodejs-depd?branch=master\n[node-image]: https://badgen.net/npm/node/depd\n[node-url]: https://nodejs.org/en/download/\n[npm-downloads-image]: https://badgen.net/npm/dm/depd\n[npm-url]: https://npmjs.org/package/depd\n[npm-version-image]: https://badgen.net/npm/v/depd\n[travis-image]: https://badgen.net/travis/dougwilson/nodejs-depd/master?label=linux\n[travis-url]: https://travis-ci.org/dougwilson/nodejs-depd\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\depd\\Readme.md",
    "RelativePath": "tools\\backend\\node_modules\\depd\\Readme.md"
  },
  {
    "Content": "/*!\n * depd\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = depd\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  function deprecate (message) {\n    // no-op in browser\n  }\n\n  deprecate._file = undefined\n  deprecate._ignored = true\n  deprecate._namespace = namespace\n  deprecate._traced = false\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n *\n * This is a no-op version of the wrapper, which does nothing but call\n * validation.\n */\n\nfunction wrapfunction (fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  return fn\n}\n\n/**\n * Wrap property in a deprecation message.\n *\n * This is a no-op version of the wrapper, which does nothing but call\n * validation.\n */\n\nfunction wrapproperty (obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\depd\\lib\\browser\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\depd\\lib\\browser\\index.js"
  },
  {
    "Content": "/*!\n * destroy\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar EventEmitter = require('events').EventEmitter\nvar ReadStream = require('fs').ReadStream\nvar Stream = require('stream')\nvar Zlib = require('zlib')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = destroy\n\n/**\n * Destroy the given stream, and optionally suppress any future `error` events.\n *\n * @param {object} stream\n * @param {boolean} suppress\n * @public\n */\n\nfunction destroy (stream, suppress) {\n  if (isFsReadStream(stream)) {\n    destroyReadStream(stream)\n  } else if (isZlibStream(stream)) {\n    destroyZlibStream(stream)\n  } else if (hasDestroy(stream)) {\n    stream.destroy()\n  }\n\n  if (isEventEmitter(stream) && suppress) {\n    stream.removeAllListeners('error')\n    stream.addListener('error', noop)\n  }\n\n  return stream\n}\n\n/**\n * Destroy a ReadStream.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyReadStream (stream) {\n  stream.destroy()\n\n  if (typeof stream.close === 'function') {\n    // node.js core bug work-around\n    stream.on('open', onOpenClose)\n  }\n}\n\n/**\n * Close a Zlib stream.\n *\n * Zlib streams below Node.js 4.5.5 have a buggy implementation\n * of .close() when zlib encountered an error.\n *\n * @param {object} stream\n * @private\n */\n\nfunction closeZlibStream (stream) {\n  if (stream._hadError === true) {\n    var prop = stream._binding === null\n      ? '_binding'\n      : '_handle'\n\n    stream[prop] = {\n      close: function () { this[prop] = null }\n    }\n  }\n\n  stream.close()\n}\n\n/**\n * Destroy a Zlib stream.\n *\n * Zlib streams don't have a destroy function in Node.js 6. On top of that\n * simply calling destroy on a zlib stream in Node.js 8+ will result in a\n * memory leak. So until that is fixed, we need to call both close AND destroy.\n *\n * PR to fix memory leak: https://github.com/nodejs/node/pull/23734\n *\n * In Node.js 6+8, it's important that destroy is called before close as the\n * stream would otherwise emit the error 'zlib binding closed'.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyZlibStream (stream) {\n  if (typeof stream.destroy === 'function') {\n    // node.js core bug work-around\n    // istanbul ignore if: node.js 0.8\n    if (stream._binding) {\n      // node.js < 0.10.0\n      stream.destroy()\n      if (stream._processing) {\n        stream._needDrain = true\n        stream.once('drain', onDrainClearBinding)\n      } else {\n        stream._binding.clear()\n      }\n    } else if (stream._destroy && stream._destroy !== Stream.Transform.prototype._destroy) {\n      // node.js >= 12, ^11.1.0, ^10.15.1\n      stream.destroy()\n    } else if (stream._destroy && typeof stream.close === 'function') {\n      // node.js 7, 8\n      stream.destroyed = true\n      stream.close()\n    } else {\n      // fallback\n      // istanbul ignore next\n      stream.destroy()\n    }\n  } else if (typeof stream.close === 'function') {\n    // node.js < 8 fallback\n    closeZlibStream(stream)\n  }\n}\n\n/**\n * Determine if stream has destroy.\n * @private\n */\n\nfunction hasDestroy (stream) {\n  return stream instanceof Stream &&\n    typeof stream.destroy === 'function'\n}\n\n/**\n * Determine if val is EventEmitter.\n * @private\n */\n\nfunction isEventEmitter (val) {\n  return val instanceof EventEmitter\n}\n\n/**\n * Determine if stream is fs.ReadStream stream.\n * @private\n */\n\nfunction isFsReadStream (stream) {\n  return stream instanceof ReadStream\n}\n\n/**\n * Determine if stream is Zlib stream.\n * @private\n */\n\nfunction isZlibStream (stream) {\n  return stream instanceof Zlib.Gzip ||\n    stream instanceof Zlib.Gunzip ||\n    stream instanceof Zlib.Deflate ||\n    stream instanceof Zlib.DeflateRaw ||\n    stream instanceof Zlib.Inflate ||\n    stream instanceof Zlib.InflateRaw ||\n    stream instanceof Zlib.Unzip\n}\n\n/**\n * No-op function.\n * @private\n */\n\nfunction noop () {}\n\n/**\n * On drain handler to clear binding.\n * @private\n */\n\n// istanbul ignore next: node.js 0.8\nfunction onDrainClearBinding () {\n  this._binding.clear()\n}\n\n/**\n * On open handler to close stream.\n * @private\n */\n\nfunction onOpenClose () {\n  if (typeof this.fd === 'number') {\n    // actually close down the fd\n    this.close()\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\destroy\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\destroy\\index.js"
  },
  {
    "Content": "# destroy\n\n[![NPM version][npm-image]][npm-url]\n[![Build Status][github-actions-ci-image]][github-actions-ci-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\nDestroy a stream.\n\nThis module is meant to ensure a stream gets destroyed, handling different APIs\nand Node.js bugs.\n\n## API\n\n```js\nvar destroy = require('destroy')\n```\n\n### destroy(stream [, suppress])\n\nDestroy the given stream, and optionally suppress any future `error` events.\n\nIn most cases, this is identical to a simple `stream.destroy()` call. The rules\nare as follows for a given stream:\n\n  1. If the `stream` is an instance of `ReadStream`, then call `stream.destroy()`\n     and add a listener to the `open` event to call `stream.close()` if it is\n     fired. This is for a Node.js bug that will leak a file descriptor if\n     `.destroy()` is called before `open`.\n  2. If the `stream` is an instance of a zlib stream, then call `stream.destroy()`\n     and close the underlying zlib handle if open, otherwise call `stream.close()`.\n     This is for consistency across Node.js versions and a Node.js bug that will\n     leak a native zlib handle.\n  3. If the `stream` is not an instance of `Stream`, then nothing happens.\n  4. If the `stream` has a `.destroy()` method, then call it.\n\nThe function returns the `stream` passed in as the argument.\n\n## Example\n\n```js\nvar destroy = require('destroy')\n\nvar fs = require('fs')\nvar stream = fs.createReadStream('package.json')\n\n// ... and later\ndestroy(stream)\n```\n\n[npm-image]: https://img.shields.io/npm/v/destroy.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/destroy\n[github-tag]: http://img.shields.io/github/tag/stream-utils/destroy.svg?style=flat-square\n[github-url]: https://github.com/stream-utils/destroy/tags\n[coveralls-image]: https://img.shields.io/coveralls/stream-utils/destroy.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/stream-utils/destroy?branch=master\n[license-image]: http://img.shields.io/npm/l/destroy.svg?style=flat-square\n[license-url]: LICENSE.md\n[downloads-image]: http://img.shields.io/npm/dm/destroy.svg?style=flat-square\n[downloads-url]: https://npmjs.org/package/destroy\n[github-actions-ci-image]: https://img.shields.io/github/workflow/status/stream-utils/destroy/ci/master?label=ci&style=flat-square\n[github-actions-ci-url]: https://github.com/stream-utils/destroy/actions/workflows/ci.yml\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\destroy\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\destroy\\README.md"
  },
  {
    "Content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v1.0.1](https://github.com/es-shims/dunder-proto/compare/v1.0.0...v1.0.1) - 2024-12-16\n\n### Commits\n\n- [Fix] do not crash when `--disable-proto=throw` [`6c367d9`](https://github.com/es-shims/dunder-proto/commit/6c367d919bc1604778689a297bbdbfea65752847)\n- [Tests] ensure noproto tests only use the current version of dunder-proto [`b02365b`](https://github.com/es-shims/dunder-proto/commit/b02365b9cf889c4a2cac7be0c3cfc90a789af36c)\n- [Dev Deps] update `@arethetypeswrong/cli`, `@types/tape` [`e3c5c3b`](https://github.com/es-shims/dunder-proto/commit/e3c5c3bd81cf8cef7dff2eca19e558f0e307f666)\n- [Deps] update `call-bind-apply-helpers` [`19f1da0`](https://github.com/es-shims/dunder-proto/commit/19f1da028b8dd0d05c85bfd8f7eed2819b686450)\n\n## v1.0.0 - 2024-12-06\n\n### Commits\n\n- Initial implementation, tests, readme, types [`a5b74b0`](https://github.com/es-shims/dunder-proto/commit/a5b74b0082f5270cb0905cd9a2e533cee7498373)\n- Initial commit [`73fb5a3`](https://github.com/es-shims/dunder-proto/commit/73fb5a353b51ac2ab00c9fdeb0114daffd4c07a8)\n- npm init [`80152dc`](https://github.com/es-shims/dunder-proto/commit/80152dc98155da4eb046d9f67a87ed96e8280a1d)\n- Only apps should have lockfiles [`03e6660`](https://github.com/es-shims/dunder-proto/commit/03e6660a1d70dc401f3e217a031475ec537243dd)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\dunder-proto\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\dunder-proto\\CHANGELOG.md"
  },
  {
    "Content": "'use strict';\n\nvar callBind = require('call-bind-apply-helpers');\nvar gOPD = require('gopd');\n\nvar hasProtoAccessor;\ntry {\n\t// eslint-disable-next-line no-extra-parens, no-proto\n\thasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */ ([]).__proto__ === Array.prototype;\n} catch (e) {\n\tif (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {\n\t\tthrow e;\n\t}\n}\n\n// eslint-disable-next-line no-extra-parens\nvar desc = !!hasProtoAccessor && gOPD && gOPD(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));\n\nvar $Object = Object;\nvar $getPrototypeOf = $Object.getPrototypeOf;\n\n/** @type {import('./get')} */\nmodule.exports = desc && typeof desc.get === 'function'\n\t? callBind([desc.get])\n\t: typeof $getPrototypeOf === 'function'\n\t\t? /** @type {import('./get')} */ function getDunder(value) {\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\treturn $getPrototypeOf(value == null ? value : $Object(value));\n\t\t}\n\t\t: false;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\dunder-proto\\get.js",
    "RelativePath": "tools\\backend\\node_modules\\dunder-proto\\get.js"
  },
  {
    "Content": "# dunder-proto <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\nIf available, the `Object.prototype.__proto__` accessor and mutator, call-bound.\n\n## Getting started\n\n```sh\nnpm install --save dunder-proto\n```\n\n## Usage/Examples\n\n```js\nconst assert = require('assert');\nconst getDunder = require('dunder-proto/get');\nconst setDunder = require('dunder-proto/set');\n\nconst obj = {};\n\nassert.equal('toString' in obj, true);\nassert.equal(getDunder(obj), Object.prototype);\n\nsetDunder(obj, null);\n\nassert.equal('toString' in obj, false);\nassert.equal(getDunder(obj), null);\n```\n\n## Tests\n\nClone the repo, `npm install`, and run `npm test`\n\n[package-url]: https://npmjs.org/package/dunder-proto\n[npm-version-svg]: https://versionbadg.es/es-shims/dunder-proto.svg\n[deps-svg]: https://david-dm.org/es-shims/dunder-proto.svg\n[deps-url]: https://david-dm.org/es-shims/dunder-proto\n[dev-deps-svg]: https://david-dm.org/es-shims/dunder-proto/dev-status.svg\n[dev-deps-url]: https://david-dm.org/es-shims/dunder-proto#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/dunder-proto.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/dunder-proto.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/dunder-proto.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=dunder-proto\n[codecov-image]: https://codecov.io/gh/es-shims/dunder-proto/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/es-shims/dunder-proto/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/es-shims/dunder-proto\n[actions-url]: https://github.com/es-shims/dunder-proto/actions\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\dunder-proto\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\dunder-proto\\README.md"
  },
  {
    "Content": "'use strict';\n\nvar callBind = require('call-bind-apply-helpers');\nvar gOPD = require('gopd');\nvar $TypeError = require('es-errors/type');\n\n/** @type {{ __proto__?: object | null }} */\nvar obj = {};\ntry {\n\tobj.__proto__ = null; // eslint-disable-line no-proto\n} catch (e) {\n\tif (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {\n\t\tthrow e;\n\t}\n}\n\nvar hasProtoMutator = !('toString' in obj);\n\n// eslint-disable-next-line no-extra-parens\nvar desc = gOPD && gOPD(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));\n\n/** @type {import('./set')} */\nmodule.exports = hasProtoMutator && (\n// eslint-disable-next-line no-extra-parens\n\t(!!desc && typeof desc.set === 'function' && /** @type {import('./set')} */ (callBind([desc.set])))\n\t|| /** @type {import('./set')} */ function setDunder(object, proto) {\n\t\t// this is node v0.10 or older, which doesn't have Object.setPrototypeOf and has undeniable __proto__\n\t\tif (object == null) { // eslint-disable-line eqeqeq\n\t\t\tthrow new $TypeError('set Object.prototype.__proto__ called on null or undefined');\n\t\t}\n\t\t// eslint-disable-next-line no-proto, no-param-reassign, no-extra-parens\n\t\t/** @type {{ __proto__?: object | null }} */ (object).__proto__ = proto;\n\t\treturn proto;\n\t}\n);\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\dunder-proto\\set.js",
    "RelativePath": "tools\\backend\\node_modules\\dunder-proto\\set.js"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\n\nvar getDunderProto = require('../get');\n\ntest('getDunderProto', { skip: !getDunderProto }, function (t) {\n\tif (!getDunderProto) {\n\t\tthrow 'should never happen; this is just for type narrowing'; // eslint-disable-line no-throw-literal\n\t}\n\n\t// @ts-expect-error\n\tt['throws'](function () { getDunderProto(); }, TypeError, 'throws if no argument');\n\t// @ts-expect-error\n\tt['throws'](function () { getDunderProto(undefined); }, TypeError, 'throws with undefined');\n\t// @ts-expect-error\n\tt['throws'](function () { getDunderProto(null); }, TypeError, 'throws with null');\n\n\tt.equal(getDunderProto({}), Object.prototype);\n\tt.equal(getDunderProto([]), Array.prototype);\n\tt.equal(getDunderProto(function () {}), Function.prototype);\n\tt.equal(getDunderProto(/./g), RegExp.prototype);\n\tt.equal(getDunderProto(42), Number.prototype);\n\tt.equal(getDunderProto(true), Boolean.prototype);\n\tt.equal(getDunderProto('foo'), String.prototype);\n\n\tt.end();\n});\n\ntest('no dunder proto', { skip: !!getDunderProto }, function (t) {\n\tt.notOk('__proto__' in Object.prototype, 'no __proto__ in Object.prototype');\n\n\tt.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\dunder-proto\\test\\get.js",
    "RelativePath": "tools\\backend\\node_modules\\dunder-proto\\test\\get.js"
  },
  {
    "Content": "'use strict';\n\nrequire('./get');\nrequire('./set');\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\dunder-proto\\test\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\dunder-proto\\test\\index.js"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\n\nvar setDunderProto = require('../set');\n\ntest('setDunderProto', { skip: !setDunderProto }, function (t) {\n\tif (!setDunderProto) {\n\t\tthrow 'should never happen; this is just for type narrowing'; // eslint-disable-line no-throw-literal\n\t}\n\n\t// @ts-expect-error\n\tt['throws'](function () { setDunderProto(); }, TypeError, 'throws if no arguments');\n\t// @ts-expect-error\n\tt['throws'](function () { setDunderProto(undefined); }, TypeError, 'throws with undefined and nothing');\n\t// @ts-expect-error\n\tt['throws'](function () { setDunderProto(undefined, undefined); }, TypeError, 'throws with undefined and undefined');\n\t// @ts-expect-error\n\tt['throws'](function () { setDunderProto(null); }, TypeError, 'throws with null and undefined');\n\t// @ts-expect-error\n\tt['throws'](function () { setDunderProto(null, undefined); }, TypeError, 'throws with null and undefined');\n\n\t/** @type {{ inherited?: boolean }} */\n\tvar obj = {};\n\tt.ok('toString' in obj, 'object initially has toString');\n\n\tsetDunderProto(obj, null);\n\tt.notOk('toString' in obj, 'object no longer has toString');\n\n\tt.notOk('inherited' in obj, 'object lacks inherited property');\n\tsetDunderProto(obj, { inherited: true });\n\tt.equal(obj.inherited, true, 'object has inherited property');\n\n\tt.end();\n});\n\ntest('no dunder proto', { skip: !!setDunderProto }, function (t) {\n\tif ('__proto__' in Object.prototype) {\n\t\tt['throws'](\n\t\t\t// @ts-expect-error\n\t\t\tfunction () { ({}).__proto__ = null; }, // eslint-disable-line no-proto\n\t\t\tError,\n\t\t\t'throws when setting Object.prototype.__proto__'\n\t\t);\n\t} else {\n\t\tt.notOk('__proto__' in Object.prototype, 'no __proto__ in Object.prototype');\n\t}\n\n\tt.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\dunder-proto\\test\\set.js",
    "RelativePath": "tools\\backend\\node_modules\\dunder-proto\\test\\set.js"
  },
  {
    "Content": "/*!\n * ee-first\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = first\n\n/**\n * Get the first event in a set of event emitters and event pairs.\n *\n * @param {array} stuff\n * @param {function} done\n * @public\n */\n\nfunction first(stuff, done) {\n  if (!Array.isArray(stuff))\n    throw new TypeError('arg must be an array of [ee, events...] arrays')\n\n  var cleanups = []\n\n  for (var i = 0; i < stuff.length; i++) {\n    var arr = stuff[i]\n\n    if (!Array.isArray(arr) || arr.length < 2)\n      throw new TypeError('each array member must be [ee, events...]')\n\n    var ee = arr[0]\n\n    for (var j = 1; j < arr.length; j++) {\n      var event = arr[j]\n      var fn = listener(event, callback)\n\n      // listen to the event\n      ee.on(event, fn)\n      // push this listener to the list of cleanups\n      cleanups.push({\n        ee: ee,\n        event: event,\n        fn: fn,\n      })\n    }\n  }\n\n  function callback() {\n    cleanup()\n    done.apply(null, arguments)\n  }\n\n  function cleanup() {\n    var x\n    for (var i = 0; i < cleanups.length; i++) {\n      x = cleanups[i]\n      x.ee.removeListener(x.event, x.fn)\n    }\n  }\n\n  function thunk(fn) {\n    done = fn\n  }\n\n  thunk.cancel = cleanup\n\n  return thunk\n}\n\n/**\n * Create the event listener.\n * @private\n */\n\nfunction listener(event, done) {\n  return function onevent(arg1) {\n    var args = new Array(arguments.length)\n    var ee = this\n    var err = event === 'error'\n      ? arg1\n      : null\n\n    // copy args to prevent arguments escaping scope\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    done(err, ee, event, args)\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\ee-first\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\ee-first\\index.js"
  },
  {
    "Content": "# EE First\n\n[![NPM version][npm-image]][npm-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n[![Gittip][gittip-image]][gittip-url]\n\nGet the first event in a set of event emitters and event pairs,\nthen clean up after itself.\n\n## Install\n\n```sh\n$ npm install ee-first\n```\n\n## API\n\n```js\nvar first = require('ee-first')\n```\n\n### first(arr, listener)\n\nInvoke `listener` on the first event from the list specified in `arr`. `arr` is\nan array of arrays, with each array in the format `[ee, ...event]`. `listener`\nwill be called only once, the first time any of the given events are emitted. If\n`error` is one of the listened events, then if that fires first, the `listener`\nwill be given the `err` argument.\n\nThe `listener` is invoked as `listener(err, ee, event, args)`, where `err` is the\nfirst argument emitted from an `error` event, if applicable; `ee` is the event\nemitter that fired; `event` is the string event name that fired; and `args` is an\narray of the arguments that were emitted on the event.\n\n```js\nvar ee1 = new EventEmitter()\nvar ee2 = new EventEmitter()\n\nfirst([\n  [ee1, 'close', 'end', 'error'],\n  [ee2, 'error']\n], function (err, ee, event, args) {\n  // listener invoked\n})\n```\n\n#### .cancel()\n\nThe group of listeners can be cancelled before being invoked and have all the event\nlisteners removed from the underlying event emitters.\n\n```js\nvar thunk = first([\n  [ee1, 'close', 'end', 'error'],\n  [ee2, 'error']\n], function (err, ee, event, args) {\n  // listener invoked\n})\n\n// cancel and clean up\nthunk.cancel()\n```\n\n[npm-image]: https://img.shields.io/npm/v/ee-first.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/ee-first\n[github-tag]: http://img.shields.io/github/tag/jonathanong/ee-first.svg?style=flat-square\n[github-url]: https://github.com/jonathanong/ee-first/tags\n[travis-image]: https://img.shields.io/travis/jonathanong/ee-first.svg?style=flat-square\n[travis-url]: https://travis-ci.org/jonathanong/ee-first\n[coveralls-image]: https://img.shields.io/coveralls/jonathanong/ee-first.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/jonathanong/ee-first?branch=master\n[license-image]: http://img.shields.io/npm/l/ee-first.svg?style=flat-square\n[license-url]: LICENSE.md\n[downloads-image]: http://img.shields.io/npm/dm/ee-first.svg?style=flat-square\n[downloads-url]: https://npmjs.org/package/ee-first\n[gittip-image]: https://img.shields.io/gittip/jonathanong.svg?style=flat-square\n[gittip-url]: https://www.gittip.com/jonathanong/\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\ee-first\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\ee-first\\README.md"
  },
  {
    "Content": "/*!\n * encodeurl\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = encodeUrl\n\n/**\n * RegExp to match non-URL code points, *after* encoding (i.e. not including \"%\")\n * and including invalid escape sequences.\n * @private\n */\n\nvar ENCODE_CHARS_REGEXP = /(?:[^\\x21\\x23-\\x3B\\x3D\\x3F-\\x5F\\x61-\\x7A\\x7C\\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g\n\n/**\n * RegExp to match unmatched surrogate pair.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\\uD800-\\uDBFF])[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF]([^\\uDC00-\\uDFFF]|$)/g\n\n/**\n * String to replace unmatched surrogate pair with.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\\uFFFD$2'\n\n/**\n * Encode a URL to a percent-encoded form, excluding already-encoded sequences.\n *\n * This function will take an already-encoded URL and encode all the non-URL\n * code points. This function will not encode the \"%\" character unless it is\n * not part of a valid sequence (`%20` will be left as-is, but `%foo` will\n * be encoded as `%25foo`).\n *\n * This encode is meant to be \"safe\" and does not throw errors. It will try as\n * hard as it can to properly encode the given URL, including replacing any raw,\n * unpaired surrogate pairs with the Unicode replacement character prior to\n * encoding.\n *\n * @param {string} url\n * @return {string}\n * @public\n */\n\nfunction encodeUrl (url) {\n  return String(url)\n    .replace(UNMATCHED_SURROGATE_PAIR_REGEXP, UNMATCHED_SURROGATE_PAIR_REPLACE)\n    .replace(ENCODE_CHARS_REGEXP, encodeURI)\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\encodeurl\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\encodeurl\\index.js"
  },
  {
    "Content": "# Encode URL\n\nEncode a URL to a percent-encoded form, excluding already-encoded sequences.\n\n## Installation\n\n```sh\nnpm install encodeurl\n```\n\n## API\n\n```js\nvar encodeUrl = require('encodeurl')\n```\n\n### encodeUrl(url)\n\nEncode a URL to a percent-encoded form, excluding already-encoded sequences.\n\nThis function accepts a URL and encodes all the non-URL code points (as UTF-8 byte sequences). It will not encode the \"%\" character unless it is not part of a valid sequence (`%20` will be left as-is, but `%foo` will be encoded as `%25foo`).\n\nThis encode is meant to be \"safe\" and does not throw errors. It will try as hard as it can to properly encode the given URL, including replacing any raw, unpaired surrogate pairs with the Unicode replacement character prior to encoding.\n\n## Examples\n\n### Encode a URL containing user-controlled data\n\n```js\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\n\nhttp.createServer(function onRequest (req, res) {\n  // get encoded form of inbound url\n  var url = encodeUrl(req.url)\n\n  // create html message\n  var body = '<p>Location ' + escapeHtml(url) + ' not found</p>'\n\n  // send a 404\n  res.statusCode = 404\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', String(Buffer.byteLength(body, 'utf-8')))\n  res.end(body, 'utf-8')\n})\n```\n\n### Encode a URL for use in a header field\n\n```js\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar url = require('url')\n\nhttp.createServer(function onRequest (req, res) {\n  // parse inbound url\n  var href = url.parse(req)\n\n  // set new host for redirect\n  href.host = 'localhost'\n  href.protocol = 'https:'\n  href.slashes = true\n\n  // create location header\n  var location = encodeUrl(url.format(href))\n\n  // create html message\n  var body = '<p>Redirecting to new site: ' + escapeHtml(location) + '</p>'\n\n  // send a 301\n  res.statusCode = 301\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', String(Buffer.byteLength(body, 'utf-8')))\n  res.setHeader('Location', location)\n  res.end(body, 'utf-8')\n})\n```\n\n## Similarities\n\nThis function is _similar_ to the intrinsic function `encodeURI`. However, it will not encode:\n\n* The `\\`, `^`, or `|` characters\n* The `%` character when it's part of a valid sequence\n* `[` and `]` (for IPv6 hostnames)\n* Replaces raw, unpaired surrogate pairs with the Unicode replacement character\n\nAs a result, the encoding aligns closely with the behavior in the [WHATWG URL specification][whatwg-url]. However, this package only encodes strings and does not do any URL parsing or formatting.\n\nIt is expected that any output from `new URL(url)` will not change when used with this package, as the output has already been encoded. Additionally, if we were to encode before `new URL(url)`, we do not expect the before and after encoded formats to be parsed any differently.\n\n## Testing\n\n```sh\n$ npm test\n$ npm run lint\n```\n\n## References\n\n- [RFC 3986: Uniform Resource Identifier (URI): Generic Syntax][rfc-3986]\n- [WHATWG URL Living Standard][whatwg-url]\n\n[rfc-3986]: https://tools.ietf.org/html/rfc3986\n[whatwg-url]: https://url.spec.whatwg.org/\n\n## License\n\n[MIT](LICENSE)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\encodeurl\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\encodeurl\\README.md"
  },
  {
    "Content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v1.0.1](https://github.com/ljharb/es-define-property/compare/v1.0.0...v1.0.1) - 2024-12-06\n\n### Commits\n\n- [types] use shared tsconfig [`954a663`](https://github.com/ljharb/es-define-property/commit/954a66360326e508a0e5daa4b07493d58f5e110e)\n- [actions] split out node 10-20, and 20+ [`3a8e84b`](https://github.com/ljharb/es-define-property/commit/3a8e84b23883f26ff37b3e82ff283834228e18c6)\n- [Dev Deps] update `@ljharb/eslint-config`, `@ljharb/tsconfig`, `@types/get-intrinsic`, `@types/tape`, `auto-changelog`, `gopd`, `tape` [`86ae27b`](https://github.com/ljharb/es-define-property/commit/86ae27bb8cc857b23885136fad9cbe965ae36612)\n- [Refactor] avoid using `get-intrinsic` [`02480c0`](https://github.com/ljharb/es-define-property/commit/02480c0353ef6118965282977c3864aff53d98b1)\n- [Tests] replace `aud` with `npm audit` [`f6093ff`](https://github.com/ljharb/es-define-property/commit/f6093ff74ab51c98015c2592cd393bd42478e773)\n- [Tests] configure testling [`7139e66`](https://github.com/ljharb/es-define-property/commit/7139e66959247a56086d9977359caef27c6849e7)\n- [Dev Deps] update `tape` [`b901b51`](https://github.com/ljharb/es-define-property/commit/b901b511a75e001a40ce1a59fef7d9ffcfc87482)\n- [Tests] fix types in tests [`469d269`](https://github.com/ljharb/es-define-property/commit/469d269fd141b1e773ec053a9fa35843493583e0)\n- [Dev Deps] add missing peer dep [`733acfb`](https://github.com/ljharb/es-define-property/commit/733acfb0c4c96edf337e470b89a25a5b3724c352)\n\n## v1.0.0 - 2024-02-12\n\n### Commits\n\n- Initial implementation, tests, readme, types [`3e154e1`](https://github.com/ljharb/es-define-property/commit/3e154e11a2fee09127220f5e503bf2c0a31dd480)\n- Initial commit [`07d98de`](https://github.com/ljharb/es-define-property/commit/07d98de34a4dc31ff5e83a37c0c3f49e0d85cd50)\n- npm init [`c4eb634`](https://github.com/ljharb/es-define-property/commit/c4eb6348b0d3886aac36cef34ad2ee0665ea6f3e)\n- Only apps should have lockfiles [`7af86ec`](https://github.com/ljharb/es-define-property/commit/7af86ec1d311ec0b17fdfe616a25f64276903856)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-define-property\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\es-define-property\\CHANGELOG.md"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('.')} */\nvar $defineProperty = Object.defineProperty || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-define-property\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\es-define-property\\index.js"
  },
  {
    "Content": "# es-define-property <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\n`Object.defineProperty`, but not IE 8's broken one.\n\n## Example\n\n```js\nconst assert = require('assert');\n\nconst $defineProperty = require('es-define-property');\n\nif ($defineProperty) {\n    assert.equal($defineProperty, Object.defineProperty);\n} else if (Object.defineProperty) {\n    assert.equal($defineProperty, false, 'this is IE 8');\n} else {\n    assert.equal($defineProperty, false, 'this is an ES3 engine');\n}\n```\n\n## Tests\nSimply clone the repo, `npm install`, and run `npm test`\n\n## Security\n\nPlease email [@ljharb](https://github.com/ljharb) or see https://tidelift.com/security if you have a potential security vulnerability to report.\n\n[package-url]: https://npmjs.org/package/es-define-property\n[npm-version-svg]: https://versionbadg.es/ljharb/es-define-property.svg\n[deps-svg]: https://david-dm.org/ljharb/es-define-property.svg\n[deps-url]: https://david-dm.org/ljharb/es-define-property\n[dev-deps-svg]: https://david-dm.org/ljharb/es-define-property/dev-status.svg\n[dev-deps-url]: https://david-dm.org/ljharb/es-define-property#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/es-define-property.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/es-define-property.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/es-define-property.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=es-define-property\n[codecov-image]: https://codecov.io/gh/ljharb/es-define-property/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/ljharb/es-define-property/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/es-define-property\n[actions-url]: https://github.com/ljharb/es-define-property/actions\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-define-property\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\es-define-property\\README.md"
  },
  {
    "Content": "'use strict';\n\nvar $defineProperty = require('../');\n\nvar test = require('tape');\nvar gOPD = require('gopd');\n\ntest('defineProperty: supported', { skip: !$defineProperty }, function (t) {\n\tt.plan(4);\n\n\tt.equal(typeof $defineProperty, 'function', 'defineProperty is supported');\n\tif ($defineProperty && gOPD) { // this `if` check is just to shut TS up\n\t\t/** @type {{ a: number, b?: number, c?: number }} */\n\t\tvar o = { a: 1 };\n\n\t\t$defineProperty(o, 'b', { enumerable: true, value: 2 });\n\t\tt.deepEqual(\n\t\t\tgOPD(o, 'b'),\n\t\t\t{\n\t\t\t\tconfigurable: false,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: 2,\n\t\t\t\twritable: false\n\t\t\t},\n\t\t\t'property descriptor is as expected'\n\t\t);\n\n\t\t$defineProperty(o, 'c', { enumerable: false, value: 3, writable: true });\n\t\tt.deepEqual(\n\t\t\tgOPD(o, 'c'),\n\t\t\t{\n\t\t\t\tconfigurable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: 3,\n\t\t\t\twritable: true\n\t\t\t},\n\t\t\t'property descriptor is as expected'\n\t\t);\n\t}\n\n\tt.equal($defineProperty, Object.defineProperty, 'defineProperty is Object.defineProperty');\n\n\tt.end();\n});\n\ntest('defineProperty: not supported', { skip: !!$defineProperty }, function (t) {\n\tt.notOk($defineProperty, 'defineProperty is not supported');\n\n\tt.match(\n\t\ttypeof $defineProperty,\n\t\t/^(?:undefined|boolean)$/,\n\t\t'`typeof defineProperty` is `undefined` or `boolean`'\n\t);\n\n\tt.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-define-property\\test\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\es-define-property\\test\\index.js"
  },
  {
    "Content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v1.3.0](https://github.com/ljharb/es-errors/compare/v1.2.1...v1.3.0) - 2024-02-05\n\n### Commits\n\n- [New] add `EvalError` and `URIError` [`1927627`](https://github.com/ljharb/es-errors/commit/1927627ba68cb6c829d307231376c967db53acdf)\n\n## [v1.2.1](https://github.com/ljharb/es-errors/compare/v1.2.0...v1.2.1) - 2024-02-04\n\n### Commits\n\n- [Fix] add missing `exports` entry [`5bb5f28`](https://github.com/ljharb/es-errors/commit/5bb5f280f98922701109d6ebb82eea2257cecc7e)\n\n## [v1.2.0](https://github.com/ljharb/es-errors/compare/v1.1.0...v1.2.0) - 2024-02-04\n\n### Commits\n\n- [New] add `ReferenceError` [`6d8cf5b`](https://github.com/ljharb/es-errors/commit/6d8cf5bbb6f3f598d02cf6f30e468ba2caa8e143)\n\n## [v1.1.0](https://github.com/ljharb/es-errors/compare/v1.0.0...v1.1.0) - 2024-02-04\n\n### Commits\n\n- [New] add base Error [`2983ab6`](https://github.com/ljharb/es-errors/commit/2983ab65f7bc5441276cb021dc3aa03c78881698)\n\n## v1.0.0 - 2024-02-03\n\n### Commits\n\n- Initial implementation, tests, readme, type [`8f47631`](https://github.com/ljharb/es-errors/commit/8f476317e9ad76f40ad648081829b1a1a3a1288b)\n- Initial commit [`ea5d099`](https://github.com/ljharb/es-errors/commit/ea5d099ef18e550509ab9e2be000526afd81c385)\n- npm init [`6f5ebf9`](https://github.com/ljharb/es-errors/commit/6f5ebf9cead474dadd72b9e63dad315820a089ae)\n- Only apps should have lockfiles [`e1a0aeb`](https://github.com/ljharb/es-errors/commit/e1a0aeb7b80f5cfc56be54d6b2100e915d47def8)\n- [meta] add `sideEffects` flag [`a9c7d46`](https://github.com/ljharb/es-errors/commit/a9c7d460a492f1d8a241c836bc25a322a19cc043)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-errors\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\es-errors\\CHANGELOG.md"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-errors\\eval.js",
    "RelativePath": "tools\\backend\\node_modules\\es-errors\\eval.js"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-errors\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\es-errors\\index.js"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-errors\\range.js",
    "RelativePath": "tools\\backend\\node_modules\\es-errors\\range.js"
  },
  {
    "Content": "# es-errors <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\nA simple cache for a few of the JS Error constructors.\n\n## Example\n\n```js\nconst assert = require('assert');\n\nconst Base = require('es-errors');\nconst Eval = require('es-errors/eval');\nconst Range = require('es-errors/range');\nconst Ref = require('es-errors/ref');\nconst Syntax = require('es-errors/syntax');\nconst Type = require('es-errors/type');\nconst URI = require('es-errors/uri');\n\nassert.equal(Base, Error);\nassert.equal(Eval, EvalError);\nassert.equal(Range, RangeError);\nassert.equal(Ref, ReferenceError);\nassert.equal(Syntax, SyntaxError);\nassert.equal(Type, TypeError);\nassert.equal(URI, URIError);\n```\n\n## Tests\nSimply clone the repo, `npm install`, and run `npm test`\n\n## Security\n\nPlease email [@ljharb](https://github.com/ljharb) or see https://tidelift.com/security if you have a potential security vulnerability to report.\n\n[package-url]: https://npmjs.org/package/es-errors\n[npm-version-svg]: https://versionbadg.es/ljharb/es-errors.svg\n[deps-svg]: https://david-dm.org/ljharb/es-errors.svg\n[deps-url]: https://david-dm.org/ljharb/es-errors\n[dev-deps-svg]: https://david-dm.org/ljharb/es-errors/dev-status.svg\n[dev-deps-url]: https://david-dm.org/ljharb/es-errors#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/es-errors.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/es-errors.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/es-errors.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=es-errors\n[codecov-image]: https://codecov.io/gh/ljharb/es-errors/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/ljharb/es-errors/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/es-errors\n[actions-url]: https://github.com/ljharb/es-errors/actions\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-errors\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\es-errors\\README.md"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-errors\\ref.js",
    "RelativePath": "tools\\backend\\node_modules\\es-errors\\ref.js"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-errors\\syntax.js",
    "RelativePath": "tools\\backend\\node_modules\\es-errors\\syntax.js"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-errors\\type.js",
    "RelativePath": "tools\\backend\\node_modules\\es-errors\\type.js"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-errors\\uri.js",
    "RelativePath": "tools\\backend\\node_modules\\es-errors\\uri.js"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\n\nvar E = require('../');\nvar R = require('../range');\nvar Ref = require('../ref');\nvar S = require('../syntax');\nvar T = require('../type');\n\ntest('errors', function (t) {\n\tt.equal(E, Error);\n\tt.equal(R, RangeError);\n\tt.equal(Ref, ReferenceError);\n\tt.equal(S, SyntaxError);\n\tt.equal(T, TypeError);\n\n\tt.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-errors\\test\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\es-errors\\test\\index.js"
  },
  {
    "Content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v1.1.1](https://github.com/ljharb/es-object-atoms/compare/v1.1.0...v1.1.1) - 2025-01-14\n\n### Commits\n\n- [types] `ToObject`: improve types [`cfe8c8a`](https://github.com/ljharb/es-object-atoms/commit/cfe8c8a105c44820cb22e26f62d12ef0ad9715c8)\n\n## [v1.1.0](https://github.com/ljharb/es-object-atoms/compare/v1.0.1...v1.1.0) - 2025-01-14\n\n### Commits\n\n- [New] add `isObject` [`51e4042`](https://github.com/ljharb/es-object-atoms/commit/51e4042df722eb3165f40dc5f4bf33d0197ecb07)\n\n## [v1.0.1](https://github.com/ljharb/es-object-atoms/compare/v1.0.0...v1.0.1) - 2025-01-13\n\n### Commits\n\n- [Dev Deps] update `@ljharb/eslint-config`, `@ljharb/tsconfig`, `@types/tape`, `auto-changelog`, `tape` [`38ab9eb`](https://github.com/ljharb/es-object-atoms/commit/38ab9eb00b62c2f4668644f5e513d9b414ebd595)\n- [types] improve types [`7d1beb8`](https://github.com/ljharb/es-object-atoms/commit/7d1beb887958b78b6a728a210a1c8370ab7e2aa1)\n- [Tests] replace `aud` with `npm audit` [`25863ba`](https://github.com/ljharb/es-object-atoms/commit/25863baf99178f1d1ad33d1120498db28631907e)\n- [Dev Deps] add missing peer dep [`c012309`](https://github.com/ljharb/es-object-atoms/commit/c0123091287e6132d6f4240496340c427433df28)\n\n## v1.0.0 - 2024-03-16\n\n### Commits\n\n- Initial implementation, tests, readme, types [`f1499db`](https://github.com/ljharb/es-object-atoms/commit/f1499db7d3e1741e64979c61d645ab3137705e82)\n- Initial commit [`99eedc7`](https://github.com/ljharb/es-object-atoms/commit/99eedc7b5fde38a50a28d3c8b724706e3e4c5f6a)\n- [meta] rename repo [`fc851fa`](https://github.com/ljharb/es-object-atoms/commit/fc851fa70616d2d182aaf0bd02c2ed7084dea8fa)\n- npm init [`b909377`](https://github.com/ljharb/es-object-atoms/commit/b909377c50049bd0ec575562d20b0f9ebae8947f)\n- Only apps should have lockfiles [`7249edd`](https://github.com/ljharb/es-object-atoms/commit/7249edd2178c1b9ddfc66ffcc6d07fdf0d28efc1)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-object-atoms\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\es-object-atoms\\CHANGELOG.md"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Object;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-object-atoms\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\es-object-atoms\\index.js"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./isObject')} */\nmodule.exports = function isObject(x) {\n\treturn !!x && (typeof x === 'function' || typeof x === 'object');\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-object-atoms\\isObject.js",
    "RelativePath": "tools\\backend\\node_modules\\es-object-atoms\\isObject.js"
  },
  {
    "Content": "# es-object-atoms <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\nES Object-related atoms: Object, ToObject, RequireObjectCoercible.\n\n## Example\n\n```js\nconst assert = require('assert');\n\nconst $Object = require('es-object-atoms');\nconst isObject = require('es-object-atoms/isObject');\nconst ToObject = require('es-object-atoms/ToObject');\nconst RequireObjectCoercible = require('es-object-atoms/RequireObjectCoercible');\n\nassert.equal($Object, Object);\nassert.throws(() => ToObject(null), TypeError);\nassert.throws(() => ToObject(undefined), TypeError);\nassert.throws(() => RequireObjectCoercible(null), TypeError);\nassert.throws(() => RequireObjectCoercible(undefined), TypeError);\n\nassert.equal(isObject(undefined), false);\nassert.equal(isObject(null), false);\nassert.equal(isObject({}), true);\nassert.equal(isObject([]), true);\nassert.equal(isObject(function () {}), true);\n\nassert.deepEqual(RequireObjectCoercible(true), true);\nassert.deepEqual(ToObject(true), Object(true));\n\nconst obj = {};\nassert.equal(RequireObjectCoercible(obj), obj);\nassert.equal(ToObject(obj), obj);\n```\n\n## Tests\nSimply clone the repo, `npm install`, and run `npm test`\n\n## Security\n\nPlease email [@ljharb](https://github.com/ljharb) or see https://tidelift.com/security if you have a potential security vulnerability to report.\n\n[package-url]: https://npmjs.org/package/es-object-atoms\n[npm-version-svg]: https://versionbadg.es/ljharb/es-object-atoms.svg\n[deps-svg]: https://david-dm.org/ljharb/es-object-atoms.svg\n[deps-url]: https://david-dm.org/ljharb/es-object-atoms\n[dev-deps-svg]: https://david-dm.org/ljharb/es-object-atoms/dev-status.svg\n[dev-deps-url]: https://david-dm.org/ljharb/es-object-atoms#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/es-object-atoms.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/es-object-atoms.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/es-object.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=es-object-atoms\n[codecov-image]: https://codecov.io/gh/ljharb/es-object-atoms/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/ljharb/es-object-atoms/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/es-object-atoms\n[actions-url]: https://github.com/ljharb/es-object-atoms/actions\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-object-atoms\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\es-object-atoms\\README.md"
  },
  {
    "Content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\n/** @type {import('./RequireObjectCoercible')} */\nmodule.exports = function RequireObjectCoercible(value) {\n\tif (value == null) {\n\t\tthrow new $TypeError((arguments.length > 0 && arguments[1]) || ('Cannot call method on ' + value));\n\t}\n\treturn value;\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-object-atoms\\RequireObjectCoercible.js",
    "RelativePath": "tools\\backend\\node_modules\\es-object-atoms\\RequireObjectCoercible.js"
  },
  {
    "Content": "'use strict';\n\nvar $Object = require('./');\nvar RequireObjectCoercible = require('./RequireObjectCoercible');\n\n/** @type {import('./ToObject')} */\nmodule.exports = function ToObject(value) {\n\tRequireObjectCoercible(value);\n\treturn $Object(value);\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-object-atoms\\ToObject.js",
    "RelativePath": "tools\\backend\\node_modules\\es-object-atoms\\ToObject.js"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\n\nvar $Object = require('../');\nvar isObject = require('../isObject');\nvar ToObject = require('../ToObject');\nvar RequireObjectCoercible = require('..//RequireObjectCoercible');\n\ntest('errors', function (t) {\n\tt.equal($Object, Object);\n\t// @ts-expect-error\n\tt['throws'](function () { ToObject(null); }, TypeError);\n\t// @ts-expect-error\n\tt['throws'](function () { ToObject(undefined); }, TypeError);\n\t// @ts-expect-error\n\tt['throws'](function () { RequireObjectCoercible(null); }, TypeError);\n\t// @ts-expect-error\n\tt['throws'](function () { RequireObjectCoercible(undefined); }, TypeError);\n\n\tt.deepEqual(RequireObjectCoercible(true), true);\n\tt.deepEqual(ToObject(true), Object(true));\n\tt.deepEqual(ToObject(42), Object(42));\n\tvar f = function () {};\n\tt.equal(ToObject(f), f);\n\n\tt.equal(isObject(undefined), false);\n\tt.equal(isObject(null), false);\n\tt.equal(isObject({}), true);\n\tt.equal(isObject([]), true);\n\tt.equal(isObject(function () {}), true);\n\n\tvar obj = {};\n\tt.equal(RequireObjectCoercible(obj), obj);\n\tt.equal(ToObject(obj), obj);\n\n\tt.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\es-object-atoms\\test\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\es-object-atoms\\test\\index.js"
  },
  {
    "Content": "/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\escape-html\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\escape-html\\index.js"
  },
  {
    "Content": "\n# escape-html\n\n  Escape string for use in HTML\n\n## Example\n\n```js\nvar escape = require('escape-html');\nvar html = escape('foo & bar');\n// -> foo &amp; bar\n```\n\n## Benchmark\n\n```\n$ npm run-script bench\n\n> escape-html@1.0.3 bench nodejs-escape-html\n> node benchmark/index.js\n\n\n  http_parser@1.0\n  node@0.10.33\n  v8@3.14.5.9\n  ares@1.9.0-DEV\n  uv@0.10.29\n  zlib@1.2.3\n  modules@11\n  openssl@1.0.1j\n\n  1 test completed.\n  2 tests completed.\n  3 tests completed.\n\n  no special characters    x 19,435,271 ops/sec ±0.85% (187 runs sampled)\n  single special character x  6,132,421 ops/sec ±0.67% (194 runs sampled)\n  many special characters  x  3,175,826 ops/sec ±0.65% (193 runs sampled)\n```\n\n## License\n\n  MIT",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\escape-html\\Readme.md",
    "RelativePath": "tools\\backend\\node_modules\\escape-html\\Readme.md"
  },
  {
    "Content": "1.8.1 / 2017-09-12\n==================\n\n  * perf: replace regular expression with substring\n\n1.8.0 / 2017-02-18\n==================\n\n  * Use SHA1 instead of MD5 for ETag hashing\n    - Improves performance for larger entities\n    - Works with FIPS 140-2 OpenSSL configuration\n\n1.7.0 / 2015-06-08\n==================\n\n  * Always include entity length in ETags for hash length extensions\n  * Generate non-Stats ETags using MD5 only (no longer CRC32)\n  * Improve stat performance by removing hashing\n  * Remove base64 padding in ETags to shorten\n  * Use MD5 instead of MD4 in weak ETags over 1KB\n\n1.6.0 / 2015-05-10\n==================\n\n  * Improve support for JXcore\n  * Remove requirement of `atime` in the stats object\n  * Support \"fake\" stats objects in environments without `fs`\n\n1.5.1 / 2014-11-19\n==================\n\n  * deps: crc@3.2.1\n    - Minor fixes\n\n1.5.0 / 2014-10-14\n==================\n\n  * Improve string performance\n  * Slightly improve speed for weak ETags over 1KB\n\n1.4.0 / 2014-09-21\n==================\n\n  * Support \"fake\" stats objects\n  * Support Node.js 0.6\n\n1.3.1 / 2014-09-14\n==================\n\n  * Use the (new and improved) `crc` for crc32\n\n1.3.0 / 2014-08-29\n==================\n\n  * Default strings to strong ETags\n  * Improve speed for weak ETags over 1KB\n\n1.2.1 / 2014-08-29\n==================\n\n  * Use the (much faster) `buffer-crc32` for crc32\n\n1.2.0 / 2014-08-24\n==================\n\n  * Add support for file stat objects\n\n1.1.0 / 2014-08-24\n==================\n\n  * Add fast-path for empty entity\n  * Add weak ETag generation\n  * Shrink size of generated ETags\n\n1.0.1 / 2014-08-24\n==================\n\n  * Fix behavior of string containing Unicode\n\n1.0.0 / 2014-05-18\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\etag\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\etag\\HISTORY.md"
  },
  {
    "Content": "/*!\n * etag\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = etag\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = require('crypto')\nvar Stats = require('fs').Stats\n\n/**\n * Module variables.\n * @private\n */\n\nvar toString = Object.prototype.toString\n\n/**\n * Generate an entity tag.\n *\n * @param {Buffer|string} entity\n * @return {string}\n * @private\n */\n\nfunction entitytag (entity) {\n  if (entity.length === 0) {\n    // fast-path empty\n    return '\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"'\n  }\n\n  // compute hash of entity\n  var hash = crypto\n    .createHash('sha1')\n    .update(entity, 'utf8')\n    .digest('base64')\n    .substring(0, 27)\n\n  // compute length of entity\n  var len = typeof entity === 'string'\n    ? Buffer.byteLength(entity, 'utf8')\n    : entity.length\n\n  return '\"' + len.toString(16) + '-' + hash + '\"'\n}\n\n/**\n * Create a simple ETag.\n *\n * @param {string|Buffer|Stats} entity\n * @param {object} [options]\n * @param {boolean} [options.weak]\n * @return {String}\n * @public\n */\n\nfunction etag (entity, options) {\n  if (entity == null) {\n    throw new TypeError('argument entity is required')\n  }\n\n  // support fs.Stats object\n  var isStats = isstats(entity)\n  var weak = options && typeof options.weak === 'boolean'\n    ? options.weak\n    : isStats\n\n  // validate argument\n  if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {\n    throw new TypeError('argument entity must be string, Buffer, or fs.Stats')\n  }\n\n  // generate entity tag\n  var tag = isStats\n    ? stattag(entity)\n    : entitytag(entity)\n\n  return weak\n    ? 'W/' + tag\n    : tag\n}\n\n/**\n * Determine if object is a Stats object.\n *\n * @param {object} obj\n * @return {boolean}\n * @api private\n */\n\nfunction isstats (obj) {\n  // genuine fs.Stats\n  if (typeof Stats === 'function' && obj instanceof Stats) {\n    return true\n  }\n\n  // quack quack\n  return obj && typeof obj === 'object' &&\n    'ctime' in obj && toString.call(obj.ctime) === '[object Date]' &&\n    'mtime' in obj && toString.call(obj.mtime) === '[object Date]' &&\n    'ino' in obj && typeof obj.ino === 'number' &&\n    'size' in obj && typeof obj.size === 'number'\n}\n\n/**\n * Generate a tag for a stat.\n *\n * @param {object} stat\n * @return {string}\n * @private\n */\n\nfunction stattag (stat) {\n  var mtime = stat.mtime.getTime().toString(16)\n  var size = stat.size.toString(16)\n\n  return '\"' + size + '-' + mtime + '\"'\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\etag\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\etag\\index.js"
  },
  {
    "Content": "# etag\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nCreate simple HTTP ETags\n\nThis module generates HTTP ETags (as defined in RFC 7232) for use in\nHTTP responses.\n\n## Installation\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install etag\n```\n\n## API\n\n<!-- eslint-disable no-unused-vars -->\n\n```js\nvar etag = require('etag')\n```\n\n### etag(entity, [options])\n\nGenerate a strong ETag for the given entity. This should be the complete\nbody of the entity. Strings, `Buffer`s, and `fs.Stats` are accepted. By\ndefault, a strong ETag is generated except for `fs.Stats`, which will\ngenerate a weak ETag (this can be overwritten by `options.weak`).\n\n<!-- eslint-disable no-undef -->\n\n```js\nres.setHeader('ETag', etag(body))\n```\n\n#### Options\n\n`etag` accepts these properties in the options object.\n\n##### weak\n\nSpecifies if the generated ETag will include the weak validator mark (that\nis, the leading `W/`). The actual entity tag is the same. The default value\nis `false`, unless the `entity` is `fs.Stats`, in which case it is `true`.\n\n## Testing\n\n```sh\n$ npm test\n```\n\n## Benchmark\n\n```bash\n$ npm run-script bench\n\n> etag@1.8.1 bench nodejs-etag\n> node benchmark/index.js\n\n  http_parser@2.7.0\n  node@6.11.1\n  v8@5.1.281.103\n  uv@1.11.0\n  zlib@1.2.11\n  ares@1.10.1-DEV\n  icu@58.2\n  modules@48\n  openssl@1.0.2k\n\n> node benchmark/body0-100b.js\n\n  100B body\n\n  4 tests completed.\n\n  buffer - strong x 258,647 ops/sec ±1.07% (180 runs sampled)\n  buffer - weak   x 263,812 ops/sec ±0.61% (184 runs sampled)\n  string - strong x 259,955 ops/sec ±1.19% (185 runs sampled)\n  string - weak   x 264,356 ops/sec ±1.09% (184 runs sampled)\n\n> node benchmark/body1-1kb.js\n\n  1KB body\n\n  4 tests completed.\n\n  buffer - strong x 189,018 ops/sec ±1.12% (182 runs sampled)\n  buffer - weak   x 190,586 ops/sec ±0.81% (186 runs sampled)\n  string - strong x 144,272 ops/sec ±0.96% (188 runs sampled)\n  string - weak   x 145,380 ops/sec ±1.43% (187 runs sampled)\n\n> node benchmark/body2-5kb.js\n\n  5KB body\n\n  4 tests completed.\n\n  buffer - strong x 92,435 ops/sec ±0.42% (188 runs sampled)\n  buffer - weak   x 92,373 ops/sec ±0.58% (189 runs sampled)\n  string - strong x 48,850 ops/sec ±0.56% (186 runs sampled)\n  string - weak   x 49,380 ops/sec ±0.56% (190 runs sampled)\n\n> node benchmark/body3-10kb.js\n\n  10KB body\n\n  4 tests completed.\n\n  buffer - strong x 55,989 ops/sec ±0.93% (188 runs sampled)\n  buffer - weak   x 56,148 ops/sec ±0.55% (190 runs sampled)\n  string - strong x 27,345 ops/sec ±0.43% (188 runs sampled)\n  string - weak   x 27,496 ops/sec ±0.45% (190 runs sampled)\n\n> node benchmark/body4-100kb.js\n\n  100KB body\n\n  4 tests completed.\n\n  buffer - strong x 7,083 ops/sec ±0.22% (190 runs sampled)\n  buffer - weak   x 7,115 ops/sec ±0.26% (191 runs sampled)\n  string - strong x 3,068 ops/sec ±0.34% (190 runs sampled)\n  string - weak   x 3,096 ops/sec ±0.35% (190 runs sampled)\n\n> node benchmark/stats.js\n\n  stat\n\n  4 tests completed.\n\n  real - strong x 871,642 ops/sec ±0.34% (189 runs sampled)\n  real - weak   x 867,613 ops/sec ±0.39% (190 runs sampled)\n  fake - strong x 401,051 ops/sec ±0.40% (189 runs sampled)\n  fake - weak   x 400,100 ops/sec ±0.47% (188 runs sampled)\n```\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/etag.svg\n[npm-url]: https://npmjs.org/package/etag\n[node-version-image]: https://img.shields.io/node/v/etag.svg\n[node-version-url]: https://nodejs.org/en/download/\n[travis-image]: https://img.shields.io/travis/jshttp/etag/master.svg\n[travis-url]: https://travis-ci.org/jshttp/etag\n[coveralls-image]: https://img.shields.io/coveralls/jshttp/etag/master.svg\n[coveralls-url]: https://coveralls.io/r/jshttp/etag?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/etag.svg\n[downloads-url]: https://npmjs.org/package/etag\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\etag\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\etag\\README.md"
  },
  {
    "Content": "4.21.2 / 2024-11-06\n==========\n\n  * deps: path-to-regexp@0.1.12\n    - Fix backtracking protection\n  * deps: path-to-regexp@0.1.11\n    - Throws an error on invalid path values\n\n4.21.1 / 2024-10-08\n==========\n\n  * Backported a fix for [CVE-2024-47764](https://nvd.nist.gov/vuln/detail/CVE-2024-47764)\n\n\n4.21.0 / 2024-09-11\n==========\n\n  * Deprecate `res.location(\"back\")` and `res.redirect(\"back\")` magic string\n  * deps: serve-static@1.16.2\n    * includes send@0.19.0\n  * deps: finalhandler@1.3.1\n  * deps: qs@6.13.0\n\n4.20.0 / 2024-09-10\n==========\n  * deps: serve-static@0.16.0\n    * Remove link renderization in html while redirecting\n  * deps: send@0.19.0\n    * Remove link renderization in html while redirecting\n  * deps: body-parser@0.6.0\n    * add `depth` option to customize the depth level in the parser\n    * IMPORTANT: The default `depth` level for parsing URL-encoded data is now `32` (previously was `Infinity`)\n  * Remove link renderization in html while using `res.redirect`\n  * deps: path-to-regexp@0.1.10\n    - Adds support for named matching groups in the routes using a regex\n    - Adds backtracking protection to parameters without regexes defined\n  * deps: encodeurl@~2.0.0\n    - Removes encoding of `\\`, `|`, and `^` to align better with URL spec\n  * Deprecate passing `options.maxAge` and `options.expires` to `res.clearCookie`\n    - Will be ignored in v5, clearCookie will set a cookie with an expires in the past to instruct clients to delete the cookie\n\n4.19.2 / 2024-03-25\n==========\n\n  * Improved fix for open redirect allow list bypass\n\n4.19.1 / 2024-03-20\n==========\n\n  * Allow passing non-strings to res.location with new encoding handling checks\n\n4.19.0 / 2024-03-20\n==========\n\n  * Prevent open redirect allow list bypass due to encodeurl\n  * deps: cookie@0.6.0\n\n4.18.3 / 2024-02-29\n==========\n\n  * Fix routing requests without method\n  * deps: body-parser@1.20.2\n    - Fix strict json error message on Node.js 19+\n    - deps: content-type@~1.0.5\n    - deps: raw-body@2.5.2\n  * deps: cookie@0.6.0\n    - Add `partitioned` option\n\n4.18.2 / 2022-10-08\n===================\n\n  * Fix regression routing a large stack in a single route\n  * deps: body-parser@1.20.1\n    - deps: qs@6.11.0\n    - perf: remove unnecessary object clone\n  * deps: qs@6.11.0\n\n4.18.1 / 2022-04-29\n===================\n\n  * Fix hanging on large stack of sync routes\n\n4.18.0 / 2022-04-25\n===================\n\n  * Add \"root\" option to `res.download`\n  * Allow `options` without `filename` in `res.download`\n  * Deprecate string and non-integer arguments to `res.status`\n  * Fix behavior of `null`/`undefined` as `maxAge` in `res.cookie`\n  * Fix handling very large stacks of sync middleware\n  * Ignore `Object.prototype` values in settings through `app.set`/`app.get`\n  * Invoke `default` with same arguments as types in `res.format`\n  * Support proper 205 responses using `res.send`\n  * Use `http-errors` for `res.format` error\n  * deps: body-parser@1.20.0\n    - Fix error message for json parse whitespace in `strict`\n    - Fix internal error when inflated body exceeds limit\n    - Prevent loss of async hooks context\n    - Prevent hanging when request already read\n    - deps: depd@2.0.0\n    - deps: http-errors@2.0.0\n    - deps: on-finished@2.4.1\n    - deps: qs@6.10.3\n    - deps: raw-body@2.5.1\n  * deps: cookie@0.5.0\n    - Add `priority` option\n    - Fix `expires` option to reject invalid dates\n  * deps: depd@2.0.0\n    - Replace internal `eval` usage with `Function` constructor\n    - Use instance methods on `process` to check for listeners\n  * deps: finalhandler@1.2.0\n    - Remove set content headers that break response\n    - deps: on-finished@2.4.1\n    - deps: statuses@2.0.1\n  * deps: on-finished@2.4.1\n    - Prevent loss of async hooks context\n  * deps: qs@6.10.3\n  * deps: send@0.18.0\n    - Fix emitted 416 error missing headers property\n    - Limit the headers removed for 304 response\n    - deps: depd@2.0.0\n    - deps: destroy@1.2.0\n    - deps: http-errors@2.0.0\n    - deps: on-finished@2.4.1\n    - deps: statuses@2.0.1\n  * deps: serve-static@1.15.0\n    - deps: send@0.18.0\n  * deps: statuses@2.0.1\n    - Remove code 306\n    - Rename `425 Unordered Collection` to standard `425 Too Early`\n\n4.17.3 / 2022-02-16\n===================\n\n  * deps: accepts@~1.3.8\n    - deps: mime-types@~2.1.34\n    - deps: negotiator@0.6.3\n  * deps: body-parser@1.19.2\n    - deps: bytes@3.1.2\n    - deps: qs@6.9.7\n    - deps: raw-body@2.4.3\n  * deps: cookie@0.4.2\n  * deps: qs@6.9.7\n    * Fix handling of `__proto__` keys\n  * pref: remove unnecessary regexp for trust proxy\n\n4.17.2 / 2021-12-16\n===================\n\n  * Fix handling of `undefined` in `res.jsonp`\n  * Fix handling of `undefined` when `\"json escape\"` is enabled\n  * Fix incorrect middleware execution with unanchored `RegExp`s\n  * Fix `res.jsonp(obj, status)` deprecation message\n  * Fix typo in `res.is` JSDoc\n  * deps: body-parser@1.19.1\n    - deps: bytes@3.1.1\n    - deps: http-errors@1.8.1\n    - deps: qs@6.9.6\n    - deps: raw-body@2.4.2\n    - deps: safe-buffer@5.2.1\n    - deps: type-is@~1.6.18\n  * deps: content-disposition@0.5.4\n    - deps: safe-buffer@5.2.1\n  * deps: cookie@0.4.1\n    - Fix `maxAge` option to reject invalid values\n  * deps: proxy-addr@~2.0.7\n    - Use `req.socket` over deprecated `req.connection`\n    - deps: forwarded@0.2.0\n    - deps: ipaddr.js@1.9.1\n  * deps: qs@6.9.6\n  * deps: safe-buffer@5.2.1\n  * deps: send@0.17.2\n    - deps: http-errors@1.8.1\n    - deps: ms@2.1.3\n    - pref: ignore empty http tokens\n  * deps: serve-static@1.14.2\n    - deps: send@0.17.2\n  * deps: setprototypeof@1.2.0\n\n4.17.1 / 2019-05-25\n===================\n\n  * Revert \"Improve error message for `null`/`undefined` to `res.status`\"\n\n4.17.0 / 2019-05-16\n===================\n\n  * Add `express.raw` to parse bodies into `Buffer`\n  * Add `express.text` to parse bodies into string\n  * Improve error message for non-strings to `res.sendFile`\n  * Improve error message for `null`/`undefined` to `res.status`\n  * Support multiple hosts in `X-Forwarded-Host`\n  * deps: accepts@~1.3.7\n  * deps: body-parser@1.19.0\n    - Add encoding MIK\n    - Add petabyte (`pb`) support\n    - Fix parsing array brackets after index\n    - deps: bytes@3.1.0\n    - deps: http-errors@1.7.2\n    - deps: iconv-lite@0.4.24\n    - deps: qs@6.7.0\n    - deps: raw-body@2.4.0\n    - deps: type-is@~1.6.17\n  * deps: content-disposition@0.5.3\n  * deps: cookie@0.4.0\n    - Add `SameSite=None` support\n  * deps: finalhandler@~1.1.2\n    - Set stricter `Content-Security-Policy` header\n    - deps: parseurl@~1.3.3\n    - deps: statuses@~1.5.0\n  * deps: parseurl@~1.3.3\n  * deps: proxy-addr@~2.0.5\n    - deps: ipaddr.js@1.9.0\n  * deps: qs@6.7.0\n    - Fix parsing array brackets after index\n  * deps: range-parser@~1.2.1\n  * deps: send@0.17.1\n    - Set stricter CSP header in redirect & error responses\n    - deps: http-errors@~1.7.2\n    - deps: mime@1.6.0\n    - deps: ms@2.1.1\n    - deps: range-parser@~1.2.1\n    - deps: statuses@~1.5.0\n    - perf: remove redundant `path.normalize` call\n  * deps: serve-static@1.14.1\n    - Set stricter CSP header in redirect response\n    - deps: parseurl@~1.3.3\n    - deps: send@0.17.1\n  * deps: setprototypeof@1.1.1\n  * deps: statuses@~1.5.0\n    - Add `103 Early Hints`\n  * deps: type-is@~1.6.18\n    - deps: mime-types@~2.1.24\n    - perf: prevent internal `throw` on invalid type\n\n4.16.4 / 2018-10-10\n===================\n\n  * Fix issue where `\"Request aborted\"` may be logged in `res.sendfile`\n  * Fix JSDoc for `Router` constructor\n  * deps: body-parser@1.18.3\n    - Fix deprecation warnings on Node.js 10+\n    - Fix stack trace for strict json parse error\n    - deps: depd@~1.1.2\n    - deps: http-errors@~1.6.3\n    - deps: iconv-lite@0.4.23\n    - deps: qs@6.5.2\n    - deps: raw-body@2.3.3\n    - deps: type-is@~1.6.16\n  * deps: proxy-addr@~2.0.4\n    - deps: ipaddr.js@1.8.0\n  * deps: qs@6.5.2\n  * deps: safe-buffer@5.1.2\n\n4.16.3 / 2018-03-12\n===================\n\n  * deps: accepts@~1.3.5\n    - deps: mime-types@~2.1.18\n  * deps: depd@~1.1.2\n    - perf: remove argument reassignment\n  * deps: encodeurl@~1.0.2\n    - Fix encoding `%` as last character\n  * deps: finalhandler@1.1.1\n    - Fix 404 output for bad / missing pathnames\n    - deps: encodeurl@~1.0.2\n    - deps: statuses@~1.4.0\n  * deps: proxy-addr@~2.0.3\n    - deps: ipaddr.js@1.6.0\n  * deps: send@0.16.2\n    - Fix incorrect end tag in default error & redirects\n    - deps: depd@~1.1.2\n    - deps: encodeurl@~1.0.2\n    - deps: statuses@~1.4.0\n  * deps: serve-static@1.13.2\n    - Fix incorrect end tag in redirects\n    - deps: encodeurl@~1.0.2\n    - deps: send@0.16.2\n  * deps: statuses@~1.4.0\n  * deps: type-is@~1.6.16\n    - deps: mime-types@~2.1.18\n\n4.16.2 / 2017-10-09\n===================\n\n  * Fix `TypeError` in `res.send` when given `Buffer` and `ETag` header set\n  * perf: skip parsing of entire `X-Forwarded-Proto` header\n\n4.16.1 / 2017-09-29\n===================\n\n  * deps: send@0.16.1\n  * deps: serve-static@1.13.1\n    - Fix regression when `root` is incorrectly set to a file\n    - deps: send@0.16.1\n\n4.16.0 / 2017-09-28\n===================\n\n  * Add `\"json escape\"` setting for `res.json` and `res.jsonp`\n  * Add `express.json` and `express.urlencoded` to parse bodies\n  * Add `options` argument to `res.download`\n  * Improve error message when autoloading invalid view engine\n  * Improve error messages when non-function provided as middleware\n  * Skip `Buffer` encoding when not generating ETag for small response\n  * Use `safe-buffer` for improved Buffer API\n  * deps: accepts@~1.3.4\n    - deps: mime-types@~2.1.16\n  * deps: content-type@~1.0.4\n    - perf: remove argument reassignment\n    - perf: skip parameter parsing when no parameters\n  * deps: etag@~1.8.1\n    - perf: replace regular expression with substring\n  * deps: finalhandler@1.1.0\n    - Use `res.headersSent` when available\n  * deps: parseurl@~1.3.2\n    - perf: reduce overhead for full URLs\n    - perf: unroll the \"fast-path\" `RegExp`\n  * deps: proxy-addr@~2.0.2\n    - Fix trimming leading / trailing OWS in `X-Forwarded-For`\n    - deps: forwarded@~0.1.2\n    - deps: ipaddr.js@1.5.2\n    - perf: reduce overhead when no `X-Forwarded-For` header\n  * deps: qs@6.5.1\n    - Fix parsing & compacting very deep objects\n  * deps: send@0.16.0\n    - Add 70 new types for file extensions\n    - Add `immutable` option\n    - Fix missing `</html>` in default error & redirects\n    - Set charset as \"UTF-8\" for .js and .json\n    - Use instance methods on steam to check for listeners\n    - deps: mime@1.4.1\n    - perf: improve path validation speed\n  * deps: serve-static@1.13.0\n    - Add 70 new types for file extensions\n    - Add `immutable` option\n    - Set charset as \"UTF-8\" for .js and .json\n    - deps: send@0.16.0\n  * deps: setprototypeof@1.1.0\n  * deps: utils-merge@1.0.1\n  * deps: vary@~1.1.2\n    - perf: improve header token parsing speed\n  * perf: re-use options object when generating ETags\n  * perf: remove dead `.charset` set in `res.jsonp`\n\n4.15.5 / 2017-09-24\n===================\n\n  * deps: debug@2.6.9\n  * deps: finalhandler@~1.0.6\n    - deps: debug@2.6.9\n    - deps: parseurl@~1.3.2\n  * deps: fresh@0.5.2\n    - Fix handling of modified headers with invalid dates\n    - perf: improve ETag match loop\n    - perf: improve `If-None-Match` token parsing\n  * deps: send@0.15.6\n    - Fix handling of modified headers with invalid dates\n    - deps: debug@2.6.9\n    - deps: etag@~1.8.1\n    - deps: fresh@0.5.2\n    - perf: improve `If-Match` token parsing\n  * deps: serve-static@1.12.6\n    - deps: parseurl@~1.3.2\n    - deps: send@0.15.6\n    - perf: improve slash collapsing\n\n4.15.4 / 2017-08-06\n===================\n\n  * deps: debug@2.6.8\n  * deps: depd@~1.1.1\n    - Remove unnecessary `Buffer` loading\n  * deps: finalhandler@~1.0.4\n    - deps: debug@2.6.8\n  * deps: proxy-addr@~1.1.5\n    - Fix array argument being altered\n    - deps: ipaddr.js@1.4.0\n  * deps: qs@6.5.0\n  * deps: send@0.15.4\n    - deps: debug@2.6.8\n    - deps: depd@~1.1.1\n    - deps: http-errors@~1.6.2\n  * deps: serve-static@1.12.4\n    - deps: send@0.15.4\n\n4.15.3 / 2017-05-16\n===================\n\n  * Fix error when `res.set` cannot add charset to `Content-Type`\n  * deps: debug@2.6.7\n    - Fix `DEBUG_MAX_ARRAY_LENGTH`\n    - deps: ms@2.0.0\n  * deps: finalhandler@~1.0.3\n    - Fix missing `</html>` in HTML document\n    - deps: debug@2.6.7\n  * deps: proxy-addr@~1.1.4\n    - deps: ipaddr.js@1.3.0\n  * deps: send@0.15.3\n    - deps: debug@2.6.7\n    - deps: ms@2.0.0\n  * deps: serve-static@1.12.3\n    - deps: send@0.15.3\n  * deps: type-is@~1.6.15\n    - deps: mime-types@~2.1.15\n  * deps: vary@~1.1.1\n    - perf: hoist regular expression\n\n4.15.2 / 2017-03-06\n===================\n\n  * deps: qs@6.4.0\n    - Fix regression parsing keys starting with `[`\n\n4.15.1 / 2017-03-05\n===================\n\n  * deps: send@0.15.1\n    - Fix issue when `Date.parse` does not return `NaN` on invalid date\n    - Fix strict violation in broken environments\n  * deps: serve-static@1.12.1\n    - Fix issue when `Date.parse` does not return `NaN` on invalid date\n    - deps: send@0.15.1\n\n4.15.0 / 2017-03-01\n===================\n\n  * Add debug message when loading view engine\n  * Add `next(\"router\")` to exit from router\n  * Fix case where `router.use` skipped requests routes did not\n  * Remove usage of `res._headers` private field\n    - Improves compatibility with Node.js 8 nightly\n  * Skip routing when `req.url` is not set\n  * Use `%o` in path debug to tell types apart\n  * Use `Object.create` to setup request & response prototypes\n  * Use `setprototypeof` module to replace `__proto__` setting\n  * Use `statuses` instead of `http` module for status messages\n  * deps: debug@2.6.1\n    - Allow colors in workers\n    - Deprecated `DEBUG_FD` environment variable set to `3` or higher\n    - Fix error when running under React Native\n    - Use same color for same namespace\n    - deps: ms@0.7.2\n  * deps: etag@~1.8.0\n    - Use SHA1 instead of MD5 for ETag hashing\n    - Works with FIPS 140-2 OpenSSL configuration\n  * deps: finalhandler@~1.0.0\n    - Fix exception when `err` cannot be converted to a string\n    - Fully URL-encode the pathname in the 404\n    - Only include the pathname in the 404 message\n    - Send complete HTML document\n    - Set `Content-Security-Policy: default-src 'self'` header\n    - deps: debug@2.6.1\n  * deps: fresh@0.5.0\n    - Fix false detection of `no-cache` request directive\n    - Fix incorrect result when `If-None-Match` has both `*` and ETags\n    - Fix weak `ETag` matching to match spec\n    - perf: delay reading header values until needed\n    - perf: enable strict mode\n    - perf: hoist regular expressions\n    - perf: remove duplicate conditional\n    - perf: remove unnecessary boolean coercions\n    - perf: skip checking modified time if ETag check failed\n    - perf: skip parsing `If-None-Match` when no `ETag` header\n    - perf: use `Date.parse` instead of `new Date`\n  * deps: qs@6.3.1\n    - Fix array parsing from skipping empty values\n    - Fix compacting nested arrays\n  * deps: send@0.15.0\n    - Fix false detection of `no-cache` request directive\n    - Fix incorrect result when `If-None-Match` has both `*` and ETags\n    - Fix weak `ETag` matching to match spec\n    - Remove usage of `res._headers` private field\n    - Support `If-Match` and `If-Unmodified-Since` headers\n    - Use `res.getHeaderNames()` when available\n    - Use `res.headersSent` when available\n    - deps: debug@2.6.1\n    - deps: etag@~1.8.0\n    - deps: fresh@0.5.0\n    - deps: http-errors@~1.6.1\n  * deps: serve-static@1.12.0\n    - Fix false detection of `no-cache` request directive\n    - Fix incorrect result when `If-None-Match` has both `*` and ETags\n    - Fix weak `ETag` matching to match spec\n    - Remove usage of `res._headers` private field\n    - Send complete HTML document in redirect response\n    - Set default CSP header in redirect response\n    - Support `If-Match` and `If-Unmodified-Since` headers\n    - Use `res.getHeaderNames()` when available\n    - Use `res.headersSent` when available\n    - deps: send@0.15.0\n  * perf: add fast match path for `*` route\n  * perf: improve `req.ips` performance\n\n4.14.1 / 2017-01-28\n===================\n\n  * deps: content-disposition@0.5.2\n  * deps: finalhandler@0.5.1\n    - Fix exception when `err.headers` is not an object\n    - deps: statuses@~1.3.1\n    - perf: hoist regular expressions\n    - perf: remove duplicate validation path\n  * deps: proxy-addr@~1.1.3\n    - deps: ipaddr.js@1.2.0\n  * deps: send@0.14.2\n    - deps: http-errors@~1.5.1\n    - deps: ms@0.7.2\n    - deps: statuses@~1.3.1\n  * deps: serve-static@~1.11.2\n    - deps: send@0.14.2\n  * deps: type-is@~1.6.14\n    - deps: mime-types@~2.1.13\n\n4.14.0 / 2016-06-16\n===================\n\n  * Add `acceptRanges` option to `res.sendFile`/`res.sendfile`\n  * Add `cacheControl` option to `res.sendFile`/`res.sendfile`\n  * Add `options` argument to `req.range`\n    - Includes the `combine` option\n  * Encode URL in `res.location`/`res.redirect` if not already encoded\n  * Fix some redirect handling in `res.sendFile`/`res.sendfile`\n  * Fix Windows absolute path check using forward slashes\n  * Improve error with invalid arguments to `req.get()`\n  * Improve performance for `res.json`/`res.jsonp` in most cases\n  * Improve `Range` header handling in `res.sendFile`/`res.sendfile`\n  * deps: accepts@~1.3.3\n    - Fix including type extensions in parameters in `Accept` parsing\n    - Fix parsing `Accept` parameters with quoted equals\n    - Fix parsing `Accept` parameters with quoted semicolons\n    - Many performance improvements\n    - deps: mime-types@~2.1.11\n    - deps: negotiator@0.6.1\n  * deps: content-type@~1.0.2\n    - perf: enable strict mode\n  * deps: cookie@0.3.1\n    - Add `sameSite` option\n    - Fix cookie `Max-Age` to never be a floating point number\n    - Improve error message when `encode` is not a function\n    - Improve error message when `expires` is not a `Date`\n    - Throw better error for invalid argument to parse\n    - Throw on invalid values provided to `serialize`\n    - perf: enable strict mode\n    - perf: hoist regular expression\n    - perf: use for loop in parse\n    - perf: use string concatenation for serialization\n  * deps: finalhandler@0.5.0\n    - Change invalid or non-numeric status code to 500\n    - Overwrite status message to match set status code\n    - Prefer `err.statusCode` if `err.status` is invalid\n    - Set response headers from `err.headers` object\n    - Use `statuses` instead of `http` module for status messages\n  * deps: proxy-addr@~1.1.2\n    - Fix accepting various invalid netmasks\n    - Fix IPv6-mapped IPv4 validation edge cases\n    - IPv4 netmasks must be contiguous\n    - IPv6 addresses cannot be used as a netmask\n    - deps: ipaddr.js@1.1.1\n  * deps: qs@6.2.0\n    - Add `decoder` option in `parse` function\n  * deps: range-parser@~1.2.0\n    - Add `combine` option to combine overlapping ranges\n    - Fix incorrectly returning -1 when there is at least one valid range\n    - perf: remove internal function\n  * deps: send@0.14.1\n    - Add `acceptRanges` option\n    - Add `cacheControl` option\n    - Attempt to combine multiple ranges into single range\n    - Correctly inherit from `Stream` class\n    - Fix `Content-Range` header in 416 responses when using `start`/`end` options\n    - Fix `Content-Range` header missing from default 416 responses\n    - Fix redirect error when `path` contains raw non-URL characters\n    - Fix redirect when `path` starts with multiple forward slashes\n    - Ignore non-byte `Range` headers\n    - deps: http-errors@~1.5.0\n    - deps: range-parser@~1.2.0\n    - deps: statuses@~1.3.0\n    - perf: remove argument reassignment\n  * deps: serve-static@~1.11.1\n    - Add `acceptRanges` option\n    - Add `cacheControl` option\n    - Attempt to combine multiple ranges into single range\n    - Fix redirect error when `req.url` contains raw non-URL characters\n    - Ignore non-byte `Range` headers\n    - Use status code 301 for redirects\n    - deps: send@0.14.1\n  * deps: type-is@~1.6.13\n    - Fix type error when given invalid type to match against\n    - deps: mime-types@~2.1.11\n  * deps: vary@~1.1.0\n    - Only accept valid field names in the `field` argument\n  * perf: use strict equality when possible\n\n4.13.4 / 2016-01-21\n===================\n\n  * deps: content-disposition@0.5.1\n    - perf: enable strict mode\n  * deps: cookie@0.1.5\n    - Throw on invalid values provided to `serialize`\n  * deps: depd@~1.1.0\n    - Support web browser loading\n    - perf: enable strict mode\n  * deps: escape-html@~1.0.3\n    - perf: enable strict mode\n    - perf: optimize string replacement\n    - perf: use faster string coercion\n  * deps: finalhandler@0.4.1\n    - deps: escape-html@~1.0.3\n  * deps: merge-descriptors@1.0.1\n    - perf: enable strict mode\n  * deps: methods@~1.1.2\n    - perf: enable strict mode\n  * deps: parseurl@~1.3.1\n    - perf: enable strict mode\n  * deps: proxy-addr@~1.0.10\n    - deps: ipaddr.js@1.0.5\n    - perf: enable strict mode\n  * deps: range-parser@~1.0.3\n    - perf: enable strict mode\n  * deps: send@0.13.1\n    - deps: depd@~1.1.0\n    - deps: destroy@~1.0.4\n    - deps: escape-html@~1.0.3\n    - deps: range-parser@~1.0.3\n  * deps: serve-static@~1.10.2\n    - deps: escape-html@~1.0.3\n    - deps: parseurl@~1.3.0\n    - deps: send@0.13.1\n\n4.13.3 / 2015-08-02\n===================\n\n  * Fix infinite loop condition using `mergeParams: true`\n  * Fix inner numeric indices incorrectly altering parent `req.params`\n\n4.13.2 / 2015-07-31\n===================\n\n  * deps: accepts@~1.2.12\n    - deps: mime-types@~2.1.4\n  * deps: array-flatten@1.1.1\n    - perf: enable strict mode\n  * deps: path-to-regexp@0.1.7\n    - Fix regression with escaped round brackets and matching groups\n  * deps: type-is@~1.6.6\n    - deps: mime-types@~2.1.4\n\n4.13.1 / 2015-07-05\n===================\n\n  * deps: accepts@~1.2.10\n    - deps: mime-types@~2.1.2\n  * deps: qs@4.0.0\n    - Fix dropping parameters like `hasOwnProperty`\n    - Fix various parsing edge cases\n  * deps: type-is@~1.6.4\n    - deps: mime-types@~2.1.2\n    - perf: enable strict mode\n    - perf: remove argument reassignment\n\n4.13.0 / 2015-06-20\n===================\n\n  * Add settings to debug output\n  * Fix `res.format` error when only `default` provided\n  * Fix issue where `next('route')` in `app.param` would incorrectly skip values\n  * Fix hiding platform issues with `decodeURIComponent`\n    - Only `URIError`s are a 400\n  * Fix using `*` before params in routes\n  * Fix using capture groups before params in routes\n  * Simplify `res.cookie` to call `res.append`\n  * Use `array-flatten` module for flattening arrays\n  * deps: accepts@~1.2.9\n    - deps: mime-types@~2.1.1\n    - perf: avoid argument reassignment & argument slice\n    - perf: avoid negotiator recursive construction\n    - perf: enable strict mode\n    - perf: remove unnecessary bitwise operator\n  * deps: cookie@0.1.3\n    - perf: deduce the scope of try-catch deopt\n    - perf: remove argument reassignments\n  * deps: escape-html@1.0.2\n  * deps: etag@~1.7.0\n    - Always include entity length in ETags for hash length extensions\n    - Generate non-Stats ETags using MD5 only (no longer CRC32)\n    - Improve stat performance by removing hashing\n    - Improve support for JXcore\n    - Remove base64 padding in ETags to shorten\n    - Support \"fake\" stats objects in environments without fs\n    - Use MD5 instead of MD4 in weak ETags over 1KB\n  * deps: finalhandler@0.4.0\n    - Fix a false-positive when unpiping in Node.js 0.8\n    - Support `statusCode` property on `Error` objects\n    - Use `unpipe` module for unpiping requests\n    - deps: escape-html@1.0.2\n    - deps: on-finished@~2.3.0\n    - perf: enable strict mode\n    - perf: remove argument reassignment\n  * deps: fresh@0.3.0\n    - Add weak `ETag` matching support\n  * deps: on-finished@~2.3.0\n    - Add defined behavior for HTTP `CONNECT` requests\n    - Add defined behavior for HTTP `Upgrade` requests\n    - deps: ee-first@1.1.1\n  * deps: path-to-regexp@0.1.6\n  * deps: send@0.13.0\n    - Allow Node.js HTTP server to set `Date` response header\n    - Fix incorrectly removing `Content-Location` on 304 response\n    - Improve the default redirect response headers\n    - Send appropriate headers on default error response\n    - Use `http-errors` for standard emitted errors\n    - Use `statuses` instead of `http` module for status messages\n    - deps: escape-html@1.0.2\n    - deps: etag@~1.7.0\n    - deps: fresh@0.3.0\n    - deps: on-finished@~2.3.0\n    - perf: enable strict mode\n    - perf: remove unnecessary array allocations\n  * deps: serve-static@~1.10.0\n    - Add `fallthrough` option\n    - Fix reading options from options prototype\n    - Improve the default redirect response headers\n    - Malformed URLs now `next()` instead of 400\n    - deps: escape-html@1.0.2\n    - deps: send@0.13.0\n    - perf: enable strict mode\n    - perf: remove argument reassignment\n  * deps: type-is@~1.6.3\n    - deps: mime-types@~2.1.1\n    - perf: reduce try block size\n    - perf: remove bitwise operations\n  * perf: enable strict mode\n  * perf: isolate `app.render` try block\n  * perf: remove argument reassignments in application\n  * perf: remove argument reassignments in request prototype\n  * perf: remove argument reassignments in response prototype\n  * perf: remove argument reassignments in routing\n  * perf: remove argument reassignments in `View`\n  * perf: skip attempting to decode zero length string\n  * perf: use saved reference to `http.STATUS_CODES`\n\n4.12.4 / 2015-05-17\n===================\n\n  * deps: accepts@~1.2.7\n    - deps: mime-types@~2.0.11\n    - deps: negotiator@0.5.3\n  * deps: debug@~2.2.0\n    - deps: ms@0.7.1\n  * deps: depd@~1.0.1\n  * deps: etag@~1.6.0\n    - Improve support for JXcore\n    - Support \"fake\" stats objects in environments without `fs`\n  * deps: finalhandler@0.3.6\n    - deps: debug@~2.2.0\n    - deps: on-finished@~2.2.1\n  * deps: on-finished@~2.2.1\n    - Fix `isFinished(req)` when data buffered\n  * deps: proxy-addr@~1.0.8\n    - deps: ipaddr.js@1.0.1\n  * deps: qs@2.4.2\n   - Fix allowing parameters like `constructor`\n  * deps: send@0.12.3\n    - deps: debug@~2.2.0\n    - deps: depd@~1.0.1\n    - deps: etag@~1.6.0\n    - deps: ms@0.7.1\n    - deps: on-finished@~2.2.1\n  * deps: serve-static@~1.9.3\n    - deps: send@0.12.3\n  * deps: type-is@~1.6.2\n    - deps: mime-types@~2.0.11\n\n4.12.3 / 2015-03-17\n===================\n\n  * deps: accepts@~1.2.5\n    - deps: mime-types@~2.0.10\n  * deps: debug@~2.1.3\n    - Fix high intensity foreground color for bold\n    - deps: ms@0.7.0\n  * deps: finalhandler@0.3.4\n    - deps: debug@~2.1.3\n  * deps: proxy-addr@~1.0.7\n    - deps: ipaddr.js@0.1.9\n  * deps: qs@2.4.1\n    - Fix error when parameter `hasOwnProperty` is present\n  * deps: send@0.12.2\n    - Throw errors early for invalid `extensions` or `index` options\n    - deps: debug@~2.1.3\n  * deps: serve-static@~1.9.2\n    - deps: send@0.12.2\n  * deps: type-is@~1.6.1\n    - deps: mime-types@~2.0.10\n\n4.12.2 / 2015-03-02\n===================\n\n  * Fix regression where `\"Request aborted\"` is logged using `res.sendFile`\n\n4.12.1 / 2015-03-01\n===================\n\n  * Fix constructing application with non-configurable prototype properties\n  * Fix `ECONNRESET` errors from `res.sendFile` usage\n  * Fix `req.host` when using \"trust proxy\" hops count\n  * Fix `req.protocol`/`req.secure` when using \"trust proxy\" hops count\n  * Fix wrong `code` on aborted connections from `res.sendFile`\n  * deps: merge-descriptors@1.0.0\n\n4.12.0 / 2015-02-23\n===================\n\n  * Fix `\"trust proxy\"` setting to inherit when app is mounted\n  * Generate `ETag`s for all request responses\n    - No longer restricted to only responses for `GET` and `HEAD` requests\n  * Use `content-type` to parse `Content-Type` headers\n  * deps: accepts@~1.2.4\n    - Fix preference sorting to be stable for long acceptable lists\n    - deps: mime-types@~2.0.9\n    - deps: negotiator@0.5.1\n  * deps: cookie-signature@1.0.6\n  * deps: send@0.12.1\n    - Always read the stat size from the file\n    - Fix mutating passed-in `options`\n    - deps: mime@1.3.4\n  * deps: serve-static@~1.9.1\n    - deps: send@0.12.1\n  * deps: type-is@~1.6.0\n    - fix argument reassignment\n    - fix false-positives in `hasBody` `Transfer-Encoding` check\n    - support wildcard for both type and subtype (`*/*`)\n    - deps: mime-types@~2.0.9\n\n4.11.2 / 2015-02-01\n===================\n\n  * Fix `res.redirect` double-calling `res.end` for `HEAD` requests\n  * deps: accepts@~1.2.3\n    - deps: mime-types@~2.0.8\n  * deps: proxy-addr@~1.0.6\n    - deps: ipaddr.js@0.1.8\n  * deps: type-is@~1.5.6\n    - deps: mime-types@~2.0.8\n\n4.11.1 / 2015-01-20\n===================\n\n  * deps: send@0.11.1\n    - Fix root path disclosure\n  * deps: serve-static@~1.8.1\n    - Fix redirect loop in Node.js 0.11.14\n    - Fix root path disclosure\n    - deps: send@0.11.1\n\n4.11.0 / 2015-01-13\n===================\n\n  * Add `res.append(field, val)` to append headers\n  * Deprecate leading `:` in `name` for `app.param(name, fn)`\n  * Deprecate `req.param()` -- use `req.params`, `req.body`, or `req.query` instead\n  * Deprecate `app.param(fn)`\n  * Fix `OPTIONS` responses to include the `HEAD` method properly\n  * Fix `res.sendFile` not always detecting aborted connection\n  * Match routes iteratively to prevent stack overflows\n  * deps: accepts@~1.2.2\n    - deps: mime-types@~2.0.7\n    - deps: negotiator@0.5.0\n  * deps: send@0.11.0\n    - deps: debug@~2.1.1\n    - deps: etag@~1.5.1\n    - deps: ms@0.7.0\n    - deps: on-finished@~2.2.0\n  * deps: serve-static@~1.8.0\n    - deps: send@0.11.0\n\n4.10.8 / 2015-01-13\n===================\n\n  * Fix crash from error within `OPTIONS` response handler\n  * deps: proxy-addr@~1.0.5\n    - deps: ipaddr.js@0.1.6\n\n4.10.7 / 2015-01-04\n===================\n\n  * Fix `Allow` header for `OPTIONS` to not contain duplicate methods\n  * Fix incorrect \"Request aborted\" for `res.sendFile` when `HEAD` or 304\n  * deps: debug@~2.1.1\n  * deps: finalhandler@0.3.3\n    - deps: debug@~2.1.1\n    - deps: on-finished@~2.2.0\n  * deps: methods@~1.1.1\n  * deps: on-finished@~2.2.0\n  * deps: serve-static@~1.7.2\n    - Fix potential open redirect when mounted at root\n  * deps: type-is@~1.5.5\n    - deps: mime-types@~2.0.7\n\n4.10.6 / 2014-12-12\n===================\n\n  * Fix exception in `req.fresh`/`req.stale` without response headers\n\n4.10.5 / 2014-12-10\n===================\n\n  * Fix `res.send` double-calling `res.end` for `HEAD` requests\n  * deps: accepts@~1.1.4\n    - deps: mime-types@~2.0.4\n  * deps: type-is@~1.5.4\n    - deps: mime-types@~2.0.4\n\n4.10.4 / 2014-11-24\n===================\n\n  * Fix `res.sendfile` logging standard write errors\n\n4.10.3 / 2014-11-23\n===================\n\n  * Fix `res.sendFile` logging standard write errors\n  * deps: etag@~1.5.1\n  * deps: proxy-addr@~1.0.4\n    - deps: ipaddr.js@0.1.5\n  * deps: qs@2.3.3\n    - Fix `arrayLimit` behavior\n\n4.10.2 / 2014-11-09\n===================\n\n  * Correctly invoke async router callback asynchronously\n  * deps: accepts@~1.1.3\n    - deps: mime-types@~2.0.3\n  * deps: type-is@~1.5.3\n    - deps: mime-types@~2.0.3\n\n4.10.1 / 2014-10-28\n===================\n\n  * Fix handling of URLs containing `://` in the path\n  * deps: qs@2.3.2\n    - Fix parsing of mixed objects and values\n\n4.10.0 / 2014-10-23\n===================\n\n  * Add support for `app.set('views', array)`\n    - Views are looked up in sequence in array of directories\n  * Fix `res.send(status)` to mention `res.sendStatus(status)`\n  * Fix handling of invalid empty URLs\n  * Use `content-disposition` module for `res.attachment`/`res.download`\n    - Sends standards-compliant `Content-Disposition` header\n    - Full Unicode support\n  * Use `path.resolve` in view lookup\n  * deps: debug@~2.1.0\n    - Implement `DEBUG_FD` env variable support\n  * deps: depd@~1.0.0\n  * deps: etag@~1.5.0\n    - Improve string performance\n    - Slightly improve speed for weak ETags over 1KB\n  * deps: finalhandler@0.3.2\n    - Terminate in progress response only on error\n    - Use `on-finished` to determine request status\n    - deps: debug@~2.1.0\n    - deps: on-finished@~2.1.1\n  * deps: on-finished@~2.1.1\n    - Fix handling of pipelined requests\n  * deps: qs@2.3.0\n    - Fix parsing of mixed implicit and explicit arrays\n  * deps: send@0.10.1\n    - deps: debug@~2.1.0\n    - deps: depd@~1.0.0\n    - deps: etag@~1.5.0\n    - deps: on-finished@~2.1.1\n  * deps: serve-static@~1.7.1\n    - deps: send@0.10.1\n\n4.9.8 / 2014-10-17\n==================\n\n  * Fix `res.redirect` body when redirect status specified\n  * deps: accepts@~1.1.2\n    - Fix error when media type has invalid parameter\n    - deps: negotiator@0.4.9\n\n4.9.7 / 2014-10-10\n==================\n\n  * Fix using same param name in array of paths\n\n4.9.6 / 2014-10-08\n==================\n\n  * deps: accepts@~1.1.1\n    - deps: mime-types@~2.0.2\n    - deps: negotiator@0.4.8\n  * deps: serve-static@~1.6.4\n    - Fix redirect loop when index file serving disabled\n  * deps: type-is@~1.5.2\n    - deps: mime-types@~2.0.2\n\n4.9.5 / 2014-09-24\n==================\n\n  * deps: etag@~1.4.0\n  * deps: proxy-addr@~1.0.3\n    - Use `forwarded` npm module\n  * deps: send@0.9.3\n    - deps: etag@~1.4.0\n  * deps: serve-static@~1.6.3\n    - deps: send@0.9.3\n\n4.9.4 / 2014-09-19\n==================\n\n  * deps: qs@2.2.4\n    - Fix issue with object keys starting with numbers truncated\n\n4.9.3 / 2014-09-18\n==================\n\n  * deps: proxy-addr@~1.0.2\n    - Fix a global leak when multiple subnets are trusted\n    - deps: ipaddr.js@0.1.3\n\n4.9.2 / 2014-09-17\n==================\n\n  * Fix regression for empty string `path` in `app.use`\n  * Fix `router.use` to accept array of middleware without path\n  * Improve error message for bad `app.use` arguments\n\n4.9.1 / 2014-09-16\n==================\n\n  * Fix `app.use` to accept array of middleware without path\n  * deps: depd@0.4.5\n  * deps: etag@~1.3.1\n  * deps: send@0.9.2\n    - deps: depd@0.4.5\n    - deps: etag@~1.3.1\n    - deps: range-parser@~1.0.2\n  * deps: serve-static@~1.6.2\n    - deps: send@0.9.2\n\n4.9.0 / 2014-09-08\n==================\n\n  * Add `res.sendStatus`\n  * Invoke callback for sendfile when client aborts\n    - Applies to `res.sendFile`, `res.sendfile`, and `res.download`\n    - `err` will be populated with request aborted error\n  * Support IP address host in `req.subdomains`\n  * Use `etag` to generate `ETag` headers\n  * deps: accepts@~1.1.0\n    - update `mime-types`\n  * deps: cookie-signature@1.0.5\n  * deps: debug@~2.0.0\n  * deps: finalhandler@0.2.0\n    - Set `X-Content-Type-Options: nosniff` header\n    - deps: debug@~2.0.0\n  * deps: fresh@0.2.4\n  * deps: media-typer@0.3.0\n    - Throw error when parameter format invalid on parse\n  * deps: qs@2.2.3\n    - Fix issue where first empty value in array is discarded\n  * deps: range-parser@~1.0.2\n  * deps: send@0.9.1\n    - Add `lastModified` option\n    - Use `etag` to generate `ETag` header\n    - deps: debug@~2.0.0\n    - deps: fresh@0.2.4\n  * deps: serve-static@~1.6.1\n    - Add `lastModified` option\n    - deps: send@0.9.1\n  * deps: type-is@~1.5.1\n    - fix `hasbody` to be true for `content-length: 0`\n    - deps: media-typer@0.3.0\n    - deps: mime-types@~2.0.1\n  * deps: vary@~1.0.0\n    - Accept valid `Vary` header string as `field`\n\n4.8.8 / 2014-09-04\n==================\n\n  * deps: send@0.8.5\n    - Fix a path traversal issue when using `root`\n    - Fix malicious path detection for empty string path\n  * deps: serve-static@~1.5.4\n    - deps: send@0.8.5\n\n4.8.7 / 2014-08-29\n==================\n\n  * deps: qs@2.2.2\n    - Remove unnecessary cloning\n\n4.8.6 / 2014-08-27\n==================\n\n  * deps: qs@2.2.0\n    - Array parsing fix\n    - Performance improvements\n\n4.8.5 / 2014-08-18\n==================\n\n  * deps: send@0.8.3\n    - deps: destroy@1.0.3\n    - deps: on-finished@2.1.0\n  * deps: serve-static@~1.5.3\n    - deps: send@0.8.3\n\n4.8.4 / 2014-08-14\n==================\n\n  * deps: qs@1.2.2\n  * deps: send@0.8.2\n    - Work around `fd` leak in Node.js 0.10 for `fs.ReadStream`\n  * deps: serve-static@~1.5.2\n    - deps: send@0.8.2\n\n4.8.3 / 2014-08-10\n==================\n\n  * deps: parseurl@~1.3.0\n  * deps: qs@1.2.1\n  * deps: serve-static@~1.5.1\n    - Fix parsing of weird `req.originalUrl` values\n    - deps: parseurl@~1.3.0\n    - deps: utils-merge@1.0.0\n\n4.8.2 / 2014-08-07\n==================\n\n  * deps: qs@1.2.0\n    - Fix parsing array of objects\n\n4.8.1 / 2014-08-06\n==================\n\n  * fix incorrect deprecation warnings on `res.download`\n  * deps: qs@1.1.0\n    - Accept urlencoded square brackets\n    - Accept empty values in implicit array notation\n\n4.8.0 / 2014-08-05\n==================\n\n  * add `res.sendFile`\n    - accepts a file system path instead of a URL\n    - requires an absolute path or `root` option specified\n  * deprecate `res.sendfile` -- use `res.sendFile` instead\n  * support mounted app as any argument to `app.use()`\n  * deps: qs@1.0.2\n    - Complete rewrite\n    - Limits array length to 20\n    - Limits object depth to 5\n    - Limits parameters to 1,000\n  * deps: send@0.8.1\n    - Add `extensions` option\n  * deps: serve-static@~1.5.0\n    - Add `extensions` option\n    - deps: send@0.8.1\n\n4.7.4 / 2014-08-04\n==================\n\n  * fix `res.sendfile` regression for serving directory index files\n  * deps: send@0.7.4\n    - Fix incorrect 403 on Windows and Node.js 0.11\n    - Fix serving index files without root dir\n  * deps: serve-static@~1.4.4\n    - deps: send@0.7.4\n\n4.7.3 / 2014-08-04\n==================\n\n  * deps: send@0.7.3\n    - Fix incorrect 403 on Windows and Node.js 0.11\n  * deps: serve-static@~1.4.3\n    - Fix incorrect 403 on Windows and Node.js 0.11\n    - deps: send@0.7.3\n\n4.7.2 / 2014-07-27\n==================\n\n  * deps: depd@0.4.4\n    - Work-around v8 generating empty stack traces\n  * deps: send@0.7.2\n    - deps: depd@0.4.4\n  * deps: serve-static@~1.4.2\n\n4.7.1 / 2014-07-26\n==================\n\n  * deps: depd@0.4.3\n    - Fix exception when global `Error.stackTraceLimit` is too low\n  * deps: send@0.7.1\n    - deps: depd@0.4.3\n  * deps: serve-static@~1.4.1\n\n4.7.0 / 2014-07-25\n==================\n\n  * fix `req.protocol` for proxy-direct connections\n  * configurable query parser with `app.set('query parser', parser)`\n    - `app.set('query parser', 'extended')` parse with \"qs\" module\n    - `app.set('query parser', 'simple')` parse with \"querystring\" core module\n    - `app.set('query parser', false)` disable query string parsing\n    - `app.set('query parser', true)` enable simple parsing\n  * deprecate `res.json(status, obj)` -- use `res.status(status).json(obj)` instead\n  * deprecate `res.jsonp(status, obj)` -- use `res.status(status).jsonp(obj)` instead\n  * deprecate `res.send(status, body)` -- use `res.status(status).send(body)` instead\n  * deps: debug@1.0.4\n  * deps: depd@0.4.2\n    - Add `TRACE_DEPRECATION` environment variable\n    - Remove non-standard grey color from color output\n    - Support `--no-deprecation` argument\n    - Support `--trace-deprecation` argument\n  * deps: finalhandler@0.1.0\n    - Respond after request fully read\n    - deps: debug@1.0.4\n  * deps: parseurl@~1.2.0\n    - Cache URLs based on original value\n    - Remove no-longer-needed URL mis-parse work-around\n    - Simplify the \"fast-path\" `RegExp`\n  * deps: send@0.7.0\n    - Add `dotfiles` option\n    - Cap `maxAge` value to 1 year\n    - deps: debug@1.0.4\n    - deps: depd@0.4.2\n  * deps: serve-static@~1.4.0\n    - deps: parseurl@~1.2.0\n    - deps: send@0.7.0\n  * perf: prevent multiple `Buffer` creation in `res.send`\n\n4.6.1 / 2014-07-12\n==================\n\n  * fix `subapp.mountpath` regression for `app.use(subapp)`\n\n4.6.0 / 2014-07-11\n==================\n\n  * accept multiple callbacks to `app.use()`\n  * add explicit \"Rosetta Flash JSONP abuse\" protection\n    - previous versions are not vulnerable; this is just explicit protection\n  * catch errors in multiple `req.param(name, fn)` handlers\n  * deprecate `res.redirect(url, status)` -- use `res.redirect(status, url)` instead\n  * fix `res.send(status, num)` to send `num` as json (not error)\n  * remove unnecessary escaping when `res.jsonp` returns JSON response\n  * support non-string `path` in `app.use(path, fn)`\n    - supports array of paths\n    - supports `RegExp`\n  * router: fix optimization on router exit\n  * router: refactor location of `try` blocks\n  * router: speed up standard `app.use(fn)`\n  * deps: debug@1.0.3\n    - Add support for multiple wildcards in namespaces\n  * deps: finalhandler@0.0.3\n    - deps: debug@1.0.3\n  * deps: methods@1.1.0\n    - add `CONNECT`\n  * deps: parseurl@~1.1.3\n    - faster parsing of href-only URLs\n  * deps: path-to-regexp@0.1.3\n  * deps: send@0.6.0\n    - deps: debug@1.0.3\n  * deps: serve-static@~1.3.2\n    - deps: parseurl@~1.1.3\n    - deps: send@0.6.0\n  * perf: fix arguments reassign deopt in some `res` methods\n\n4.5.1 / 2014-07-06\n==================\n\n * fix routing regression when altering `req.method`\n\n4.5.0 / 2014-07-04\n==================\n\n * add deprecation message to non-plural `req.accepts*`\n * add deprecation message to `res.send(body, status)`\n * add deprecation message to `res.vary()`\n * add `headers` option to `res.sendfile`\n   - use to set headers on successful file transfer\n * add `mergeParams` option to `Router`\n   - merges `req.params` from parent routes\n * add `req.hostname` -- correct name for what `req.host` returns\n * deprecate things with `depd` module\n * deprecate `req.host` -- use `req.hostname` instead\n * fix behavior when handling request without routes\n * fix handling when `route.all` is only route\n * invoke `router.param()` only when route matches\n * restore `req.params` after invoking router\n * use `finalhandler` for final response handling\n * use `media-typer` to alter content-type charset\n * deps: accepts@~1.0.7\n * deps: send@0.5.0\n   - Accept string for `maxage` (converted by `ms`)\n   - Include link in default redirect response\n * deps: serve-static@~1.3.0\n   - Accept string for `maxAge` (converted by `ms`)\n   - Add `setHeaders` option\n   - Include HTML link in redirect response\n   - deps: send@0.5.0\n * deps: type-is@~1.3.2\n\n4.4.5 / 2014-06-26\n==================\n\n * deps: cookie-signature@1.0.4\n   - fix for timing attacks\n\n4.4.4 / 2014-06-20\n==================\n\n * fix `res.attachment` Unicode filenames in Safari\n * fix \"trim prefix\" debug message in `express:router`\n * deps: accepts@~1.0.5\n * deps: buffer-crc32@0.2.3\n\n4.4.3 / 2014-06-11\n==================\n\n * fix persistence of modified `req.params[name]` from `app.param()`\n * deps: accepts@1.0.3\n   - deps: negotiator@0.4.6\n * deps: debug@1.0.2\n * deps: send@0.4.3\n   - Do not throw uncatchable error on file open race condition\n   - Use `escape-html` for HTML escaping\n   - deps: debug@1.0.2\n   - deps: finished@1.2.2\n   - deps: fresh@0.2.2\n * deps: serve-static@1.2.3\n   - Do not throw uncatchable error on file open race condition\n   - deps: send@0.4.3\n\n4.4.2 / 2014-06-09\n==================\n\n * fix catching errors from top-level handlers\n * use `vary` module for `res.vary`\n * deps: debug@1.0.1\n * deps: proxy-addr@1.0.1\n * deps: send@0.4.2\n   - fix \"event emitter leak\" warnings\n   - deps: debug@1.0.1\n   - deps: finished@1.2.1\n * deps: serve-static@1.2.2\n   - fix \"event emitter leak\" warnings\n   - deps: send@0.4.2\n * deps: type-is@1.2.1\n\n4.4.1 / 2014-06-02\n==================\n\n * deps: methods@1.0.1\n * deps: send@0.4.1\n   - Send `max-age` in `Cache-Control` in correct format\n * deps: serve-static@1.2.1\n   - use `escape-html` for escaping\n   - deps: send@0.4.1\n\n4.4.0 / 2014-05-30\n==================\n\n * custom etag control with `app.set('etag', val)`\n   - `app.set('etag', function(body, encoding){ return '\"etag\"' })` custom etag generation\n   - `app.set('etag', 'weak')` weak tag\n   - `app.set('etag', 'strong')` strong etag\n   - `app.set('etag', false)` turn off\n   - `app.set('etag', true)` standard etag\n * mark `res.send` ETag as weak and reduce collisions\n * update accepts to 1.0.2\n   - Fix interpretation when header not in request\n * update send to 0.4.0\n   - Calculate ETag with md5 for reduced collisions\n   - Ignore stream errors after request ends\n   - deps: debug@0.8.1\n * update serve-static to 1.2.0\n   - Calculate ETag with md5 for reduced collisions\n   - Ignore stream errors after request ends\n   - deps: send@0.4.0\n\n4.3.2 / 2014-05-28\n==================\n\n * fix handling of errors from `router.param()` callbacks\n\n4.3.1 / 2014-05-23\n==================\n\n * revert \"fix behavior of multiple `app.VERB` for the same path\"\n   - this caused a regression in the order of route execution\n\n4.3.0 / 2014-05-21\n==================\n\n * add `req.baseUrl` to access the path stripped from `req.url` in routes\n * fix behavior of multiple `app.VERB` for the same path\n * fix issue routing requests among sub routers\n * invoke `router.param()` only when necessary instead of every match\n * proper proxy trust with `app.set('trust proxy', trust)`\n   - `app.set('trust proxy', 1)` trust first hop\n   - `app.set('trust proxy', 'loopback')` trust loopback addresses\n   - `app.set('trust proxy', '10.0.0.1')` trust single IP\n   - `app.set('trust proxy', '10.0.0.1/16')` trust subnet\n   - `app.set('trust proxy', '10.0.0.1, 10.0.0.2')` trust list\n   - `app.set('trust proxy', false)` turn off\n   - `app.set('trust proxy', true)` trust everything\n * set proper `charset` in `Content-Type` for `res.send`\n * update type-is to 1.2.0\n   - support suffix matching\n\n4.2.0 / 2014-05-11\n==================\n\n * deprecate `app.del()` -- use `app.delete()` instead\n * deprecate `res.json(obj, status)` -- use `res.json(status, obj)` instead\n   - the edge-case `res.json(status, num)` requires `res.status(status).json(num)`\n * deprecate `res.jsonp(obj, status)` -- use `res.jsonp(status, obj)` instead\n   - the edge-case `res.jsonp(status, num)` requires `res.status(status).jsonp(num)`\n * fix `req.next` when inside router instance\n * include `ETag` header in `HEAD` requests\n * keep previous `Content-Type` for `res.jsonp`\n * support PURGE method\n   - add `app.purge`\n   - add `router.purge`\n   - include PURGE in `app.all`\n * update debug to 0.8.0\n   - add `enable()` method\n   - change from stderr to stdout\n * update methods to 1.0.0\n   - add PURGE\n\n4.1.2 / 2014-05-08\n==================\n\n * fix `req.host` for IPv6 literals\n * fix `res.jsonp` error if callback param is object\n\n4.1.1 / 2014-04-27\n==================\n\n * fix package.json to reflect supported node version\n\n4.1.0 / 2014-04-24\n==================\n\n * pass options from `res.sendfile` to `send`\n * preserve casing of headers in `res.header` and `res.set`\n * support unicode file names in `res.attachment` and `res.download`\n * update accepts to 1.0.1\n   - deps: negotiator@0.4.0\n * update cookie to 0.1.2\n   - Fix for maxAge == 0\n   - made compat with expires field\n * update send to 0.3.0\n   - Accept API options in options object\n   - Coerce option types\n   - Control whether to generate etags\n   - Default directory access to 403 when index disabled\n   - Fix sending files with dots without root set\n   - Include file path in etag\n   - Make \"Can't set headers after they are sent.\" catchable\n   - Send full entity-body for multi range requests\n   - Set etags to \"weak\"\n   - Support \"If-Range\" header\n   - Support multiple index paths\n   - deps: mime@1.2.11\n * update serve-static to 1.1.0\n   - Accept options directly to `send` module\n   - Resolve relative paths at middleware setup\n   - Use parseurl to parse the URL from request\n   - deps: send@0.3.0\n * update type-is to 1.1.0\n   - add non-array values support\n   - add `multipart` as a shorthand\n\n4.0.0 / 2014-04-09\n==================\n\n * remove:\n   - node 0.8 support\n   - connect and connect's patches except for charset handling\n   - express(1) - moved to [express-generator](https://github.com/expressjs/generator)\n   - `express.createServer()` - it has been deprecated for a long time. Use `express()`\n   - `app.configure` - use logic in your own app code\n   - `app.router` - is removed\n   - `req.auth` - use `basic-auth` instead\n   - `req.accepted*` - use `req.accepts*()` instead\n   - `res.location` - relative URL resolution is removed\n   - `res.charset` - include the charset in the content type when using `res.set()`\n   - all bundled middleware except `static`\n * change:\n   - `app.route` -> `app.mountpath` when mounting an express app in another express app\n   - `json spaces` no longer enabled by default in development\n   - `req.accepts*` -> `req.accepts*s` - i.e. `req.acceptsEncoding` -> `req.acceptsEncodings`\n   - `req.params` is now an object instead of an array\n   - `res.locals` is no longer a function. It is a plain js object. Treat it as such.\n   - `res.headerSent` -> `res.headersSent` to match node.js ServerResponse object\n * refactor:\n   - `req.accepts*` with [accepts](https://github.com/expressjs/accepts)\n   - `req.is` with [type-is](https://github.com/expressjs/type-is)\n   - [path-to-regexp](https://github.com/component/path-to-regexp)\n * add:\n   - `app.router()` - returns the app Router instance\n   - `app.route()` - Proxy to the app's `Router#route()` method to create a new route\n   - Router & Route - public API\n\n3.21.2 / 2015-07-31\n===================\n\n  * deps: connect@2.30.2\n    - deps: body-parser@~1.13.3\n    - deps: compression@~1.5.2\n    - deps: errorhandler@~1.4.2\n    - deps: method-override@~2.3.5\n    - deps: serve-index@~1.7.2\n    - deps: type-is@~1.6.6\n    - deps: vhost@~3.0.1\n  * deps: vary@~1.0.1\n    - Fix setting empty header from empty `field`\n    - perf: enable strict mode\n    - perf: remove argument reassignments\n\n3.21.1 / 2015-07-05\n===================\n\n  * deps: basic-auth@~1.0.3\n  * deps: connect@2.30.1\n    - deps: body-parser@~1.13.2\n    - deps: compression@~1.5.1\n    - deps: errorhandler@~1.4.1\n    - deps: morgan@~1.6.1\n    - deps: pause@0.1.0\n    - deps: qs@4.0.0\n    - deps: serve-index@~1.7.1\n    - deps: type-is@~1.6.4\n\n3.21.0 / 2015-06-18\n===================\n\n  * deps: basic-auth@1.0.2\n    - perf: enable strict mode\n    - perf: hoist regular expression\n    - perf: parse with regular expressions\n    - perf: remove argument reassignment\n  * deps: connect@2.30.0\n    - deps: body-parser@~1.13.1\n    - deps: bytes@2.1.0\n    - deps: compression@~1.5.0\n    - deps: cookie@0.1.3\n    - deps: cookie-parser@~1.3.5\n    - deps: csurf@~1.8.3\n    - deps: errorhandler@~1.4.0\n    - deps: express-session@~1.11.3\n    - deps: finalhandler@0.4.0\n    - deps: fresh@0.3.0\n    - deps: morgan@~1.6.0\n    - deps: serve-favicon@~2.3.0\n    - deps: serve-index@~1.7.0\n    - deps: serve-static@~1.10.0\n    - deps: type-is@~1.6.3\n  * deps: cookie@0.1.3\n    - perf: deduce the scope of try-catch deopt\n    - perf: remove argument reassignments\n  * deps: escape-html@1.0.2\n  * deps: etag@~1.7.0\n    - Always include entity length in ETags for hash length extensions\n    - Generate non-Stats ETags using MD5 only (no longer CRC32)\n    - Improve stat performance by removing hashing\n    - Improve support for JXcore\n    - Remove base64 padding in ETags to shorten\n    - Support \"fake\" stats objects in environments without fs\n    - Use MD5 instead of MD4 in weak ETags over 1KB\n  * deps: fresh@0.3.0\n    - Add weak `ETag` matching support\n  * deps: mkdirp@0.5.1\n    - Work in global strict mode\n  * deps: send@0.13.0\n    - Allow Node.js HTTP server to set `Date` response header\n    - Fix incorrectly removing `Content-Location` on 304 response\n    - Improve the default redirect response headers\n    - Send appropriate headers on default error response\n    - Use `http-errors` for standard emitted errors\n    - Use `statuses` instead of `http` module for status messages\n    - deps: escape-html@1.0.2\n    - deps: etag@~1.7.0\n    - deps: fresh@0.3.0\n    - deps: on-finished@~2.3.0\n    - perf: enable strict mode\n    - perf: remove unnecessary array allocations\n\n3.20.3 / 2015-05-17\n===================\n\n  * deps: connect@2.29.2\n    - deps: body-parser@~1.12.4\n    - deps: compression@~1.4.4\n    - deps: connect-timeout@~1.6.2\n    - deps: debug@~2.2.0\n    - deps: depd@~1.0.1\n    - deps: errorhandler@~1.3.6\n    - deps: finalhandler@0.3.6\n    - deps: method-override@~2.3.3\n    - deps: morgan@~1.5.3\n    - deps: qs@2.4.2\n    - deps: response-time@~2.3.1\n    - deps: serve-favicon@~2.2.1\n    - deps: serve-index@~1.6.4\n    - deps: serve-static@~1.9.3\n    - deps: type-is@~1.6.2\n  * deps: debug@~2.2.0\n    - deps: ms@0.7.1\n  * deps: depd@~1.0.1\n  * deps: proxy-addr@~1.0.8\n    - deps: ipaddr.js@1.0.1\n  * deps: send@0.12.3\n    - deps: debug@~2.2.0\n    - deps: depd@~1.0.1\n    - deps: etag@~1.6.0\n    - deps: ms@0.7.1\n    - deps: on-finished@~2.2.1\n\n3.20.2 / 2015-03-16\n===================\n\n  * deps: connect@2.29.1\n    - deps: body-parser@~1.12.2\n    - deps: compression@~1.4.3\n    - deps: connect-timeout@~1.6.1\n    - deps: debug@~2.1.3\n    - deps: errorhandler@~1.3.5\n    - deps: express-session@~1.10.4\n    - deps: finalhandler@0.3.4\n    - deps: method-override@~2.3.2\n    - deps: morgan@~1.5.2\n    - deps: qs@2.4.1\n    - deps: serve-index@~1.6.3\n    - deps: serve-static@~1.9.2\n    - deps: type-is@~1.6.1\n  * deps: debug@~2.1.3\n    - Fix high intensity foreground color for bold\n    - deps: ms@0.7.0\n  * deps: merge-descriptors@1.0.0\n  * deps: proxy-addr@~1.0.7\n    - deps: ipaddr.js@0.1.9\n  * deps: send@0.12.2\n    - Throw errors early for invalid `extensions` or `index` options\n    - deps: debug@~2.1.3\n\n3.20.1 / 2015-02-28\n===================\n\n  * Fix `req.host` when using \"trust proxy\" hops count\n  * Fix `req.protocol`/`req.secure` when using \"trust proxy\" hops count\n\n3.20.0 / 2015-02-18\n===================\n\n  * Fix `\"trust proxy\"` setting to inherit when app is mounted\n  * Generate `ETag`s for all request responses\n    - No longer restricted to only responses for `GET` and `HEAD` requests\n  * Use `content-type` to parse `Content-Type` headers\n  * deps: connect@2.29.0\n    - Use `content-type` to parse `Content-Type` headers\n    - deps: body-parser@~1.12.0\n    - deps: compression@~1.4.1\n    - deps: connect-timeout@~1.6.0\n    - deps: cookie-parser@~1.3.4\n    - deps: cookie-signature@1.0.6\n    - deps: csurf@~1.7.0\n    - deps: errorhandler@~1.3.4\n    - deps: express-session@~1.10.3\n    - deps: http-errors@~1.3.1\n    - deps: response-time@~2.3.0\n    - deps: serve-index@~1.6.2\n    - deps: serve-static@~1.9.1\n    - deps: type-is@~1.6.0\n  * deps: cookie-signature@1.0.6\n  * deps: send@0.12.1\n    - Always read the stat size from the file\n    - Fix mutating passed-in `options`\n    - deps: mime@1.3.4\n\n3.19.2 / 2015-02-01\n===================\n\n  * deps: connect@2.28.3\n    - deps: compression@~1.3.1\n    - deps: csurf@~1.6.6\n    - deps: errorhandler@~1.3.3\n    - deps: express-session@~1.10.2\n    - deps: serve-index@~1.6.1\n    - deps: type-is@~1.5.6\n  * deps: proxy-addr@~1.0.6\n    - deps: ipaddr.js@0.1.8\n\n3.19.1 / 2015-01-20\n===================\n\n  * deps: connect@2.28.2\n    - deps: body-parser@~1.10.2\n    - deps: serve-static@~1.8.1\n  * deps: send@0.11.1\n    - Fix root path disclosure\n\n3.19.0 / 2015-01-09\n===================\n\n  * Fix `OPTIONS` responses to include the `HEAD` method property\n  * Use `readline` for prompt in `express(1)`\n  * deps: commander@2.6.0\n  * deps: connect@2.28.1\n    - deps: body-parser@~1.10.1\n    - deps: compression@~1.3.0\n    - deps: connect-timeout@~1.5.0\n    - deps: csurf@~1.6.4\n    - deps: debug@~2.1.1\n    - deps: errorhandler@~1.3.2\n    - deps: express-session@~1.10.1\n    - deps: finalhandler@0.3.3\n    - deps: method-override@~2.3.1\n    - deps: morgan@~1.5.1\n    - deps: serve-favicon@~2.2.0\n    - deps: serve-index@~1.6.0\n    - deps: serve-static@~1.8.0\n    - deps: type-is@~1.5.5\n  * deps: debug@~2.1.1\n  * deps: methods@~1.1.1\n  * deps: proxy-addr@~1.0.5\n    - deps: ipaddr.js@0.1.6\n  * deps: send@0.11.0\n    - deps: debug@~2.1.1\n    - deps: etag@~1.5.1\n    - deps: ms@0.7.0\n    - deps: on-finished@~2.2.0\n\n3.18.6 / 2014-12-12\n===================\n\n  * Fix exception in `req.fresh`/`req.stale` without response headers\n\n3.18.5 / 2014-12-11\n===================\n\n  * deps: connect@2.27.6\n    - deps: compression@~1.2.2\n    - deps: express-session@~1.9.3\n    - deps: http-errors@~1.2.8\n    - deps: serve-index@~1.5.3\n    - deps: type-is@~1.5.4\n\n3.18.4 / 2014-11-23\n===================\n\n  * deps: connect@2.27.4\n    - deps: body-parser@~1.9.3\n    - deps: compression@~1.2.1\n    - deps: errorhandler@~1.2.3\n    - deps: express-session@~1.9.2\n    - deps: qs@2.3.3\n    - deps: serve-favicon@~2.1.7\n    - deps: serve-static@~1.5.1\n    - deps: type-is@~1.5.3\n  * deps: etag@~1.5.1\n  * deps: proxy-addr@~1.0.4\n    - deps: ipaddr.js@0.1.5\n\n3.18.3 / 2014-11-09\n===================\n\n  * deps: connect@2.27.3\n    - Correctly invoke async callback asynchronously\n    - deps: csurf@~1.6.3\n\n3.18.2 / 2014-10-28\n===================\n\n  * deps: connect@2.27.2\n    - Fix handling of URLs containing `://` in the path\n    - deps: body-parser@~1.9.2\n    - deps: qs@2.3.2\n\n3.18.1 / 2014-10-22\n===================\n\n  * Fix internal `utils.merge` deprecation warnings\n  * deps: connect@2.27.1\n    - deps: body-parser@~1.9.1\n    - deps: express-session@~1.9.1\n    - deps: finalhandler@0.3.2\n    - deps: morgan@~1.4.1\n    - deps: qs@2.3.0\n    - deps: serve-static@~1.7.1\n  * deps: send@0.10.1\n    - deps: on-finished@~2.1.1\n\n3.18.0 / 2014-10-17\n===================\n\n  * Use `content-disposition` module for `res.attachment`/`res.download`\n    - Sends standards-compliant `Content-Disposition` header\n    - Full Unicode support\n  * Use `etag` module to generate `ETag` headers\n  * deps: connect@2.27.0\n    - Use `http-errors` module for creating errors\n    - Use `utils-merge` module for merging objects\n    - deps: body-parser@~1.9.0\n    - deps: compression@~1.2.0\n    - deps: connect-timeout@~1.4.0\n    - deps: debug@~2.1.0\n    - deps: depd@~1.0.0\n    - deps: express-session@~1.9.0\n    - deps: finalhandler@0.3.1\n    - deps: method-override@~2.3.0\n    - deps: morgan@~1.4.0\n    - deps: response-time@~2.2.0\n    - deps: serve-favicon@~2.1.6\n    - deps: serve-index@~1.5.0\n    - deps: serve-static@~1.7.0\n  * deps: debug@~2.1.0\n    - Implement `DEBUG_FD` env variable support\n  * deps: depd@~1.0.0\n  * deps: send@0.10.0\n    - deps: debug@~2.1.0\n    - deps: depd@~1.0.0\n    - deps: etag@~1.5.0\n\n3.17.8 / 2014-10-15\n===================\n\n  * deps: connect@2.26.6\n    - deps: compression@~1.1.2\n    - deps: csurf@~1.6.2\n    - deps: errorhandler@~1.2.2\n\n3.17.7 / 2014-10-08\n===================\n\n  * deps: connect@2.26.5\n    - Fix accepting non-object arguments to `logger`\n    - deps: serve-static@~1.6.4\n\n3.17.6 / 2014-10-02\n===================\n\n  * deps: connect@2.26.4\n    - deps: morgan@~1.3.2\n    - deps: type-is@~1.5.2\n\n3.17.5 / 2014-09-24\n===================\n\n  * deps: connect@2.26.3\n    - deps: body-parser@~1.8.4\n    - deps: serve-favicon@~2.1.5\n    - deps: serve-static@~1.6.3\n  * deps: proxy-addr@~1.0.3\n    - Use `forwarded` npm module\n  * deps: send@0.9.3\n    - deps: etag@~1.4.0\n\n3.17.4 / 2014-09-19\n===================\n\n  * deps: connect@2.26.2\n    - deps: body-parser@~1.8.3\n    - deps: qs@2.2.4\n\n3.17.3 / 2014-09-18\n===================\n\n  * deps: proxy-addr@~1.0.2\n    - Fix a global leak when multiple subnets are trusted\n    - deps: ipaddr.js@0.1.3\n\n3.17.2 / 2014-09-15\n===================\n\n  * Use `crc` instead of `buffer-crc32` for speed\n  * deps: connect@2.26.1\n    - deps: body-parser@~1.8.2\n    - deps: depd@0.4.5\n    - deps: express-session@~1.8.2\n    - deps: morgan@~1.3.1\n    - deps: serve-favicon@~2.1.3\n    - deps: serve-static@~1.6.2\n  * deps: depd@0.4.5\n  * deps: send@0.9.2\n    - deps: depd@0.4.5\n    - deps: etag@~1.3.1\n    - deps: range-parser@~1.0.2\n\n3.17.1 / 2014-09-08\n===================\n\n  * Fix error in `req.subdomains` on empty host\n\n3.17.0 / 2014-09-08\n===================\n\n  * Support `X-Forwarded-Host` in `req.subdomains`\n  * Support IP address host in `req.subdomains`\n  * deps: connect@2.26.0\n    - deps: body-parser@~1.8.1\n    - deps: compression@~1.1.0\n    - deps: connect-timeout@~1.3.0\n    - deps: cookie-parser@~1.3.3\n    - deps: cookie-signature@1.0.5\n    - deps: csurf@~1.6.1\n    - deps: debug@~2.0.0\n    - deps: errorhandler@~1.2.0\n    - deps: express-session@~1.8.1\n    - deps: finalhandler@0.2.0\n    - deps: fresh@0.2.4\n    - deps: media-typer@0.3.0\n    - deps: method-override@~2.2.0\n    - deps: morgan@~1.3.0\n    - deps: qs@2.2.3\n    - deps: serve-favicon@~2.1.3\n    - deps: serve-index@~1.2.1\n    - deps: serve-static@~1.6.1\n    - deps: type-is@~1.5.1\n    - deps: vhost@~3.0.0\n  * deps: cookie-signature@1.0.5\n  * deps: debug@~2.0.0\n  * deps: fresh@0.2.4\n  * deps: media-typer@0.3.0\n    - Throw error when parameter format invalid on parse\n  * deps: range-parser@~1.0.2\n  * deps: send@0.9.1\n    - Add `lastModified` option\n    - Use `etag` to generate `ETag` header\n    - deps: debug@~2.0.0\n    - deps: fresh@0.2.4\n  * deps: vary@~1.0.0\n    - Accept valid `Vary` header string as `field`\n\n3.16.10 / 2014-09-04\n====================\n\n  * deps: connect@2.25.10\n    - deps: serve-static@~1.5.4\n  * deps: send@0.8.5\n    - Fix a path traversal issue when using `root`\n    - Fix malicious path detection for empty string path\n\n3.16.9 / 2014-08-29\n===================\n\n  * deps: connect@2.25.9\n    - deps: body-parser@~1.6.7\n    - deps: qs@2.2.2\n\n3.16.8 / 2014-08-27\n===================\n\n  * deps: connect@2.25.8\n    - deps: body-parser@~1.6.6\n    - deps: csurf@~1.4.1\n    - deps: qs@2.2.0\n\n3.16.7 / 2014-08-18\n===================\n\n  * deps: connect@2.25.7\n    - deps: body-parser@~1.6.5\n    - deps: express-session@~1.7.6\n    - deps: morgan@~1.2.3\n    - deps: serve-static@~1.5.3\n  * deps: send@0.8.3\n    - deps: destroy@1.0.3\n    - deps: on-finished@2.1.0\n\n3.16.6 / 2014-08-14\n===================\n\n  * deps: connect@2.25.6\n    - deps: body-parser@~1.6.4\n    - deps: qs@1.2.2\n    - deps: serve-static@~1.5.2\n  * deps: send@0.8.2\n    - Work around `fd` leak in Node.js 0.10 for `fs.ReadStream`\n\n3.16.5 / 2014-08-11\n===================\n\n  * deps: connect@2.25.5\n    - Fix backwards compatibility in `logger`\n\n3.16.4 / 2014-08-10\n===================\n\n  * Fix original URL parsing in `res.location`\n  * deps: connect@2.25.4\n    - Fix `query` middleware breaking with argument\n    - deps: body-parser@~1.6.3\n    - deps: compression@~1.0.11\n    - deps: connect-timeout@~1.2.2\n    - deps: express-session@~1.7.5\n    - deps: method-override@~2.1.3\n    - deps: on-headers@~1.0.0\n    - deps: parseurl@~1.3.0\n    - deps: qs@1.2.1\n    - deps: response-time@~2.0.1\n    - deps: serve-index@~1.1.6\n    - deps: serve-static@~1.5.1\n  * deps: parseurl@~1.3.0\n\n3.16.3 / 2014-08-07\n===================\n\n  * deps: connect@2.25.3\n    - deps: multiparty@3.3.2\n\n3.16.2 / 2014-08-07\n===================\n\n  * deps: connect@2.25.2\n    - deps: body-parser@~1.6.2\n    - deps: qs@1.2.0\n\n3.16.1 / 2014-08-06\n===================\n\n  * deps: connect@2.25.1\n    - deps: body-parser@~1.6.1\n    - deps: qs@1.1.0\n\n3.16.0 / 2014-08-05\n===================\n\n  * deps: connect@2.25.0\n    - deps: body-parser@~1.6.0\n    - deps: compression@~1.0.10\n    - deps: csurf@~1.4.0\n    - deps: express-session@~1.7.4\n    - deps: qs@1.0.2\n    - deps: serve-static@~1.5.0\n  * deps: send@0.8.1\n    - Add `extensions` option\n\n3.15.3 / 2014-08-04\n===================\n\n  * fix `res.sendfile` regression for serving directory index files\n  * deps: connect@2.24.3\n    - deps: serve-index@~1.1.5\n    - deps: serve-static@~1.4.4\n  * deps: send@0.7.4\n    - Fix incorrect 403 on Windows and Node.js 0.11\n    - Fix serving index files without root dir\n\n3.15.2 / 2014-07-27\n===================\n\n  * deps: connect@2.24.2\n    - deps: body-parser@~1.5.2\n    - deps: depd@0.4.4\n    - deps: express-session@~1.7.2\n    - deps: morgan@~1.2.2\n    - deps: serve-static@~1.4.2\n  * deps: depd@0.4.4\n    - Work-around v8 generating empty stack traces\n  * deps: send@0.7.2\n    - deps: depd@0.4.4\n\n3.15.1 / 2014-07-26\n===================\n\n  * deps: connect@2.24.1\n    - deps: body-parser@~1.5.1\n    - deps: depd@0.4.3\n    - deps: express-session@~1.7.1\n    - deps: morgan@~1.2.1\n    - deps: serve-index@~1.1.4\n    - deps: serve-static@~1.4.1\n  * deps: depd@0.4.3\n    - Fix exception when global `Error.stackTraceLimit` is too low\n  * deps: send@0.7.1\n    - deps: depd@0.4.3\n\n3.15.0 / 2014-07-22\n===================\n\n  * Fix `req.protocol` for proxy-direct connections\n  * Pass options from `res.sendfile` to `send`\n  * deps: connect@2.24.0\n    - deps: body-parser@~1.5.0\n    - deps: compression@~1.0.9\n    - deps: connect-timeout@~1.2.1\n    - deps: debug@1.0.4\n    - deps: depd@0.4.2\n    - deps: express-session@~1.7.0\n    - deps: finalhandler@0.1.0\n    - deps: method-override@~2.1.2\n    - deps: morgan@~1.2.0\n    - deps: multiparty@3.3.1\n    - deps: parseurl@~1.2.0\n    - deps: serve-static@~1.4.0\n  * deps: debug@1.0.4\n  * deps: depd@0.4.2\n    - Add `TRACE_DEPRECATION` environment variable\n    - Remove non-standard grey color from color output\n    - Support `--no-deprecation` argument\n    - Support `--trace-deprecation` argument\n  * deps: parseurl@~1.2.0\n    - Cache URLs based on original value\n    - Remove no-longer-needed URL mis-parse work-around\n    - Simplify the \"fast-path\" `RegExp`\n  * deps: send@0.7.0\n    - Add `dotfiles` option\n    - Cap `maxAge` value to 1 year\n    - deps: debug@1.0.4\n    - deps: depd@0.4.2\n\n3.14.0 / 2014-07-11\n===================\n\n * add explicit \"Rosetta Flash JSONP abuse\" protection\n   - previous versions are not vulnerable; this is just explicit protection\n * deprecate `res.redirect(url, status)` -- use `res.redirect(status, url)` instead\n * fix `res.send(status, num)` to send `num` as json (not error)\n * remove unnecessary escaping when `res.jsonp` returns JSON response\n * deps: basic-auth@1.0.0\n   - support empty password\n   - support empty username\n * deps: connect@2.23.0\n   - deps: debug@1.0.3\n   - deps: express-session@~1.6.4\n   - deps: method-override@~2.1.0\n   - deps: parseurl@~1.1.3\n   - deps: serve-static@~1.3.1\n  * deps: debug@1.0.3\n    - Add support for multiple wildcards in namespaces\n  * deps: methods@1.1.0\n    - add `CONNECT`\n  * deps: parseurl@~1.1.3\n    - faster parsing of href-only URLs\n\n3.13.0 / 2014-07-03\n===================\n\n * add deprecation message to `app.configure`\n * add deprecation message to `req.auth`\n * use `basic-auth` to parse `Authorization` header\n * deps: connect@2.22.0\n   - deps: csurf@~1.3.0\n   - deps: express-session@~1.6.1\n   - deps: multiparty@3.3.0\n   - deps: serve-static@~1.3.0\n * deps: send@0.5.0\n   - Accept string for `maxage` (converted by `ms`)\n   - Include link in default redirect response\n\n3.12.1 / 2014-06-26\n===================\n\n * deps: connect@2.21.1\n   - deps: cookie-parser@1.3.2\n   - deps: cookie-signature@1.0.4\n   - deps: express-session@~1.5.2\n   - deps: type-is@~1.3.2\n * deps: cookie-signature@1.0.4\n   - fix for timing attacks\n\n3.12.0 / 2014-06-21\n===================\n\n * use `media-typer` to alter content-type charset\n * deps: connect@2.21.0\n   - deprecate `connect(middleware)` -- use `app.use(middleware)` instead\n   - deprecate `connect.createServer()` -- use `connect()` instead\n   - fix `res.setHeader()` patch to work with get -> append -> set pattern\n   - deps: compression@~1.0.8\n   - deps: errorhandler@~1.1.1\n   - deps: express-session@~1.5.0\n   - deps: serve-index@~1.1.3\n\n3.11.0 / 2014-06-19\n===================\n\n * deprecate things with `depd` module\n * deps: buffer-crc32@0.2.3\n * deps: connect@2.20.2\n   - deprecate `verify` option to `json` -- use `body-parser` npm module instead\n   - deprecate `verify` option to `urlencoded` -- use `body-parser` npm module instead\n   - deprecate things with `depd` module\n   - use `finalhandler` for final response handling\n   - use `media-typer` to parse `content-type` for charset\n   - deps: body-parser@1.4.3\n   - deps: connect-timeout@1.1.1\n   - deps: cookie-parser@1.3.1\n   - deps: csurf@1.2.2\n   - deps: errorhandler@1.1.0\n   - deps: express-session@1.4.0\n   - deps: multiparty@3.2.9\n   - deps: serve-index@1.1.2\n   - deps: type-is@1.3.1\n   - deps: vhost@2.0.0\n\n3.10.5 / 2014-06-11\n===================\n\n * deps: connect@2.19.6\n   - deps: body-parser@1.3.1\n   - deps: compression@1.0.7\n   - deps: debug@1.0.2\n   - deps: serve-index@1.1.1\n   - deps: serve-static@1.2.3\n * deps: debug@1.0.2\n * deps: send@0.4.3\n   - Do not throw uncatchable error on file open race condition\n   - Use `escape-html` for HTML escaping\n   - deps: debug@1.0.2\n   - deps: finished@1.2.2\n   - deps: fresh@0.2.2\n\n3.10.4 / 2014-06-09\n===================\n\n * deps: connect@2.19.5\n   - fix \"event emitter leak\" warnings\n   - deps: csurf@1.2.1\n   - deps: debug@1.0.1\n   - deps: serve-static@1.2.2\n   - deps: type-is@1.2.1\n * deps: debug@1.0.1\n * deps: send@0.4.2\n   - fix \"event emitter leak\" warnings\n   - deps: finished@1.2.1\n   - deps: debug@1.0.1\n\n3.10.3 / 2014-06-05\n===================\n\n * use `vary` module for `res.vary`\n * deps: connect@2.19.4\n   - deps: errorhandler@1.0.2\n   - deps: method-override@2.0.2\n   - deps: serve-favicon@2.0.1\n * deps: debug@1.0.0\n\n3.10.2 / 2014-06-03\n===================\n\n * deps: connect@2.19.3\n   - deps: compression@1.0.6\n\n3.10.1 / 2014-06-03\n===================\n\n * deps: connect@2.19.2\n   - deps: compression@1.0.4\n * deps: proxy-addr@1.0.1\n\n3.10.0 / 2014-06-02\n===================\n\n * deps: connect@2.19.1\n   - deprecate `methodOverride()` -- use `method-override` npm module instead\n   - deps: body-parser@1.3.0\n   - deps: method-override@2.0.1\n   - deps: multiparty@3.2.8\n   - deps: response-time@2.0.0\n   - deps: serve-static@1.2.1\n * deps: methods@1.0.1\n * deps: send@0.4.1\n   - Send `max-age` in `Cache-Control` in correct format\n\n3.9.0 / 2014-05-30\n==================\n\n * custom etag control with `app.set('etag', val)`\n   - `app.set('etag', function(body, encoding){ return '\"etag\"' })` custom etag generation\n   - `app.set('etag', 'weak')` weak tag\n   - `app.set('etag', 'strong')` strong etag\n   - `app.set('etag', false)` turn off\n   - `app.set('etag', true)` standard etag\n * Include ETag in HEAD requests\n * mark `res.send` ETag as weak and reduce collisions\n * update connect to 2.18.0\n   - deps: compression@1.0.3\n   - deps: serve-index@1.1.0\n   - deps: serve-static@1.2.0\n * update send to 0.4.0\n   - Calculate ETag with md5 for reduced collisions\n   - Ignore stream errors after request ends\n   - deps: debug@0.8.1\n\n3.8.1 / 2014-05-27\n==================\n\n * update connect to 2.17.3\n   - deps: body-parser@1.2.2\n   - deps: express-session@1.2.1\n   - deps: method-override@1.0.2\n\n3.8.0 / 2014-05-21\n==================\n\n * keep previous `Content-Type` for `res.jsonp`\n * set proper `charset` in `Content-Type` for `res.send`\n * update connect to 2.17.1\n   - fix `res.charset` appending charset when `content-type` has one\n   - deps: express-session@1.2.0\n   - deps: morgan@1.1.1\n   - deps: serve-index@1.0.3\n\n3.7.0 / 2014-05-18\n==================\n\n * proper proxy trust with `app.set('trust proxy', trust)`\n   - `app.set('trust proxy', 1)` trust first hop\n   - `app.set('trust proxy', 'loopback')` trust loopback addresses\n   - `app.set('trust proxy', '10.0.0.1')` trust single IP\n   - `app.set('trust proxy', '10.0.0.1/16')` trust subnet\n   - `app.set('trust proxy', '10.0.0.1, 10.0.0.2')` trust list\n   - `app.set('trust proxy', false)` turn off\n   - `app.set('trust proxy', true)` trust everything\n * update connect to 2.16.2\n   - deprecate `res.headerSent` -- use `res.headersSent`\n   - deprecate `res.on(\"header\")` -- use on-headers module instead\n   - fix edge-case in `res.appendHeader` that would append in wrong order\n   - json: use body-parser\n   - urlencoded: use body-parser\n   - dep: bytes@1.0.0\n   - dep: cookie-parser@1.1.0\n   - dep: csurf@1.2.0\n   - dep: express-session@1.1.0\n   - dep: method-override@1.0.1\n\n3.6.0 / 2014-05-09\n==================\n\n * deprecate `app.del()` -- use `app.delete()` instead\n * deprecate `res.json(obj, status)` -- use `res.json(status, obj)` instead\n   - the edge-case `res.json(status, num)` requires `res.status(status).json(num)`\n * deprecate `res.jsonp(obj, status)` -- use `res.jsonp(status, obj)` instead\n   - the edge-case `res.jsonp(status, num)` requires `res.status(status).jsonp(num)`\n * support PURGE method\n   - add `app.purge`\n   - add `router.purge`\n   - include PURGE in `app.all`\n * update connect to 2.15.0\n   * Add `res.appendHeader`\n   * Call error stack even when response has been sent\n   * Patch `res.headerSent` to return Boolean\n   * Patch `res.headersSent` for node.js 0.8\n   * Prevent default 404 handler after response sent\n   * dep: compression@1.0.2\n   * dep: connect-timeout@1.1.0\n   * dep: debug@^0.8.0\n   * dep: errorhandler@1.0.1\n   * dep: express-session@1.0.4\n   * dep: morgan@1.0.1\n   * dep: serve-favicon@2.0.0\n   * dep: serve-index@1.0.2\n * update debug to 0.8.0\n   * add `enable()` method\n   * change from stderr to stdout\n * update methods to 1.0.0\n   - add PURGE\n * update mkdirp to 0.5.0\n\n3.5.3 / 2014-05-08\n==================\n\n * fix `req.host` for IPv6 literals\n * fix `res.jsonp` error if callback param is object\n\n3.5.2 / 2014-04-24\n==================\n\n * update connect to 2.14.5\n * update cookie to 0.1.2\n * update mkdirp to 0.4.0\n * update send to 0.3.0\n\n3.5.1 / 2014-03-25\n==================\n\n * pin less-middleware in generated app\n\n3.5.0 / 2014-03-06\n==================\n\n * bump deps\n\n3.4.8 / 2014-01-13\n==================\n\n * prevent incorrect automatic OPTIONS responses #1868 @dpatti\n * update binary and examples for jade 1.0 #1876 @yossi, #1877 @reqshark, #1892 @matheusazzi\n * throw 400 in case of malformed paths @rlidwka\n\n3.4.7 / 2013-12-10\n==================\n\n * update connect\n\n3.4.6 / 2013-12-01\n==================\n\n * update connect (raw-body)\n\n3.4.5 / 2013-11-27\n==================\n\n * update connect\n * res.location: remove leading ./ #1802 @kapouer\n * res.redirect: fix `res.redirect('toString') #1829 @michaelficarra\n * res.send: always send ETag when content-length > 0\n * router: add Router.all() method\n\n3.4.4 / 2013-10-29\n==================\n\n * update connect\n * update supertest\n * update methods\n * express(1): replace bodyParser() with urlencoded() and json() #1795 @chirag04\n\n3.4.3 / 2013-10-23\n==================\n\n * update connect\n\n3.4.2 / 2013-10-18\n==================\n\n * update connect\n * downgrade commander\n\n3.4.1 / 2013-10-15\n==================\n\n * update connect\n * update commander\n * jsonp: check if callback is a function\n * router: wrap encodeURIComponent in a try/catch #1735 (@lxe)\n * res.format: now includes charset @1747 (@sorribas)\n * res.links: allow multiple calls @1746 (@sorribas)\n\n3.4.0 / 2013-09-07\n==================\n\n * add res.vary(). Closes #1682\n * update connect\n\n3.3.8 / 2013-09-02\n==================\n\n * update connect\n\n3.3.7 / 2013-08-28\n==================\n\n * update connect\n\n3.3.6 / 2013-08-27\n==================\n\n * Revert \"remove charset from json responses. Closes #1631\" (causes issues in some clients)\n * add: req.accepts take an argument list\n\n3.3.4 / 2013-07-08\n==================\n\n * update send and connect\n\n3.3.3 / 2013-07-04\n==================\n\n * update connect\n\n3.3.2 / 2013-07-03\n==================\n\n * update connect\n * update send\n * remove .version export\n\n3.3.1 / 2013-06-27\n==================\n\n * update connect\n\n3.3.0 / 2013-06-26\n==================\n\n * update connect\n * add support for multiple X-Forwarded-Proto values. Closes #1646\n * change: remove charset from json responses. Closes #1631\n * change: return actual booleans from req.accept* functions\n * fix jsonp callback array throw\n\n3.2.6 / 2013-06-02\n==================\n\n * update connect\n\n3.2.5 / 2013-05-21\n==================\n\n * update connect\n * update node-cookie\n * add: throw a meaningful error when there is no default engine\n * change generation of ETags with res.send() to GET requests only. Closes #1619\n\n3.2.4 / 2013-05-09\n==================\n\n  * fix `req.subdomains` when no Host is present\n  * fix `req.host` when no Host is present, return undefined\n\n3.2.3 / 2013-05-07\n==================\n\n  * update connect / qs\n\n3.2.2 / 2013-05-03\n==================\n\n  * update qs\n\n3.2.1 / 2013-04-29\n==================\n\n  * add app.VERB() paths array deprecation warning\n  * update connect\n  * update qs and remove all ~ semver crap\n  * fix: accept number as value of Signed Cookie\n\n3.2.0 / 2013-04-15\n==================\n\n  * add \"view\" constructor setting to override view behaviour\n  * add req.acceptsEncoding(name)\n  * add req.acceptedEncodings\n  * revert cookie signature change causing session race conditions\n  * fix sorting of Accept values of the same quality\n\n3.1.2 / 2013-04-12\n==================\n\n  * add support for custom Accept parameters\n  * update cookie-signature\n\n3.1.1 / 2013-04-01\n==================\n\n  * add X-Forwarded-Host support to `req.host`\n  * fix relative redirects\n  * update mkdirp\n  * update buffer-crc32\n  * remove legacy app.configure() method from app template.\n\n3.1.0 / 2013-01-25\n==================\n\n  * add support for leading \".\" in \"view engine\" setting\n  * add array support to `res.set()`\n  * add node 0.8.x to travis.yml\n  * add \"subdomain offset\" setting for tweaking `req.subdomains`\n  * add `res.location(url)` implementing `res.redirect()`-like setting of Location\n  * use app.get() for x-powered-by setting for inheritance\n  * fix colons in passwords for `req.auth`\n\n3.0.6 / 2013-01-04\n==================\n\n  * add http verb methods to Router\n  * update connect\n  * fix mangling of the `res.cookie()` options object\n  * fix jsonp whitespace escape. Closes #1132\n\n3.0.5 / 2012-12-19\n==================\n\n  * add throwing when a non-function is passed to a route\n  * fix: explicitly remove Transfer-Encoding header from 204 and 304 responses\n  * revert \"add 'etag' option\"\n\n3.0.4 / 2012-12-05\n==================\n\n  * add 'etag' option to disable `res.send()` Etags\n  * add escaping of urls in text/plain in `res.redirect()`\n    for old browsers interpreting as html\n  * change crc32 module for a more liberal license\n  * update connect\n\n3.0.3 / 2012-11-13\n==================\n\n  * update connect\n  * update cookie module\n  * fix cookie max-age\n\n3.0.2 / 2012-11-08\n==================\n\n  * add OPTIONS to cors example. Closes #1398\n  * fix route chaining regression. Closes #1397\n\n3.0.1 / 2012-11-01\n==================\n\n  * update connect\n\n3.0.0 / 2012-10-23\n==================\n\n  * add `make clean`\n  * add \"Basic\" check to req.auth\n  * add `req.auth` test coverage\n  * add cb && cb(payload) to `res.jsonp()`. Closes #1374\n  * add backwards compat for `res.redirect()` status. Closes #1336\n  * add support for `res.json()` to retain previously defined Content-Types. Closes #1349\n  * update connect\n  * change `res.redirect()` to utilize a pathname-relative Location again. Closes #1382\n  * remove non-primitive string support for `res.send()`\n  * fix view-locals example. Closes #1370\n  * fix route-separation example\n\n3.0.0rc5 / 2012-09-18\n==================\n\n  * update connect\n  * add redis search example\n  * add static-files example\n  * add \"x-powered-by\" setting (`app.disable('x-powered-by')`)\n  * add \"application/octet-stream\" redirect Accept test case. Closes #1317\n\n3.0.0rc4 / 2012-08-30\n==================\n\n  * add `res.jsonp()`. Closes #1307\n  * add \"verbose errors\" option to error-pages example\n  * add another route example to express(1) so people are not so confused\n  * add redis online user activity tracking example\n  * update connect dep\n  * fix etag quoting. Closes #1310\n  * fix error-pages 404 status\n  * fix jsonp callback char restrictions\n  * remove old OPTIONS default response\n\n3.0.0rc3 / 2012-08-13\n==================\n\n  * update connect dep\n  * fix signed cookies to work with `connect.cookieParser()` (\"s:\" prefix was missing) [tnydwrds]\n  * fix `res.render()` clobbering of \"locals\"\n\n3.0.0rc2 / 2012-08-03\n==================\n\n  * add CORS example\n  * update connect dep\n  * deprecate `.createServer()` & remove old stale examples\n  * fix: escape `res.redirect()` link\n  * fix vhost example\n\n3.0.0rc1 / 2012-07-24\n==================\n\n  * add more examples to view-locals\n  * add scheme-relative redirects (`res.redirect(\"//foo.com\")`) support\n  * update cookie dep\n  * update connect dep\n  * update send dep\n  * fix `express(1)` -h flag, use -H for hogan. Closes #1245\n  * fix `res.sendfile()` socket error handling regression\n\n3.0.0beta7 / 2012-07-16\n==================\n\n  * update connect dep for `send()` root normalization regression\n\n3.0.0beta6 / 2012-07-13\n==================\n\n  * add `err.view` property for view errors. Closes #1226\n  * add \"jsonp callback name\" setting\n  * add support for \"/foo/:bar*\" non-greedy matches\n  * change `res.sendfile()` to use `send()` module\n  * change `res.send` to use \"response-send\" module\n  * remove `app.locals.use` and `res.locals.use`, use regular middleware\n\n3.0.0beta5 / 2012-07-03\n==================\n\n  * add \"make check\" support\n  * add route-map example\n  * add `res.json(obj, status)` support back for BC\n  * add \"methods\" dep, remove internal methods module\n  * update connect dep\n  * update auth example to utilize cores pbkdf2\n  * updated tests to use \"supertest\"\n\n3.0.0beta4 / 2012-06-25\n==================\n\n  * Added `req.auth`\n  * Added `req.range(size)`\n  * Added `res.links(obj)`\n  * Added `res.send(body, status)` support back for backwards compat\n  * Added `.default()` support to `res.format()`\n  * Added 2xx / 304 check to `req.fresh`\n  * Revert \"Added + support to the router\"\n  * Fixed `res.send()` freshness check, respect res.statusCode\n\n3.0.0beta3 / 2012-06-15\n==================\n\n  * Added hogan `--hjs` to express(1) [nullfirm]\n  * Added another example to content-negotiation\n  * Added `fresh` dep\n  * Changed: `res.send()` always checks freshness\n  * Fixed: expose connects mime module. Closes #1165\n\n3.0.0beta2 / 2012-06-06\n==================\n\n  * Added `+` support to the router\n  * Added `req.host`\n  * Changed `req.param()` to check route first\n  * Update connect dep\n\n3.0.0beta1 / 2012-06-01\n==================\n\n  * Added `res.format()` callback to override default 406 behaviour\n  * Fixed `res.redirect()` 406. Closes #1154\n\n3.0.0alpha5 / 2012-05-30\n==================\n\n  * Added `req.ip`\n  * Added `{ signed: true }` option to `res.cookie()`\n  * Removed `res.signedCookie()`\n  * Changed: dont reverse `req.ips`\n  * Fixed \"trust proxy\" setting check for `req.ips`\n\n3.0.0alpha4 / 2012-05-09\n==================\n\n  * Added: allow `[]` in jsonp callback. Closes #1128\n  * Added `PORT` env var support in generated template. Closes #1118 [benatkin]\n  * Updated: connect 2.2.2\n\n3.0.0alpha3 / 2012-05-04\n==================\n\n  * Added public `app.routes`. Closes #887\n  * Added _view-locals_ example\n  * Added _mvc_ example\n  * Added `res.locals.use()`. Closes #1120\n  * Added conditional-GET support to `res.send()`\n  * Added: coerce `res.set()` values to strings\n  * Changed: moved `static()` in generated apps below router\n  * Changed: `res.send()` only set ETag when not previously set\n  * Changed connect 2.2.1 dep\n  * Changed: `make test` now runs unit / acceptance tests\n  * Fixed req/res proto inheritance\n\n3.0.0alpha2 / 2012-04-26\n==================\n\n  * Added `make benchmark` back\n  * Added `res.send()` support for `String` objects\n  * Added client-side data exposing example\n  * Added `res.header()` and `req.header()` aliases for BC\n  * Added `express.createServer()` for BC\n  * Perf: memoize parsed urls\n  * Perf: connect 2.2.0 dep\n  * Changed: make `expressInit()` middleware self-aware\n  * Fixed: use app.get() for all core settings\n  * Fixed redis session example\n  * Fixed session example. Closes #1105\n  * Fixed generated express dep. Closes #1078\n\n3.0.0alpha1 / 2012-04-15\n==================\n\n  * Added `app.locals.use(callback)`\n  * Added `app.locals` object\n  * Added `app.locals(obj)`\n  * Added `res.locals` object\n  * Added `res.locals(obj)`\n  * Added `res.format()` for content-negotiation\n  * Added `app.engine()`\n  * Added `res.cookie()` JSON cookie support\n  * Added \"trust proxy\" setting\n  * Added `req.subdomains`\n  * Added `req.protocol`\n  * Added `req.secure`\n  * Added `req.path`\n  * Added `req.ips`\n  * Added `req.fresh`\n  * Added `req.stale`\n  * Added comma-delimited / array support for `req.accepts()`\n  * Added debug instrumentation\n  * Added `res.set(obj)`\n  * Added `res.set(field, value)`\n  * Added `res.get(field)`\n  * Added `app.get(setting)`. Closes #842\n  * Added `req.acceptsLanguage()`\n  * Added `req.acceptsCharset()`\n  * Added `req.accepted`\n  * Added `req.acceptedLanguages`\n  * Added `req.acceptedCharsets`\n  * Added \"json replacer\" setting\n  * Added \"json spaces\" setting\n  * Added X-Forwarded-Proto support to `res.redirect()`. Closes #92\n  * Added `--less` support to express(1)\n  * Added `express.response` prototype\n  * Added `express.request` prototype\n  * Added `express.application` prototype\n  * Added `app.path()`\n  * Added `app.render()`\n  * Added `res.type()` to replace `res.contentType()`\n  * Changed: `res.redirect()` to add relative support\n  * Changed: enable \"jsonp callback\" by default\n  * Changed: renamed \"case sensitive routes\" to \"case sensitive routing\"\n  * Rewrite of all tests with mocha\n  * Removed \"root\" setting\n  * Removed `res.redirect('home')` support\n  * Removed `req.notify()`\n  * Removed `app.register()`\n  * Removed `app.redirect()`\n  * Removed `app.is()`\n  * Removed `app.helpers()`\n  * Removed `app.dynamicHelpers()`\n  * Fixed `res.sendfile()` with non-GET. Closes #723\n  * Fixed express(1) public dir for windows. Closes #866\n\n2.5.9/ 2012-04-02\n==================\n\n  * Added support for PURGE request method [pbuyle]\n  * Fixed `express(1)` generated app `app.address()` before `listening` [mmalecki]\n\n2.5.8 / 2012-02-08\n==================\n\n  * Update mkdirp dep. Closes #991\n\n2.5.7 / 2012-02-06\n==================\n\n  * Fixed `app.all` duplicate DELETE requests [mscdex]\n\n2.5.6 / 2012-01-13\n==================\n\n  * Updated hamljs dev dep. Closes #953\n\n2.5.5 / 2012-01-08\n==================\n\n  * Fixed: set `filename` on cached templates [matthewleon]\n\n2.5.4 / 2012-01-02\n==================\n\n  * Fixed `express(1)` eol on 0.4.x. Closes #947\n\n2.5.3 / 2011-12-30\n==================\n\n  * Fixed `req.is()` when a charset is present\n\n2.5.2 / 2011-12-10\n==================\n\n  * Fixed: express(1) LF -> CRLF for windows\n\n2.5.1 / 2011-11-17\n==================\n\n  * Changed: updated connect to 1.8.x\n  * Removed sass.js support from express(1)\n\n2.5.0 / 2011-10-24\n==================\n\n  * Added ./routes dir for generated app by default\n  * Added npm install reminder to express(1) app gen\n  * Added 0.5.x support\n  * Removed `make test-cov` since it wont work with node 0.5.x\n  * Fixed express(1) public dir for windows. Closes #866\n\n2.4.7 / 2011-10-05\n==================\n\n  * Added mkdirp to express(1). Closes #795\n  * Added simple _json-config_ example\n  * Added  shorthand for the parsed request's pathname via `req.path`\n  * Changed connect dep to 1.7.x to fix npm issue...\n  * Fixed `res.redirect()` __HEAD__ support. [reported by xerox]\n  * Fixed `req.flash()`, only escape args\n  * Fixed absolute path checking on windows. Closes #829 [reported by andrewpmckenzie]\n\n2.4.6 / 2011-08-22\n==================\n\n  * Fixed multiple param callback regression. Closes #824 [reported by TroyGoode]\n\n2.4.5 / 2011-08-19\n==================\n\n  * Added support for routes to handle errors. Closes #809\n  * Added `app.routes.all()`. Closes #803\n  * Added \"basepath\" setting to work in conjunction with reverse proxies etc.\n  * Refactored `Route` to use a single array of callbacks\n  * Added support for multiple callbacks for `app.param()`. Closes #801\nCloses #805\n  * Changed: removed .call(self) for route callbacks\n  * Dependency: `qs >= 0.3.1`\n  * Fixed `res.redirect()` on windows due to `join()` usage. Closes #808\n\n2.4.4 / 2011-08-05\n==================\n\n  * Fixed `res.header()` intention of a set, even when `undefined`\n  * Fixed `*`, value no longer required\n  * Fixed `res.send(204)` support. Closes #771\n\n2.4.3 / 2011-07-14\n==================\n\n  * Added docs for `status` option special-case. Closes #739\n  * Fixed `options.filename`, exposing the view path to template engines\n\n2.4.2. / 2011-07-06\n==================\n\n  * Revert \"removed jsonp stripping\" for XSS\n\n2.4.1 / 2011-07-06\n==================\n\n  * Added `res.json()` JSONP support. Closes #737\n  * Added _extending-templates_ example. Closes #730\n  * Added \"strict routing\" setting for trailing slashes\n  * Added support for multiple envs in `app.configure()` calls. Closes #735\n  * Changed: `res.send()` using `res.json()`\n  * Changed: when cookie `path === null` don't default it\n  * Changed; default cookie path to \"home\" setting. Closes #731\n  * Removed _pids/logs_ creation from express(1)\n\n2.4.0 / 2011-06-28\n==================\n\n  * Added chainable `res.status(code)`\n  * Added `res.json()`, an explicit version of `res.send(obj)`\n  * Added simple web-service example\n\n2.3.12 / 2011-06-22\n==================\n\n  * \\#express is now on freenode! come join!\n  * Added `req.get(field, param)`\n  * Added links to Japanese documentation, thanks @hideyukisaito!\n  * Added; the `express(1)` generated app outputs the env\n  * Added `content-negotiation` example\n  * Dependency: connect >= 1.5.1 < 2.0.0\n  * Fixed view layout bug. Closes #720\n  * Fixed; ignore body on 304. Closes #701\n\n2.3.11 / 2011-06-04\n==================\n\n  * Added `npm test`\n  * Removed generation of dummy test file from `express(1)`\n  * Fixed; `express(1)` adds express as a dep\n  * Fixed; prune on `prepublish`\n\n2.3.10 / 2011-05-27\n==================\n\n  * Added `req.route`, exposing the current route\n  * Added _package.json_ generation support to `express(1)`\n  * Fixed call to `app.param()` function for optional params. Closes #682\n\n2.3.9 / 2011-05-25\n==================\n\n  * Fixed bug-ish with `../' in `res.partial()` calls\n\n2.3.8 / 2011-05-24\n==================\n\n  * Fixed `app.options()`\n\n2.3.7 / 2011-05-23\n==================\n\n  * Added route `Collection`, ex: `app.get('/user/:id').remove();`\n  * Added support for `app.param(fn)` to define param logic\n  * Removed `app.param()` support for callback with return value\n  * Removed module.parent check from express(1) generated app. Closes #670\n  * Refactored router. Closes #639\n\n2.3.6 / 2011-05-20\n==================\n\n  * Changed; using devDependencies instead of git submodules\n  * Fixed redis session example\n  * Fixed markdown example\n  * Fixed view caching, should not be enabled in development\n\n2.3.5 / 2011-05-20\n==================\n\n  * Added export `.view` as alias for `.View`\n\n2.3.4 / 2011-05-08\n==================\n\n  * Added `./examples/say`\n  * Fixed `res.sendfile()` bug preventing the transfer of files with spaces\n\n2.3.3 / 2011-05-03\n==================\n\n  * Added \"case sensitive routes\" option.\n  * Changed; split methods supported per rfc [slaskis]\n  * Fixed route-specific middleware when using the same callback function several times\n\n2.3.2 / 2011-04-27\n==================\n\n  * Fixed view hints\n\n2.3.1 / 2011-04-26\n==================\n\n  * Added `app.match()` as `app.match.all()`\n  * Added `app.lookup()` as `app.lookup.all()`\n  * Added `app.remove()` for `app.remove.all()`\n  * Added `app.remove.VERB()`\n  * Fixed template caching collision issue. Closes #644\n  * Moved router over from connect and started refactor\n\n2.3.0 / 2011-04-25\n==================\n\n  * Added options support to `res.clearCookie()`\n  * Added `res.helpers()` as alias of `res.locals()`\n  * Added; json defaults to UTF-8 with `res.send()`. Closes #632. [Daniel   * Dependency `connect >= 1.4.0`\n  * Changed; auto set Content-Type in res.attachement [Aaron Heckmann]\n  * Renamed \"cache views\" to \"view cache\". Closes #628\n  * Fixed caching of views when using several apps. Closes #637\n  * Fixed gotcha invoking `app.param()` callbacks once per route middleware.\nCloses #638\n  * Fixed partial lookup precedence. Closes #631\nShaw]\n\n2.2.2 / 2011-04-12\n==================\n\n  * Added second callback support for `res.download()` connection errors\n  * Fixed `filename` option passing to template engine\n\n2.2.1 / 2011-04-04\n==================\n\n  * Added `layout(path)` helper to change the layout within a view. Closes #610\n  * Fixed `partial()` collection object support.\n    Previously only anything with `.length` would work.\n    When `.length` is present one must still be aware of holes,\n    however now `{ collection: {foo: 'bar'}}` is valid, exposes\n    `keyInCollection` and `keysInCollection`.\n\n  * Performance improved with better view caching\n  * Removed `request` and `response` locals\n  * Changed; errorHandler page title is now `Express` instead of `Connect`\n\n2.2.0 / 2011-03-30\n==================\n\n  * Added `app.lookup.VERB()`, ex `app.lookup.put('/user/:id')`. Closes #606\n  * Added `app.match.VERB()`, ex `app.match.put('/user/12')`. Closes #606\n  * Added `app.VERB(path)` as alias of `app.lookup.VERB()`.\n  * Dependency `connect >= 1.2.0`\n\n2.1.1 / 2011-03-29\n==================\n\n  * Added; expose `err.view` object when failing to locate a view\n  * Fixed `res.partial()` call `next(err)` when no callback is given [reported by aheckmann]\n  * Fixed; `res.send(undefined)` responds with 204 [aheckmann]\n\n2.1.0 / 2011-03-24\n==================\n\n  * Added `<root>/_?<name>` partial lookup support. Closes #447\n  * Added `request`, `response`, and `app` local variables\n  * Added `settings` local variable, containing the app's settings\n  * Added `req.flash()` exception if `req.session` is not available\n  * Added `res.send(bool)` support (json response)\n  * Fixed stylus example for latest version\n  * Fixed; wrap try/catch around `res.render()`\n\n2.0.0 / 2011-03-17\n==================\n\n  * Fixed up index view path alternative.\n  * Changed; `res.locals()` without object returns the locals\n\n2.0.0rc3 / 2011-03-17\n==================\n\n  * Added `res.locals(obj)` to compliment `res.local(key, val)`\n  * Added `res.partial()` callback support\n  * Fixed recursive error reporting issue in `res.render()`\n\n2.0.0rc2 / 2011-03-17\n==================\n\n  * Changed; `partial()` \"locals\" are now optional\n  * Fixed `SlowBuffer` support. Closes #584 [reported by tyrda01]\n  * Fixed .filename view engine option [reported by drudge]\n  * Fixed blog example\n  * Fixed `{req,res}.app` reference when mounting [Ben Weaver]\n\n2.0.0rc / 2011-03-14\n==================\n\n  * Fixed; expose `HTTPSServer` constructor\n  * Fixed express(1) default test charset. Closes #579 [reported by secoif]\n  * Fixed; default charset to utf-8 instead of utf8 for lame IE [reported by NickP]\n\n2.0.0beta3 / 2011-03-09\n==================\n\n  * Added support for `res.contentType()` literal\n    The original `res.contentType('.json')`,\n    `res.contentType('application/json')`, and `res.contentType('json')`\n    will work now.\n  * Added `res.render()` status option support back\n  * Added charset option for `res.render()`\n  * Added `.charset` support (via connect 1.0.4)\n  * Added view resolution hints when in development and a lookup fails\n  * Added layout lookup support relative to the page view.\n    For example while rendering `./views/user/index.jade` if you create\n    `./views/user/layout.jade` it will be used in favour of the root layout.\n  * Fixed `res.redirect()`. RFC states absolute url [reported by unlink]\n  * Fixed; default `res.send()` string charset to utf8\n  * Removed `Partial` constructor (not currently used)\n\n2.0.0beta2 / 2011-03-07\n==================\n\n  * Added res.render() `.locals` support back to aid in migration process\n  * Fixed flash example\n\n2.0.0beta / 2011-03-03\n==================\n\n  * Added HTTPS support\n  * Added `res.cookie()` maxAge support\n  * Added `req.header()` _Referrer_ / _Referer_ special-case, either works\n  * Added mount support for `res.redirect()`, now respects the mount-point\n  * Added `union()` util, taking place of `merge(clone())` combo\n  * Added stylus support to express(1) generated app\n  * Added secret to session middleware used in examples and generated app\n  * Added `res.local(name, val)` for progressive view locals\n  * Added default param support to `req.param(name, default)`\n  * Added `app.disabled()` and `app.enabled()`\n  * Added `app.register()` support for omitting leading \".\", either works\n  * Added `res.partial()`, using the same interface as `partial()` within a view. Closes #539\n  * Added `app.param()` to map route params to async/sync logic\n  * Added; aliased `app.helpers()` as `app.locals()`. Closes #481\n  * Added extname with no leading \".\" support to `res.contentType()`\n  * Added `cache views` setting, defaulting to enabled in \"production\" env\n  * Added index file partial resolution, eg: partial('user') may try _views/user/index.jade_.\n  * Added `req.accepts()` support for extensions\n  * Changed; `res.download()` and `res.sendfile()` now utilize Connect's\n    static file server `connect.static.send()`.\n  * Changed; replaced `connect.utils.mime()` with npm _mime_ module\n  * Changed; allow `req.query` to be pre-defined (via middleware or other parent\n  * Changed view partial resolution, now relative to parent view\n  * Changed view engine signature. no longer `engine.render(str, options, callback)`, now `engine.compile(str, options) -> Function`, the returned function accepts `fn(locals)`.\n  * Fixed `req.param()` bug returning Array.prototype methods. Closes #552\n  * Fixed; using `Stream#pipe()` instead of `sys.pump()` in `res.sendfile()`\n  * Fixed; using _qs_ module instead of _querystring_\n  * Fixed; strip unsafe chars from jsonp callbacks\n  * Removed \"stream threshold\" setting\n\n1.0.8 / 2011-03-01\n==================\n\n  * Allow `req.query` to be pre-defined (via middleware or other parent app)\n  * \"connect\": \">= 0.5.0 < 1.0.0\". Closes #547\n  * Removed the long deprecated __EXPRESS_ENV__ support\n\n1.0.7 / 2011-02-07\n==================\n\n  * Fixed `render()` setting inheritance.\n    Mounted apps would not inherit \"view engine\"\n\n1.0.6 / 2011-02-07\n==================\n\n  * Fixed `view engine` setting bug when period is in dirname\n\n1.0.5 / 2011-02-05\n==================\n\n  * Added secret to generated app `session()` call\n\n1.0.4 / 2011-02-05\n==================\n\n  * Added `qs` dependency to _package.json_\n  * Fixed namespaced `require()`s for latest connect support\n\n1.0.3 / 2011-01-13\n==================\n\n  * Remove unsafe characters from JSONP callback names [Ryan Grove]\n\n1.0.2 / 2011-01-10\n==================\n\n  * Removed nested require, using `connect.router`\n\n1.0.1 / 2010-12-29\n==================\n\n  * Fixed for middleware stacked via `createServer()`\n    previously the `foo` middleware passed to `createServer(foo)`\n    would not have access to Express methods such as `res.send()`\n    or props like `req.query` etc.\n\n1.0.0 / 2010-11-16\n==================\n\n  * Added; deduce partial object names from the last segment.\n    For example by default `partial('forum/post', postObject)` will\n    give you the _post_ object, providing a meaningful default.\n  * Added http status code string representation to `res.redirect()` body\n  * Added; `res.redirect()` supporting _text/plain_ and _text/html_ via __Accept__.\n  * Added `req.is()` to aid in content negotiation\n  * Added partial local inheritance [suggested by masylum]. Closes #102\n    providing access to parent template locals.\n  * Added _-s, --session[s]_ flag to express(1) to add session related middleware\n  * Added _--template_ flag to express(1) to specify the\n    template engine to use.\n  * Added _--css_ flag to express(1) to specify the\n    stylesheet engine to use (or just plain css by default).\n  * Added `app.all()` support [thanks aheckmann]\n  * Added partial direct object support.\n    You may now `partial('user', user)` providing the \"user\" local,\n    vs previously `partial('user', { object: user })`.\n  * Added _route-separation_ example since many people question ways\n    to do this with CommonJS modules. Also view the _blog_ example for\n    an alternative.\n  * Performance; caching view path derived partial object names\n  * Fixed partial local inheritance precedence. [reported by Nick Poulden] Closes #454\n  * Fixed jsonp support; _text/javascript_ as per mailinglist discussion\n\n1.0.0rc4 / 2010-10-14\n==================\n\n  * Added _NODE_ENV_ support, _EXPRESS_ENV_ is deprecated and will be removed in 1.0.0\n  * Added route-middleware support (very helpful, see the [docs](http://expressjs.com/guide.html#Route-Middleware))\n  * Added _jsonp callback_ setting to enable/disable jsonp autowrapping [Dav Glass]\n  * Added callback query check on response.send to autowrap JSON objects for simple webservice implementations [Dav Glass]\n  * Added `partial()` support for array-like collections. Closes #434\n  * Added support for swappable querystring parsers\n  * Added session usage docs. Closes #443\n  * Added dynamic helper caching. Closes #439 [suggested by maritz]\n  * Added authentication example\n  * Added basic Range support to `res.sendfile()` (and `res.download()` etc)\n  * Changed; `express(1)` generated app using 2 spaces instead of 4\n  * Default env to \"development\" again [aheckmann]\n  * Removed _context_ option is no more, use \"scope\"\n  * Fixed; exposing _./support_ libs to examples so they can run without installs\n  * Fixed mvc example\n\n1.0.0rc3 / 2010-09-20\n==================\n\n  * Added confirmation for `express(1)` app generation. Closes #391\n  * Added extending of flash formatters via `app.flashFormatters`\n  * Added flash formatter support. Closes #411\n  * Added streaming support to `res.sendfile()` using `sys.pump()` when >= \"stream threshold\"\n  * Added _stream threshold_ setting for `res.sendfile()`\n  * Added `res.send()` __HEAD__ support\n  * Added `res.clearCookie()`\n  * Added `res.cookie()`\n  * Added `res.render()` headers option\n  * Added `res.redirect()` response bodies\n  * Added `res.render()` status option support. Closes #425 [thanks aheckmann]\n  * Fixed `res.sendfile()` responding with 403 on malicious path\n  * Fixed `res.download()` bug; when an error occurs remove _Content-Disposition_\n  * Fixed; mounted apps settings now inherit from parent app [aheckmann]\n  * Fixed; stripping Content-Length / Content-Type when 204\n  * Fixed `res.send()` 204. Closes #419\n  * Fixed multiple _Set-Cookie_ headers via `res.header()`. Closes #402\n  * Fixed bug messing with error handlers when `listenFD()` is called instead of `listen()`. [thanks guillermo]\n\n\n1.0.0rc2 / 2010-08-17\n==================\n\n  * Added `app.register()` for template engine mapping. Closes #390\n  * Added `res.render()` callback support as second argument (no options)\n  * Added callback support to `res.download()`\n  * Added callback support for `res.sendfile()`\n  * Added support for middleware access via `express.middlewareName()` vs `connect.middlewareName()`\n  * Added \"partials\" setting to docs\n  * Added default expresso tests to `express(1)` generated app. Closes #384\n  * Fixed `res.sendfile()` error handling, defer via `next()`\n  * Fixed `res.render()` callback when a layout is used [thanks guillermo]\n  * Fixed; `make install` creating ~/.node_libraries when not present\n  * Fixed issue preventing error handlers from being defined anywhere. Closes #387\n\n1.0.0rc / 2010-07-28\n==================\n\n  * Added mounted hook. Closes #369\n  * Added connect dependency to _package.json_\n\n  * Removed \"reload views\" setting and support code\n    development env never caches, production always caches.\n\n  * Removed _param_ in route callbacks, signature is now\n    simply (req, res, next), previously (req, res, params, next).\n    Use _req.params_ for path captures, _req.query_ for GET params.\n\n  * Fixed \"home\" setting\n  * Fixed middleware/router precedence issue. Closes #366\n  * Fixed; _configure()_ callbacks called immediately. Closes #368\n\n1.0.0beta2 / 2010-07-23\n==================\n\n  * Added more examples\n  * Added; exporting `Server` constructor\n  * Added `Server#helpers()` for view locals\n  * Added `Server#dynamicHelpers()` for dynamic view locals. Closes #349\n  * Added support for absolute view paths\n  * Added; _home_ setting defaults to `Server#route` for mounted apps. Closes #363\n  * Added Guillermo Rauch to the contributor list\n  * Added support for \"as\" for non-collection partials. Closes #341\n  * Fixed _install.sh_, ensuring _~/.node_libraries_ exists. Closes #362 [thanks jf]\n  * Fixed `res.render()` exceptions, now passed to `next()` when no callback is given [thanks guillermo]\n  * Fixed instanceof `Array` checks, now `Array.isArray()`\n  * Fixed express(1) expansion of public dirs. Closes #348\n  * Fixed middleware precedence. Closes #345\n  * Fixed view watcher, now async [thanks aheckmann]\n\n1.0.0beta / 2010-07-15\n==================\n\n  * Re-write\n    - much faster\n    - much lighter\n    - Check [ExpressJS.com](http://expressjs.com) for migration guide and updated docs\n\n0.14.0 / 2010-06-15\n==================\n\n  * Utilize relative requires\n  * Added Static bufferSize option [aheckmann]\n  * Fixed caching of view and partial subdirectories [aheckmann]\n  * Fixed mime.type() comments now that \".ext\" is not supported\n  * Updated haml submodule\n  * Updated class submodule\n  * Removed bin/express\n\n0.13.0 / 2010-06-01\n==================\n\n  * Added node v0.1.97 compatibility\n  * Added support for deleting cookies via Request#cookie('key', null)\n  * Updated haml submodule\n  * Fixed not-found page, now using charset utf-8\n  * Fixed show-exceptions page, now using charset utf-8\n  * Fixed view support due to fs.readFile Buffers\n  * Changed; mime.type() no longer accepts \".type\" due to node extname() changes\n\n0.12.0 / 2010-05-22\n==================\n\n  * Added node v0.1.96 compatibility\n  * Added view `helpers` export which act as additional local variables\n  * Updated haml submodule\n  * Changed ETag; removed inode, modified time only\n  * Fixed LF to CRLF for setting multiple cookies\n  * Fixed cookie compilation; values are now urlencoded\n  * Fixed cookies parsing; accepts quoted values and url escaped cookies\n\n0.11.0 / 2010-05-06\n==================\n\n  * Added support for layouts using different engines\n    - this.render('page.html.haml', { layout: 'super-cool-layout.html.ejs' })\n    - this.render('page.html.haml', { layout: 'foo' }) // assumes 'foo.html.haml'\n    - this.render('page.html.haml', { layout: false }) // no layout\n  * Updated ext submodule\n  * Updated haml submodule\n  * Fixed EJS partial support by passing along the context. Issue #307\n\n0.10.1 / 2010-05-03\n==================\n\n  * Fixed binary uploads.\n\n0.10.0 / 2010-04-30\n==================\n\n  * Added charset support via Request#charset (automatically assigned to 'UTF-8' when respond()'s\n    encoding is set to 'utf8' or 'utf-8').\n  * Added \"encoding\" option to Request#render(). Closes #299\n  * Added \"dump exceptions\" setting, which is enabled by default.\n  * Added simple ejs template engine support\n  * Added error response support for text/plain, application/json. Closes #297\n  * Added callback function param to Request#error()\n  * Added Request#sendHead()\n  * Added Request#stream()\n  * Added support for Request#respond(304, null) for empty response bodies\n  * Added ETag support to Request#sendfile()\n  * Added options to Request#sendfile(), passed to fs.createReadStream()\n  * Added filename arg to Request#download()\n  * Performance enhanced due to pre-reversing plugins so that plugins.reverse() is not called on each request\n  * Performance enhanced by preventing several calls to toLowerCase() in Router#match()\n  * Changed; Request#sendfile() now streams\n  * Changed; Renamed Request#halt() to Request#respond(). Closes #289\n  * Changed; Using sys.inspect() instead of JSON.encode() for error output\n  * Changed; run() returns the http.Server instance. Closes #298\n  * Changed; Defaulting Server#host to null (INADDR_ANY)\n  * Changed; Logger \"common\" format scale of 0.4f\n  * Removed Logger \"request\" format\n  * Fixed; Catching ENOENT in view caching, preventing error when \"views/partials\" is not found\n  * Fixed several issues with http client\n  * Fixed Logger Content-Length output\n  * Fixed bug preventing Opera from retaining the generated session id. Closes #292\n\n0.9.0 / 2010-04-14\n==================\n\n  * Added DSL level error() route support\n  * Added DSL level notFound() route support\n  * Added Request#error()\n  * Added Request#notFound()\n  * Added Request#render() callback function. Closes #258\n  * Added \"max upload size\" setting\n  * Added \"magic\" variables to collection partials (\\_\\_index\\_\\_, \\_\\_length\\_\\_, \\_\\_isFirst\\_\\_, \\_\\_isLast\\_\\_). Closes #254\n  * Added [haml.js](http://github.com/visionmedia/haml.js) submodule; removed haml-js\n  * Added callback function support to Request#halt() as 3rd/4th arg\n  * Added preprocessing of route param wildcards using param(). Closes #251\n  * Added view partial support (with collections etc.)\n  * Fixed bug preventing falsey params (such as ?page=0). Closes #286\n  * Fixed setting of multiple cookies. Closes #199\n  * Changed; view naming convention is now NAME.TYPE.ENGINE (for example page.html.haml)\n  * Changed; session cookie is now httpOnly\n  * Changed; Request is no longer global\n  * Changed; Event is no longer global\n  * Changed; \"sys\" module is no longer global\n  * Changed; moved Request#download to Static plugin where it belongs\n  * Changed; Request instance created before body parsing. Closes #262\n  * Changed; Pre-caching views in memory when \"cache view contents\" is enabled. Closes #253\n  * Changed; Pre-caching view partials in memory when \"cache view partials\" is enabled\n  * Updated support to node --version 0.1.90\n  * Updated dependencies\n  * Removed set(\"session cookie\") in favour of use(Session, { cookie: { ... }})\n  * Removed utils.mixin(); use Object#mergeDeep()\n\n0.8.0 / 2010-03-19\n==================\n\n  * Added coffeescript example app. Closes #242\n  * Changed; cache api now async friendly. Closes #240\n  * Removed deprecated 'express/static' support. Use 'express/plugins/static'\n\n0.7.6 / 2010-03-19\n==================\n\n  * Added Request#isXHR. Closes #229\n  * Added `make install` (for the executable)\n  * Added `express` executable for setting up simple app templates\n  * Added \"GET /public/*\" to Static plugin, defaulting to <root>/public\n  * Added Static plugin\n  * Fixed; Request#render() only calls cache.get() once\n  * Fixed; Namespacing View caches with \"view:\"\n  * Fixed; Namespacing Static caches with \"static:\"\n  * Fixed; Both example apps now use the Static plugin\n  * Fixed set(\"views\"). Closes #239\n  * Fixed missing space for combined log format\n  * Deprecated Request#sendfile() and 'express/static'\n  * Removed Server#running\n\n0.7.5 / 2010-03-16\n==================\n\n  * Added Request#flash() support without args, now returns all flashes\n  * Updated ext submodule\n\n0.7.4 / 2010-03-16\n==================\n\n  * Fixed session reaper\n  * Changed; class.js replacing js-oo Class implementation (quite a bit faster, no browser cruft)\n\n0.7.3 / 2010-03-16\n==================\n\n  * Added package.json\n  * Fixed requiring of haml / sass due to kiwi removal\n\n0.7.2 / 2010-03-16\n==================\n\n  * Fixed GIT submodules (HAH!)\n\n0.7.1 / 2010-03-16\n==================\n\n  * Changed; Express now using submodules again until a PM is adopted\n  * Changed; chat example using millisecond conversions from ext\n\n0.7.0 / 2010-03-15\n==================\n\n  * Added Request#pass() support (finds the next matching route, or the given path)\n  * Added Logger plugin (default \"common\" format replaces CommonLogger)\n  * Removed Profiler plugin\n  * Removed CommonLogger plugin\n\n0.6.0 / 2010-03-11\n==================\n\n  * Added seed.yml for kiwi package management support\n  * Added HTTP client query string support when method is GET. Closes #205\n\n  * Added support for arbitrary view engines.\n    For example \"foo.engine.html\" will now require('engine'),\n    the exports from this module are cached after the first require().\n\n  * Added async plugin support\n\n  * Removed usage of RESTful route funcs as http client\n    get() etc, use http.get() and friends\n\n  * Removed custom exceptions\n\n0.5.0 / 2010-03-10\n==================\n\n  * Added ext dependency (library of js extensions)\n  * Removed extname() / basename() utils. Use path module\n  * Removed toArray() util. Use arguments.values\n  * Removed escapeRegexp() util. Use RegExp.escape()\n  * Removed process.mixin() dependency. Use utils.mixin()\n  * Removed Collection\n  * Removed ElementCollection\n  * Shameless self promotion of ebook \"Advanced JavaScript\" (http://dev-mag.com)  ;)\n\n0.4.0 / 2010-02-11\n==================\n\n  * Added flash() example to sample upload app\n  * Added high level restful http client module (express/http)\n  * Changed; RESTful route functions double as HTTP clients. Closes #69\n  * Changed; throwing error when routes are added at runtime\n  * Changed; defaulting render() context to the current Request. Closes #197\n  * Updated haml submodule\n\n0.3.0 / 2010-02-11\n==================\n\n  * Updated haml / sass submodules. Closes #200\n  * Added flash message support. Closes #64\n  * Added accepts() now allows multiple args. fixes #117\n  * Added support for plugins to halt. Closes #189\n  * Added alternate layout support. Closes #119\n  * Removed Route#run(). Closes #188\n  * Fixed broken specs due to use(Cookie) missing\n\n0.2.1 / 2010-02-05\n==================\n\n  * Added \"plot\" format option for Profiler (for gnuplot processing)\n  * Added request number to Profiler plugin\n  * Fixed binary encoding for multipart file uploads, was previously defaulting to UTF8\n  * Fixed issue with routes not firing when not files are present. Closes #184\n  * Fixed process.Promise -> events.Promise\n\n0.2.0 / 2010-02-03\n==================\n\n  * Added parseParam() support for name[] etc. (allows for file inputs with \"multiple\" attr) Closes #180\n  * Added Both Cache and Session option \"reapInterval\" may be \"reapEvery\". Closes #174\n  * Added expiration support to cache api with reaper. Closes #133\n  * Added cache Store.Memory#reap()\n  * Added Cache; cache api now uses first class Cache instances\n  * Added abstract session Store. Closes #172\n  * Changed; cache Memory.Store#get() utilizing Collection\n  * Renamed MemoryStore -> Store.Memory\n  * Fixed use() of the same plugin several time will always use latest options. Closes #176\n\n0.1.0 / 2010-02-03\n==================\n\n  * Changed; Hooks (before / after) pass request as arg as well as evaluated in their context\n  * Updated node support to 0.1.27 Closes #169\n  * Updated dirname(__filename) -> __dirname\n  * Updated libxmljs support to v0.2.0\n  * Added session support with memory store / reaping\n  * Added quick uid() helper\n  * Added multi-part upload support\n  * Added Sass.js support / submodule\n  * Added production env caching view contents and static files\n  * Added static file caching. Closes #136\n  * Added cache plugin with memory stores\n  * Added support to StaticFile so that it works with non-textual files.\n  * Removed dirname() helper\n  * Removed several globals (now their modules must be required)\n\n0.0.2 / 2010-01-10\n==================\n\n  * Added view benchmarks; currently haml vs ejs\n  * Added Request#attachment() specs. Closes #116\n  * Added use of node's parseQuery() util. Closes #123\n  * Added `make init` for submodules\n  * Updated Haml\n  * Updated sample chat app to show messages on load\n  * Updated libxmljs parseString -> parseHtmlString\n  * Fixed `make init` to work with older versions of git\n  * Fixed specs can now run independent specs for those who can't build deps. Closes #127\n  * Fixed issues introduced by the node url module changes. Closes 126.\n  * Fixed two assertions failing due to Collection#keys() returning strings\n  * Fixed faulty Collection#toArray() spec due to keys() returning strings\n  * Fixed `make test` now builds libxmljs.node before testing\n\n0.0.1 / 2010-01-03\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\express\\History.md",
    "RelativePath": "tools\\backend\\node_modules\\express\\History.md"
  },
  {
    "Content": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nmodule.exports = require('./lib/express');\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\express\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\express\\index.js"
  },
  {
    "Content": "[![Express Logo](https://i.cloudup.com/zfY6lL7eFa-3000x3000.png)](http://expressjs.com/)\n\n**Fast, unopinionated, minimalist web framework for [Node.js](http://nodejs.org).**\n\n**This project has a [Code of Conduct][].**\n\n## Table of contents\n\n* [Installation](#Installation)\n* [Features](#Features)\n* [Docs & Community](#docs--community)\n* [Quick Start](#Quick-Start)\n* [Running Tests](#Running-Tests)\n* [Philosophy](#Philosophy)\n* [Examples](#Examples)\n* [Contributing to Express](#Contributing)\n* [TC (Technical Committee)](#tc-technical-committee)\n* [Triagers](#triagers)\n* [License](#license)\n\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Install Size][npm-install-size-image]][npm-install-size-url]\n[![NPM Downloads][npm-downloads-image]][npm-downloads-url]\n[![OpenSSF Scorecard Badge][ossf-scorecard-badge]][ossf-scorecard-visualizer]\n\n\n```js\nconst express = require('express')\nconst app = express()\n\napp.get('/', function (req, res) {\n  res.send('Hello World')\n})\n\napp.listen(3000)\n```\n\n## Installation\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/).\n\nBefore installing, [download and install Node.js](https://nodejs.org/en/download/).\nNode.js 0.10 or higher is required.\n\nIf this is a brand new project, make sure to create a `package.json` first with\nthe [`npm init` command](https://docs.npmjs.com/creating-a-package-json-file).\n\nInstallation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```console\n$ npm install express\n```\n\nFollow [our installing guide](http://expressjs.com/en/starter/installing.html)\nfor more information.\n\n## Features\n\n  * Robust routing\n  * Focus on high performance\n  * Super-high test coverage\n  * HTTP helpers (redirection, caching, etc)\n  * View system supporting 14+ template engines\n  * Content negotiation\n  * Executable for generating applications quickly\n\n## Docs & Community\n\n  * [Website and Documentation](http://expressjs.com/) - [[website repo](https://github.com/expressjs/expressjs.com)]\n  * [#express](https://web.libera.chat/#express) on [Libera Chat](https://libera.chat) IRC\n  * [GitHub Organization](https://github.com/expressjs) for Official Middleware & Modules\n  * Visit the [Wiki](https://github.com/expressjs/express/wiki)\n  * [Google Group](https://groups.google.com/group/express-js) for discussion\n  * [Gitter](https://gitter.im/expressjs/express) for support and discussion\n\n**PROTIP** Be sure to read [Migrating from 3.x to 4.x](https://github.com/expressjs/express/wiki/Migrating-from-3.x-to-4.x) as well as [New features in 4.x](https://github.com/expressjs/express/wiki/New-features-in-4.x).\n\n## Quick Start\n\n  The quickest way to get started with express is to utilize the executable [`express(1)`](https://github.com/expressjs/generator) to generate an application as shown below:\n\n  Install the executable. The executable's major version will match Express's:\n\n```console\n$ npm install -g express-generator@4\n```\n\n  Create the app:\n\n```console\n$ express /tmp/foo && cd /tmp/foo\n```\n\n  Install dependencies:\n\n```console\n$ npm install\n```\n\n  Start the server:\n\n```console\n$ npm start\n```\n\n  View the website at: http://localhost:3000\n\n## Philosophy\n\n  The Express philosophy is to provide small, robust tooling for HTTP servers, making\n  it a great solution for single page applications, websites, hybrids, or public\n  HTTP APIs.\n\n  Express does not force you to use any specific ORM or template engine. With support for over\n  14 template engines via [Consolidate.js](https://github.com/tj/consolidate.js),\n  you can quickly craft your perfect framework.\n\n## Examples\n\n  To view the examples, clone the Express repo and install the dependencies:\n\n```console\n$ git clone https://github.com/expressjs/express.git --depth 1\n$ cd express\n$ npm install\n```\n\n  Then run whichever example you want:\n\n```console\n$ node examples/content-negotiation\n```\n\n## Contributing\n\n  [![Linux Build][github-actions-ci-image]][github-actions-ci-url]\n  [![Windows Build][appveyor-image]][appveyor-url]\n  [![Test Coverage][coveralls-image]][coveralls-url]\n\nThe Express.js project welcomes all constructive contributions. Contributions take many forms,\nfrom code for bug fixes and enhancements, to additions and fixes to documentation, additional\ntests, triaging incoming pull requests and issues, and more!\n\nSee the [Contributing Guide](Contributing.md) for more technical details on contributing.\n\n### Security Issues\n\nIf you discover a security vulnerability in Express, please see [Security Policies and Procedures](Security.md).\n\n### Running Tests\n\nTo run the test suite, first install the dependencies, then run `npm test`:\n\n```console\n$ npm install\n$ npm test\n```\n\n## People\n\nThe original author of Express is [TJ Holowaychuk](https://github.com/tj)\n\n[List of all contributors](https://github.com/expressjs/express/graphs/contributors)\n\n### TC (Technical Committee)\n\n* [UlisesGascon](https://github.com/UlisesGascon) - **Ulises Gascón** (he/him)\n* [jonchurch](https://github.com/jonchurch) - **Jon Church**\n* [wesleytodd](https://github.com/wesleytodd) - **Wes Todd**\n* [LinusU](https://github.com/LinusU) - **Linus Unnebäck**\n* [blakeembrey](https://github.com/blakeembrey) - **Blake Embrey**\n* [sheplu](https://github.com/sheplu) - **Jean Burellier**\n* [crandmck](https://github.com/crandmck) - **Rand McKinney**\n* [ctcpip](https://github.com/ctcpip) - **Chris de Almeida**\n\n<details>\n<summary>TC emeriti members</summary>\n\n#### TC emeriti members\n\n  * [dougwilson](https://github.com/dougwilson) - **Douglas Wilson**\n  * [hacksparrow](https://github.com/hacksparrow) - **Hage Yaapa**\n  * [jonathanong](https://github.com/jonathanong) - **jongleberry**\n  * [niftylettuce](https://github.com/niftylettuce) - **niftylettuce**\n  * [troygoode](https://github.com/troygoode) - **Troy Goode**\n</details>\n\n\n### Triagers\n\n* [aravindvnair99](https://github.com/aravindvnair99) - **Aravind Nair**\n* [carpasse](https://github.com/carpasse) - **Carlos Serrano**\n* [CBID2](https://github.com/CBID2) - **Christine Belzie**\n* [enyoghasim](https://github.com/enyoghasim) - **David Enyoghasim**\n* [UlisesGascon](https://github.com/UlisesGascon) - **Ulises Gascón** (he/him)\n* [mertcanaltin](https://github.com/mertcanaltin) - **Mert Can Altin**\n* [0ss](https://github.com/0ss) - **Salah**\n* [import-brain](https://github.com/import-brain) - **Eric Cheng** (he/him)\n* [3imed-jaberi](https://github.com/3imed-jaberi) - **Imed Jaberi**\n* [dakshkhetan](https://github.com/dakshkhetan) - **Daksh Khetan** (he/him)\n* [lucasraziel](https://github.com/lucasraziel) - **Lucas Soares Do Rego**\n* [IamLizu](https://github.com/IamLizu) - **S M Mahmudul Hasan** (he/him)\n* [Sushmeet](https://github.com/Sushmeet) - **Sushmeet Sunger**\n\n<details>\n<summary>Triagers emeriti members</summary>\n\n#### Emeritus Triagers\n\n  * [AuggieH](https://github.com/AuggieH) - **Auggie Hudak**\n  * [G-Rath](https://github.com/G-Rath) - **Gareth Jones**\n  * [MohammadXroid](https://github.com/MohammadXroid) - **Mohammad Ayashi**\n  * [NawafSwe](https://github.com/NawafSwe) - **Nawaf Alsharqi**\n  * [NotMoni](https://github.com/NotMoni) - **Moni**\n  * [VigneshMurugan](https://github.com/VigneshMurugan) - **Vignesh Murugan**\n  * [davidmashe](https://github.com/davidmashe) - **David Ashe**\n  * [digitaIfabric](https://github.com/digitaIfabric) - **David**\n  * [e-l-i-s-e](https://github.com/e-l-i-s-e) - **Elise Bonner**\n  * [fed135](https://github.com/fed135) - **Frederic Charette**\n  * [firmanJS](https://github.com/firmanJS) - **Firman Abdul Hakim**\n  * [getspooky](https://github.com/getspooky) - **Yasser Ameur**\n  * [ghinks](https://github.com/ghinks) - **Glenn**\n  * [ghousemohamed](https://github.com/ghousemohamed) - **Ghouse Mohamed**\n  * [gireeshpunathil](https://github.com/gireeshpunathil) - **Gireesh Punathil**\n  * [jake32321](https://github.com/jake32321) - **Jake Reed**\n  * [jonchurch](https://github.com/jonchurch) - **Jon Church**\n  * [lekanikotun](https://github.com/lekanikotun) - **Troy Goode**\n  * [marsonya](https://github.com/marsonya) - **Lekan Ikotun**\n  * [mastermatt](https://github.com/mastermatt) - **Matt R. Wilson**\n  * [maxakuru](https://github.com/maxakuru) - **Max Edell**\n  * [mlrawlings](https://github.com/mlrawlings) - **Michael Rawlings**\n  * [rodion-arr](https://github.com/rodion-arr) - **Rodion Abdurakhimov**\n  * [sheplu](https://github.com/sheplu) - **Jean Burellier**\n  * [tarunyadav1](https://github.com/tarunyadav1) - **Tarun yadav**\n  * [tunniclm](https://github.com/tunniclm) - **Mike Tunnicliffe**\n</details>\n\n\n## License\n\n  [MIT](LICENSE)\n\n[appveyor-image]: https://badgen.net/appveyor/ci/dougwilson/express/master?label=windows\n[appveyor-url]: https://ci.appveyor.com/project/dougwilson/express\n[coveralls-image]: https://badgen.net/coveralls/c/github/expressjs/express/master\n[coveralls-url]: https://coveralls.io/r/expressjs/express?branch=master\n[github-actions-ci-image]: https://badgen.net/github/checks/expressjs/express/master?label=linux\n[github-actions-ci-url]: https://github.com/expressjs/express/actions/workflows/ci.yml\n[npm-downloads-image]: https://badgen.net/npm/dm/express\n[npm-downloads-url]: https://npmcharts.com/compare/express?minimal=true\n[npm-install-size-image]: https://badgen.net/packagephobia/install/express\n[npm-install-size-url]: https://packagephobia.com/result?p=express\n[npm-url]: https://npmjs.org/package/express\n[npm-version-image]: https://badgen.net/npm/v/express\n[ossf-scorecard-badge]: https://api.scorecard.dev/projects/github.com/expressjs/express/badge\n[ossf-scorecard-visualizer]: https://ossf.github.io/scorecard-visualizer/#/projects/github.com/expressjs/express\n[Code of Conduct]: https://github.com/expressjs/express/blob/master/Code-Of-Conduct.md\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\express\\Readme.md",
    "RelativePath": "tools\\backend\\node_modules\\express\\Readme.md"
  },
  {
    "Content": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar finalhandler = require('finalhandler');\nvar Router = require('./router');\nvar methods = require('methods');\nvar middleware = require('./middleware/init');\nvar query = require('./middleware/query');\nvar debug = require('debug')('express:application');\nvar View = require('./view');\nvar http = require('http');\nvar compileETag = require('./utils').compileETag;\nvar compileQueryParser = require('./utils').compileQueryParser;\nvar compileTrust = require('./utils').compileTrust;\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar merge = require('utils-merge');\nvar resolve = require('path').resolve;\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\nvar slice = Array.prototype.slice;\n\n/**\n * Application prototype.\n */\n\nvar app = exports = module.exports = {};\n\n/**\n * Variable for trust proxy inheritance back-compat\n * @private\n */\n\nvar trustProxyDefaultSymbol = '@@symbol:trust_proxy_default';\n\n/**\n * Initialize the server.\n *\n *   - setup default configuration\n *   - setup default middleware\n *   - setup route reflection methods\n *\n * @private\n */\n\napp.init = function init() {\n  this.cache = {};\n  this.engines = {};\n  this.settings = {};\n\n  this.defaultConfiguration();\n};\n\n/**\n * Initialize application configuration.\n * @private\n */\n\napp.defaultConfiguration = function defaultConfiguration() {\n  var env = process.env.NODE_ENV || 'development';\n\n  // default settings\n  this.enable('x-powered-by');\n  this.set('etag', 'weak');\n  this.set('env', env);\n  this.set('query parser', 'extended');\n  this.set('subdomain offset', 2);\n  this.set('trust proxy', false);\n\n  // trust proxy inherit back-compat\n  Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\n    configurable: true,\n    value: true\n  });\n\n  debug('booting in %s mode', env);\n\n  this.on('mount', function onmount(parent) {\n    // inherit trust proxy\n    if (this.settings[trustProxyDefaultSymbol] === true\n      && typeof parent.settings['trust proxy fn'] === 'function') {\n      delete this.settings['trust proxy'];\n      delete this.settings['trust proxy fn'];\n    }\n\n    // inherit protos\n    setPrototypeOf(this.request, parent.request)\n    setPrototypeOf(this.response, parent.response)\n    setPrototypeOf(this.engines, parent.engines)\n    setPrototypeOf(this.settings, parent.settings)\n  });\n\n  // setup locals\n  this.locals = Object.create(null);\n\n  // top-most app is mounted at /\n  this.mountpath = '/';\n\n  // default locals\n  this.locals.settings = this.settings;\n\n  // default configuration\n  this.set('view', View);\n  this.set('views', resolve('views'));\n  this.set('jsonp callback name', 'callback');\n\n  if (env === 'production') {\n    this.enable('view cache');\n  }\n\n  Object.defineProperty(this, 'router', {\n    get: function() {\n      throw new Error('\\'app.router\\' is deprecated!\\nPlease see the 3.x to 4.x migration guide for details on how to update your app.');\n    }\n  });\n};\n\n/**\n * lazily adds the base router if it has not yet been added.\n *\n * We cannot add the base router in the defaultConfiguration because\n * it reads app settings which might be set after that has run.\n *\n * @private\n */\napp.lazyrouter = function lazyrouter() {\n  if (!this._router) {\n    this._router = new Router({\n      caseSensitive: this.enabled('case sensitive routing'),\n      strict: this.enabled('strict routing')\n    });\n\n    this._router.use(query(this.get('query parser fn')));\n    this._router.use(middleware.init(this));\n  }\n};\n\n/**\n * Dispatch a req, res pair into the application. Starts pipeline processing.\n *\n * If no callback is provided, then default error handlers will respond\n * in the event of an error bubbling through the stack.\n *\n * @private\n */\n\napp.handle = function handle(req, res, callback) {\n  var router = this._router;\n\n  // final handler\n  var done = callback || finalhandler(req, res, {\n    env: this.get('env'),\n    onerror: logerror.bind(this)\n  });\n\n  // no routes\n  if (!router) {\n    debug('no routes defined on app');\n    done();\n    return;\n  }\n\n  router.handle(req, res, done);\n};\n\n/**\n * Proxy `Router#use()` to add middleware to the app router.\n * See Router#use() documentation for details.\n *\n * If the _fn_ parameter is an express app, then it will be\n * mounted at the _route_ specified.\n *\n * @public\n */\n\napp.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate app.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var fns = flatten(slice.call(arguments, offset));\n\n  if (fns.length === 0) {\n    throw new TypeError('app.use() requires a middleware function')\n  }\n\n  // setup router\n  this.lazyrouter();\n  var router = this._router;\n\n  fns.forEach(function (fn) {\n    // non-express app\n    if (!fn || !fn.handle || !fn.set) {\n      return router.use(path, fn);\n    }\n\n    debug('.use app under %s', path);\n    fn.mountpath = path;\n    fn.parent = this;\n\n    // restore .app property on req and res\n    router.use(path, function mounted_app(req, res, next) {\n      var orig = req.app;\n      fn.handle(req, res, function (err) {\n        setPrototypeOf(req, orig.request)\n        setPrototypeOf(res, orig.response)\n        next(err);\n      });\n    });\n\n    // mounted an app\n    fn.emit('mount', this);\n  }, this);\n\n  return this;\n};\n\n/**\n * Proxy to the app `Router#route()`\n * Returns a new `Route` instance for the _path_.\n *\n * Routes are isolated middleware stacks for specific paths.\n * See the Route api docs for details.\n *\n * @public\n */\n\napp.route = function route(path) {\n  this.lazyrouter();\n  return this._router.route(path);\n};\n\n/**\n * Register the given template engine callback `fn`\n * as `ext`.\n *\n * By default will `require()` the engine based on the\n * file extension. For example if you try to render\n * a \"foo.ejs\" file Express will invoke the following internally:\n *\n *     app.engine('ejs', require('ejs').__express);\n *\n * For engines that do not provide `.__express` out of the box,\n * or if you wish to \"map\" a different extension to the template engine\n * you may use this method. For example mapping the EJS template engine to\n * \".html\" files:\n *\n *     app.engine('html', require('ejs').renderFile);\n *\n * In this case EJS provides a `.renderFile()` method with\n * the same signature that Express expects: `(path, options, callback)`,\n * though note that it aliases this method as `ejs.__express` internally\n * so if you're using \".ejs\" extensions you don't need to do anything.\n *\n * Some template engines do not follow this convention, the\n * [Consolidate.js](https://github.com/tj/consolidate.js)\n * library was created to map all of node's popular template\n * engines to follow this convention, thus allowing them to\n * work seamlessly within Express.\n *\n * @param {String} ext\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.engine = function engine(ext, fn) {\n  if (typeof fn !== 'function') {\n    throw new Error('callback function required');\n  }\n\n  // get file extension\n  var extension = ext[0] !== '.'\n    ? '.' + ext\n    : ext;\n\n  // store engine\n  this.engines[extension] = fn;\n\n  return this;\n};\n\n/**\n * Proxy to `Router#param()` with one added api feature. The _name_ parameter\n * can be an array of names.\n *\n * See the Router#param() docs for more details.\n *\n * @param {String|Array} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.param = function param(name, fn) {\n  this.lazyrouter();\n\n  if (Array.isArray(name)) {\n    for (var i = 0; i < name.length; i++) {\n      this.param(name[i], fn);\n    }\n\n    return this;\n  }\n\n  this._router.param(name, fn);\n\n  return this;\n};\n\n/**\n * Assign `setting` to `val`, or return `setting`'s value.\n *\n *    app.set('foo', 'bar');\n *    app.set('foo');\n *    // => \"bar\"\n *\n * Mounted servers inherit their parent server's settings.\n *\n * @param {String} setting\n * @param {*} [val]\n * @return {Server} for chaining\n * @public\n */\n\napp.set = function set(setting, val) {\n  if (arguments.length === 1) {\n    // app.get(setting)\n    var settings = this.settings\n\n    while (settings && settings !== Object.prototype) {\n      if (hasOwnProperty.call(settings, setting)) {\n        return settings[setting]\n      }\n\n      settings = Object.getPrototypeOf(settings)\n    }\n\n    return undefined\n  }\n\n  debug('set \"%s\" to %o', setting, val);\n\n  // set value\n  this.settings[setting] = val;\n\n  // trigger matched settings\n  switch (setting) {\n    case 'etag':\n      this.set('etag fn', compileETag(val));\n      break;\n    case 'query parser':\n      this.set('query parser fn', compileQueryParser(val));\n      break;\n    case 'trust proxy':\n      this.set('trust proxy fn', compileTrust(val));\n\n      // trust proxy inherit back-compat\n      Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\n        configurable: true,\n        value: false\n      });\n\n      break;\n  }\n\n  return this;\n};\n\n/**\n * Return the app's absolute pathname\n * based on the parent(s) that have\n * mounted it.\n *\n * For example if the application was\n * mounted as \"/admin\", which itself\n * was mounted as \"/blog\" then the\n * return value would be \"/blog/admin\".\n *\n * @return {String}\n * @private\n */\n\napp.path = function path() {\n  return this.parent\n    ? this.parent.path() + this.mountpath\n    : '';\n};\n\n/**\n * Check if `setting` is enabled (truthy).\n *\n *    app.enabled('foo')\n *    // => false\n *\n *    app.enable('foo')\n *    app.enabled('foo')\n *    // => true\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.enabled = function enabled(setting) {\n  return Boolean(this.set(setting));\n};\n\n/**\n * Check if `setting` is disabled.\n *\n *    app.disabled('foo')\n *    // => true\n *\n *    app.enable('foo')\n *    app.disabled('foo')\n *    // => false\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.disabled = function disabled(setting) {\n  return !this.set(setting);\n};\n\n/**\n * Enable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.enable = function enable(setting) {\n  return this.set(setting, true);\n};\n\n/**\n * Disable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.disable = function disable(setting) {\n  return this.set(setting, false);\n};\n\n/**\n * Delegate `.VERB(...)` calls to `router.VERB(...)`.\n */\n\nmethods.forEach(function(method){\n  app[method] = function(path){\n    if (method === 'get' && arguments.length === 1) {\n      // app.get(setting)\n      return this.set(path);\n    }\n\n    this.lazyrouter();\n\n    var route = this._router.route(path);\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n});\n\n/**\n * Special-cased \"all\" method, applying the given route `path`,\n * middleware, and callback to _every_ HTTP method.\n *\n * @param {String} path\n * @param {Function} ...\n * @return {app} for chaining\n * @public\n */\n\napp.all = function all(path) {\n  this.lazyrouter();\n\n  var route = this._router.route(path);\n  var args = slice.call(arguments, 1);\n\n  for (var i = 0; i < methods.length; i++) {\n    route[methods[i]].apply(route, args);\n  }\n\n  return this;\n};\n\n// del -> delete alias\n\napp.del = deprecate.function(app.delete, 'app.del: Use app.delete instead');\n\n/**\n * Render the given view `name` name with `options`\n * and a callback accepting an error and the\n * rendered template string.\n *\n * Example:\n *\n *    app.render('email', { name: 'Tobi' }, function(err, html){\n *      // ...\n *    })\n *\n * @param {String} name\n * @param {Object|Function} options or fn\n * @param {Function} callback\n * @public\n */\n\napp.render = function render(name, options, callback) {\n  var cache = this.cache;\n  var done = callback;\n  var engines = this.engines;\n  var opts = options;\n  var renderOptions = {};\n  var view;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge app.locals\n  merge(renderOptions, this.locals);\n\n  // merge options._locals\n  if (opts._locals) {\n    merge(renderOptions, opts._locals);\n  }\n\n  // merge options\n  merge(renderOptions, opts);\n\n  // set .cache unless explicitly provided\n  if (renderOptions.cache == null) {\n    renderOptions.cache = this.enabled('view cache');\n  }\n\n  // primed cache\n  if (renderOptions.cache) {\n    view = cache[name];\n  }\n\n  // view\n  if (!view) {\n    var View = this.get('view');\n\n    view = new View(name, {\n      defaultEngine: this.get('view engine'),\n      root: this.get('views'),\n      engines: engines\n    });\n\n    if (!view.path) {\n      var dirs = Array.isArray(view.root) && view.root.length > 1\n        ? 'directories \"' + view.root.slice(0, -1).join('\", \"') + '\" or \"' + view.root[view.root.length - 1] + '\"'\n        : 'directory \"' + view.root + '\"'\n      var err = new Error('Failed to lookup view \"' + name + '\" in views ' + dirs);\n      err.view = view;\n      return done(err);\n    }\n\n    // prime the cache\n    if (renderOptions.cache) {\n      cache[name] = view;\n    }\n  }\n\n  // render\n  tryRender(view, renderOptions, done);\n};\n\n/**\n * Listen for connections.\n *\n * A node `http.Server` is returned, with this\n * application (which is a `Function`) as its\n * callback. If you wish to create both an HTTP\n * and HTTPS server you may do so with the \"http\"\n * and \"https\" modules as shown here:\n *\n *    var http = require('http')\n *      , https = require('https')\n *      , express = require('express')\n *      , app = express();\n *\n *    http.createServer(app).listen(80);\n *    https.createServer({ ... }, app).listen(443);\n *\n * @return {http.Server}\n * @public\n */\n\napp.listen = function listen() {\n  var server = http.createServer(this);\n  return server.listen.apply(server, arguments);\n};\n\n/**\n * Log error using console.error.\n *\n * @param {Error} err\n * @private\n */\n\nfunction logerror(err) {\n  /* istanbul ignore next */\n  if (this.get('env') !== 'test') console.error(err.stack || err.toString());\n}\n\n/**\n * Try rendering a view.\n * @private\n */\n\nfunction tryRender(view, options, callback) {\n  try {\n    view.render(options, callback);\n  } catch (err) {\n    callback(err);\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\express\\lib\\application.js",
    "RelativePath": "tools\\backend\\node_modules\\express\\lib\\application.js"
  },
  {
    "Content": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar bodyParser = require('body-parser')\nvar EventEmitter = require('events').EventEmitter;\nvar mixin = require('merge-descriptors');\nvar proto = require('./application');\nvar Route = require('./router/route');\nvar Router = require('./router');\nvar req = require('./request');\nvar res = require('./response');\n\n/**\n * Expose `createApplication()`.\n */\n\nexports = module.exports = createApplication;\n\n/**\n * Create an express application.\n *\n * @return {Function}\n * @api public\n */\n\nfunction createApplication() {\n  var app = function(req, res, next) {\n    app.handle(req, res, next);\n  };\n\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false);\n\n  // expose the prototype that will get set on requests\n  app.request = Object.create(req, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  // expose the prototype that will get set on responses\n  app.response = Object.create(res, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  app.init();\n  return app;\n}\n\n/**\n * Expose the prototypes.\n */\n\nexports.application = proto;\nexports.request = req;\nexports.response = res;\n\n/**\n * Expose constructors.\n */\n\nexports.Route = Route;\nexports.Router = Router;\n\n/**\n * Expose middleware\n */\n\nexports.json = bodyParser.json\nexports.query = require('./middleware/query');\nexports.raw = bodyParser.raw\nexports.static = require('serve-static');\nexports.text = bodyParser.text\nexports.urlencoded = bodyParser.urlencoded\n\n/**\n * Replace removed middleware with an appropriate error message.\n */\n\nvar removedMiddlewares = [\n  'bodyParser',\n  'compress',\n  'cookieSession',\n  'session',\n  'logger',\n  'cookieParser',\n  'favicon',\n  'responseTime',\n  'errorHandler',\n  'timeout',\n  'methodOverride',\n  'vhost',\n  'csrf',\n  'directory',\n  'limit',\n  'multipart',\n  'staticCache'\n]\n\nremovedMiddlewares.forEach(function (name) {\n  Object.defineProperty(exports, name, {\n    get: function () {\n      throw new Error('Most middleware (like ' + name + ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.');\n    },\n    configurable: true\n  });\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\express\\lib\\express.js",
    "RelativePath": "tools\\backend\\node_modules\\express\\lib\\express.js"
  },
  {
    "Content": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar accepts = require('accepts');\nvar deprecate = require('depd')('express');\nvar isIP = require('net').isIP;\nvar typeis = require('type-is');\nvar http = require('http');\nvar fresh = require('fresh');\nvar parseRange = require('range-parser');\nvar parse = require('parseurl');\nvar proxyaddr = require('proxy-addr');\n\n/**\n * Request prototype.\n * @public\n */\n\nvar req = Object.create(http.IncomingMessage.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = req\n\n/**\n * Return request header.\n *\n * The `Referrer` header field is special-cased,\n * both `Referrer` and `Referer` are interchangeable.\n *\n * Examples:\n *\n *     req.get('Content-Type');\n *     // => \"text/plain\"\n *\n *     req.get('content-type');\n *     // => \"text/plain\"\n *\n *     req.get('Something');\n *     // => undefined\n *\n * Aliased as `req.header()`.\n *\n * @param {String} name\n * @return {String}\n * @public\n */\n\nreq.get =\nreq.header = function header(name) {\n  if (!name) {\n    throw new TypeError('name argument is required to req.get');\n  }\n\n  if (typeof name !== 'string') {\n    throw new TypeError('name must be a string to req.get');\n  }\n\n  var lc = name.toLowerCase();\n\n  switch (lc) {\n    case 'referer':\n    case 'referrer':\n      return this.headers.referrer\n        || this.headers.referer;\n    default:\n      return this.headers[lc];\n  }\n};\n\n/**\n * To do: update docs.\n *\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single MIME type string\n * such as \"application/json\", an extension name\n * such as \"json\", a comma-delimited list such as \"json, html, text/plain\",\n * an argument list such as `\"json\", \"html\", \"text/plain\"`,\n * or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given, the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     req.accepts('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     req.accepts('html');\n *     // => \"html\"\n *     req.accepts('text/html');\n *     // => \"text/html\"\n *     req.accepts('json, text');\n *     // => \"json\"\n *     req.accepts('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     req.accepts('image/png');\n *     req.accepts('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     req.accepts(['html', 'json']);\n *     req.accepts('html', 'json');\n *     req.accepts('html, json');\n *     // => \"json\"\n *\n * @param {String|Array} type(s)\n * @return {String|Array|Boolean}\n * @public\n */\n\nreq.accepts = function(){\n  var accept = accepts(this);\n  return accept.types.apply(accept, arguments);\n};\n\n/**\n * Check if the given `encoding`s are accepted.\n *\n * @param {String} ...encoding\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsEncodings = function(){\n  var accept = accepts(this);\n  return accept.encodings.apply(accept, arguments);\n};\n\nreq.acceptsEncoding = deprecate.function(req.acceptsEncodings,\n  'req.acceptsEncoding: Use acceptsEncodings instead');\n\n/**\n * Check if the given `charset`s are acceptable,\n * otherwise you should respond with 406 \"Not Acceptable\".\n *\n * @param {String} ...charset\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsCharsets = function(){\n  var accept = accepts(this);\n  return accept.charsets.apply(accept, arguments);\n};\n\nreq.acceptsCharset = deprecate.function(req.acceptsCharsets,\n  'req.acceptsCharset: Use acceptsCharsets instead');\n\n/**\n * Check if the given `lang`s are acceptable,\n * otherwise you should respond with 406 \"Not Acceptable\".\n *\n * @param {String} ...lang\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsLanguages = function(){\n  var accept = accepts(this);\n  return accept.languages.apply(accept, arguments);\n};\n\nreq.acceptsLanguage = deprecate.function(req.acceptsLanguages,\n  'req.acceptsLanguage: Use acceptsLanguages instead');\n\n/**\n * Parse Range header field, capping to the given `size`.\n *\n * Unspecified ranges such as \"0-\" require knowledge of your resource length. In\n * the case of a byte range this is of course the total number of bytes. If the\n * Range header field is not given `undefined` is returned, `-1` when unsatisfiable,\n * and `-2` when syntactically invalid.\n *\n * When ranges are returned, the array has a \"type\" property which is the type of\n * range that is required (most commonly, \"bytes\"). Each array element is an object\n * with a \"start\" and \"end\" property for the portion of the range.\n *\n * The \"combine\" option can be set to `true` and overlapping & adjacent ranges\n * will be combined into a single range.\n *\n * NOTE: remember that ranges are inclusive, so for example \"Range: users=0-3\"\n * should respond with 4 users when available, not 3.\n *\n * @param {number} size\n * @param {object} [options]\n * @param {boolean} [options.combine=false]\n * @return {number|array}\n * @public\n */\n\nreq.range = function range(size, options) {\n  var range = this.get('Range');\n  if (!range) return;\n  return parseRange(size, range, options);\n};\n\n/**\n * Return the value of param `name` when present or `defaultValue`.\n *\n *  - Checks route placeholders, ex: _/user/:id_\n *  - Checks body params, ex: id=12, {\"id\":12}\n *  - Checks query string params, ex: ?id=12\n *\n * To utilize request bodies, `req.body`\n * should be an object. This can be done by using\n * the `bodyParser()` middleware.\n *\n * @param {String} name\n * @param {Mixed} [defaultValue]\n * @return {String}\n * @public\n */\n\nreq.param = function param(name, defaultValue) {\n  var params = this.params || {};\n  var body = this.body || {};\n  var query = this.query || {};\n\n  var args = arguments.length === 1\n    ? 'name'\n    : 'name, default';\n  deprecate('req.param(' + args + '): Use req.params, req.body, or req.query instead');\n\n  if (null != params[name] && params.hasOwnProperty(name)) return params[name];\n  if (null != body[name]) return body[name];\n  if (null != query[name]) return query[name];\n\n  return defaultValue;\n};\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains the given mime `type`.\n *\n * Examples:\n *\n *      // With Content-Type: text/html; charset=utf-8\n *      req.is('html');\n *      req.is('text/html');\n *      req.is('text/*');\n *      // => true\n *\n *      // When Content-Type is application/json\n *      req.is('json');\n *      req.is('application/json');\n *      req.is('application/*');\n *      // => true\n *\n *      req.is('html');\n *      // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nreq.is = function is(types) {\n  var arr = types;\n\n  // support flattened arguments\n  if (!Array.isArray(types)) {\n    arr = new Array(arguments.length);\n    for (var i = 0; i < arr.length; i++) {\n      arr[i] = arguments[i];\n    }\n  }\n\n  return typeis(this, arr);\n};\n\n/**\n * Return the protocol string \"http\" or \"https\"\n * when requested with TLS. When the \"trust proxy\"\n * setting trusts the socket address, the\n * \"X-Forwarded-Proto\" header field will be trusted\n * and used if present.\n *\n * If you're running behind a reverse proxy that\n * supplies https for you this may be enabled.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'protocol', function protocol(){\n  var proto = this.connection.encrypted\n    ? 'https'\n    : 'http';\n  var trust = this.app.get('trust proxy fn');\n\n  if (!trust(this.connection.remoteAddress, 0)) {\n    return proto;\n  }\n\n  // Note: X-Forwarded-Proto is normally only ever a\n  //       single value, but this is to be safe.\n  var header = this.get('X-Forwarded-Proto') || proto\n  var index = header.indexOf(',')\n\n  return index !== -1\n    ? header.substring(0, index).trim()\n    : header.trim()\n});\n\n/**\n * Short-hand for:\n *\n *    req.protocol === 'https'\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'secure', function secure(){\n  return this.protocol === 'https';\n});\n\n/**\n * Return the remote address from the trusted proxy.\n *\n * The is the remote address on the socket unless\n * \"trust proxy\" is set.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'ip', function ip(){\n  var trust = this.app.get('trust proxy fn');\n  return proxyaddr(this, trust);\n});\n\n/**\n * When \"trust proxy\" is set, trusted proxy addresses + client.\n *\n * For example if the value were \"client, proxy1, proxy2\"\n * you would receive the array `[\"client\", \"proxy1\", \"proxy2\"]`\n * where \"proxy2\" is the furthest down-stream and \"proxy1\" and\n * \"proxy2\" were trusted.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req, 'ips', function ips() {\n  var trust = this.app.get('trust proxy fn');\n  var addrs = proxyaddr.all(this, trust);\n\n  // reverse the order (to farthest -> closest)\n  // and remove socket address\n  addrs.reverse().pop()\n\n  return addrs\n});\n\n/**\n * Return subdomains as an array.\n *\n * Subdomains are the dot-separated parts of the host before the main domain of\n * the app. By default, the domain of the app is assumed to be the last two\n * parts of the host. This can be changed by setting \"subdomain offset\".\n *\n * For example, if the domain is \"tobi.ferrets.example.com\":\n * If \"subdomain offset\" is not set, req.subdomains is `[\"ferrets\", \"tobi\"]`.\n * If \"subdomain offset\" is 3, req.subdomains is `[\"tobi\"]`.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req, 'subdomains', function subdomains() {\n  var hostname = this.hostname;\n\n  if (!hostname) return [];\n\n  var offset = this.app.get('subdomain offset');\n  var subdomains = !isIP(hostname)\n    ? hostname.split('.').reverse()\n    : [hostname];\n\n  return subdomains.slice(offset);\n});\n\n/**\n * Short-hand for `url.parse(req.url).pathname`.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'path', function path() {\n  return parse(this).pathname;\n});\n\n/**\n * Parse the \"Host\" header field to a hostname.\n *\n * When the \"trust proxy\" setting trusts the socket\n * address, the \"X-Forwarded-Host\" header field will\n * be trusted.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'hostname', function hostname(){\n  var trust = this.app.get('trust proxy fn');\n  var host = this.get('X-Forwarded-Host');\n\n  if (!host || !trust(this.connection.remoteAddress, 0)) {\n    host = this.get('Host');\n  } else if (host.indexOf(',') !== -1) {\n    // Note: X-Forwarded-Host is normally only ever a\n    //       single value, but this is to be safe.\n    host = host.substring(0, host.indexOf(',')).trimRight()\n  }\n\n  if (!host) return;\n\n  // IPv6 literal support\n  var offset = host[0] === '['\n    ? host.indexOf(']') + 1\n    : 0;\n  var index = host.indexOf(':', offset);\n\n  return index !== -1\n    ? host.substring(0, index)\n    : host;\n});\n\n// TODO: change req.host to return host in next major\n\ndefineGetter(req, 'host', deprecate.function(function host(){\n  return this.hostname;\n}, 'req.host: Use req.hostname instead'));\n\n/**\n * Check if the request is fresh, aka\n * Last-Modified and/or the ETag\n * still match.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'fresh', function(){\n  var method = this.method;\n  var res = this.res\n  var status = res.statusCode\n\n  // GET or HEAD for weak freshness validation only\n  if ('GET' !== method && 'HEAD' !== method) return false;\n\n  // 2xx or 304 as per rfc2616 14.26\n  if ((status >= 200 && status < 300) || 304 === status) {\n    return fresh(this.headers, {\n      'etag': res.get('ETag'),\n      'last-modified': res.get('Last-Modified')\n    })\n  }\n\n  return false;\n});\n\n/**\n * Check if the request is stale, aka\n * \"Last-Modified\" and / or the \"ETag\" for the\n * resource has changed.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'stale', function stale(){\n  return !this.fresh;\n});\n\n/**\n * Check if the request was an _XMLHttpRequest_.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'xhr', function xhr(){\n  var val = this.get('X-Requested-With') || '';\n  return val.toLowerCase() === 'xmlhttprequest';\n});\n\n/**\n * Helper function for creating a getter on an object.\n *\n * @param {Object} obj\n * @param {String} name\n * @param {Function} getter\n * @private\n */\nfunction defineGetter(obj, name, getter) {\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: true,\n    get: getter\n  });\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\express\\lib\\request.js",
    "RelativePath": "tools\\backend\\node_modules\\express\\lib\\request.js"
  },
  {
    "Content": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar createError = require('http-errors')\nvar deprecate = require('depd')('express');\nvar encodeUrl = require('encodeurl');\nvar escapeHtml = require('escape-html');\nvar http = require('http');\nvar isAbsolute = require('./utils').isAbsolute;\nvar onFinished = require('on-finished');\nvar path = require('path');\nvar statuses = require('statuses')\nvar merge = require('utils-merge');\nvar sign = require('cookie-signature').sign;\nvar normalizeType = require('./utils').normalizeType;\nvar normalizeTypes = require('./utils').normalizeTypes;\nvar setCharset = require('./utils').setCharset;\nvar cookie = require('cookie');\nvar send = require('send');\nvar extname = path.extname;\nvar mime = send.mime;\nvar resolve = path.resolve;\nvar vary = require('vary');\n\n/**\n * Response prototype.\n * @public\n */\n\nvar res = Object.create(http.ServerResponse.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = res\n\n/**\n * Module variables.\n * @private\n */\n\nvar charsetRegExp = /;\\s*charset\\s*=/;\n\n/**\n * Set status `code`.\n *\n * @param {Number} code\n * @return {ServerResponse}\n * @public\n */\n\nres.status = function status(code) {\n  if ((typeof code === 'string' || Math.floor(code) !== code) && code > 99 && code < 1000) {\n    deprecate('res.status(' + JSON.stringify(code) + '): use res.status(' + Math.floor(code) + ') instead')\n  }\n  this.statusCode = code;\n  return this;\n};\n\n/**\n * Set Link header field with the given `links`.\n *\n * Examples:\n *\n *    res.links({\n *      next: 'http://api.example.com/users?page=2',\n *      last: 'http://api.example.com/users?page=5'\n *    });\n *\n * @param {Object} links\n * @return {ServerResponse}\n * @public\n */\n\nres.links = function(links){\n  var link = this.get('Link') || '';\n  if (link) link += ', ';\n  return this.set('Link', link + Object.keys(links).map(function(rel){\n    return '<' + links[rel] + '>; rel=\"' + rel + '\"';\n  }).join(', '));\n};\n\n/**\n * Send a response.\n *\n * Examples:\n *\n *     res.send(Buffer.from('wahoo'));\n *     res.send({ some: 'json' });\n *     res.send('<p>some html</p>');\n *\n * @param {string|number|boolean|object|Buffer} body\n * @public\n */\n\nres.send = function send(body) {\n  var chunk = body;\n  var encoding;\n  var req = this.req;\n  var type;\n\n  // settings\n  var app = this.app;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.send(body, status) backwards compat\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\n      deprecate('res.send(body, status): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.send(status, body): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[0];\n      chunk = arguments[1];\n    }\n  }\n\n  // disambiguate res.send(status) and res.send(status, num)\n  if (typeof chunk === 'number' && arguments.length === 1) {\n    // res.send(status) will set status message as text string\n    if (!this.get('Content-Type')) {\n      this.type('txt');\n    }\n\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\n    this.statusCode = chunk;\n    chunk = statuses.message[chunk]\n  }\n\n  switch (typeof chunk) {\n    // string defaulting to html\n    case 'string':\n      if (!this.get('Content-Type')) {\n        this.type('html');\n      }\n      break;\n    case 'boolean':\n    case 'number':\n    case 'object':\n      if (chunk === null) {\n        chunk = '';\n      } else if (Buffer.isBuffer(chunk)) {\n        if (!this.get('Content-Type')) {\n          this.type('bin');\n        }\n      } else {\n        return this.json(chunk);\n      }\n      break;\n  }\n\n  // write strings in utf-8\n  if (typeof chunk === 'string') {\n    encoding = 'utf8';\n    type = this.get('Content-Type');\n\n    // reflect this in content-type\n    if (typeof type === 'string') {\n      this.set('Content-Type', setCharset(type, 'utf-8'));\n    }\n  }\n\n  // determine if ETag should be generated\n  var etagFn = app.get('etag fn')\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'\n\n  // populate Content-Length\n  var len\n  if (chunk !== undefined) {\n    if (Buffer.isBuffer(chunk)) {\n      // get length of Buffer\n      len = chunk.length\n    } else if (!generateETag && chunk.length < 1000) {\n      // just calculate length when no ETag + small chunk\n      len = Buffer.byteLength(chunk, encoding)\n    } else {\n      // convert chunk to Buffer and calculate\n      chunk = Buffer.from(chunk, encoding)\n      encoding = undefined;\n      len = chunk.length\n    }\n\n    this.set('Content-Length', len);\n  }\n\n  // populate ETag\n  var etag;\n  if (generateETag && len !== undefined) {\n    if ((etag = etagFn(chunk, encoding))) {\n      this.set('ETag', etag);\n    }\n  }\n\n  // freshness\n  if (req.fresh) this.statusCode = 304;\n\n  // strip irrelevant headers\n  if (204 === this.statusCode || 304 === this.statusCode) {\n    this.removeHeader('Content-Type');\n    this.removeHeader('Content-Length');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n\n  // alter headers for 205\n  if (this.statusCode === 205) {\n    this.set('Content-Length', '0')\n    this.removeHeader('Transfer-Encoding')\n    chunk = ''\n  }\n\n  if (req.method === 'HEAD') {\n    // skip body for HEAD\n    this.end();\n  } else {\n    // respond\n    this.end(chunk, encoding);\n  }\n\n  return this;\n};\n\n/**\n * Send JSON response.\n *\n * Examples:\n *\n *     res.json(null);\n *     res.json({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.json = function json(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.json(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.json(status, obj): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('Content-Type', 'application/json');\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send JSON response with JSONP callback support.\n *\n * Examples:\n *\n *     res.jsonp(null);\n *     res.jsonp({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.jsonp = function jsonp(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.jsonp(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.jsonp(obj, status): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n  var callback = this.req.query[app.get('jsonp callback name')];\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'application/json');\n  }\n\n  // fixup callback\n  if (Array.isArray(callback)) {\n    callback = callback[0];\n  }\n\n  // jsonp\n  if (typeof callback === 'string' && callback.length !== 0) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'text/javascript');\n\n    // restrict callback charset\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, '');\n\n    if (body === undefined) {\n      // empty argument\n      body = ''\n    } else if (typeof body === 'string') {\n      // replace chars not allowed in JavaScript that are in JSON\n      body = body\n        .replace(/\\u2028/g, '\\\\u2028')\n        .replace(/\\u2029/g, '\\\\u2029')\n    }\n\n    // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\n    // the typeof check is just to reduce client error noise\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send given HTTP status code.\n *\n * Sets the response status to `statusCode` and the body of the\n * response to the standard description from node's http.STATUS_CODES\n * or the statusCode number if no description.\n *\n * Examples:\n *\n *     res.sendStatus(200);\n *\n * @param {number} statusCode\n * @public\n */\n\nres.sendStatus = function sendStatus(statusCode) {\n  var body = statuses.message[statusCode] || String(statusCode)\n\n  this.statusCode = statusCode;\n  this.type('txt');\n\n  return this.send(body);\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.headersSent`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendFile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendFile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendFile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendFile = function sendFile(path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  if (!path) {\n    throw new TypeError('path argument is required to res.sendFile');\n  }\n\n  if (typeof path !== 'string') {\n    throw new TypeError('path must be a string to res.sendFile')\n  }\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  if (!opts.root && !isAbsolute(path)) {\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\n  }\n\n  // create file stream\n  var pathname = encodeURI(path);\n  var file = send(req, pathname, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.headersSent`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendfile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendfile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendfile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendfile = function (path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // create file stream\n  var file = send(req, path, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\nres.sendfile = deprecate.function(res.sendfile,\n  'res.sendfile: Use res.sendFile instead');\n\n/**\n * Transfer the file at the given `path` as an attachment.\n *\n * Optionally providing an alternate attachment `filename`,\n * and optional callback `callback(err)`. The callback is invoked\n * when the data transfer is complete, or when an error has\n * occurred. Be sure to check `res.headersSent` if you plan to respond.\n *\n * Optionally providing an `options` object to use with `res.sendFile()`.\n * This function will set the `Content-Disposition` header, overriding\n * any `Content-Disposition` header passed as header options in order\n * to set the attachment and filename.\n *\n * This method uses `res.sendFile()`.\n *\n * @public\n */\n\nres.download = function download (path, filename, options, callback) {\n  var done = callback;\n  var name = filename;\n  var opts = options || null\n\n  // support function as second or third arg\n  if (typeof filename === 'function') {\n    done = filename;\n    name = null;\n    opts = null\n  } else if (typeof options === 'function') {\n    done = options\n    opts = null\n  }\n\n  // support optional filename, where options may be in it's place\n  if (typeof filename === 'object' &&\n    (typeof options === 'function' || options === undefined)) {\n    name = null\n    opts = filename\n  }\n\n  // set Content-Disposition when file is sent\n  var headers = {\n    'Content-Disposition': contentDisposition(name || path)\n  };\n\n  // merge user-provided headers\n  if (opts && opts.headers) {\n    var keys = Object.keys(opts.headers)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      if (key.toLowerCase() !== 'content-disposition') {\n        headers[key] = opts.headers[key]\n      }\n    }\n  }\n\n  // merge user-provided options\n  opts = Object.create(opts)\n  opts.headers = headers\n\n  // Resolve the full path for sendFile\n  var fullPath = !opts.root\n    ? resolve(path)\n    : path\n\n  // send file\n  return this.sendFile(fullPath, opts, done)\n};\n\n/**\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\n *\n * Examples:\n *\n *     res.type('.html');\n *     res.type('html');\n *     res.type('json');\n *     res.type('application/json');\n *     res.type('png');\n *\n * @param {String} type\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.contentType =\nres.type = function contentType(type) {\n  var ct = type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type;\n\n  return this.set('Content-Type', ct);\n};\n\n/**\n * Respond to the Acceptable formats using an `obj`\n * of mime-type callbacks.\n *\n * This method uses `req.accepted`, an array of\n * acceptable types ordered by their quality values.\n * When \"Accept\" is not present the _first_ callback\n * is invoked, otherwise the first match is used. When\n * no match is performed the server responds with\n * 406 \"Not Acceptable\".\n *\n * Content-Type is set for you, however if you choose\n * you may alter this within the callback using `res.type()`\n * or `res.set('Content-Type', ...)`.\n *\n *    res.format({\n *      'text/plain': function(){\n *        res.send('hey');\n *      },\n *\n *      'text/html': function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      'application/json': function () {\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * In addition to canonicalized MIME types you may\n * also use extnames mapped to these types:\n *\n *    res.format({\n *      text: function(){\n *        res.send('hey');\n *      },\n *\n *      html: function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      json: function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * By default Express passes an `Error`\n * with a `.status` of 406 to `next(err)`\n * if a match is not made. If you provide\n * a `.default` callback it will be invoked\n * instead.\n *\n * @param {Object} obj\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.format = function(obj){\n  var req = this.req;\n  var next = req.next;\n\n  var keys = Object.keys(obj)\n    .filter(function (v) { return v !== 'default' })\n\n  var key = keys.length > 0\n    ? req.accepts(keys)\n    : false;\n\n  this.vary(\"Accept\");\n\n  if (key) {\n    this.set('Content-Type', normalizeType(key).value);\n    obj[key](req, this, next);\n  } else if (obj.default) {\n    obj.default(req, this, next)\n  } else {\n    next(createError(406, {\n      types: normalizeTypes(keys).map(function (o) { return o.value })\n    }))\n  }\n\n  return this;\n};\n\n/**\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n *\n * @param {String} filename\n * @return {ServerResponse}\n * @public\n */\n\nres.attachment = function attachment(filename) {\n  if (filename) {\n    this.type(extname(filename));\n  }\n\n  this.set('Content-Disposition', contentDisposition(filename));\n\n  return this;\n};\n\n/**\n * Append additional header `field` with value `val`.\n *\n * Example:\n *\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\n *    res.append('Warning', '199 Miscellaneous warning');\n *\n * @param {String} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.append = function append(field, val) {\n  var prev = this.get(field);\n  var value = val;\n\n  if (prev) {\n    // concat the new and prev vals\n    value = Array.isArray(prev) ? prev.concat(val)\n      : Array.isArray(val) ? [prev].concat(val)\n        : [prev, val]\n  }\n\n  return this.set(field, value);\n};\n\n/**\n * Set header `field` to `val`, or pass\n * an object of header fields.\n *\n * Examples:\n *\n *    res.set('Foo', ['bar', 'baz']);\n *    res.set('Accept', 'application/json');\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\n *\n * Aliased as `res.header()`.\n *\n * @param {String|Object} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.set =\nres.header = function header(field, val) {\n  if (arguments.length === 2) {\n    var value = Array.isArray(val)\n      ? val.map(String)\n      : String(val);\n\n    // add charset to content-type\n    if (field.toLowerCase() === 'content-type') {\n      if (Array.isArray(value)) {\n        throw new TypeError('Content-Type cannot be set to an Array');\n      }\n      if (!charsetRegExp.test(value)) {\n        var charset = mime.charsets.lookup(value.split(';')[0]);\n        if (charset) value += '; charset=' + charset.toLowerCase();\n      }\n    }\n\n    this.setHeader(field, value);\n  } else {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n  }\n  return this;\n};\n\n/**\n * Get value for header `field`.\n *\n * @param {String} field\n * @return {String}\n * @public\n */\n\nres.get = function(field){\n  return this.getHeader(field);\n};\n\n/**\n * Clear cookie `name`.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.clearCookie = function clearCookie(name, options) {\n  if (options) {\n    if (options.maxAge) {\n      deprecate('res.clearCookie: Passing \"options.maxAge\" is deprecated. In v5.0.0 of Express, this option will be ignored, as res.clearCookie will automatically set cookies to expire immediately. Please update your code to omit this option.');\n    }\n    if (options.expires) {\n      deprecate('res.clearCookie: Passing \"options.expires\" is deprecated. In v5.0.0 of Express, this option will be ignored, as res.clearCookie will automatically set cookies to expire immediately. Please update your code to omit this option.');\n    }\n  }\n  var opts = merge({ expires: new Date(1), path: '/' }, options);\n\n  return this.cookie(name, '', opts);\n};\n\n/**\n * Set cookie `name` to `value`, with the given `options`.\n *\n * Options:\n *\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\n *    - `signed`   sign the cookie\n *    - `path`     defaults to \"/\"\n *\n * Examples:\n *\n *    // \"Remember Me\" for 15 minutes\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\n *\n *    // same as above\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\n *\n * @param {String} name\n * @param {String|Object} value\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.cookie = function (name, value, options) {\n  var opts = merge({}, options);\n  var secret = this.req.secret;\n  var signed = opts.signed;\n\n  if (signed && !secret) {\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\n  }\n\n  var val = typeof value === 'object'\n    ? 'j:' + JSON.stringify(value)\n    : String(value);\n\n  if (signed) {\n    val = 's:' + sign(val, secret);\n  }\n\n  if (opts.maxAge != null) {\n    var maxAge = opts.maxAge - 0\n\n    if (!isNaN(maxAge)) {\n      opts.expires = new Date(Date.now() + maxAge)\n      opts.maxAge = Math.floor(maxAge / 1000)\n    }\n  }\n\n  if (opts.path == null) {\n    opts.path = '/';\n  }\n\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\n\n  return this;\n};\n\n/**\n * Set the location header to `url`.\n *\n * The given `url` can also be \"back\", which redirects\n * to the _Referrer_ or _Referer_ headers or \"/\".\n *\n * Examples:\n *\n *    res.location('/foo/bar').;\n *    res.location('http://example.com');\n *    res.location('../login');\n *\n * @param {String} url\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.location = function location(url) {\n  var loc;\n\n  // \"back\" is an alias for the referrer\n  if (url === 'back') {\n    deprecate('res.location(\"back\"): use res.location(req.get(\"Referrer\") || \"/\") and refer to https://dub.sh/security-redirect for best practices');\n    loc = this.req.get('Referrer') || '/';\n  } else {\n    loc = String(url);\n  }\n\n  return this.set('Location', encodeUrl(loc));\n};\n\n/**\n * Redirect to the given `url` with optional response `status`\n * defaulting to 302.\n *\n * The resulting `url` is determined by `res.location()`, so\n * it will play nicely with mounted apps, relative paths,\n * `\"back\"` etc.\n *\n * Examples:\n *\n *    res.redirect('/foo/bar');\n *    res.redirect('http://example.com');\n *    res.redirect(301, 'http://example.com');\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\n *\n * @public\n */\n\nres.redirect = function redirect(url) {\n  var address = url;\n  var body;\n  var status = 302;\n\n  // allow status / url\n  if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number') {\n      status = arguments[0];\n      address = arguments[1];\n    } else {\n      deprecate('res.redirect(url, status): Use res.redirect(status, url) instead');\n      status = arguments[1];\n    }\n  }\n\n  // Set location header\n  address = this.location(address).get('Location');\n\n  // Support text/{plain,html} by default\n  this.format({\n    text: function(){\n      body = statuses.message[status] + '. Redirecting to ' + address\n    },\n\n    html: function(){\n      var u = escapeHtml(address);\n      body = '<p>' + statuses.message[status] + '. Redirecting to ' + u + '</p>'\n    },\n\n    default: function(){\n      body = '';\n    }\n  });\n\n  // Respond\n  this.statusCode = status;\n  this.set('Content-Length', Buffer.byteLength(body));\n\n  if (this.req.method === 'HEAD') {\n    this.end();\n  } else {\n    this.end(body);\n  }\n};\n\n/**\n * Add `field` to Vary. If already present in the Vary set, then\n * this call is simply ignored.\n *\n * @param {Array|String} field\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.vary = function(field){\n  // checks for back-compat\n  if (!field || (Array.isArray(field) && !field.length)) {\n    deprecate('res.vary(): Provide a field name');\n    return this;\n  }\n\n  vary(this, field);\n\n  return this;\n};\n\n/**\n * Render `view` with the given `options` and optional callback `fn`.\n * When a callback function is given a response will _not_ be made\n * automatically, otherwise a response of _200_ and _text/html_ is given.\n *\n * Options:\n *\n *  - `cache`     boolean hinting to the engine it should cache\n *  - `filename`  filename of the view being rendered\n *\n * @public\n */\n\nres.render = function render(view, options, callback) {\n  var app = this.req.app;\n  var done = callback;\n  var opts = options || {};\n  var req = this.req;\n  var self = this;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge res.locals\n  opts._locals = self.locals;\n\n  // default callback to respond\n  done = done || function (err, str) {\n    if (err) return req.next(err);\n    self.send(str);\n  };\n\n  // render\n  app.render(view, opts, done);\n};\n\n// pipe the send file stream\nfunction sendfile(res, file, options, callback) {\n  var done = false;\n  var streaming;\n\n  // request aborted\n  function onaborted() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('Request aborted');\n    err.code = 'ECONNABORTED';\n    callback(err);\n  }\n\n  // directory\n  function ondirectory() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('EISDIR, read');\n    err.code = 'EISDIR';\n    callback(err);\n  }\n\n  // errors\n  function onerror(err) {\n    if (done) return;\n    done = true;\n    callback(err);\n  }\n\n  // ended\n  function onend() {\n    if (done) return;\n    done = true;\n    callback();\n  }\n\n  // file\n  function onfile() {\n    streaming = false;\n  }\n\n  // finished\n  function onfinish(err) {\n    if (err && err.code === 'ECONNRESET') return onaborted();\n    if (err) return onerror(err);\n    if (done) return;\n\n    setImmediate(function () {\n      if (streaming !== false && !done) {\n        onaborted();\n        return;\n      }\n\n      if (done) return;\n      done = true;\n      callback();\n    });\n  }\n\n  // streaming\n  function onstream() {\n    streaming = true;\n  }\n\n  file.on('directory', ondirectory);\n  file.on('end', onend);\n  file.on('error', onerror);\n  file.on('file', onfile);\n  file.on('stream', onstream);\n  onFinished(res, onfinish);\n\n  if (options.headers) {\n    // set headers on successful transfer\n    file.on('headers', function headers(res) {\n      var obj = options.headers;\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        res.setHeader(k, obj[k]);\n      }\n    });\n  }\n\n  // pipe\n  file.pipe(res);\n}\n\n/**\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\n * ability to escape characters that can trigger HTML sniffing.\n *\n * @param {*} value\n * @param {function} replacer\n * @param {number} spaces\n * @param {boolean} escape\n * @returns {string}\n * @private\n */\n\nfunction stringify (value, replacer, spaces, escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  var json = replacer || spaces\n    ? JSON.stringify(value, replacer, spaces)\n    : JSON.stringify(value);\n\n  if (escape && typeof json === 'string') {\n    json = json.replace(/[<>&]/g, function (c) {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return '\\\\u003c'\n        case 0x3e:\n          return '\\\\u003e'\n        case 0x26:\n          return '\\\\u0026'\n        /* istanbul ignore next: unreachable default */\n        default:\n          return c\n      }\n    })\n  }\n\n  return json\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\express\\lib\\response.js",
    "RelativePath": "tools\\backend\\node_modules\\express\\lib\\response.js"
  },
  {
    "Content": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @api private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar contentType = require('content-type');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar mime = require('send').mime;\nvar etag = require('etag');\nvar proxyaddr = require('proxy-addr');\nvar qs = require('qs');\nvar querystring = require('querystring');\n\n/**\n * Return strong ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.etag = createETagGenerator({ weak: false })\n\n/**\n * Return weak ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.wetag = createETagGenerator({ weak: true })\n\n/**\n * Check if `path` looks absolute.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nexports.isAbsolute = function(path){\n  if ('/' === path[0]) return true;\n  if (':' === path[1] && ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path\n  if ('\\\\\\\\' === path.substring(0, 2)) return true; // Microsoft Azure absolute path\n};\n\n/**\n * Flatten the given `arr`.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nexports.flatten = deprecate.function(flatten,\n  'utils.flatten: use array-flatten npm module instead');\n\n/**\n * Normalize the given `type`, for example \"html\" becomes \"text/html\".\n *\n * @param {String} type\n * @return {Object}\n * @api private\n */\n\nexports.normalizeType = function(type){\n  return ~type.indexOf('/')\n    ? acceptParams(type)\n    : { value: mime.lookup(type), params: {} };\n};\n\n/**\n * Normalize `types`, for example \"html\" becomes \"text/html\".\n *\n * @param {Array} types\n * @return {Array}\n * @api private\n */\n\nexports.normalizeTypes = function(types){\n  var ret = [];\n\n  for (var i = 0; i < types.length; ++i) {\n    ret.push(exports.normalizeType(types[i]));\n  }\n\n  return ret;\n};\n\n/**\n * Generate Content-Disposition header appropriate for the filename.\n * non-ascii filenames are urlencoded and a filename* parameter is added\n *\n * @param {String} filename\n * @return {String}\n * @api private\n */\n\nexports.contentDisposition = deprecate.function(contentDisposition,\n  'utils.contentDisposition: use content-disposition npm module instead');\n\n/**\n * Parse accept params `str` returning an\n * object with `.value`, `.quality` and `.params`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction acceptParams (str) {\n  var parts = str.split(/ *; */);\n  var ret = { value: parts[0], quality: 1, params: {} }\n\n  for (var i = 1; i < parts.length; ++i) {\n    var pms = parts[i].split(/ *= */);\n    if ('q' === pms[0]) {\n      ret.quality = parseFloat(pms[1]);\n    } else {\n      ret.params[pms[0]] = pms[1];\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compile \"etag\" value to function.\n *\n * @param  {Boolean|String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileETag = function(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n    case 'weak':\n      fn = exports.wetag;\n      break;\n    case false:\n      break;\n    case 'strong':\n      fn = exports.etag;\n      break;\n    default:\n      throw new TypeError('unknown value for etag function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"query parser\" value to function.\n *\n * @param  {String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileQueryParser = function compileQueryParser(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n    case 'simple':\n      fn = querystring.parse;\n      break;\n    case false:\n      fn = newObject;\n      break;\n    case 'extended':\n      fn = parseExtendedQueryString;\n      break;\n    default:\n      throw new TypeError('unknown value for query parser function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"proxy trust\" value to function.\n *\n * @param  {Boolean|String|Number|Array|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileTrust = function(val) {\n  if (typeof val === 'function') return val;\n\n  if (val === true) {\n    // Support plain true/false\n    return function(){ return true };\n  }\n\n  if (typeof val === 'number') {\n    // Support trusting hop count\n    return function(a, i){ return i < val };\n  }\n\n  if (typeof val === 'string') {\n    // Support comma-separated values\n    val = val.split(',')\n      .map(function (v) { return v.trim() })\n  }\n\n  return proxyaddr.compile(val || []);\n}\n\n/**\n * Set the charset in a given Content-Type string.\n *\n * @param {String} type\n * @param {String} charset\n * @return {String}\n * @api private\n */\n\nexports.setCharset = function setCharset(type, charset) {\n  if (!type || !charset) {\n    return type;\n  }\n\n  // parse type\n  var parsed = contentType.parse(type);\n\n  // set charset\n  parsed.parameters.charset = charset;\n\n  // format type\n  return contentType.format(parsed);\n};\n\n/**\n * Create an ETag generator function, generating ETags with\n * the given options.\n *\n * @param {object} options\n * @return {function}\n * @private\n */\n\nfunction createETagGenerator (options) {\n  return function generateETag (body, encoding) {\n    var buf = !Buffer.isBuffer(body)\n      ? Buffer.from(body, encoding)\n      : body\n\n    return etag(buf, options)\n  }\n}\n\n/**\n * Parse an extended query string with qs.\n *\n * @param {String} str\n * @return {Object}\n * @private\n */\n\nfunction parseExtendedQueryString(str) {\n  return qs.parse(str, {\n    allowPrototypes: true\n  });\n}\n\n/**\n * Return new empty object.\n *\n * @return {Object}\n * @api private\n */\n\nfunction newObject() {\n  return {};\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\express\\lib\\utils.js",
    "RelativePath": "tools\\backend\\node_modules\\express\\lib\\utils.js"
  },
  {
    "Content": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:view');\nvar path = require('path');\nvar fs = require('fs');\n\n/**\n * Module variables.\n * @private\n */\n\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar extname = path.extname;\nvar join = path.join;\nvar resolve = path.resolve;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = View;\n\n/**\n * Initialize a new `View` with the given `name`.\n *\n * Options:\n *\n *   - `defaultEngine` the default template engine name\n *   - `engines` template engine require() cache\n *   - `root` root path for view lookup\n *\n * @param {string} name\n * @param {object} options\n * @public\n */\n\nfunction View(name, options) {\n  var opts = options || {};\n\n  this.defaultEngine = opts.defaultEngine;\n  this.ext = extname(name);\n  this.name = name;\n  this.root = opts.root;\n\n  if (!this.ext && !this.defaultEngine) {\n    throw new Error('No default engine was specified and no extension was provided.');\n  }\n\n  var fileName = name;\n\n  if (!this.ext) {\n    // get extension from default engine name\n    this.ext = this.defaultEngine[0] !== '.'\n      ? '.' + this.defaultEngine\n      : this.defaultEngine;\n\n    fileName += this.ext;\n  }\n\n  if (!opts.engines[this.ext]) {\n    // load engine\n    var mod = this.ext.slice(1)\n    debug('require \"%s\"', mod)\n\n    // default engine export\n    var fn = require(mod).__express\n\n    if (typeof fn !== 'function') {\n      throw new Error('Module \"' + mod + '\" does not provide a view engine.')\n    }\n\n    opts.engines[this.ext] = fn\n  }\n\n  // store loaded engine\n  this.engine = opts.engines[this.ext];\n\n  // lookup path\n  this.path = this.lookup(fileName);\n}\n\n/**\n * Lookup view by the given `name`\n *\n * @param {string} name\n * @private\n */\n\nView.prototype.lookup = function lookup(name) {\n  var path;\n  var roots = [].concat(this.root);\n\n  debug('lookup \"%s\"', name);\n\n  for (var i = 0; i < roots.length && !path; i++) {\n    var root = roots[i];\n\n    // resolve the path\n    var loc = resolve(root, name);\n    var dir = dirname(loc);\n    var file = basename(loc);\n\n    // resolve the file\n    path = this.resolve(dir, file);\n  }\n\n  return path;\n};\n\n/**\n * Render with the given options.\n *\n * @param {object} options\n * @param {function} callback\n * @private\n */\n\nView.prototype.render = function render(options, callback) {\n  debug('render \"%s\"', this.path);\n  this.engine(this.path, options, callback);\n};\n\n/**\n * Resolve the file within the given directory.\n *\n * @param {string} dir\n * @param {string} file\n * @private\n */\n\nView.prototype.resolve = function resolve(dir, file) {\n  var ext = this.ext;\n\n  // <path>.<ext>\n  var path = join(dir, file);\n  var stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n\n  // <path>/index.<ext>\n  path = join(dir, basename(file, ext), 'index' + ext);\n  stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n};\n\n/**\n * Return a stat, maybe.\n *\n * @param {string} path\n * @return {fs.Stats}\n * @private\n */\n\nfunction tryStat(path) {\n  debug('stat \"%s\"', path);\n\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return undefined;\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\express\\lib\\view.js",
    "RelativePath": "tools\\backend\\node_modules\\express\\lib\\view.js"
  },
  {
    "Content": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Initialization middleware, exposing the\n * request and response to each other, as well\n * as defaulting the X-Powered-By header field.\n *\n * @param {Function} app\n * @return {Function}\n * @api private\n */\n\nexports.init = function(app){\n  return function expressInit(req, res, next){\n    if (app.enabled('x-powered-by')) res.setHeader('X-Powered-By', 'Express');\n    req.res = res;\n    res.req = req;\n    req.next = next;\n\n    setPrototypeOf(req, app.request)\n    setPrototypeOf(res, app.response)\n\n    res.locals = res.locals || Object.create(null);\n\n    next();\n  };\n};\n\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\express\\lib\\middleware\\init.js",
    "RelativePath": "tools\\backend\\node_modules\\express\\lib\\middleware\\init.js"
  },
  {
    "Content": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar merge = require('utils-merge')\nvar parseUrl = require('parseurl');\nvar qs = require('qs');\n\n/**\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function query(options) {\n  var opts = merge({}, options)\n  var queryparse = qs.parse;\n\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n\n  return function query(req, res, next){\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val, opts);\n    }\n\n    next();\n  };\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\express\\lib\\middleware\\query.js",
    "RelativePath": "tools\\backend\\node_modules\\express\\lib\\middleware\\query.js"
  },
  {
    "Content": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Route = require('./route');\nvar Layer = require('./layer');\nvar methods = require('methods');\nvar mixin = require('utils-merge');\nvar debug = require('debug')('express:router');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar parseUrl = require('parseurl');\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Module variables.\n * @private\n */\n\nvar objectRegExp = /^\\[object (\\S+)\\]$/;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Initialize a new `Router` with the given `options`.\n *\n * @param {Object} [options]\n * @return {Router} which is a callable function\n * @public\n */\n\nvar proto = module.exports = function(options) {\n  var opts = options || {};\n\n  function router(req, res, next) {\n    router.handle(req, res, next);\n  }\n\n  // mixin Router class functions\n  setPrototypeOf(router, proto)\n\n  router.params = {};\n  router._params = [];\n  router.caseSensitive = opts.caseSensitive;\n  router.mergeParams = opts.mergeParams;\n  router.strict = opts.strict;\n  router.stack = [];\n\n  return router;\n};\n\n/**\n * Map the given param placeholder `name`(s) to the given callback.\n *\n * Parameter mapping is used to provide pre-conditions to routes\n * which use normalized placeholders. For example a _:user_id_ parameter\n * could automatically load a user's information from the database without\n * any additional code,\n *\n * The callback uses the same signature as middleware, the only difference\n * being that the value of the placeholder is passed, in this case the _id_\n * of the user. Once the `next()` function is invoked, just like middleware\n * it will continue on to execute the route, or subsequent parameter functions.\n *\n * Just like in middleware, you must either respond to the request or call next\n * to avoid stalling the request.\n *\n *  app.param('user_id', function(req, res, next, id){\n *    User.find(id, function(err, user){\n *      if (err) {\n *        return next(err);\n *      } else if (!user) {\n *        return next(new Error('failed to load user'));\n *      }\n *      req.user = user;\n *      next();\n *    });\n *  });\n *\n * @param {String} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\nproto.param = function param(name, fn) {\n  // param logic\n  if (typeof name === 'function') {\n    deprecate('router.param(fn): Refactor to use path params');\n    this._params.push(name);\n    return;\n  }\n\n  // apply param functions\n  var params = this._params;\n  var len = params.length;\n  var ret;\n\n  if (name[0] === ':') {\n    deprecate('router.param(' + JSON.stringify(name) + ', fn): Use router.param(' + JSON.stringify(name.slice(1)) + ', fn) instead')\n    name = name.slice(1)\n  }\n\n  for (var i = 0; i < len; ++i) {\n    if (ret = params[i](name, fn)) {\n      fn = ret;\n    }\n  }\n\n  // ensure we end up with a\n  // middleware function\n  if ('function' !== typeof fn) {\n    throw new Error('invalid param() call for ' + name + ', got ' + fn);\n  }\n\n  (this.params[name] = this.params[name] || []).push(fn);\n  return this;\n};\n\n/**\n * Dispatch a req, res into the router.\n * @private\n */\n\nproto.handle = function handle(req, res, out) {\n  var self = this;\n\n  debug('dispatching %s %s', req.method, req.url);\n\n  var idx = 0;\n  var protohost = getProtohost(req.url) || ''\n  var removed = '';\n  var slashAdded = false;\n  var sync = 0\n  var paramcalled = {};\n\n  // store options for OPTIONS request\n  // only used if OPTIONS request\n  var options = [];\n\n  // middleware and routes\n  var stack = self.stack;\n\n  // manage inter-router variables\n  var parentParams = req.params;\n  var parentUrl = req.baseUrl || '';\n  var done = restore(out, req, 'baseUrl', 'next', 'params');\n\n  // setup next layer\n  req.next = next;\n\n  // for options requests, respond with a default if nothing else responds\n  if (req.method === 'OPTIONS') {\n    done = wrap(done, function(old, err) {\n      if (err || options.length === 0) return old(err);\n      sendOptionsResponse(res, options, old);\n    });\n  }\n\n  // setup basic req values\n  req.baseUrl = parentUrl;\n  req.originalUrl = req.originalUrl || req.url;\n\n  next();\n\n  function next(err) {\n    var layerError = err === 'route'\n      ? null\n      : err;\n\n    // remove added slash\n    if (slashAdded) {\n      req.url = req.url.slice(1)\n      slashAdded = false;\n    }\n\n    // restore altered req.url\n    if (removed.length !== 0) {\n      req.baseUrl = parentUrl;\n      req.url = protohost + removed + req.url.slice(protohost.length)\n      removed = '';\n    }\n\n    // signal to exit router\n    if (layerError === 'router') {\n      setImmediate(done, null)\n      return\n    }\n\n    // no more matching layers\n    if (idx >= stack.length) {\n      setImmediate(done, layerError);\n      return;\n    }\n\n    // max sync stack\n    if (++sync > 100) {\n      return setImmediate(next, err)\n    }\n\n    // get pathname of request\n    var path = getPathname(req);\n\n    if (path == null) {\n      return done(layerError);\n    }\n\n    // find next matching layer\n    var layer;\n    var match;\n    var route;\n\n    while (match !== true && idx < stack.length) {\n      layer = stack[idx++];\n      match = matchLayer(layer, path);\n      route = layer.route;\n\n      if (typeof match !== 'boolean') {\n        // hold on to layerError\n        layerError = layerError || match;\n      }\n\n      if (match !== true) {\n        continue;\n      }\n\n      if (!route) {\n        // process non-route handlers normally\n        continue;\n      }\n\n      if (layerError) {\n        // routes do not match with a pending error\n        match = false;\n        continue;\n      }\n\n      var method = req.method;\n      var has_method = route._handles_method(method);\n\n      // build up automatic options response\n      if (!has_method && method === 'OPTIONS') {\n        appendMethods(options, route._options());\n      }\n\n      // don't even bother matching route\n      if (!has_method && method !== 'HEAD') {\n        match = false;\n      }\n    }\n\n    // no match\n    if (match !== true) {\n      return done(layerError);\n    }\n\n    // store route for dispatch on change\n    if (route) {\n      req.route = route;\n    }\n\n    // Capture one-time layer values\n    req.params = self.mergeParams\n      ? mergeParams(layer.params, parentParams)\n      : layer.params;\n    var layerPath = layer.path;\n\n    // this should be done for the layer\n    self.process_params(layer, paramcalled, req, res, function (err) {\n      if (err) {\n        next(layerError || err)\n      } else if (route) {\n        layer.handle_request(req, res, next)\n      } else {\n        trim_prefix(layer, layerError, layerPath, path)\n      }\n\n      sync = 0\n    });\n  }\n\n  function trim_prefix(layer, layerError, layerPath, path) {\n    if (layerPath.length !== 0) {\n      // Validate path is a prefix match\n      if (layerPath !== path.slice(0, layerPath.length)) {\n        next(layerError)\n        return\n      }\n\n      // Validate path breaks on a path separator\n      var c = path[layerPath.length]\n      if (c && c !== '/' && c !== '.') return next(layerError)\n\n      // Trim off the part of the url that matches the route\n      // middleware (.use stuff) needs to have the path stripped\n      debug('trim prefix (%s) from url %s', layerPath, req.url);\n      removed = layerPath;\n      req.url = protohost + req.url.slice(protohost.length + removed.length)\n\n      // Ensure leading slash\n      if (!protohost && req.url[0] !== '/') {\n        req.url = '/' + req.url;\n        slashAdded = true;\n      }\n\n      // Setup base URL (no trailing slash)\n      req.baseUrl = parentUrl + (removed[removed.length - 1] === '/'\n        ? removed.substring(0, removed.length - 1)\n        : removed);\n    }\n\n    debug('%s %s : %s', layer.name, layerPath, req.originalUrl);\n\n    if (layerError) {\n      layer.handle_error(layerError, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n\n/**\n * Process any parameters for the layer.\n * @private\n */\n\nproto.process_params = function process_params(layer, called, req, res, done) {\n  var params = this.params;\n\n  // captured parameters from the layer, keys and values\n  var keys = layer.keys;\n\n  // fast track\n  if (!keys || keys.length === 0) {\n    return done();\n  }\n\n  var i = 0;\n  var name;\n  var paramIndex = 0;\n  var key;\n  var paramVal;\n  var paramCallbacks;\n  var paramCalled;\n\n  // process params in order\n  // param callbacks can be async\n  function param(err) {\n    if (err) {\n      return done(err);\n    }\n\n    if (i >= keys.length ) {\n      return done();\n    }\n\n    paramIndex = 0;\n    key = keys[i++];\n    name = key.name;\n    paramVal = req.params[name];\n    paramCallbacks = params[name];\n    paramCalled = called[name];\n\n    if (paramVal === undefined || !paramCallbacks) {\n      return param();\n    }\n\n    // param previously called with same value or error occurred\n    if (paramCalled && (paramCalled.match === paramVal\n      || (paramCalled.error && paramCalled.error !== 'route'))) {\n      // restore value\n      req.params[name] = paramCalled.value;\n\n      // next param\n      return param(paramCalled.error);\n    }\n\n    called[name] = paramCalled = {\n      error: null,\n      match: paramVal,\n      value: paramVal\n    };\n\n    paramCallback();\n  }\n\n  // single param callbacks\n  function paramCallback(err) {\n    var fn = paramCallbacks[paramIndex++];\n\n    // store updated value\n    paramCalled.value = req.params[key.name];\n\n    if (err) {\n      // store error\n      paramCalled.error = err;\n      param(err);\n      return;\n    }\n\n    if (!fn) return param();\n\n    try {\n      fn(req, res, paramCallback, paramVal, key.name);\n    } catch (e) {\n      paramCallback(e);\n    }\n  }\n\n  param();\n};\n\n/**\n * Use the given middleware function, with optional path, defaulting to \"/\".\n *\n * Use (like `.all`) will run for any http METHOD, but it will not add\n * handlers for those methods so OPTIONS requests will not consider `.use`\n * functions even if they could respond.\n *\n * The other difference is that _route_ path is stripped and not visible\n * to the handler function. The main effect of this feature is that mounted\n * handlers can operate without any code changes regardless of the \"prefix\"\n * pathname.\n *\n * @public\n */\n\nproto.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate router.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var callbacks = flatten(slice.call(arguments, offset));\n\n  if (callbacks.length === 0) {\n    throw new TypeError('Router.use() requires a middleware function')\n  }\n\n  for (var i = 0; i < callbacks.length; i++) {\n    var fn = callbacks[i];\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('Router.use() requires a middleware function but got a ' + gettype(fn))\n    }\n\n    // add the middleware\n    debug('use %o %s', path, fn.name || '<anonymous>')\n\n    var layer = new Layer(path, {\n      sensitive: this.caseSensitive,\n      strict: false,\n      end: false\n    }, fn);\n\n    layer.route = undefined;\n\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\n/**\n * Create a new Route for the given path.\n *\n * Each route contains a separate middleware stack and VERB handlers.\n *\n * See the Route api documentation for details on adding handlers\n * and middleware to routes.\n *\n * @param {String} path\n * @return {Route}\n * @public\n */\n\nproto.route = function route(path) {\n  var route = new Route(path);\n\n  var layer = new Layer(path, {\n    sensitive: this.caseSensitive,\n    strict: this.strict,\n    end: true\n  }, route.dispatch.bind(route));\n\n  layer.route = route;\n\n  this.stack.push(layer);\n  return route;\n};\n\n// create Router#VERB functions\nmethods.concat('all').forEach(function(method){\n  proto[method] = function(path){\n    var route = this.route(path)\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n});\n\n// append methods to a list of methods\nfunction appendMethods(list, addition) {\n  for (var i = 0; i < addition.length; i++) {\n    var method = addition[i];\n    if (list.indexOf(method) === -1) {\n      list.push(method);\n    }\n  }\n}\n\n// get pathname of request\nfunction getPathname(req) {\n  try {\n    return parseUrl(req).pathname;\n  } catch (err) {\n    return undefined;\n  }\n}\n\n// Get get protocol + host for a URL\nfunction getProtohost(url) {\n  if (typeof url !== 'string' || url.length === 0 || url[0] === '/') {\n    return undefined\n  }\n\n  var searchIndex = url.indexOf('?')\n  var pathLength = searchIndex !== -1\n    ? searchIndex\n    : url.length\n  var fqdnIndex = url.slice(0, pathLength).indexOf('://')\n\n  return fqdnIndex !== -1\n    ? url.substring(0, url.indexOf('/', 3 + fqdnIndex))\n    : undefined\n}\n\n// get type for error message\nfunction gettype(obj) {\n  var type = typeof obj;\n\n  if (type !== 'object') {\n    return type;\n  }\n\n  // inspect [[Class]] for objects\n  return toString.call(obj)\n    .replace(objectRegExp, '$1');\n}\n\n/**\n * Match path to a layer.\n *\n * @param {Layer} layer\n * @param {string} path\n * @private\n */\n\nfunction matchLayer(layer, path) {\n  try {\n    return layer.match(path);\n  } catch (err) {\n    return err;\n  }\n}\n\n// merge params with parent params\nfunction mergeParams(params, parent) {\n  if (typeof parent !== 'object' || !parent) {\n    return params;\n  }\n\n  // make copy of parent for base\n  var obj = mixin({}, parent);\n\n  // simple non-numeric merging\n  if (!(0 in params) || !(0 in parent)) {\n    return mixin(obj, params);\n  }\n\n  var i = 0;\n  var o = 0;\n\n  // determine numeric gaps\n  while (i in params) {\n    i++;\n  }\n\n  while (o in parent) {\n    o++;\n  }\n\n  // offset numeric indices in params before merge\n  for (i--; i >= 0; i--) {\n    params[i + o] = params[i];\n\n    // create holes for the merge when necessary\n    if (i < o) {\n      delete params[i];\n    }\n  }\n\n  return mixin(obj, params);\n}\n\n// restore obj props after function\nfunction restore(fn, obj) {\n  var props = new Array(arguments.length - 2);\n  var vals = new Array(arguments.length - 2);\n\n  for (var i = 0; i < props.length; i++) {\n    props[i] = arguments[i + 2];\n    vals[i] = obj[props[i]];\n  }\n\n  return function () {\n    // restore vals\n    for (var i = 0; i < props.length; i++) {\n      obj[props[i]] = vals[i];\n    }\n\n    return fn.apply(this, arguments);\n  };\n}\n\n// send an OPTIONS response\nfunction sendOptionsResponse(res, options, next) {\n  try {\n    var body = options.join(',');\n    res.set('Allow', body);\n    res.send(body);\n  } catch (err) {\n    next(err);\n  }\n}\n\n// wrap a function\nfunction wrap(old, fn) {\n  return function proxy() {\n    var args = new Array(arguments.length + 1);\n\n    args[0] = old;\n    for (var i = 0, len = arguments.length; i < len; i++) {\n      args[i + 1] = arguments[i];\n    }\n\n    fn.apply(this, args);\n  };\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\express\\lib\\router\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\express\\lib\\router\\index.js"
  },
  {
    "Content": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar pathRegexp = require('path-to-regexp');\nvar debug = require('debug')('express:router:layer');\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Layer;\n\nfunction Layer(path, options, fn) {\n  if (!(this instanceof Layer)) {\n    return new Layer(path, options, fn);\n  }\n\n  debug('new %o', path)\n  var opts = options || {};\n\n  this.handle = fn;\n  this.name = fn.name || '<anonymous>';\n  this.params = undefined;\n  this.path = undefined;\n  this.regexp = pathRegexp(path, this.keys = [], opts);\n\n  // set fast path flags\n  this.regexp.fast_star = path === '*'\n  this.regexp.fast_slash = path === '/' && opts.end === false\n}\n\n/**\n * Handle the error for the layer.\n *\n * @param {Error} error\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_error = function handle_error(error, req, res, next) {\n  var fn = this.handle;\n\n  if (fn.length !== 4) {\n    // not a standard error handler\n    return next(error);\n  }\n\n  try {\n    fn(error, req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Handle the request for the layer.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_request = function handle(req, res, next) {\n  var fn = this.handle;\n\n  if (fn.length > 3) {\n    // not a standard request handler\n    return next();\n  }\n\n  try {\n    fn(req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Check if this route matches `path`, if so\n * populate `.params`.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nLayer.prototype.match = function match(path) {\n  var match\n\n  if (path != null) {\n    // fast path non-ending match for / (any path matches)\n    if (this.regexp.fast_slash) {\n      this.params = {}\n      this.path = ''\n      return true\n    }\n\n    // fast path for * (everything matched in a param)\n    if (this.regexp.fast_star) {\n      this.params = {'0': decode_param(path)}\n      this.path = path\n      return true\n    }\n\n    // match the path\n    match = this.regexp.exec(path)\n  }\n\n  if (!match) {\n    this.params = undefined;\n    this.path = undefined;\n    return false;\n  }\n\n  // store values\n  this.params = {};\n  this.path = match[0]\n\n  var keys = this.keys;\n  var params = this.params;\n\n  for (var i = 1; i < match.length; i++) {\n    var key = keys[i - 1];\n    var prop = key.name;\n    var val = decode_param(match[i])\n\n    if (val !== undefined || !(hasOwnProperty.call(params, prop))) {\n      params[prop] = val;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Decode param value.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction decode_param(val) {\n  if (typeof val !== 'string' || val.length === 0) {\n    return val;\n  }\n\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    if (err instanceof URIError) {\n      err.message = 'Failed to decode param \\'' + val + '\\'';\n      err.status = err.statusCode = 400;\n    }\n\n    throw err;\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\express\\lib\\router\\layer.js",
    "RelativePath": "tools\\backend\\node_modules\\express\\lib\\router\\layer.js"
  },
  {
    "Content": "/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:router:route');\nvar flatten = require('array-flatten');\nvar Layer = require('./layer');\nvar methods = require('methods');\n\n/**\n * Module variables.\n * @private\n */\n\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Route;\n\n/**\n * Initialize `Route` with the given `path`,\n *\n * @param {String} path\n * @public\n */\n\nfunction Route(path) {\n  this.path = path;\n  this.stack = [];\n\n  debug('new %o', path)\n\n  // route handlers for various http methods\n  this.methods = {};\n}\n\n/**\n * Determine if the route handles a given method.\n * @private\n */\n\nRoute.prototype._handles_method = function _handles_method(method) {\n  if (this.methods._all) {\n    return true;\n  }\n\n  // normalize name\n  var name = typeof method === 'string'\n    ? method.toLowerCase()\n    : method\n\n  if (name === 'head' && !this.methods['head']) {\n    name = 'get';\n  }\n\n  return Boolean(this.methods[name]);\n};\n\n/**\n * @return {Array} supported HTTP methods\n * @private\n */\n\nRoute.prototype._options = function _options() {\n  var methods = Object.keys(this.methods);\n\n  // append automatic head\n  if (this.methods.get && !this.methods.head) {\n    methods.push('head');\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    // make upper case\n    methods[i] = methods[i].toUpperCase();\n  }\n\n  return methods;\n};\n\n/**\n * dispatch req, res into this route\n * @private\n */\n\nRoute.prototype.dispatch = function dispatch(req, res, done) {\n  var idx = 0;\n  var stack = this.stack;\n  var sync = 0\n\n  if (stack.length === 0) {\n    return done();\n  }\n  var method = typeof req.method === 'string'\n    ? req.method.toLowerCase()\n    : req.method\n\n  if (method === 'head' && !this.methods['head']) {\n    method = 'get';\n  }\n\n  req.route = this;\n\n  next();\n\n  function next(err) {\n    // signal to exit route\n    if (err && err === 'route') {\n      return done();\n    }\n\n    // signal to exit router\n    if (err && err === 'router') {\n      return done(err)\n    }\n\n    // max sync stack\n    if (++sync > 100) {\n      return setImmediate(next, err)\n    }\n\n    var layer = stack[idx++]\n\n    // end of layers\n    if (!layer) {\n      return done(err)\n    }\n\n    if (layer.method && layer.method !== method) {\n      next(err)\n    } else if (err) {\n      layer.handle_error(err, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n\n    sync = 0\n  }\n};\n\n/**\n * Add a handler for all HTTP verbs to this route.\n *\n * Behaves just like middleware and can respond or call `next`\n * to continue processing.\n *\n * You can use multiple `.all` call to add multiple handlers.\n *\n *   function check_something(req, res, next){\n *     next();\n *   };\n *\n *   function validate_user(req, res, next){\n *     next();\n *   };\n *\n *   route\n *   .all(validate_user)\n *   .all(check_something)\n *   .get(function(req, res, next){\n *     res.send('hello world');\n *   });\n *\n * @param {function} handler\n * @return {Route} for chaining\n * @api public\n */\n\nRoute.prototype.all = function all() {\n  var handles = flatten(slice.call(arguments));\n\n  for (var i = 0; i < handles.length; i++) {\n    var handle = handles[i];\n\n    if (typeof handle !== 'function') {\n      var type = toString.call(handle);\n      var msg = 'Route.all() requires a callback function but got a ' + type\n      throw new TypeError(msg);\n    }\n\n    var layer = Layer('/', {}, handle);\n    layer.method = undefined;\n\n    this.methods._all = true;\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\nmethods.forEach(function(method){\n  Route.prototype[method] = function(){\n    var handles = flatten(slice.call(arguments));\n\n    for (var i = 0; i < handles.length; i++) {\n      var handle = handles[i];\n\n      if (typeof handle !== 'function') {\n        var type = toString.call(handle);\n        var msg = 'Route.' + method + '() requires a callback function but got a ' + type\n        throw new Error(msg);\n      }\n\n      debug('%s %o', method, this.path)\n\n      var layer = Layer('/', {}, handle);\n      layer.method = method;\n\n      this.methods[method] = true;\n      this.stack.push(layer);\n    }\n\n    return this;\n  };\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\express\\lib\\router\\route.js",
    "RelativePath": "tools\\backend\\node_modules\\express\\lib\\router\\route.js"
  },
  {
    "Content": "v1.3.1 / 2024-09-11\n==================\n\n  * deps: encodeurl@~2.0.0\n\nv1.3.0 / 2024-09-03\n==================\n\n  * ignore status message for HTTP/2 (#53)\n\nv1.2.1 / 2024-09-02\n==================\n\n  * Gracefully handle when handling an error and socket is null\n\n1.2.0 / 2022-03-22\n==================\n\n  * Remove set content headers that break response\n  * deps: on-finished@2.4.1\n  * deps: statuses@2.0.1\n    - Rename `425 Unordered Collection` to standard `425 Too Early`\n\n1.1.2 / 2019-05-09\n==================\n\n  * Set stricter `Content-Security-Policy` header\n  * deps: parseurl@~1.3.3\n  * deps: statuses@~1.5.0\n\n1.1.1 / 2018-03-06\n==================\n\n  * Fix 404 output for bad / missing pathnames\n  * deps: encodeurl@~1.0.2\n    - Fix encoding `%` as last character\n  * deps: statuses@~1.4.0\n\n1.1.0 / 2017-09-24\n==================\n\n  * Use `res.headersSent` when available\n\n1.0.6 / 2017-09-22\n==================\n\n  * deps: debug@2.6.9\n\n1.0.5 / 2017-09-15\n==================\n\n  * deps: parseurl@~1.3.2\n    - perf: reduce overhead for full URLs\n    - perf: unroll the \"fast-path\" `RegExp`\n\n1.0.4 / 2017-08-03\n==================\n\n  * deps: debug@2.6.8\n\n1.0.3 / 2017-05-16\n==================\n\n  * deps: debug@2.6.7\n    - deps: ms@2.0.0\n\n1.0.2 / 2017-04-22\n==================\n\n  * deps: debug@2.6.4\n    - deps: ms@0.7.3\n\n1.0.1 / 2017-03-21\n==================\n\n  * Fix missing `</html>` in HTML document\n  * deps: debug@2.6.3\n    - Fix: `DEBUG_MAX_ARRAY_LENGTH`\n\n1.0.0 / 2017-02-15\n==================\n\n  * Fix exception when `err` cannot be converted to a string\n  * Fully URL-encode the pathname in the 404 message\n  * Only include the pathname in the 404 message\n  * Send complete HTML document\n  * Set `Content-Security-Policy: default-src 'self'` header\n  * deps: debug@2.6.1\n    - Allow colors in workers\n    - Deprecated `DEBUG_FD` environment variable set to `3` or higher\n    - Fix error when running under React Native\n    - Use same color for same namespace\n    - deps: ms@0.7.2\n\n0.5.1 / 2016-11-12\n==================\n\n  * Fix exception when `err.headers` is not an object\n  * deps: statuses@~1.3.1\n  * perf: hoist regular expressions\n  * perf: remove duplicate validation path\n\n0.5.0 / 2016-06-15\n==================\n\n  * Change invalid or non-numeric status code to 500\n  * Overwrite status message to match set status code\n  * Prefer `err.statusCode` if `err.status` is invalid\n  * Set response headers from `err.headers` object\n  * Use `statuses` instead of `http` module for status messages\n    - Includes all defined status messages\n\n0.4.1 / 2015-12-02\n==================\n\n  * deps: escape-html@~1.0.3\n    - perf: enable strict mode\n    - perf: optimize string replacement\n    - perf: use faster string coercion\n\n0.4.0 / 2015-06-14\n==================\n\n  * Fix a false-positive when unpiping in Node.js 0.8\n  * Support `statusCode` property on `Error` objects\n  * Use `unpipe` module for unpiping requests\n  * deps: escape-html@1.0.2\n  * deps: on-finished@~2.3.0\n    - Add defined behavior for HTTP `CONNECT` requests\n    - Add defined behavior for HTTP `Upgrade` requests\n    - deps: ee-first@1.1.1\n  * perf: enable strict mode\n  * perf: remove argument reassignment\n\n0.3.6 / 2015-05-11\n==================\n\n  * deps: debug@~2.2.0\n    - deps: ms@0.7.1\n\n0.3.5 / 2015-04-22\n==================\n\n  * deps: on-finished@~2.2.1\n    - Fix `isFinished(req)` when data buffered\n\n0.3.4 / 2015-03-15\n==================\n\n  * deps: debug@~2.1.3\n    - Fix high intensity foreground color for bold\n    - deps: ms@0.7.0\n\n0.3.3 / 2015-01-01\n==================\n\n  * deps: debug@~2.1.1\n  * deps: on-finished@~2.2.0\n\n0.3.2 / 2014-10-22\n==================\n\n  * deps: on-finished@~2.1.1\n    - Fix handling of pipelined requests\n\n0.3.1 / 2014-10-16\n==================\n\n  * deps: debug@~2.1.0\n    - Implement `DEBUG_FD` env variable support\n\n0.3.0 / 2014-09-17\n==================\n\n  * Terminate in progress response only on error\n  * Use `on-finished` to determine request status\n\n0.2.0 / 2014-09-03\n==================\n\n  * Set `X-Content-Type-Options: nosniff` header\n  * deps: debug@~2.0.0\n\n0.1.0 / 2014-07-16\n==================\n\n  * Respond after request fully read\n    - prevents hung responses and socket hang ups\n  * deps: debug@1.0.4\n\n0.0.3 / 2014-07-11\n==================\n\n  * deps: debug@1.0.3\n    - Add support for multiple wildcards in namespaces\n\n0.0.2 / 2014-06-19\n==================\n\n  * Handle invalid status codes\n\n0.0.1 / 2014-06-05\n==================\n\n  * deps: debug@1.0.2\n\n0.0.0 / 2014-06-05\n==================\n\n  * Extracted from connect/express\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\finalhandler\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\finalhandler\\HISTORY.md"
  },
  {
    "Content": "/*!\n * finalhandler\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('finalhandler')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar onFinished = require('on-finished')\nvar parseUrl = require('parseurl')\nvar statuses = require('statuses')\nvar unpipe = require('unpipe')\n\n/**\n * Module variables.\n * @private\n */\n\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g\nvar NEWLINE_REGEXP = /\\n/g\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\nvar isFinished = onFinished.isFinished\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} message\n * @private\n */\n\nfunction createHtmlDocument (message) {\n  var body = escapeHtml(message)\n    .replace(NEWLINE_REGEXP, '<br>')\n    .replace(DOUBLE_SPACE_REGEXP, ' &nbsp;')\n\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>Error</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = finalhandler\n\n/**\n * Create a function to handle the final response.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {Object} [options]\n * @return {Function}\n * @public\n */\n\nfunction finalhandler (req, res, options) {\n  var opts = options || {}\n\n  // get environment\n  var env = opts.env || process.env.NODE_ENV || 'development'\n\n  // get error callback\n  var onerror = opts.onerror\n\n  return function (err) {\n    var headers\n    var msg\n    var status\n\n    // ignore 404 on in-flight response\n    if (!err && headersSent(res)) {\n      debug('cannot 404 after headers sent')\n      return\n    }\n\n    // unhandled error\n    if (err) {\n      // respect status code from error\n      status = getErrorStatusCode(err)\n\n      if (status === undefined) {\n        // fallback to status code on response\n        status = getResponseStatusCode(res)\n      } else {\n        // respect headers from error\n        headers = getErrorHeaders(err)\n      }\n\n      // get error message\n      msg = getErrorMessage(err, status, env)\n    } else {\n      // not found\n      status = 404\n      msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req))\n    }\n\n    debug('default %s', status)\n\n    // schedule onerror callback\n    if (err && onerror) {\n      defer(onerror, err, req, res)\n    }\n\n    // cannot actually respond\n    if (headersSent(res)) {\n      debug('cannot %d after headers sent', status)\n      if (req.socket) {\n        req.socket.destroy()\n      }\n      return\n    }\n\n    // send response\n    send(req, res, status, headers, msg)\n  }\n}\n\n/**\n * Get headers from Error object.\n *\n * @param {Error} err\n * @return {object}\n * @private\n */\n\nfunction getErrorHeaders (err) {\n  if (!err.headers || typeof err.headers !== 'object') {\n    return undefined\n  }\n\n  var headers = Object.create(null)\n  var keys = Object.keys(err.headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    headers[key] = err.headers[key]\n  }\n\n  return headers\n}\n\n/**\n * Get message from Error object, fallback to status message.\n *\n * @param {Error} err\n * @param {number} status\n * @param {string} env\n * @return {string}\n * @private\n */\n\nfunction getErrorMessage (err, status, env) {\n  var msg\n\n  if (env !== 'production') {\n    // use err.stack, which typically includes err.message\n    msg = err.stack\n\n    // fallback to err.toString() when possible\n    if (!msg && typeof err.toString === 'function') {\n      msg = err.toString()\n    }\n  }\n\n  return msg || statuses.message[status]\n}\n\n/**\n * Get status code from Error object.\n *\n * @param {Error} err\n * @return {number}\n * @private\n */\n\nfunction getErrorStatusCode (err) {\n  // check err.status\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\n    return err.status\n  }\n\n  // check err.statusCode\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\n    return err.statusCode\n  }\n\n  return undefined\n}\n\n/**\n * Get resource name for the request.\n *\n * This is typically just the original pathname of the request\n * but will fallback to \"resource\" is that cannot be determined.\n *\n * @param {IncomingMessage} req\n * @return {string}\n * @private\n */\n\nfunction getResourceName (req) {\n  try {\n    return parseUrl.original(req).pathname\n  } catch (e) {\n    return 'resource'\n  }\n}\n\n/**\n * Get status code from response.\n *\n * @param {OutgoingMessage} res\n * @return {number}\n * @private\n */\n\nfunction getResponseStatusCode (res) {\n  var status = res.statusCode\n\n  // default status code to 500 if outside valid range\n  if (typeof status !== 'number' || status < 400 || status > 599) {\n    status = 500\n  }\n\n  return status\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Send response.\n *\n * @param {IncomingMessage} req\n * @param {OutgoingMessage} res\n * @param {number} status\n * @param {object} headers\n * @param {string} message\n * @private\n */\n\nfunction send (req, res, status, headers, message) {\n  function write () {\n    // response body\n    var body = createHtmlDocument(message)\n\n    // response status\n    res.statusCode = status\n\n    if (req.httpVersionMajor < 2) {\n      res.statusMessage = statuses.message[status]\n    }\n\n    // remove any content headers\n    res.removeHeader('Content-Encoding')\n    res.removeHeader('Content-Language')\n    res.removeHeader('Content-Range')\n\n    // response headers\n    setHeaders(res, headers)\n\n    // security headers\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n\n    // standard headers\n    res.setHeader('Content-Type', 'text/html; charset=utf-8')\n    res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'))\n\n    if (req.method === 'HEAD') {\n      res.end()\n      return\n    }\n\n    res.end(body, 'utf8')\n  }\n\n  if (isFinished(req)) {\n    write()\n    return\n  }\n\n  // unpipe everything from the request\n  unpipe(req)\n\n  // flush the request\n  onFinished(req, write)\n  req.resume()\n}\n\n/**\n * Set response headers from an object.\n *\n * @param {OutgoingMessage} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res, headers) {\n  if (!headers) {\n    return\n  }\n\n  var keys = Object.keys(headers)\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key, headers[key])\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\finalhandler\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\finalhandler\\index.js"
  },
  {
    "Content": "# finalhandler\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-image]][node-url]\n[![Build Status][github-actions-ci-image]][github-actions-ci-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nNode.js function to invoke as the final step to respond to HTTP request.\n\n## Installation\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install finalhandler\n```\n\n## API\n\n```js\nvar finalhandler = require('finalhandler')\n```\n\n### finalhandler(req, res, [options])\n\nReturns function to be invoked as the final step for the given `req` and `res`.\nThis function is to be invoked as `fn(err)`. If `err` is falsy, the handler will\nwrite out a 404 response to the `res`. If it is truthy, an error response will\nbe written out to the `res` or `res` will be terminated if a response has already\nstarted.\n\nWhen an error is written, the following information is added to the response:\n\n  * The `res.statusCode` is set from `err.status` (or `err.statusCode`). If\n    this value is outside the 4xx or 5xx range, it will be set to 500.\n  * The `res.statusMessage` is set according to the status code.\n  * The body will be the HTML of the status code message if `env` is\n    `'production'`, otherwise will be `err.stack`.\n  * Any headers specified in an `err.headers` object.\n\nThe final handler will also unpipe anything from `req` when it is invoked.\n\n#### options.env\n\nBy default, the environment is determined by `NODE_ENV` variable, but it can be\noverridden by this option.\n\n#### options.onerror\n\nProvide a function to be called with the `err` when it exists. Can be used for\nwriting errors to a central location without excessive function generation. Called\nas `onerror(err, req, res)`.\n\n## Examples\n\n### always 404\n\n```js\nvar finalhandler = require('finalhandler')\nvar http = require('http')\n\nvar server = http.createServer(function (req, res) {\n  var done = finalhandler(req, res)\n  done()\n})\n\nserver.listen(3000)\n```\n\n### perform simple action\n\n```js\nvar finalhandler = require('finalhandler')\nvar fs = require('fs')\nvar http = require('http')\n\nvar server = http.createServer(function (req, res) {\n  var done = finalhandler(req, res)\n\n  fs.readFile('index.html', function (err, buf) {\n    if (err) return done(err)\n    res.setHeader('Content-Type', 'text/html')\n    res.end(buf)\n  })\n})\n\nserver.listen(3000)\n```\n\n### use with middleware-style functions\n\n```js\nvar finalhandler = require('finalhandler')\nvar http = require('http')\nvar serveStatic = require('serve-static')\n\nvar serve = serveStatic('public')\n\nvar server = http.createServer(function (req, res) {\n  var done = finalhandler(req, res)\n  serve(req, res, done)\n})\n\nserver.listen(3000)\n```\n\n### keep log of all errors\n\n```js\nvar finalhandler = require('finalhandler')\nvar fs = require('fs')\nvar http = require('http')\n\nvar server = http.createServer(function (req, res) {\n  var done = finalhandler(req, res, { onerror: logerror })\n\n  fs.readFile('index.html', function (err, buf) {\n    if (err) return done(err)\n    res.setHeader('Content-Type', 'text/html')\n    res.end(buf)\n  })\n})\n\nserver.listen(3000)\n\nfunction logerror (err) {\n  console.error(err.stack || err.toString())\n}\n```\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/finalhandler.svg\n[npm-url]: https://npmjs.org/package/finalhandler\n[node-image]: https://img.shields.io/node/v/finalhandler.svg\n[node-url]: https://nodejs.org/en/download\n[coveralls-image]: https://img.shields.io/coveralls/pillarjs/finalhandler.svg\n[coveralls-url]: https://coveralls.io/r/pillarjs/finalhandler?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/finalhandler.svg\n[downloads-url]: https://npmjs.org/package/finalhandler\n[github-actions-ci-image]: https://github.com/pillarjs/finalhandler/actions/workflows/ci.yml/badge.svg\n[github-actions-ci-url]: https://github.com/pillarjs/finalhandler/actions/workflows/ci.yml\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\finalhandler\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\finalhandler\\README.md"
  },
  {
    "Content": "# Security Policies and Procedures\n\n## Reporting a Bug\n\nThe `finalhandler` team and community take all security bugs seriously. Thank\nyou for improving the security of Express. We appreciate your efforts and\nresponsible disclosure and will make every effort to acknowledge your\ncontributions.\n\nReport security bugs by emailing the current owner(s) of `finalhandler`. This\ninformation can be found in the npm registry using the command\n`npm owner ls finalhandler`.\nIf unsure or unable to get the information from the above, open an issue\nin the [project issue tracker](https://github.com/pillarjs/finalhandler/issues)\nasking for the current contact information.\n\nTo ensure the timely response to your report, please ensure that the entirety\nof the report is contained within the email body and not solely behind a web\nlink or an attachment.\n\nAt least one owner will acknowledge your email within 48 hours, and will send a\nmore detailed response within 48 hours indicating the next steps in handling\nyour report. After the initial reply to your report, the owners will\nendeavor to keep you informed of the progress towards a fix and full\nannouncement, and may ask for additional information or guidance.\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\finalhandler\\SECURITY.md",
    "RelativePath": "tools\\backend\\node_modules\\finalhandler\\SECURITY.md"
  },
  {
    "Content": "0.2.0 / 2021-05-31\n==================\n\n  * Use `req.socket` over deprecated `req.connection`\n\n0.1.2 / 2017-09-14\n==================\n\n  * perf: improve header parsing\n  * perf: reduce overhead when no `X-Forwarded-For` header\n\n0.1.1 / 2017-09-10\n==================\n\n  * Fix trimming leading / trailing OWS\n  * perf: hoist regular expression\n\n0.1.0 / 2014-09-21\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\forwarded\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\forwarded\\HISTORY.md"
  },
  {
    "Content": "/*!\n * forwarded\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = forwarded\n\n/**\n * Get all addresses in the request, using the `X-Forwarded-For` header.\n *\n * @param {object} req\n * @return {array}\n * @public\n */\n\nfunction forwarded (req) {\n  if (!req) {\n    throw new TypeError('argument req is required')\n  }\n\n  // simple header parsing\n  var proxyAddrs = parse(req.headers['x-forwarded-for'] || '')\n  var socketAddr = getSocketAddr(req)\n  var addrs = [socketAddr].concat(proxyAddrs)\n\n  // return all addresses\n  return addrs\n}\n\n/**\n * Get the socket address for a request.\n *\n * @param {object} req\n * @return {string}\n * @private\n */\n\nfunction getSocketAddr (req) {\n  return req.socket\n    ? req.socket.remoteAddress\n    : req.connection.remoteAddress\n}\n\n/**\n * Parse the X-Forwarded-For header.\n *\n * @param {string} header\n * @private\n */\n\nfunction parse (header) {\n  var end = header.length\n  var list = []\n  var start = header.length\n\n  // gather addresses, backwards\n  for (var i = header.length - 1; i >= 0; i--) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i\n        }\n        break\n      case 0x2c: /* , */\n        if (start !== end) {\n          list.push(header.substring(start, end))\n        }\n        start = end = i\n        break\n      default:\n        start = i\n        break\n    }\n  }\n\n  // final address\n  if (start !== end) {\n    list.push(header.substring(start, end))\n  }\n\n  return list\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\forwarded\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\forwarded\\index.js"
  },
  {
    "Content": "# forwarded\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][ci-image]][ci-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nParse HTTP X-Forwarded-For header\n\n## Installation\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install forwarded\n```\n\n## API\n\n```js\nvar forwarded = require('forwarded')\n```\n\n### forwarded(req)\n\n```js\nvar addresses = forwarded(req)\n```\n\nParse the `X-Forwarded-For` header from the request. Returns an array\nof the addresses, including the socket address for the `req`, in reverse\norder (i.e. index `0` is the socket address and the last index is the\nfurthest address, typically the end-user).\n\n## Testing\n\n```sh\n$ npm test\n```\n\n## License\n\n[MIT](LICENSE)\n\n[ci-image]: https://badgen.net/github/checks/jshttp/forwarded/master?label=ci\n[ci-url]: https://github.com/jshttp/forwarded/actions?query=workflow%3Aci\n[npm-image]: https://img.shields.io/npm/v/forwarded.svg\n[npm-url]: https://npmjs.org/package/forwarded\n[node-version-image]: https://img.shields.io/node/v/forwarded.svg\n[node-version-url]: https://nodejs.org/en/download/\n[coveralls-image]: https://img.shields.io/coveralls/jshttp/forwarded/master.svg\n[coveralls-url]: https://coveralls.io/r/jshttp/forwarded?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/forwarded.svg\n[downloads-url]: https://npmjs.org/package/forwarded\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\forwarded\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\forwarded\\README.md"
  },
  {
    "Content": "0.5.2 / 2017-09-13\n==================\n\n  * Fix regression matching multiple ETags in `If-None-Match`\n  * perf: improve `If-None-Match` token parsing\n\n0.5.1 / 2017-09-11\n==================\n\n  * Fix handling of modified headers with invalid dates\n  * perf: improve ETag match loop\n\n0.5.0 / 2017-02-21\n==================\n\n  * Fix incorrect result when `If-None-Match` has both `*` and ETags\n  * Fix weak `ETag` matching to match spec\n  * perf: delay reading header values until needed\n  * perf: skip checking modified time if ETag check failed\n  * perf: skip parsing `If-None-Match` when no `ETag` header\n  * perf: use `Date.parse` instead of `new Date`\n\n0.4.0 / 2017-02-05\n==================\n\n  * Fix false detection of `no-cache` request directive\n  * perf: enable strict mode\n  * perf: hoist regular expressions\n  * perf: remove duplicate conditional\n  * perf: remove unnecessary boolean coercions\n\n0.3.0 / 2015-05-12\n==================\n\n  * Add weak `ETag` matching support\n\n0.2.4 / 2014-09-07\n==================\n\n  * Support Node.js 0.6\n\n0.2.3 / 2014-09-07\n==================\n\n  * Move repository to jshttp\n\n0.2.2 / 2014-02-19\n==================\n\n  * Revert \"Fix for blank page on Safari reload\"\n\n0.2.1 / 2014-01-29\n==================\n\n  * Fix for blank page on Safari reload\n\n0.2.0 / 2013-08-11\n==================\n\n  * Return stale for `Cache-Control: no-cache`\n\n0.1.0 / 2012-06-15\n==================\n\n  * Add `If-None-Match: *` support\n\n0.0.1 / 2012-06-10\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\fresh\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\fresh\\HISTORY.md"
  },
  {
    "Content": "/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to check for no-cache token in Cache-Control.\n * @private\n */\n\nvar CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|,)\\s*?no-cache\\s*?(?:,|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = fresh\n\n/**\n * Check freshness of the response using request and response headers.\n *\n * @param {Object} reqHeaders\n * @param {Object} resHeaders\n * @return {Boolean}\n * @public\n */\n\nfunction fresh (reqHeaders, resHeaders) {\n  // fields\n  var modifiedSince = reqHeaders['if-modified-since']\n  var noneMatch = reqHeaders['if-none-match']\n\n  // unconditional request\n  if (!modifiedSince && !noneMatch) {\n    return false\n  }\n\n  // Always return stale when Cache-Control: no-cache\n  // to support end-to-end reload requests\n  // https://tools.ietf.org/html/rfc2616#section-14.9.4\n  var cacheControl = reqHeaders['cache-control']\n  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {\n    return false\n  }\n\n  // if-none-match\n  if (noneMatch && noneMatch !== '*') {\n    var etag = resHeaders['etag']\n\n    if (!etag) {\n      return false\n    }\n\n    var etagStale = true\n    var matches = parseTokenList(noneMatch)\n    for (var i = 0; i < matches.length; i++) {\n      var match = matches[i]\n      if (match === etag || match === 'W/' + etag || 'W/' + match === etag) {\n        etagStale = false\n        break\n      }\n    }\n\n    if (etagStale) {\n      return false\n    }\n  }\n\n  // if-modified-since\n  if (modifiedSince) {\n    var lastModified = resHeaders['last-modified']\n    var modifiedStale = !lastModified || !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince))\n\n    if (modifiedStale) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  // istanbul ignore next: guard against date.js Date.parse patching\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(str.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(str.substring(start, end))\n\n  return list\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\fresh\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\fresh\\index.js"
  },
  {
    "Content": "# fresh\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nHTTP response freshness testing\n\n## Installation\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```\n$ npm install fresh\n```\n\n## API\n\n<!-- eslint-disable no-unused-vars -->\n\n```js\nvar fresh = require('fresh')\n```\n\n### fresh(reqHeaders, resHeaders)\n\nCheck freshness of the response using request and response headers.\n\nWhen the response is still \"fresh\" in the client's cache `true` is\nreturned, otherwise `false` is returned to indicate that the client\ncache is now stale and the full response should be sent.\n\nWhen a client sends the `Cache-Control: no-cache` request header to\nindicate an end-to-end reload request, this module will return `false`\nto make handling these requests transparent.\n\n## Known Issues\n\nThis module is designed to only follow the HTTP specifications, not\nto work-around all kinda of client bugs (especially since this module\ntypically does not recieve enough information to understand what the\nclient actually is).\n\nThere is a known issue that in certain versions of Safari, Safari\nwill incorrectly make a request that allows this module to validate\nfreshness of the resource even when Safari does not have a\nrepresentation of the resource in the cache. The module\n[jumanji](https://www.npmjs.com/package/jumanji) can be used in\nan Express application to work-around this issue and also provides\nlinks to further reading on this Safari bug.\n\n## Example\n\n### API usage\n\n<!-- eslint-disable no-redeclare, no-undef -->\n\n```js\nvar reqHeaders = { 'if-none-match': '\"foo\"' }\nvar resHeaders = { 'etag': '\"bar\"' }\nfresh(reqHeaders, resHeaders)\n// => false\n\nvar reqHeaders = { 'if-none-match': '\"foo\"' }\nvar resHeaders = { 'etag': '\"foo\"' }\nfresh(reqHeaders, resHeaders)\n// => true\n```\n\n### Using with Node.js http server\n\n```js\nvar fresh = require('fresh')\nvar http = require('http')\n\nvar server = http.createServer(function (req, res) {\n  // perform server logic\n  // ... including adding ETag / Last-Modified response headers\n\n  if (isFresh(req, res)) {\n    // client has a fresh copy of resource\n    res.statusCode = 304\n    res.end()\n    return\n  }\n\n  // send the resource\n  res.statusCode = 200\n  res.end('hello, world!')\n})\n\nfunction isFresh (req, res) {\n  return fresh(req.headers, {\n    'etag': res.getHeader('ETag'),\n    'last-modified': res.getHeader('Last-Modified')\n  })\n}\n\nserver.listen(3000)\n```\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/fresh.svg\n[npm-url]: https://npmjs.org/package/fresh\n[node-version-image]: https://img.shields.io/node/v/fresh.svg\n[node-version-url]: https://nodejs.org/en/\n[travis-image]: https://img.shields.io/travis/jshttp/fresh/master.svg\n[travis-url]: https://travis-ci.org/jshttp/fresh\n[coveralls-image]: https://img.shields.io/coveralls/jshttp/fresh/master.svg\n[coveralls-url]: https://coveralls.io/r/jshttp/fresh?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/fresh.svg\n[downloads-url]: https://npmjs.org/package/fresh\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\fresh\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\fresh\\README.md"
  },
  {
    "Content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v1.1.2](https://github.com/ljharb/function-bind/compare/v1.1.1...v1.1.2) - 2023-10-12\n\n### Merged\n\n- Point to the correct file [`#16`](https://github.com/ljharb/function-bind/pull/16)\n\n### Commits\n\n- [Tests] migrate tests to Github Actions [`4f8b57c`](https://github.com/ljharb/function-bind/commit/4f8b57c02f2011fe9ae353d5e74e8745f0988af8)\n- [Tests] remove `jscs` [`90eb2ed`](https://github.com/ljharb/function-bind/commit/90eb2edbeefd5b76cd6c3a482ea3454db169b31f)\n- [meta] update `.gitignore` [`53fcdc3`](https://github.com/ljharb/function-bind/commit/53fcdc371cd66634d6e9b71c836a50f437e89fed)\n- [Tests] up to `node` `v11.10`, `v10.15`, `v9.11`, `v8.15`, `v6.16`, `v4.9`; use `nvm install-latest-npm`; run audit script in tests [`1fe8f6e`](https://github.com/ljharb/function-bind/commit/1fe8f6e9aed0dfa8d8b3cdbd00c7f5ea0cd2b36e)\n- [meta] add `auto-changelog` [`1921fcb`](https://github.com/ljharb/function-bind/commit/1921fcb5b416b63ffc4acad051b6aad5722f777d)\n- [Robustness] remove runtime dependency on all builtins except `.apply` [`f743e61`](https://github.com/ljharb/function-bind/commit/f743e61aa6bb2360358c04d4884c9db853d118b7)\n- Docs: enable badges; update wording [`503cb12`](https://github.com/ljharb/function-bind/commit/503cb12d998b5f91822776c73332c7adcd6355dd)\n- [readme] update badges [`290c5db`](https://github.com/ljharb/function-bind/commit/290c5dbbbda7264efaeb886552a374b869a4bb48)\n- [Tests] switch to nyc for coverage [`ea360ba`](https://github.com/ljharb/function-bind/commit/ea360ba907fc2601ed18d01a3827fa2d3533cdf8)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `tape` [`cae5e9e`](https://github.com/ljharb/function-bind/commit/cae5e9e07a5578dc6df26c03ee22851ce05b943c)\n- [meta] add `funding` field; create FUNDING.yml [`c9f4274`](https://github.com/ljharb/function-bind/commit/c9f4274aa80ea3aae9657a3938fdba41a3b04ca6)\n- [Tests] fix eslint errors from #15 [`f69aaa2`](https://github.com/ljharb/function-bind/commit/f69aaa2beb2fdab4415bfb885760a699d0b9c964)\n- [actions] fix permissions [`99a0cd9`](https://github.com/ljharb/function-bind/commit/99a0cd9f3b5bac223a0d572f081834cd73314be7)\n- [meta] use `npmignore` to autogenerate an npmignore file [`f03b524`](https://github.com/ljharb/function-bind/commit/f03b524ca91f75a109a5d062f029122c86ecd1ae)\n- [Dev Deps] update `@ljharb/eslint‑config`, `eslint`, `tape` [`7af9300`](https://github.com/ljharb/function-bind/commit/7af930023ae2ce7645489532821e4fbbcd7a2280)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `covert`, `tape` [`64a9127`](https://github.com/ljharb/function-bind/commit/64a9127ab0bd331b93d6572eaf6e9971967fc08c)\n- [Tests] use `aud` instead of `npm audit` [`e75069c`](https://github.com/ljharb/function-bind/commit/e75069c50010a8fcce2a9ce2324934c35fdb4386)\n- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `tape` [`d03555c`](https://github.com/ljharb/function-bind/commit/d03555ca59dea3b71ce710045e4303b9e2619e28)\n- [meta] add `safe-publish-latest` [`9c8f809`](https://github.com/ljharb/function-bind/commit/9c8f8092aed027d7e80c94f517aa892385b64f09)\n- [Dev Deps] update `@ljharb/eslint-config`, `tape` [`baf6893`](https://github.com/ljharb/function-bind/commit/baf6893e27f5b59abe88bc1995e6f6ed1e527397)\n- [meta] create SECURITY.md [`4db1779`](https://github.com/ljharb/function-bind/commit/4db17799f1f28ae294cb95e0081ca2b591c3911b)\n- [Tests] add `npm run audit` [`c8b38ec`](https://github.com/ljharb/function-bind/commit/c8b38ec40ed3f85dabdee40ed4148f1748375bc2)\n- Revert \"Point to the correct file\" [`05cdf0f`](https://github.com/ljharb/function-bind/commit/05cdf0fa205c6a3c5ba40bbedd1dfa9874f915c9)\n\n## [v1.1.1](https://github.com/ljharb/function-bind/compare/v1.1.0...v1.1.1) - 2017-08-28\n\n### Commits\n\n- [Tests] up to `node` `v8`; newer npm breaks on older node; fix scripts [`817f7d2`](https://github.com/ljharb/function-bind/commit/817f7d28470fdbff8ef608d4d565dd4d1430bc5e)\n- [Dev Deps] update `eslint`, `jscs`, `tape`, `@ljharb/eslint-config` [`854288b`](https://github.com/ljharb/function-bind/commit/854288b1b6f5c555f89aceb9eff1152510262084)\n- [Dev Deps] update `tape`, `jscs`, `eslint`, `@ljharb/eslint-config` [`83e639f`](https://github.com/ljharb/function-bind/commit/83e639ff74e6cd6921285bccec22c1bcf72311bd)\n- Only apps should have lockfiles [`5ed97f5`](https://github.com/ljharb/function-bind/commit/5ed97f51235c17774e0832e122abda0f3229c908)\n- Use a SPDX-compliant “license” field. [`5feefea`](https://github.com/ljharb/function-bind/commit/5feefea0dc0193993e83e5df01ded424403a5381)\n\n## [v1.1.0](https://github.com/ljharb/function-bind/compare/v1.0.2...v1.1.0) - 2016-02-14\n\n### Commits\n\n- Update `eslint`, `tape`; use my personal shared `eslint` config [`9c9062a`](https://github.com/ljharb/function-bind/commit/9c9062abbe9dd70b59ea2c3a3c3a81f29b457097)\n- Add `npm run eslint` [`dd96c56`](https://github.com/ljharb/function-bind/commit/dd96c56720034a3c1ffee10b8a59a6f7c53e24ad)\n- [New] return the native `bind` when available. [`82186e0`](https://github.com/ljharb/function-bind/commit/82186e03d73e580f95ff167e03f3582bed90ed72)\n- [Dev Deps] update `tape`, `jscs`, `eslint`, `@ljharb/eslint-config` [`a3dd767`](https://github.com/ljharb/function-bind/commit/a3dd76720c795cb7f4586b0544efabf8aa107b8b)\n- Update `eslint` [`3dae2f7`](https://github.com/ljharb/function-bind/commit/3dae2f7423de30a2d20313ddb1edc19660142fe9)\n- Update `tape`, `covert`, `jscs` [`a181eee`](https://github.com/ljharb/function-bind/commit/a181eee0cfa24eb229c6e843a971f36e060a2f6a)\n- [Tests] up to `node` `v5.6`, `v4.3` [`964929a`](https://github.com/ljharb/function-bind/commit/964929a6a4ddb36fb128de2bcc20af5e4f22e1ed)\n- Test up to `io.js` `v2.1` [`2be7310`](https://github.com/ljharb/function-bind/commit/2be7310f2f74886a7124ca925be411117d41d5ea)\n- Update `tape`, `jscs`, `eslint`, `@ljharb/eslint-config` [`45f3d68`](https://github.com/ljharb/function-bind/commit/45f3d6865c6ca93726abcef54febe009087af101)\n- [Dev Deps] update `tape`, `jscs` [`6e1340d`](https://github.com/ljharb/function-bind/commit/6e1340d94642deaecad3e717825db641af4f8b1f)\n- [Tests] up to `io.js` `v3.3`, `node` `v4.1` [`d9bad2b`](https://github.com/ljharb/function-bind/commit/d9bad2b778b1b3a6dd2876087b88b3acf319f8cc)\n- Update `eslint` [`935590c`](https://github.com/ljharb/function-bind/commit/935590caa024ab356102e4858e8fc315b2ccc446)\n- [Dev Deps] update `jscs`, `eslint`, `@ljharb/eslint-config` [`8c9a1ef`](https://github.com/ljharb/function-bind/commit/8c9a1efd848e5167887aa8501857a0940a480c57)\n- Test on `io.js` `v2.2` [`9a3a38c`](https://github.com/ljharb/function-bind/commit/9a3a38c92013aed6e108666e7bd40969b84ac86e)\n- Run `travis-ci` tests on `iojs` and `node` v0.12; speed up builds; allow 0.8 failures. [`69afc26`](https://github.com/ljharb/function-bind/commit/69afc2617405b147dd2a8d8ae73ca9e9283f18b4)\n- [Dev Deps] Update `tape`, `eslint` [`36c1be0`](https://github.com/ljharb/function-bind/commit/36c1be0ab12b45fe5df6b0fdb01a5d5137fd0115)\n- Update `tape`, `jscs` [`98d8303`](https://github.com/ljharb/function-bind/commit/98d8303cd5ca1c6b8f985469f86b0d44d7d45f6e)\n- Update `jscs` [`9633a4e`](https://github.com/ljharb/function-bind/commit/9633a4e9fbf82051c240855166e468ba8ba0846f)\n- Update `tape`, `jscs` [`c80ef0f`](https://github.com/ljharb/function-bind/commit/c80ef0f46efc9791e76fa50de4414092ac147831)\n- Test up to `io.js` `v3.0` [`7e2c853`](https://github.com/ljharb/function-bind/commit/7e2c8537d52ab9cf5a655755561d8917684c0df4)\n- Test on `io.js` `v2.4` [`5a199a2`](https://github.com/ljharb/function-bind/commit/5a199a27ba46795ba5eaf0845d07d4b8232895c9)\n- Test on `io.js` `v2.3` [`a511b88`](https://github.com/ljharb/function-bind/commit/a511b8896de0bddf3b56862daa416c701f4d0453)\n- Fixing a typo from 822b4e1938db02dc9584aa434fd3a45cb20caf43 [`732d6b6`](https://github.com/ljharb/function-bind/commit/732d6b63a9b33b45230e630dbcac7a10855d3266)\n- Update `jscs` [`da52a48`](https://github.com/ljharb/function-bind/commit/da52a4886c06d6490f46ae30b15e4163ba08905d)\n- Lock covert to v1.0.0. [`d6150fd`](https://github.com/ljharb/function-bind/commit/d6150fda1e6f486718ebdeff823333d9e48e7430)\n\n## [v1.0.2](https://github.com/ljharb/function-bind/compare/v1.0.1...v1.0.2) - 2014-10-04\n\n## [v1.0.1](https://github.com/ljharb/function-bind/compare/v1.0.0...v1.0.1) - 2014-10-03\n\n### Merged\n\n- make CI build faster [`#3`](https://github.com/ljharb/function-bind/pull/3)\n\n### Commits\n\n- Using my standard jscs.json [`d8ee94c`](https://github.com/ljharb/function-bind/commit/d8ee94c993eff0a84cf5744fe6a29627f5cffa1a)\n- Adding `npm run lint` [`7571ab7`](https://github.com/ljharb/function-bind/commit/7571ab7dfdbd99b25a1dbb2d232622bd6f4f9c10)\n- Using consistent indentation [`e91a1b1`](https://github.com/ljharb/function-bind/commit/e91a1b13a61e99ec1e530e299b55508f74218a95)\n- Updating jscs [`7e17892`](https://github.com/ljharb/function-bind/commit/7e1789284bc629bc9c1547a61c9b227bbd8c7a65)\n- Using consistent quotes [`c50b57f`](https://github.com/ljharb/function-bind/commit/c50b57fcd1c5ec38320979c837006069ebe02b77)\n- Adding keywords [`cb94631`](https://github.com/ljharb/function-bind/commit/cb946314eed35f21186a25fb42fc118772f9ee00)\n- Directly export a function expression instead of using a declaration, and relying on hoisting. [`5a33c5f`](https://github.com/ljharb/function-bind/commit/5a33c5f45642de180e0d207110bf7d1843ceb87c)\n- Naming npm URL and badge in README; use SVG [`2aef8fc`](https://github.com/ljharb/function-bind/commit/2aef8fcb79d54e63a58ae557c4e60949e05d5e16)\n- Naming deps URLs in README [`04228d7`](https://github.com/ljharb/function-bind/commit/04228d766670ee45ca24e98345c1f6a7621065b5)\n- Naming travis-ci URLs in README; using SVG [`62c810c`](https://github.com/ljharb/function-bind/commit/62c810c2f54ced956cd4d4ab7b793055addfe36e)\n- Make sure functions are invoked correctly (also passing coverage tests) [`2b289b4`](https://github.com/ljharb/function-bind/commit/2b289b4dfbf037ffcfa4dc95eb540f6165e9e43a)\n- Removing the strict mode pragmas; they make tests fail. [`1aa701d`](https://github.com/ljharb/function-bind/commit/1aa701d199ddc3782476e8f7eef82679be97b845)\n- Adding myself as a contributor [`85fd57b`](https://github.com/ljharb/function-bind/commit/85fd57b0860e5a7af42de9a287f3f265fc6d72fc)\n- Adding strict mode pragmas [`915b08e`](https://github.com/ljharb/function-bind/commit/915b08e084c86a722eafe7245e21db74aa21ca4c)\n- Adding devDeps URLs to README [`4ccc731`](https://github.com/ljharb/function-bind/commit/4ccc73112c1769859e4ca3076caf4086b3cba2cd)\n- Fixing the description. [`a7a472c`](https://github.com/ljharb/function-bind/commit/a7a472cf649af515c635cf560fc478fbe48999c8)\n- Using a function expression instead of a function declaration. [`b5d3e4e`](https://github.com/ljharb/function-bind/commit/b5d3e4ea6aaffc63888953eeb1fbc7ff45f1fa14)\n- Updating tape [`f086be6`](https://github.com/ljharb/function-bind/commit/f086be6029fb56dde61a258c1340600fa174d1e0)\n- Updating jscs [`5f9bdb3`](https://github.com/ljharb/function-bind/commit/5f9bdb375ab13ba48f30852aab94029520c54d71)\n- Updating jscs [`9b409ba`](https://github.com/ljharb/function-bind/commit/9b409ba6118e23395a4e5d83ef39152aab9d3bfc)\n- Run coverage as part of tests. [`8e1b6d4`](https://github.com/ljharb/function-bind/commit/8e1b6d459f047d1bd4fee814e01247c984c80bd0)\n- Run linter as part of tests [`c1ca83f`](https://github.com/ljharb/function-bind/commit/c1ca83f832df94587d09e621beba682fabfaa987)\n- Updating covert [`701e837`](https://github.com/ljharb/function-bind/commit/701e83774b57b4d3ef631e1948143f43a72f4bb9)\n\n## [v1.0.0](https://github.com/ljharb/function-bind/compare/v0.2.0...v1.0.0) - 2014-08-09\n\n### Commits\n\n- Make sure old and unstable nodes don't fail Travis [`27adca3`](https://github.com/ljharb/function-bind/commit/27adca34a4ab6ad67b6dfde43942a1b103ce4d75)\n- Fixing an issue when the bound function is called as a constructor in ES3. [`e20122d`](https://github.com/ljharb/function-bind/commit/e20122d267d92ce553859b280cbbea5d27c07731)\n- Adding `npm run coverage` [`a2e29c4`](https://github.com/ljharb/function-bind/commit/a2e29c4ecaef9e2f6cd1603e868c139073375502)\n- Updating tape [`b741168`](https://github.com/ljharb/function-bind/commit/b741168b12b235b1717ff696087645526b69213c)\n- Upgrading tape [`63631a0`](https://github.com/ljharb/function-bind/commit/63631a04c7fbe97cc2fa61829cc27246d6986f74)\n- Updating tape [`363cb46`](https://github.com/ljharb/function-bind/commit/363cb46dafb23cb3e347729a22f9448051d78464)\n\n## v0.2.0 - 2014-03-23\n\n### Commits\n\n- Updating test coverage to match es5-shim. [`aa94d44`](https://github.com/ljharb/function-bind/commit/aa94d44b8f9d7f69f10e060db7709aa7a694e5d4)\n- initial [`942ee07`](https://github.com/ljharb/function-bind/commit/942ee07e94e542d91798137bc4b80b926137e066)\n- Setting the bound function's length properly. [`079f46a`](https://github.com/ljharb/function-bind/commit/079f46a2d3515b7c0b308c2c13fceb641f97ca25)\n- Ensuring that some older browsers will throw when given a regex. [`36ac55b`](https://github.com/ljharb/function-bind/commit/36ac55b87f460d4330253c92870aa26fbfe8227f)\n- Removing npm scripts that don't have dependencies [`9d2be60`](https://github.com/ljharb/function-bind/commit/9d2be600002cb8bc8606f8f3585ad3e05868c750)\n- Updating tape [`297a4ac`](https://github.com/ljharb/function-bind/commit/297a4acc5464db381940aafb194d1c88f4e678f3)\n- Skipping length tests for now. [`d9891ea`](https://github.com/ljharb/function-bind/commit/d9891ea4d2aaffa69f408339cdd61ff740f70565)\n- don't take my tea [`dccd930`](https://github.com/ljharb/function-bind/commit/dccd930bfd60ea10cb178d28c97550c3bc8c1e07)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\function-bind\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\function-bind\\CHANGELOG.md"
  },
  {
    "Content": "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\function-bind\\implementation.js",
    "RelativePath": "tools\\backend\\node_modules\\function-bind\\implementation.js"
  },
  {
    "Content": "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\function-bind\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\function-bind\\index.js"
  },
  {
    "Content": "# function-bind <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n<!--[![coverage][codecov-image]][codecov-url]-->\n[![dependency status][deps-svg]][deps-url]\n[![dev dependency status][dev-deps-svg]][dev-deps-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\nImplementation of function.prototype.bind\n\nOld versions of phantomjs, Internet Explorer < 9, and node < 0.6 don't support `Function.prototype.bind`.\n\n## Example\n\n```js\nFunction.prototype.bind = require(\"function-bind\")\n```\n\n## Installation\n\n`npm install function-bind`\n\n## Contributors\n\n - Raynos\n\n## MIT Licenced\n\n[package-url]: https://npmjs.org/package/function-bind\n[npm-version-svg]: https://versionbadg.es/Raynos/function-bind.svg\n[deps-svg]: https://david-dm.org/Raynos/function-bind.svg\n[deps-url]: https://david-dm.org/Raynos/function-bind\n[dev-deps-svg]: https://david-dm.org/Raynos/function-bind/dev-status.svg\n[dev-deps-url]: https://david-dm.org/Raynos/function-bind#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/function-bind.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/function-bind.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/function-bind.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=function-bind\n[codecov-image]: https://codecov.io/gh/Raynos/function-bind/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/Raynos/function-bind/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/Raynos/function-bind\n[actions-url]: https://github.com/Raynos/function-bind/actions\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\function-bind\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\function-bind\\README.md"
  },
  {
    "Content": "# Security\n\nPlease email [@ljharb](https://github.com/ljharb) or see https://tidelift.com/security if you have a potential security vulnerability to report.\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\function-bind\\.github\\SECURITY.md",
    "RelativePath": "tools\\backend\\node_modules\\function-bind\\.github\\SECURITY.md"
  },
  {
    "Content": "// jscs:disable requireUseStrict\n\nvar test = require('tape');\n\nvar functionBind = require('../implementation');\nvar getCurrentContext = function () { return this; };\n\ntest('functionBind is a function', function (t) {\n    t.equal(typeof functionBind, 'function');\n    t.end();\n});\n\ntest('non-functions', function (t) {\n    var nonFunctions = [true, false, [], {}, 42, 'foo', NaN, /a/g];\n    t.plan(nonFunctions.length);\n    for (var i = 0; i < nonFunctions.length; ++i) {\n        try { functionBind.call(nonFunctions[i]); } catch (ex) {\n            t.ok(ex instanceof TypeError, 'throws when given ' + String(nonFunctions[i]));\n        }\n    }\n    t.end();\n});\n\ntest('without a context', function (t) {\n    t.test('binds properly', function (st) {\n        var args, context;\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                context = this;\n            })\n        };\n        namespace.func(1, 2, 3);\n        st.deepEqual(args, [1, 2, 3]);\n        st.equal(context, getCurrentContext.call());\n        st.end();\n    });\n\n    t.test('binds properly, and still supplies bound arguments', function (st) {\n        var args, context;\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                context = this;\n            }, undefined, 1, 2, 3)\n        };\n        namespace.func(4, 5, 6);\n        st.deepEqual(args, [1, 2, 3, 4, 5, 6]);\n        st.equal(context, getCurrentContext.call());\n        st.end();\n    });\n\n    t.test('returns properly', function (st) {\n        var args;\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                return this;\n            }, null)\n        };\n        var context = namespace.func(1, 2, 3);\n        st.equal(context, getCurrentContext.call(), 'returned context is namespaced context');\n        st.deepEqual(args, [1, 2, 3], 'passed arguments are correct');\n        st.end();\n    });\n\n    t.test('returns properly with bound arguments', function (st) {\n        var args;\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                return this;\n            }, null, 1, 2, 3)\n        };\n        var context = namespace.func(4, 5, 6);\n        st.equal(context, getCurrentContext.call(), 'returned context is namespaced context');\n        st.deepEqual(args, [1, 2, 3, 4, 5, 6], 'passed arguments are correct');\n        st.end();\n    });\n\n    t.test('called as a constructor', function (st) {\n        var thunkify = function (value) {\n            return function () { return value; };\n        };\n        st.test('returns object value', function (sst) {\n            var expectedReturnValue = [1, 2, 3];\n            var Constructor = functionBind.call(thunkify(expectedReturnValue), null);\n            var result = new Constructor();\n            sst.equal(result, expectedReturnValue);\n            sst.end();\n        });\n\n        st.test('does not return primitive value', function (sst) {\n            var Constructor = functionBind.call(thunkify(42), null);\n            var result = new Constructor();\n            sst.notEqual(result, 42);\n            sst.end();\n        });\n\n        st.test('object from bound constructor is instance of original and bound constructor', function (sst) {\n            var A = function (x) {\n                this.name = x || 'A';\n            };\n            var B = functionBind.call(A, null, 'B');\n\n            var result = new B();\n            sst.ok(result instanceof B, 'result is instance of bound constructor');\n            sst.ok(result instanceof A, 'result is instance of original constructor');\n            sst.end();\n        });\n\n        st.end();\n    });\n\n    t.end();\n});\n\ntest('with a context', function (t) {\n    t.test('with no bound arguments', function (st) {\n        var args, context;\n        var boundContext = {};\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                context = this;\n            }, boundContext)\n        };\n        namespace.func(1, 2, 3);\n        st.equal(context, boundContext, 'binds a context properly');\n        st.deepEqual(args, [1, 2, 3], 'supplies passed arguments');\n        st.end();\n    });\n\n    t.test('with bound arguments', function (st) {\n        var args, context;\n        var boundContext = {};\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                context = this;\n            }, boundContext, 1, 2, 3)\n        };\n        namespace.func(4, 5, 6);\n        st.equal(context, boundContext, 'binds a context properly');\n        st.deepEqual(args, [1, 2, 3, 4, 5, 6], 'supplies bound and passed arguments');\n        st.end();\n    });\n\n    t.test('returns properly', function (st) {\n        var boundContext = {};\n        var args;\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                return this;\n            }, boundContext)\n        };\n        var context = namespace.func(1, 2, 3);\n        st.equal(context, boundContext, 'returned context is bound context');\n        st.notEqual(context, getCurrentContext.call(), 'returned context is not lexical context');\n        st.deepEqual(args, [1, 2, 3], 'passed arguments are correct');\n        st.end();\n    });\n\n    t.test('returns properly with bound arguments', function (st) {\n        var boundContext = {};\n        var args;\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                return this;\n            }, boundContext, 1, 2, 3)\n        };\n        var context = namespace.func(4, 5, 6);\n        st.equal(context, boundContext, 'returned context is bound context');\n        st.notEqual(context, getCurrentContext.call(), 'returned context is not lexical context');\n        st.deepEqual(args, [1, 2, 3, 4, 5, 6], 'passed arguments are correct');\n        st.end();\n    });\n\n    t.test('passes the correct arguments when called as a constructor', function (st) {\n        var expected = { name: 'Correct' };\n        var namespace = {\n            Func: functionBind.call(function (arg) {\n                return arg;\n            }, { name: 'Incorrect' })\n        };\n        var returned = new namespace.Func(expected);\n        st.equal(returned, expected, 'returns the right arg when called as a constructor');\n        st.end();\n    });\n\n    t.test('has the new instance\\'s context when called as a constructor', function (st) {\n        var actualContext;\n        var expectedContext = { foo: 'bar' };\n        var namespace = {\n            Func: functionBind.call(function () {\n                actualContext = this;\n            }, expectedContext)\n        };\n        var result = new namespace.Func();\n        st.equal(result instanceof namespace.Func, true);\n        st.notEqual(actualContext, expectedContext);\n        st.end();\n    });\n\n    t.end();\n});\n\ntest('bound function length', function (t) {\n    t.test('sets a correct length without thisArg', function (st) {\n        var subject = functionBind.call(function (a, b, c) { return a + b + c; });\n        st.equal(subject.length, 3);\n        st.equal(subject(1, 2, 3), 6);\n        st.end();\n    });\n\n    t.test('sets a correct length with thisArg', function (st) {\n        var subject = functionBind.call(function (a, b, c) { return a + b + c; }, {});\n        st.equal(subject.length, 3);\n        st.equal(subject(1, 2, 3), 6);\n        st.end();\n    });\n\n    t.test('sets a correct length without thisArg and first argument', function (st) {\n        var subject = functionBind.call(function (a, b, c) { return a + b + c; }, undefined, 1);\n        st.equal(subject.length, 2);\n        st.equal(subject(2, 3), 6);\n        st.end();\n    });\n\n    t.test('sets a correct length with thisArg and first argument', function (st) {\n        var subject = functionBind.call(function (a, b, c) { return a + b + c; }, {}, 1);\n        st.equal(subject.length, 2);\n        st.equal(subject(2, 3), 6);\n        st.end();\n    });\n\n    t.test('sets a correct length without thisArg and too many arguments', function (st) {\n        var subject = functionBind.call(function (a, b, c) { return a + b + c; }, undefined, 1, 2, 3, 4);\n        st.equal(subject.length, 0);\n        st.equal(subject(), 6);\n        st.end();\n    });\n\n    t.test('sets a correct length with thisArg and too many arguments', function (st) {\n        var subject = functionBind.call(function (a, b, c) { return a + b + c; }, {}, 1, 2, 3, 4);\n        st.equal(subject.length, 0);\n        st.equal(subject(), 6);\n        st.end();\n    });\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\function-bind\\test\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\function-bind\\test\\index.js"
  },
  {
    "Content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v1.3.0](https://github.com/ljharb/get-intrinsic/compare/v1.2.7...v1.3.0) - 2025-02-22\n\n### Commits\n\n- [Dev Deps] update `es-abstract`, `es-value-fixtures`, `for-each`, `object-inspect` [`9b61553`](https://github.com/ljharb/get-intrinsic/commit/9b61553c587f1c1edbd435597e88c7d387da97dd)\n- [Deps] update `call-bind-apply-helpers`, `es-object-atoms`, `get-proto` [`a341fee`](https://github.com/ljharb/get-intrinsic/commit/a341fee0f39a403b0f0069e82c97642d5eb11043)\n- [New] add `Float16Array` [`de22116`](https://github.com/ljharb/get-intrinsic/commit/de22116b492fb989a0341bceb6e573abfaed73dc)\n\n## [v1.2.7](https://github.com/ljharb/get-intrinsic/compare/v1.2.6...v1.2.7) - 2025-01-02\n\n### Commits\n\n- [Refactor] use `get-proto` directly [`00ab955`](https://github.com/ljharb/get-intrinsic/commit/00ab95546a0980c8ad42a84253daaa8d2adcedf9)\n- [Deps] update `math-intrinsics` [`c716cdd`](https://github.com/ljharb/get-intrinsic/commit/c716cdd6bbe36b438057025561b8bb5a879ac8a0)\n- [Dev Deps] update `call-bound`, `es-abstract` [`dc648a6`](https://github.com/ljharb/get-intrinsic/commit/dc648a67eb359037dff8d8619bfa71d86debccb1)\n\n## [v1.2.6](https://github.com/ljharb/get-intrinsic/compare/v1.2.5...v1.2.6) - 2024-12-11\n\n### Commits\n\n- [Refactor] use `math-intrinsics` [`841be86`](https://github.com/ljharb/get-intrinsic/commit/841be8641a9254c4c75483b30c8871b5d5065926)\n- [Refactor] use `es-object-atoms` [`42057df`](https://github.com/ljharb/get-intrinsic/commit/42057dfa16f66f64787e66482af381cc6f31d2c1)\n- [Deps] update `call-bind-apply-helpers` [`45afa24`](https://github.com/ljharb/get-intrinsic/commit/45afa24a9ee4d6d3c172db1f555b16cb27843ef4)\n- [Dev Deps] update `call-bound` [`9cba9c6`](https://github.com/ljharb/get-intrinsic/commit/9cba9c6e70212bc163b7a5529cb25df46071646f)\n\n## [v1.2.5](https://github.com/ljharb/get-intrinsic/compare/v1.2.4...v1.2.5) - 2024-12-06\n\n### Commits\n\n- [actions] split out node 10-20, and 20+ [`6e2b9dd`](https://github.com/ljharb/get-intrinsic/commit/6e2b9dd23902665681ebe453256ccfe21d7966f0)\n- [Refactor] use `dunder-proto` and `call-bind-apply-helpers` instead of `has-proto` [`c095d17`](https://github.com/ljharb/get-intrinsic/commit/c095d179ad0f4fbfff20c8a3e0cb4fe668018998)\n- [Refactor] use `gopd` [`9841d5b`](https://github.com/ljharb/get-intrinsic/commit/9841d5b35f7ab4fd2d193f0c741a50a077920e90)\n- [Dev Deps] update `@ljharb/eslint-config`, `auto-changelog`, `es-abstract`, `es-value-fixtures`, `gopd`, `mock-property`, `object-inspect`, `tape` [`2d07e01`](https://github.com/ljharb/get-intrinsic/commit/2d07e01310cee2cbaedfead6903df128b1f5d425)\n- [Deps] update `gopd`, `has-proto`, `has-symbols`, `hasown` [`974d8bf`](https://github.com/ljharb/get-intrinsic/commit/974d8bf5baad7939eef35c25cc1dd88c10a30fa6)\n- [Dev Deps] update `call-bind`, `es-abstract`, `tape` [`df9dde1`](https://github.com/ljharb/get-intrinsic/commit/df9dde178186631ab8a3165ede056549918ce4bc)\n- [Refactor] cache `es-define-property` as well [`43ef543`](https://github.com/ljharb/get-intrinsic/commit/43ef543cb02194401420e3a914a4ca9168691926)\n- [Deps] update `has-proto`, `has-symbols`, `hasown` [`ad4949d`](https://github.com/ljharb/get-intrinsic/commit/ad4949d5467316505aad89bf75f9417ed782f7af)\n- [Tests] use `call-bound` directly [`ad5c406`](https://github.com/ljharb/get-intrinsic/commit/ad5c4069774bfe90e520a35eead5fe5ca9d69e80)\n- [Deps] update `has-proto`, `hasown` [`45414ca`](https://github.com/ljharb/get-intrinsic/commit/45414caa312333a2798953682c68f85c550627dd)\n- [Tests] replace `aud` with `npm audit` [`18d3509`](https://github.com/ljharb/get-intrinsic/commit/18d3509f79460e7924da70409ee81e5053087523)\n- [Deps] update `es-define-property` [`aadaa3b`](https://github.com/ljharb/get-intrinsic/commit/aadaa3b2188d77ad9bff394ce5d4249c49eb21f5)\n- [Dev Deps] add missing peer dep [`c296a16`](https://github.com/ljharb/get-intrinsic/commit/c296a16246d0c9a5981944f4cc5cf61fbda0cf6a)\n\n## [v1.2.4](https://github.com/ljharb/get-intrinsic/compare/v1.2.3...v1.2.4) - 2024-02-05\n\n### Commits\n\n- [Refactor] use all 7 &lt;+ ES6 Errors from `es-errors` [`bcac811`](https://github.com/ljharb/get-intrinsic/commit/bcac811abdc1c982e12abf848a410d6aae148d14)\n\n## [v1.2.3](https://github.com/ljharb/get-intrinsic/compare/v1.2.2...v1.2.3) - 2024-02-03\n\n### Commits\n\n- [Refactor] use `es-errors`, so things that only need those do not need `get-intrinsic` [`f11db9c`](https://github.com/ljharb/get-intrinsic/commit/f11db9c4fb97d87bbd53d3c73ac6b3db3613ad3b)\n- [Dev Deps] update `aud`, `es-abstract`, `mock-property`, `npmignore` [`b7ac7d1`](https://github.com/ljharb/get-intrinsic/commit/b7ac7d1616fefb03877b1aed0c8f8d61aad32b6c)\n- [meta] simplify `exports` [`faa0cc6`](https://github.com/ljharb/get-intrinsic/commit/faa0cc618e2830ffb51a8202490b0c215d965cbc)\n- [meta] add missing `engines.node` [`774dd0b`](https://github.com/ljharb/get-intrinsic/commit/774dd0b3e8f741c3f05a6322d124d6087f146af1)\n- [Dev Deps] update `tape` [`5828e8e`](https://github.com/ljharb/get-intrinsic/commit/5828e8e4a04e69312e87a36c0ea39428a7a4c3d8)\n- [Robustness] use null objects for lookups [`eb9a11f`](https://github.com/ljharb/get-intrinsic/commit/eb9a11fa9eb3e13b193fcc05a7fb814341b1a7b7)\n- [meta] add `sideEffects` flag [`89bcc7a`](https://github.com/ljharb/get-intrinsic/commit/89bcc7a42e19bf07b7c21e3094d5ab177109e6d2)\n\n## [v1.2.2](https://github.com/ljharb/get-intrinsic/compare/v1.2.1...v1.2.2) - 2023-10-20\n\n### Commits\n\n- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `call-bind`, `es-abstract`, `mock-property`, `object-inspect`, `tape` [`f51bcf2`](https://github.com/ljharb/get-intrinsic/commit/f51bcf26412d58d17ce17c91c9afd0ad271f0762)\n- [Refactor] use `hasown` instead of `has` [`18d14b7`](https://github.com/ljharb/get-intrinsic/commit/18d14b799bea6b5765e1cec91890830cbcdb0587)\n- [Deps] update `function-bind` [`6e109c8`](https://github.com/ljharb/get-intrinsic/commit/6e109c81e03804cc5e7824fb64353cdc3d8ee2c7)\n\n## [v1.2.1](https://github.com/ljharb/get-intrinsic/compare/v1.2.0...v1.2.1) - 2023-05-13\n\n### Commits\n\n- [Fix] avoid a crash in envs without `__proto__` [`7bad8d0`](https://github.com/ljharb/get-intrinsic/commit/7bad8d061bf8721733b58b73a2565af2b6756b64)\n- [Dev Deps] update `es-abstract` [`c60e6b7`](https://github.com/ljharb/get-intrinsic/commit/c60e6b7b4cf9660c7f27ed970970fd55fac48dc5)\n\n## [v1.2.0](https://github.com/ljharb/get-intrinsic/compare/v1.1.3...v1.2.0) - 2023-01-19\n\n### Commits\n\n- [actions] update checkout action [`ca6b12f`](https://github.com/ljharb/get-intrinsic/commit/ca6b12f31eaacea4ea3b055e744cd61623385ffb)\n- [Dev Deps] update `@ljharb/eslint-config`, `es-abstract`, `object-inspect`, `tape` [`41a3727`](https://github.com/ljharb/get-intrinsic/commit/41a3727d0026fa04273ae216a5f8e12eefd72da8)\n- [Fix] ensure `Error.prototype` is undeniable [`c511e97`](https://github.com/ljharb/get-intrinsic/commit/c511e97ae99c764c4524b540dee7a70757af8da3)\n- [Dev Deps] update `aud`, `es-abstract`, `tape` [`1bef8a8`](https://github.com/ljharb/get-intrinsic/commit/1bef8a8fd439ebb80863199b6189199e0851ac67)\n- [Dev Deps] update `aud`, `es-abstract` [`0d41f16`](https://github.com/ljharb/get-intrinsic/commit/0d41f16bcd500bc28b7bfc98043ebf61ea081c26)\n- [New] add `BigInt64Array` and `BigUint64Array` [`a6cca25`](https://github.com/ljharb/get-intrinsic/commit/a6cca25f29635889b7e9bd669baf9e04be90e48c)\n- [Tests] use `gopd` [`ecf7722`](https://github.com/ljharb/get-intrinsic/commit/ecf7722240d15cfd16edda06acf63359c10fb9bd)\n\n## [v1.1.3](https://github.com/ljharb/get-intrinsic/compare/v1.1.2...v1.1.3) - 2022-09-12\n\n### Commits\n\n- [Dev Deps] update `es-abstract`, `es-value-fixtures`, `tape` [`07ff291`](https://github.com/ljharb/get-intrinsic/commit/07ff291816406ebe5a12d7f16965bde0942dd688)\n- [Fix] properly check for % signs [`50ac176`](https://github.com/ljharb/get-intrinsic/commit/50ac1760fe99c227e64eabde76e9c0e44cd881b5)\n\n## [v1.1.2](https://github.com/ljharb/get-intrinsic/compare/v1.1.1...v1.1.2) - 2022-06-08\n\n### Fixed\n\n- [Fix] properly validate against extra % signs [`#16`](https://github.com/ljharb/get-intrinsic/issues/16)\n\n### Commits\n\n- [actions] reuse common workflows [`0972547`](https://github.com/ljharb/get-intrinsic/commit/0972547efd0abc863fe4c445a6ca7eb4f8c6901d)\n- [meta] use `npmignore` to autogenerate an npmignore file [`5ba0b51`](https://github.com/ljharb/get-intrinsic/commit/5ba0b51d8d8d4f1c31d426d74abc0770fd106bad)\n- [actions] use `node/install` instead of `node/run`; use `codecov` action [`c364492`](https://github.com/ljharb/get-intrinsic/commit/c364492af4af51333e6f81c0bf21fd3d602c3661)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `es-abstract`, `object-inspect`, `tape` [`dc04dad`](https://github.com/ljharb/get-intrinsic/commit/dc04dad86f6e5608775a2640cb0db5927ae29ed9)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `es-abstract`, `object-inspect`, `safe-publish-latest`, `tape` [`1c14059`](https://github.com/ljharb/get-intrinsic/commit/1c1405984e86dd2dc9366c15d8a0294a96a146a5)\n- [Tests] use `mock-property` [`b396ef0`](https://github.com/ljharb/get-intrinsic/commit/b396ef05bb73b1d699811abd64b0d9b97997fdda)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `object-inspect`, `tape` [`c2c758d`](https://github.com/ljharb/get-intrinsic/commit/c2c758d3b90af4fef0a76910d8d3c292ec8d1d3e)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `es-abstract`, `es-value-fixtures`, `object-inspect`, `tape` [`29e3c09`](https://github.com/ljharb/get-intrinsic/commit/29e3c091c2bf3e17099969847e8729d0e46896de)\n- [actions] update codecov uploader [`8cbc141`](https://github.com/ljharb/get-intrinsic/commit/8cbc1418940d7a8941f3a7985cbc4ac095c5e13d)\n- [Dev Deps] update `@ljharb/eslint-config`, `es-abstract`, `es-value-fixtures`, `object-inspect`, `tape` [`10b6f5c`](https://github.com/ljharb/get-intrinsic/commit/10b6f5c02593fb3680c581d696ac124e30652932)\n- [readme] add github actions/codecov badges [`4e25400`](https://github.com/ljharb/get-intrinsic/commit/4e25400d9f51ae9eb059cbe22d9144e70ea214e8)\n- [Tests] use `for-each` instead of `foreach` [`c05b957`](https://github.com/ljharb/get-intrinsic/commit/c05b957ad9a7bc7721af7cc9e9be1edbfe057496)\n- [Dev Deps] update `es-abstract` [`29b05ae`](https://github.com/ljharb/get-intrinsic/commit/29b05aec3e7330e9ad0b8e0f685a9112c20cdd97)\n- [meta] use `prepublishOnly` script for npm 7+ [`95c285d`](https://github.com/ljharb/get-intrinsic/commit/95c285da810516057d3bbfa871176031af38f05d)\n- [Deps] update `has-symbols` [`593cb4f`](https://github.com/ljharb/get-intrinsic/commit/593cb4fb38e7922e40e42c183f45274b636424cd)\n- [readme] fix repo URLs [`1c8305b`](https://github.com/ljharb/get-intrinsic/commit/1c8305b5365827c9b6fc785434aac0e1328ff2f5)\n- [Deps] update `has-symbols` [`c7138b6`](https://github.com/ljharb/get-intrinsic/commit/c7138b6c6d73132d859471fb8c13304e1e7c8b20)\n- [Dev Deps] remove unused `has-bigints` [`bd63aff`](https://github.com/ljharb/get-intrinsic/commit/bd63aff6ad8f3a986c557fcda2914187bdaab359)\n\n## [v1.1.1](https://github.com/ljharb/get-intrinsic/compare/v1.1.0...v1.1.1) - 2021-02-03\n\n### Fixed\n\n- [meta] export `./package.json` [`#9`](https://github.com/ljharb/get-intrinsic/issues/9)\n\n### Commits\n\n- [readme] flesh out the readme; use `evalmd` [`d12f12c`](https://github.com/ljharb/get-intrinsic/commit/d12f12c15345a0a0772cc65a7c64369529abd614)\n- [eslint] set up proper globals config [`5a8c098`](https://github.com/ljharb/get-intrinsic/commit/5a8c0984e3319d1ac0e64b102f8ec18b64e79f36)\n- [Dev Deps] update `eslint` [`7b9a5c0`](https://github.com/ljharb/get-intrinsic/commit/7b9a5c0d31a90ca1a1234181c74988fb046701cd)\n\n## [v1.1.0](https://github.com/ljharb/get-intrinsic/compare/v1.0.2...v1.1.0) - 2021-01-25\n\n### Fixed\n\n- [Refactor] delay `Function` eval until syntax-derived values are requested [`#3`](https://github.com/ljharb/get-intrinsic/issues/3)\n\n### Commits\n\n- [Tests] migrate tests to Github Actions [`2ab762b`](https://github.com/ljharb/get-intrinsic/commit/2ab762b48164aea8af37a40ba105bbc8246ab8c4)\n- [meta] do not publish github action workflow files [`5e7108e`](https://github.com/ljharb/get-intrinsic/commit/5e7108e4768b244d48d9567ba4f8a6cab9c65b8e)\n- [Tests] add some coverage [`01ac7a8`](https://github.com/ljharb/get-intrinsic/commit/01ac7a87ac29738567e8524cd8c9e026b1fa8cb3)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `call-bind`, `es-abstract`, `tape`; add `call-bind` [`911b672`](https://github.com/ljharb/get-intrinsic/commit/911b672fbffae433a96924c6ce013585e425f4b7)\n- [Refactor] rearrange evalled constructors a bit [`7e7e4bf`](https://github.com/ljharb/get-intrinsic/commit/7e7e4bf583f3799c8ac1c6c5e10d2cb553957347)\n- [meta] add Automatic Rebase and Require Allow Edits workflows [`0199968`](https://github.com/ljharb/get-intrinsic/commit/01999687a263ffce0a3cb011dfbcb761754aedbc)\n\n## [v1.0.2](https://github.com/ljharb/get-intrinsic/compare/v1.0.1...v1.0.2) - 2020-12-17\n\n### Commits\n\n- [Fix] Throw for non‑existent intrinsics [`68f873b`](https://github.com/ljharb/get-intrinsic/commit/68f873b013c732a05ad6f5fc54f697e55515461b)\n- [Fix] Throw for non‑existent segments in the intrinsic path [`8325dee`](https://github.com/ljharb/get-intrinsic/commit/8325deee43128f3654d3399aa9591741ebe17b21)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `has-bigints`, `object-inspect` [`0c227a7`](https://github.com/ljharb/get-intrinsic/commit/0c227a7d8b629166f25715fd242553892e458525)\n- [meta] do not lint coverage output [`70d2419`](https://github.com/ljharb/get-intrinsic/commit/70d24199b620043cd9110fc5f426d214ebe21dc9)\n\n## [v1.0.1](https://github.com/ljharb/get-intrinsic/compare/v1.0.0...v1.0.1) - 2020-10-30\n\n### Commits\n\n- [Tests] gather coverage data on every job [`d1d280d`](https://github.com/ljharb/get-intrinsic/commit/d1d280dec714e3f0519cc877dbcb193057d9cac6)\n- [Fix] add missing dependencies [`5031771`](https://github.com/ljharb/get-intrinsic/commit/5031771bb1095b38be88ce7c41d5de88718e432e)\n- [Tests] use `es-value-fixtures` [`af48765`](https://github.com/ljharb/get-intrinsic/commit/af48765a23c5323fb0b6b38dbf00eb5099c7bebc)\n\n## v1.0.0 - 2020-10-29\n\n### Commits\n\n- Implementation [`bbce57c`](https://github.com/ljharb/get-intrinsic/commit/bbce57c6f33d05b2d8d3efa273ceeb3ee01127bb)\n- Tests [`17b4f0d`](https://github.com/ljharb/get-intrinsic/commit/17b4f0d56dea6b4059b56fc30ef3ee4d9500ebc2)\n- Initial commit [`3153294`](https://github.com/ljharb/get-intrinsic/commit/31532948de363b0a27dd9fd4649e7b7028ec4b44)\n- npm init [`fb326c4`](https://github.com/ljharb/get-intrinsic/commit/fb326c4d2817c8419ec31de1295f06bb268a7902)\n- [meta] add Automatic Rebase and Require Allow Edits workflows [`48862fb`](https://github.com/ljharb/get-intrinsic/commit/48862fb2508c8f6a57968e6d08b7c883afc9d550)\n- [meta] add `auto-changelog` [`5f28ad0`](https://github.com/ljharb/get-intrinsic/commit/5f28ad019e060a353d8028f9f2591a9cc93074a1)\n- [meta] add \"funding\"; create `FUNDING.yml` [`c2bbdde`](https://github.com/ljharb/get-intrinsic/commit/c2bbddeba73a875be61484ee4680b129a6d4e0a1)\n- [Tests] add `npm run lint` [`0a84b98`](https://github.com/ljharb/get-intrinsic/commit/0a84b98b22b7cf7a748666f705b0003a493c35fd)\n- Only apps should have lockfiles [`9586c75`](https://github.com/ljharb/get-intrinsic/commit/9586c75866c1ee678e4d5d4dbbdef6997e511b05)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\get-intrinsic\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\get-intrinsic\\CHANGELOG.md"
  },
  {
    "Content": "'use strict';\n\nvar undefined;\n\nvar $Object = require('es-object-atoms');\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar abs = require('math-intrinsics/abs');\nvar floor = require('math-intrinsics/floor');\nvar max = require('math-intrinsics/max');\nvar min = require('math-intrinsics/min');\nvar pow = require('math-intrinsics/pow');\nvar round = require('math-intrinsics/round');\nvar sign = require('math-intrinsics/sign');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = require('gopd');\nvar $defineProperty = require('es-define-property');\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = require('get-proto');\nvar $ObjectGPO = require('get-proto/Object.getPrototypeOf');\nvar $ReflectGPO = require('get-proto/Reflect.getPrototypeOf');\n\nvar $apply = require('call-bind-apply-helpers/functionApply');\nvar $call = require('call-bind-apply-helpers/functionCall');\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float16Array%': typeof Float16Array === 'undefined' ? undefined : Float16Array,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': $Object,\n\t'%Object.getOwnPropertyDescriptor%': $gOPD,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\n\t'%Function.prototype.call%': $call,\n\t'%Function.prototype.apply%': $apply,\n\t'%Object.defineProperty%': $defineProperty,\n\t'%Object.getPrototypeOf%': $ObjectGPO,\n\t'%Math.abs%': abs,\n\t'%Math.floor%': floor,\n\t'%Math.max%': max,\n\t'%Math.min%': min,\n\t'%Math.pow%': pow,\n\t'%Math.round%': round,\n\t'%Math.sign%': sign,\n\t'%Reflect.getPrototypeOf%': $ReflectGPO\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call($call, Array.prototype.concat);\nvar $spliceApply = bind.call($apply, Array.prototype.splice);\nvar $replace = bind.call($call, String.prototype.replace);\nvar $strSlice = bind.call($call, String.prototype.slice);\nvar $exec = bind.call($call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\get-intrinsic\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\get-intrinsic\\index.js"
  },
  {
    "Content": "# get-intrinsic <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![dependency status][deps-svg]][deps-url]\n[![dev dependency status][dev-deps-svg]][dev-deps-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\nGet and robustly cache all JS language-level intrinsics at first require time.\n\nSee the syntax described [in the JS spec](https://tc39.es/ecma262/#sec-well-known-intrinsic-objects) for reference.\n\n## Example\n\n```js\nvar GetIntrinsic = require('get-intrinsic');\nvar assert = require('assert');\n\n// static methods\nassert.equal(GetIntrinsic('%Math.pow%'), Math.pow);\nassert.equal(Math.pow(2, 3), 8);\nassert.equal(GetIntrinsic('%Math.pow%')(2, 3), 8);\ndelete Math.pow;\nassert.equal(GetIntrinsic('%Math.pow%')(2, 3), 8);\n\n// instance methods\nvar arr = [1];\nassert.equal(GetIntrinsic('%Array.prototype.push%'), Array.prototype.push);\nassert.deepEqual(arr, [1]);\n\narr.push(2);\nassert.deepEqual(arr, [1, 2]);\n\nGetIntrinsic('%Array.prototype.push%').call(arr, 3);\nassert.deepEqual(arr, [1, 2, 3]);\n\ndelete Array.prototype.push;\nGetIntrinsic('%Array.prototype.push%').call(arr, 4);\nassert.deepEqual(arr, [1, 2, 3, 4]);\n\n// missing features\ndelete JSON.parse; // to simulate a real intrinsic that is missing in the environment\nassert.throws(() => GetIntrinsic('%JSON.parse%'));\nassert.equal(undefined, GetIntrinsic('%JSON.parse%', true));\n```\n\n## Tests\nSimply clone the repo, `npm install`, and run `npm test`\n\n## Security\n\nPlease email [@ljharb](https://github.com/ljharb) or see https://tidelift.com/security if you have a potential security vulnerability to report.\n\n[package-url]: https://npmjs.org/package/get-intrinsic\n[npm-version-svg]: https://versionbadg.es/ljharb/get-intrinsic.svg\n[deps-svg]: https://david-dm.org/ljharb/get-intrinsic.svg\n[deps-url]: https://david-dm.org/ljharb/get-intrinsic\n[dev-deps-svg]: https://david-dm.org/ljharb/get-intrinsic/dev-status.svg\n[dev-deps-url]: https://david-dm.org/ljharb/get-intrinsic#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/get-intrinsic.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/get-intrinsic.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/get-intrinsic.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=get-intrinsic\n[codecov-image]: https://codecov.io/gh/ljharb/get-intrinsic/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/ljharb/get-intrinsic/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/get-intrinsic\n[actions-url]: https://github.com/ljharb/get-intrinsic/actions\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\get-intrinsic\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\get-intrinsic\\README.md"
  },
  {
    "Content": "'use strict';\n\nvar GetIntrinsic = require('../');\n\nvar test = require('tape');\nvar forEach = require('for-each');\nvar debug = require('object-inspect');\nvar generatorFns = require('make-generator-function')();\nvar asyncFns = require('make-async-function').list();\nvar asyncGenFns = require('make-async-generator-function')();\nvar mockProperty = require('mock-property');\n\nvar callBound = require('call-bound');\nvar v = require('es-value-fixtures');\nvar $gOPD = require('gopd');\nvar DefinePropertyOrThrow = require('es-abstract/2023/DefinePropertyOrThrow');\n\nvar $isProto = callBound('%Object.prototype.isPrototypeOf%');\n\ntest('export', function (t) {\n\tt.equal(typeof GetIntrinsic, 'function', 'it is a function');\n\tt.equal(GetIntrinsic.length, 2, 'function has length of 2');\n\n\tt.end();\n});\n\ntest('throws', function (t) {\n\tt['throws'](\n\t\tfunction () { GetIntrinsic('not an intrinsic'); },\n\t\tSyntaxError,\n\t\t'nonexistent intrinsic throws a syntax error'\n\t);\n\n\tt['throws'](\n\t\tfunction () { GetIntrinsic(''); },\n\t\tTypeError,\n\t\t'empty string intrinsic throws a type error'\n\t);\n\n\tt['throws'](\n\t\tfunction () { GetIntrinsic('.'); },\n\t\tSyntaxError,\n\t\t'\"just a dot\" intrinsic throws a syntax error'\n\t);\n\n\tt['throws'](\n\t\tfunction () { GetIntrinsic('%String'); },\n\t\tSyntaxError,\n\t\t'Leading % without trailing % throws a syntax error'\n\t);\n\n\tt['throws'](\n\t\tfunction () { GetIntrinsic('String%'); },\n\t\tSyntaxError,\n\t\t'Trailing % without leading % throws a syntax error'\n\t);\n\n\tt['throws'](\n\t\tfunction () { GetIntrinsic(\"String['prototype]\"); },\n\t\tSyntaxError,\n\t\t'Dynamic property access is disallowed for intrinsics (unterminated string)'\n\t);\n\n\tt['throws'](\n\t\tfunction () { GetIntrinsic('%Proxy.prototype.undefined%'); },\n\t\tTypeError,\n\t\t\"Throws when middle part doesn't exist (%Proxy.prototype.undefined%)\"\n\t);\n\n\tt['throws'](\n\t\tfunction () { GetIntrinsic('%Array.prototype%garbage%'); },\n\t\tSyntaxError,\n\t\t'Throws with extra percent signs'\n\t);\n\n\tt['throws'](\n\t\tfunction () { GetIntrinsic('%Array.prototype%push%'); },\n\t\tSyntaxError,\n\t\t'Throws with extra percent signs, even on an existing intrinsic'\n\t);\n\n\tforEach(v.nonStrings, function (nonString) {\n\t\tt['throws'](\n\t\t\tfunction () { GetIntrinsic(nonString); },\n\t\t\tTypeError,\n\t\t\tdebug(nonString) + ' is not a String'\n\t\t);\n\t});\n\n\tforEach(v.nonBooleans, function (nonBoolean) {\n\t\tt['throws'](\n\t\t\tfunction () { GetIntrinsic('%', nonBoolean); },\n\t\t\tTypeError,\n\t\t\tdebug(nonBoolean) + ' is not a Boolean'\n\t\t);\n\t});\n\n\tforEach([\n\t\t'toString',\n\t\t'propertyIsEnumerable',\n\t\t'hasOwnProperty'\n\t], function (objectProtoMember) {\n\t\tt['throws'](\n\t\t\tfunction () { GetIntrinsic(objectProtoMember); },\n\t\t\tSyntaxError,\n\t\t\tdebug(objectProtoMember) + ' is not an intrinsic'\n\t\t);\n\t});\n\n\tt.end();\n});\n\ntest('base intrinsics', function (t) {\n\tt.equal(GetIntrinsic('%Object%'), Object, '%Object% yields Object');\n\tt.equal(GetIntrinsic('Object'), Object, 'Object yields Object');\n\tt.equal(GetIntrinsic('%Array%'), Array, '%Array% yields Array');\n\tt.equal(GetIntrinsic('Array'), Array, 'Array yields Array');\n\n\tt.end();\n});\n\ntest('dotted paths', function (t) {\n\tt.equal(GetIntrinsic('%Object.prototype.toString%'), Object.prototype.toString, '%Object.prototype.toString% yields Object.prototype.toString');\n\tt.equal(GetIntrinsic('Object.prototype.toString'), Object.prototype.toString, 'Object.prototype.toString yields Object.prototype.toString');\n\tt.equal(GetIntrinsic('%Array.prototype.push%'), Array.prototype.push, '%Array.prototype.push% yields Array.prototype.push');\n\tt.equal(GetIntrinsic('Array.prototype.push'), Array.prototype.push, 'Array.prototype.push yields Array.prototype.push');\n\n\ttest('underscore paths are aliases for dotted paths', { skip: !Object.isFrozen || Object.isFrozen(Object.prototype) }, function (st) {\n\t\tvar original = GetIntrinsic('%ObjProto_toString%');\n\n\t\tforEach([\n\t\t\t'%Object.prototype.toString%',\n\t\t\t'Object.prototype.toString',\n\t\t\t'%ObjectPrototype.toString%',\n\t\t\t'ObjectPrototype.toString',\n\t\t\t'%ObjProto_toString%',\n\t\t\t'ObjProto_toString'\n\t\t], function (name) {\n\t\t\tDefinePropertyOrThrow(Object.prototype, 'toString', {\n\t\t\t\t'[[Value]]': function toString() {\n\t\t\t\t\treturn original.apply(this, arguments);\n\t\t\t\t}\n\t\t\t});\n\t\t\tst.equal(GetIntrinsic(name), original, name + ' yields original Object.prototype.toString');\n\t\t});\n\n\t\tDefinePropertyOrThrow(Object.prototype, 'toString', { '[[Value]]': original });\n\t\tst.end();\n\t});\n\n\ttest('dotted paths cache', { skip: !Object.isFrozen || Object.isFrozen(Object.prototype) }, function (st) {\n\t\tvar original = GetIntrinsic('%Object.prototype.propertyIsEnumerable%');\n\n\t\tforEach([\n\t\t\t'%Object.prototype.propertyIsEnumerable%',\n\t\t\t'Object.prototype.propertyIsEnumerable',\n\t\t\t'%ObjectPrototype.propertyIsEnumerable%',\n\t\t\t'ObjectPrototype.propertyIsEnumerable'\n\t\t], function (name) {\n\t\t\tvar restore = mockProperty(Object.prototype, 'propertyIsEnumerable', {\n\t\t\t\tvalue: function propertyIsEnumerable() {\n\t\t\t\t\treturn original.apply(this, arguments);\n\t\t\t\t}\n\t\t\t});\n\t\t\tst.equal(GetIntrinsic(name), original, name + ' yields cached Object.prototype.propertyIsEnumerable');\n\n\t\t\trestore();\n\t\t});\n\n\t\tst.end();\n\t});\n\n\ttest('dotted path reports correct error', function (st) {\n\t\tst['throws'](function () {\n\t\t\tGetIntrinsic('%NonExistentIntrinsic.prototype.property%');\n\t\t}, /%NonExistentIntrinsic%/, 'The base intrinsic of %NonExistentIntrinsic.prototype.property% is %NonExistentIntrinsic%');\n\n\t\tst['throws'](function () {\n\t\t\tGetIntrinsic('%NonExistentIntrinsicPrototype.property%');\n\t\t}, /%NonExistentIntrinsicPrototype%/, 'The base intrinsic of %NonExistentIntrinsicPrototype.property% is %NonExistentIntrinsicPrototype%');\n\n\t\tst.end();\n\t});\n\n\tt.end();\n});\n\ntest('accessors', { skip: !$gOPD || typeof Map !== 'function' }, function (t) {\n\tvar actual = $gOPD(Map.prototype, 'size');\n\tt.ok(actual, 'Map.prototype.size has a descriptor');\n\tt.equal(typeof actual.get, 'function', 'Map.prototype.size has a getter function');\n\tt.equal(GetIntrinsic('%Map.prototype.size%'), actual.get, '%Map.prototype.size% yields the getter for it');\n\tt.equal(GetIntrinsic('Map.prototype.size'), actual.get, 'Map.prototype.size yields the getter for it');\n\n\tt.end();\n});\n\ntest('generator functions', { skip: !generatorFns.length }, function (t) {\n\tvar $GeneratorFunction = GetIntrinsic('%GeneratorFunction%');\n\tvar $GeneratorFunctionPrototype = GetIntrinsic('%Generator%');\n\tvar $GeneratorPrototype = GetIntrinsic('%GeneratorPrototype%');\n\n\tforEach(generatorFns, function (genFn) {\n\t\tvar fnName = genFn.name;\n\t\tfnName = fnName ? \"'\" + fnName + \"'\" : 'genFn';\n\n\t\tt.ok(genFn instanceof $GeneratorFunction, fnName + ' instanceof %GeneratorFunction%');\n\t\tt.ok($isProto($GeneratorFunctionPrototype, genFn), '%Generator% is prototype of ' + fnName);\n\t\tt.ok($isProto($GeneratorPrototype, genFn.prototype), '%GeneratorPrototype% is prototype of ' + fnName + '.prototype');\n\t});\n\n\tt.end();\n});\n\ntest('async functions', { skip: !asyncFns.length }, function (t) {\n\tvar $AsyncFunction = GetIntrinsic('%AsyncFunction%');\n\tvar $AsyncFunctionPrototype = GetIntrinsic('%AsyncFunctionPrototype%');\n\n\tforEach(asyncFns, function (asyncFn) {\n\t\tvar fnName = asyncFn.name;\n\t\tfnName = fnName ? \"'\" + fnName + \"'\" : 'asyncFn';\n\n\t\tt.ok(asyncFn instanceof $AsyncFunction, fnName + ' instanceof %AsyncFunction%');\n\t\tt.ok($isProto($AsyncFunctionPrototype, asyncFn), '%AsyncFunctionPrototype% is prototype of ' + fnName);\n\t});\n\n\tt.end();\n});\n\ntest('async generator functions', { skip: asyncGenFns.length === 0 }, function (t) {\n\tvar $AsyncGeneratorFunction = GetIntrinsic('%AsyncGeneratorFunction%');\n\tvar $AsyncGeneratorFunctionPrototype = GetIntrinsic('%AsyncGenerator%');\n\tvar $AsyncGeneratorPrototype = GetIntrinsic('%AsyncGeneratorPrototype%');\n\n\tforEach(asyncGenFns, function (asyncGenFn) {\n\t\tvar fnName = asyncGenFn.name;\n\t\tfnName = fnName ? \"'\" + fnName + \"'\" : 'asyncGenFn';\n\n\t\tt.ok(asyncGenFn instanceof $AsyncGeneratorFunction, fnName + ' instanceof %AsyncGeneratorFunction%');\n\t\tt.ok($isProto($AsyncGeneratorFunctionPrototype, asyncGenFn), '%AsyncGenerator% is prototype of ' + fnName);\n\t\tt.ok($isProto($AsyncGeneratorPrototype, asyncGenFn.prototype), '%AsyncGeneratorPrototype% is prototype of ' + fnName + '.prototype');\n\t});\n\n\tt.end();\n});\n\ntest('%ThrowTypeError%', function (t) {\n\tvar $ThrowTypeError = GetIntrinsic('%ThrowTypeError%');\n\n\tt.equal(typeof $ThrowTypeError, 'function', 'is a function');\n\tt['throws'](\n\t\t$ThrowTypeError,\n\t\tTypeError,\n\t\t'%ThrowTypeError% throws a TypeError'\n\t);\n\n\tt.end();\n});\n\ntest('allowMissing', { skip: asyncGenFns.length > 0 }, function (t) {\n\tt['throws'](\n\t\tfunction () { GetIntrinsic('%AsyncGeneratorPrototype%'); },\n\t\tTypeError,\n\t\t'throws when missing'\n\t);\n\n\tt.equal(\n\t\tGetIntrinsic('%AsyncGeneratorPrototype%', true),\n\t\tundefined,\n\t\t'does not throw when allowMissing'\n\t);\n\n\tt.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\get-intrinsic\\test\\GetIntrinsic.js",
    "RelativePath": "tools\\backend\\node_modules\\get-intrinsic\\test\\GetIntrinsic.js"
  },
  {
    "Content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v1.0.1](https://github.com/ljharb/get-proto/compare/v1.0.0...v1.0.1) - 2025-01-02\n\n### Commits\n\n- [Fix] for the `Object.getPrototypeOf` window, throw for non-objects [`7fe6508`](https://github.com/ljharb/get-proto/commit/7fe6508b71419ebe1976bedb86001d1feaeaa49a)\n\n## v1.0.0 - 2025-01-01\n\n### Commits\n\n- Initial implementation, tests, readme, types [`5c70775`](https://github.com/ljharb/get-proto/commit/5c707751e81c3deeb2cf980d185fc7fd43611415)\n- Initial commit [`7c65c2a`](https://github.com/ljharb/get-proto/commit/7c65c2ad4e33d5dae2f219ebe1a046ae2256972c)\n- npm init [`0b8cf82`](https://github.com/ljharb/get-proto/commit/0b8cf824c9634e4a34ef7dd2a2cdc5be6ac79518)\n- Only apps should have lockfiles [`a6d1bff`](https://github.com/ljharb/get-proto/commit/a6d1bffc364f5828377cea7194558b2dbef7aea2)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\get-proto\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\get-proto\\CHANGELOG.md"
  },
  {
    "Content": "'use strict';\n\nvar reflectGetProto = require('./Reflect.getPrototypeOf');\nvar originalGetProto = require('./Object.getPrototypeOf');\n\nvar getDunderProto = require('dunder-proto/get');\n\n/** @type {import('.')} */\nmodule.exports = reflectGetProto\n\t? function getProto(O) {\n\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\treturn reflectGetProto(O);\n\t}\n\t: originalGetProto\n\t\t? function getProto(O) {\n\t\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\t\tthrow new TypeError('getProto: not an object');\n\t\t\t}\n\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\treturn originalGetProto(O);\n\t\t}\n\t\t: getDunderProto\n\t\t\t? function getProto(O) {\n\t\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\t\treturn getDunderProto(O);\n\t\t\t}\n\t\t\t: null;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\get-proto\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\get-proto\\index.js"
  },
  {
    "Content": "'use strict';\n\nvar $Object = require('es-object-atoms');\n\n/** @type {import('./Object.getPrototypeOf')} */\nmodule.exports = $Object.getPrototypeOf || null;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\get-proto\\Object.getPrototypeOf.js",
    "RelativePath": "tools\\backend\\node_modules\\get-proto\\Object.getPrototypeOf.js"
  },
  {
    "Content": "# get-proto <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\nRobustly get the [[Prototype]] of an object. Uses the best available method.\n\n## Getting started\n\n```sh\nnpm install --save get-proto\n```\n\n## Usage/Examples\n\n```js\nconst assert = require('assert');\nconst getProto = require('get-proto');\n\nconst a = { a: 1, b: 2, [Symbol.toStringTag]: 'foo' };\nconst b = { c: 3, __proto__: a };\n\nassert.equal(getProto(b), a);\nassert.equal(getProto(a), Object.prototype);\nassert.equal(getProto({ __proto__: null }), null);\n```\n\n## Tests\n\nClone the repo, `npm install`, and run `npm test`\n\n[package-url]: https://npmjs.org/package/get-proto\n[npm-version-svg]: https://versionbadg.es/ljharb/get-proto.svg\n[deps-svg]: https://david-dm.org/ljharb/get-proto.svg\n[deps-url]: https://david-dm.org/ljharb/get-proto\n[dev-deps-svg]: https://david-dm.org/ljharb/get-proto/dev-status.svg\n[dev-deps-url]: https://david-dm.org/ljharb/get-proto#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/get-proto.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/get-proto.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/get-proto.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=get-proto\n[codecov-image]: https://codecov.io/gh/ljharb/get-proto/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/ljharb/get-proto/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/get-proto\n[actions-url]: https://github.com/ljharb/get-proto/actions\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\get-proto\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\get-proto\\README.md"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./Reflect.getPrototypeOf')} */\nmodule.exports = (typeof Reflect !== 'undefined' && Reflect.getPrototypeOf) || null;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\get-proto\\Reflect.getPrototypeOf.js",
    "RelativePath": "tools\\backend\\node_modules\\get-proto\\Reflect.getPrototypeOf.js"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\n\nvar getProto = require('../');\n\ntest('getProto', function (t) {\n\tt.equal(typeof getProto, 'function', 'is a function');\n\n\tt.test('can get', { skip: !getProto }, function (st) {\n\t\tif (getProto) { // TS doesn't understand tape's skip\n\t\t\tvar proto = { b: 2 };\n\t\t\tst.equal(getProto(proto), Object.prototype, 'proto: returns the [[Prototype]]');\n\n\t\t\tst.test('nullish value', function (s2t) {\n\t\t\t// @ts-expect-error\n\t\t\t\ts2t['throws'](function () { return getProto(undefined); }, TypeError, 'undefined is not an object');\n\t\t\t\t// @ts-expect-error\n\t\t\t\ts2t['throws'](function () { return getProto(null); }, TypeError, 'null is not an object');\n\t\t\t\ts2t.end();\n\t\t\t});\n\n\t\t\t// @ts-expect-error\n\t\t\tst['throws'](function () { getProto(true); }, 'throws for true');\n\t\t\t// @ts-expect-error\n\t\t\tst['throws'](function () { getProto(false); }, 'throws for false');\n\t\t\t// @ts-expect-error\n\t\t\tst['throws'](function () { getProto(42); }, 'throws for 42');\n\t\t\t// @ts-expect-error\n\t\t\tst['throws'](function () { getProto(NaN); }, 'throws for NaN');\n\t\t\t// @ts-expect-error\n\t\t\tst['throws'](function () { getProto(0); }, 'throws for +0');\n\t\t\t// @ts-expect-error\n\t\t\tst['throws'](function () { getProto(-0); }, 'throws for -0');\n\t\t\t// @ts-expect-error\n\t\t\tst['throws'](function () { getProto(Infinity); }, 'throws for ∞');\n\t\t\t// @ts-expect-error\n\t\t\tst['throws'](function () { getProto(-Infinity); }, 'throws for -∞');\n\t\t\t// @ts-expect-error\n\t\t\tst['throws'](function () { getProto(''); }, 'throws for empty string');\n\t\t\t// @ts-expect-error\n\t\t\tst['throws'](function () { getProto('foo'); }, 'throws for non-empty string');\n\t\t\tst.equal(getProto(/a/g), RegExp.prototype);\n\t\t\tst.equal(getProto(new Date()), Date.prototype);\n\t\t\tst.equal(getProto(function () {}), Function.prototype);\n\t\t\tst.equal(getProto([]), Array.prototype);\n\t\t\tst.equal(getProto({}), Object.prototype);\n\n\t\t\tvar nullObject = { __proto__: null };\n\t\t\tif ('toString' in nullObject) {\n\t\t\t\tst.comment('no null objects in this engine');\n\t\t\t\tst.equal(getProto(nullObject), Object.prototype, '\"null\" object has Object.prototype as [[Prototype]]');\n\t\t\t} else {\n\t\t\t\tst.equal(getProto(nullObject), null, 'null object has null [[Prototype]]');\n\t\t\t}\n\t\t}\n\n\t\tst.end();\n\t});\n\n\tt.test('can not get', { skip: !!getProto }, function (st) {\n\t\tst.equal(getProto, null);\n\n\t\tst.end();\n\t});\n\n\tt.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\get-proto\\test\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\get-proto\\test\\index.js"
  },
  {
    "Content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v1.2.0](https://github.com/ljharb/gopd/compare/v1.1.0...v1.2.0) - 2024-12-03\n\n### Commits\n\n- [New] add `gOPD` entry point; remove `get-intrinsic` [`5b61232`](https://github.com/ljharb/gopd/commit/5b61232dedea4591a314bcf16101b1961cee024e)\n\n## [v1.1.0](https://github.com/ljharb/gopd/compare/v1.0.1...v1.1.0) - 2024-11-29\n\n### Commits\n\n- [New] add types [`f585e39`](https://github.com/ljharb/gopd/commit/f585e397886d270e4ba84e53d226e4f9ca2eb0e6)\n- [Dev Deps] update `@ljharb/eslint-config`, `auto-changelog`, `tape` [`0b8e4fd`](https://github.com/ljharb/gopd/commit/0b8e4fded64397a7726a9daa144a6cc9a5e2edfa)\n- [Dev Deps] update `aud`, `npmignore`, `tape` [`48378b2`](https://github.com/ljharb/gopd/commit/48378b2443f09a4f7efbd0fb6c3ee845a6cabcf3)\n- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `tape` [`78099ee`](https://github.com/ljharb/gopd/commit/78099eeed41bfdc134c912280483689cc8861c31)\n- [Tests] replace `aud` with `npm audit` [`4e0d0ac`](https://github.com/ljharb/gopd/commit/4e0d0ac47619d24a75318a8e1f543ee04b2a2632)\n- [meta] add missing `engines.node` [`1443316`](https://github.com/ljharb/gopd/commit/14433165d07835c680155b3dfd62d9217d735eca)\n- [Deps] update `get-intrinsic` [`eee5f51`](https://github.com/ljharb/gopd/commit/eee5f51769f3dbaf578b70e2a3199116b01aa670)\n- [Deps] update `get-intrinsic` [`550c378`](https://github.com/ljharb/gopd/commit/550c3780e3a9c77b62565712a001b4ed64ea61f5)\n- [Dev Deps] add missing peer dep [`8c2ecf8`](https://github.com/ljharb/gopd/commit/8c2ecf848122e4e30abfc5b5086fb48b390dce75)\n\n## [v1.0.1](https://github.com/ljharb/gopd/compare/v1.0.0...v1.0.1) - 2022-11-01\n\n### Commits\n\n- [Fix] actually export gOPD instead of dP [`4b624bf`](https://github.com/ljharb/gopd/commit/4b624bfbeff788c5e3ff16d9443a83627847234f)\n\n## v1.0.0 - 2022-11-01\n\n### Commits\n\n- Initial implementation, tests, readme [`0911e01`](https://github.com/ljharb/gopd/commit/0911e012cd642092bd88b732c161c58bf4f20bea)\n- Initial commit [`b84e33f`](https://github.com/ljharb/gopd/commit/b84e33f5808a805ac57ff88d4247ad935569acbe)\n- [actions] add reusable workflows [`12ae28a`](https://github.com/ljharb/gopd/commit/12ae28ae5f50f86e750215b6e2188901646d0119)\n- npm init [`280118b`](https://github.com/ljharb/gopd/commit/280118badb45c80b4483836b5cb5315bddf6e582)\n- [meta] add `auto-changelog` [`bb78de5`](https://github.com/ljharb/gopd/commit/bb78de5639a180747fb290c28912beaaf1615709)\n- [meta] create FUNDING.yml; add `funding` in package.json [`11c22e6`](https://github.com/ljharb/gopd/commit/11c22e6355bb01f24e7fac4c9bb3055eb5b25002)\n- [meta] use `npmignore` to autogenerate an npmignore file [`4f4537a`](https://github.com/ljharb/gopd/commit/4f4537a843b39f698c52f072845092e6fca345bb)\n- Only apps should have lockfiles [`c567022`](https://github.com/ljharb/gopd/commit/c567022a18573aa7951cf5399445d9840e23e98b)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\gopd\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\gopd\\CHANGELOG.md"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./gOPD')} */\nmodule.exports = Object.getOwnPropertyDescriptor;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\gopd\\gOPD.js",
    "RelativePath": "tools\\backend\\node_modules\\gopd\\gOPD.js"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('.')} */\nvar $gOPD = require('./gOPD');\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\gopd\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\gopd\\index.js"
  },
  {
    "Content": "# gopd <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\n`Object.getOwnPropertyDescriptor`, but accounts for IE's broken implementation.\n\n## Usage\n\n```javascript\nvar gOPD = require('gopd');\nvar assert = require('assert');\n\nif (gOPD) {\n\tassert.equal(typeof gOPD, 'function', 'descriptors supported');\n\t// use gOPD like Object.getOwnPropertyDescriptor here\n} else {\n\tassert.ok(!gOPD, 'descriptors not supported');\n}\n```\n\n[package-url]: https://npmjs.org/package/gopd\n[npm-version-svg]: https://versionbadg.es/ljharb/gopd.svg\n[deps-svg]: https://david-dm.org/ljharb/gopd.svg\n[deps-url]: https://david-dm.org/ljharb/gopd\n[dev-deps-svg]: https://david-dm.org/ljharb/gopd/dev-status.svg\n[dev-deps-url]: https://david-dm.org/ljharb/gopd#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/gopd.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/gopd.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/gopd.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=gopd\n[codecov-image]: https://codecov.io/gh/ljharb/gopd/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/ljharb/gopd/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/gopd\n[actions-url]: https://github.com/ljharb/gopd/actions\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\gopd\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\gopd\\README.md"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\nvar gOPD = require('../');\n\ntest('gOPD', function (t) {\n\tt.test('supported', { skip: !gOPD }, function (st) {\n\t\tst.equal(typeof gOPD, 'function', 'is a function');\n\n\t\tvar obj = { x: 1 };\n\t\tst.ok('x' in obj, 'property exists');\n\n\t\t// @ts-expect-error TS can't figure out narrowing from `skip`\n\t\tvar desc = gOPD(obj, 'x');\n\t\tst.deepEqual(\n\t\t\tdesc,\n\t\t\t{\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: 1,\n\t\t\t\twritable: true\n\t\t\t},\n\t\t\t'descriptor is as expected'\n\t\t);\n\n\t\tst.end();\n\t});\n\n\tt.test('not supported', { skip: !!gOPD }, function (st) {\n\t\tst.notOk(gOPD, 'is falsy');\n\n\t\tst.end();\n\t});\n\n\tt.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\gopd\\test\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\gopd\\test\\index.js"
  },
  {
    "Content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v1.1.0](https://github.com/inspect-js/has-symbols/compare/v1.0.3...v1.1.0) - 2024-12-02\n\n### Commits\n\n- [actions] update workflows [`548c0bf`](https://github.com/inspect-js/has-symbols/commit/548c0bf8c9b1235458df7a1c0490b0064647a282)\n- [actions] further shard; update action deps [`bec56bb`](https://github.com/inspect-js/has-symbols/commit/bec56bb0fb44b43a786686b944875a3175cf3ff3)\n- [meta] use `npmignore` to autogenerate an npmignore file [`ac81032`](https://github.com/inspect-js/has-symbols/commit/ac81032809157e0a079e5264e9ce9b6f1275777e)\n- [New] add types [`6469cbf`](https://github.com/inspect-js/has-symbols/commit/6469cbff1866cfe367b2b3d181d9296ec14b2a3d)\n- [actions] update rebase action to use reusable workflow [`9c9d4d0`](https://github.com/inspect-js/has-symbols/commit/9c9d4d0d8938e4b267acdf8e421f4e92d1716d72)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `tape` [`adb5887`](https://github.com/inspect-js/has-symbols/commit/adb5887ca9444849b08beb5caaa9e1d42320cdfb)\n- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `tape` [`13ec198`](https://github.com/inspect-js/has-symbols/commit/13ec198ec80f1993a87710af1606a1970b22c7cb)\n- [Dev Deps] update `auto-changelog`, `core-js`, `tape` [`941be52`](https://github.com/inspect-js/has-symbols/commit/941be5248387cab1da72509b22acf3fdb223f057)\n- [Tests] replace `aud` with `npm audit` [`74f49e9`](https://github.com/inspect-js/has-symbols/commit/74f49e9a9d17a443020784234a1c53ce765b3559)\n- [Dev Deps] update `npmignore` [`9c0ac04`](https://github.com/inspect-js/has-symbols/commit/9c0ac0452a834f4c2a4b54044f2d6a89f17e9a70)\n- [Dev Deps] add missing peer dep [`52337a5`](https://github.com/inspect-js/has-symbols/commit/52337a5621cced61f846f2afdab7707a8132cc12)\n\n## [v1.0.3](https://github.com/inspect-js/has-symbols/compare/v1.0.2...v1.0.3) - 2022-03-01\n\n### Commits\n\n- [actions] use `node/install` instead of `node/run`; use `codecov` action [`518b28f`](https://github.com/inspect-js/has-symbols/commit/518b28f6c5a516cbccae30794e40aa9f738b1693)\n- [meta] add `bugs` and `homepage` fields; reorder package.json [`c480b13`](https://github.com/inspect-js/has-symbols/commit/c480b13fd6802b557e1cef9749872cb5fdeef744)\n- [actions] reuse common workflows [`01d0ee0`](https://github.com/inspect-js/has-symbols/commit/01d0ee0a8d97c0947f5edb73eb722027a77b2b07)\n- [actions] update codecov uploader [`6424ebe`](https://github.com/inspect-js/has-symbols/commit/6424ebe86b2c9c7c3d2e9bd4413a4e4f168cb275)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `tape` [`dfa7e7f`](https://github.com/inspect-js/has-symbols/commit/dfa7e7ff38b594645d8c8222aab895157fa7e282)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `safe-publish-latest`, `tape` [`0c8d436`](https://github.com/inspect-js/has-symbols/commit/0c8d43685c45189cea9018191d4fd7eca91c9d02)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `tape` [`9026554`](https://github.com/inspect-js/has-symbols/commit/902655442a1bf88e72b42345494ef0c60f5d36ab)\n- [readme] add actions and codecov badges [`eaa9682`](https://github.com/inspect-js/has-symbols/commit/eaa9682f990f481d3acf7a1c7600bec36f7b3adc)\n- [Dev Deps] update `eslint`, `tape` [`bc7a3ba`](https://github.com/inspect-js/has-symbols/commit/bc7a3ba46f27b7743f8a2579732d59d1b9ac791e)\n- [Dev Deps] update `eslint`, `auto-changelog` [`0ace00a`](https://github.com/inspect-js/has-symbols/commit/0ace00af08a88cdd1e6ce0d60357d941c60c2d9f)\n- [meta] use `prepublishOnly` script for npm 7+ [`093f72b`](https://github.com/inspect-js/has-symbols/commit/093f72bc2b0ed00c781f444922a5034257bf561d)\n- [Tests] test on all 16 minors [`9b80d3d`](https://github.com/inspect-js/has-symbols/commit/9b80d3d9102529f04c20ec5b1fcc6e38426c6b03)\n\n## [v1.0.2](https://github.com/inspect-js/has-symbols/compare/v1.0.1...v1.0.2) - 2021-02-27\n\n### Fixed\n\n- [Fix] use a universal way to get the original Symbol [`#11`](https://github.com/inspect-js/has-symbols/issues/11)\n\n### Commits\n\n- [Tests] migrate tests to Github Actions [`90ae798`](https://github.com/inspect-js/has-symbols/commit/90ae79820bdfe7bc703d67f5f3c5e205f98556d3)\n- [meta] do not publish github action workflow files [`29e60a1`](https://github.com/inspect-js/has-symbols/commit/29e60a1b7c25c7f1acf7acff4a9320d0d10c49b4)\n- [Tests] run `nyc` on all tests [`8476b91`](https://github.com/inspect-js/has-symbols/commit/8476b915650d360915abe2522505abf4b0e8f0ae)\n- [readme] fix repo URLs, remove defunct badges [`126288e`](https://github.com/inspect-js/has-symbols/commit/126288ecc1797c0a40247a6b78bcb2e0bc5d7036)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `core-js`, `get-own-property-symbols` [`d84bdfa`](https://github.com/inspect-js/has-symbols/commit/d84bdfa48ac5188abbb4904b42614cd6c030940a)\n- [Tests] fix linting errors [`0df3070`](https://github.com/inspect-js/has-symbols/commit/0df3070b981b6c9f2ee530c09189a7f5c6def839)\n- [actions] add \"Allow Edits\" workflow [`1e6bc29`](https://github.com/inspect-js/has-symbols/commit/1e6bc29b188f32b9648657b07eda08504be5aa9c)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `tape` [`36cea2a`](https://github.com/inspect-js/has-symbols/commit/36cea2addd4e6ec435f35a2656b4e9ef82498e9b)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `tape` [`1278338`](https://github.com/inspect-js/has-symbols/commit/127833801865fbc2cc8979beb9ca869c7bfe8222)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `tape` [`1493254`](https://github.com/inspect-js/has-symbols/commit/1493254eda13db5fb8fc5e4a3e8324b3d196029d)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `core-js` [`b090bf2`](https://github.com/inspect-js/has-symbols/commit/b090bf214d3679a30edc1e2d729d466ab5183e1d)\n- [actions] switch Automatic Rebase workflow to `pull_request_target` event [`4addb7a`](https://github.com/inspect-js/has-symbols/commit/4addb7ab4dc73f927ae99928d68817554fc21dc0)\n- [Dev Deps] update `auto-changelog`, `tape` [`81d0baf`](https://github.com/inspect-js/has-symbols/commit/81d0baf3816096a89a8558e8043895f7a7d10d8b)\n- [Dev Deps] update `auto-changelog`; add `aud` [`1a4e561`](https://github.com/inspect-js/has-symbols/commit/1a4e5612c25d91c3a03d509721d02630bc4fe3da)\n- [readme] remove unused testling URLs [`3000941`](https://github.com/inspect-js/has-symbols/commit/3000941f958046e923ed8152edb1ef4a599e6fcc)\n- [Tests] only audit prod deps [`692e974`](https://github.com/inspect-js/has-symbols/commit/692e9743c912410e9440207631a643a34b4741a1)\n- [Dev Deps] update `@ljharb/eslint-config` [`51c946c`](https://github.com/inspect-js/has-symbols/commit/51c946c7f6baa793ec5390bb5a45cdce16b4ba76)\n\n## [v1.0.1](https://github.com/inspect-js/has-symbols/compare/v1.0.0...v1.0.1) - 2019-11-16\n\n### Commits\n\n- [Tests] use shared travis-ci configs [`ce396c9`](https://github.com/inspect-js/has-symbols/commit/ce396c9419ff11c43d0da5d05cdbb79f7fb42229)\n- [Tests] up to `node` `v12.4`, `v11.15`, `v10.15`, `v9.11`, `v8.15`, `v7.10`, `v6.17`, `v4.9`; use `nvm install-latest-npm` [`0690732`](https://github.com/inspect-js/has-symbols/commit/0690732801f47ab429f39ba1962f522d5c462d6b)\n- [meta] add `auto-changelog` [`2163d0b`](https://github.com/inspect-js/has-symbols/commit/2163d0b7f36343076b8f947cd1667dd1750f26fc)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `core-js`, `safe-publish-latest`, `tape` [`8e0951f`](https://github.com/inspect-js/has-symbols/commit/8e0951f1a7a2e52068222b7bb73511761e6e4d9c)\n- [actions] add automatic rebasing / merge commit blocking [`b09cdb7`](https://github.com/inspect-js/has-symbols/commit/b09cdb7cd7ee39e7a769878f56e2d6066f5ccd1d)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `safe-publish-latest`, `core-js`, `get-own-property-symbols`, `tape` [`1dd42cd`](https://github.com/inspect-js/has-symbols/commit/1dd42cd86183ed0c50f99b1062345c458babca91)\n- [meta] create FUNDING.yml [`aa57a17`](https://github.com/inspect-js/has-symbols/commit/aa57a17b19708906d1927f821ea8e73394d84ca4)\n- Only apps should have lockfiles [`a2d8bea`](https://github.com/inspect-js/has-symbols/commit/a2d8bea23a97d15c09eaf60f5b107fcf9a4d57aa)\n- [Tests] use `npx aud` instead of `nsp` or `npm audit` with hoops [`9e96cb7`](https://github.com/inspect-js/has-symbols/commit/9e96cb783746cbed0c10ef78e599a8eaa7ebe193)\n- [meta] add `funding` field [`a0b32cf`](https://github.com/inspect-js/has-symbols/commit/a0b32cf68e803f963c1639b6d47b0a9d6440bab0)\n- [Dev Deps] update `safe-publish-latest` [`cb9f0a5`](https://github.com/inspect-js/has-symbols/commit/cb9f0a521a3a1790f1064d437edd33bb6c3d6af0)\n\n## v1.0.0 - 2016-09-19\n\n### Commits\n\n- Tests. [`ecb6eb9`](https://github.com/inspect-js/has-symbols/commit/ecb6eb934e4883137f3f93b965ba5e0a98df430d)\n- package.json [`88a337c`](https://github.com/inspect-js/has-symbols/commit/88a337cee0864a0da35f5d19e69ff0ef0150e46a)\n- Initial commit [`42e1e55`](https://github.com/inspect-js/has-symbols/commit/42e1e5502536a2b8ac529c9443984acd14836b1c)\n- Initial implementation. [`33f5cc6`](https://github.com/inspect-js/has-symbols/commit/33f5cc6cdff86e2194b081ee842bfdc63caf43fb)\n- read me [`01f1170`](https://github.com/inspect-js/has-symbols/commit/01f1170188ff7cb1558aa297f6ba5b516c6d7b0c)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\has-symbols\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\has-symbols\\CHANGELOG.md"
  },
  {
    "Content": "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\has-symbols\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\has-symbols\\index.js"
  },
  {
    "Content": "# has-symbols <sup>[![Version Badge][2]][1]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![dependency status][5]][6]\n[![dev dependency status][7]][8]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][11]][1]\n\nDetermine if the JS environment has Symbol support. Supports spec, or shams.\n\n## Example\n\n```js\nvar hasSymbols = require('has-symbols');\n\nhasSymbols() === true; // if the environment has native Symbol support. Not polyfillable, not forgeable.\n\nvar hasSymbolsKinda = require('has-symbols/shams');\nhasSymbolsKinda() === true; // if the environment has a Symbol sham that mostly follows the spec.\n```\n\n## Supported Symbol shams\n - get-own-property-symbols [npm](https://www.npmjs.com/package/get-own-property-symbols) | [github](https://github.com/WebReflection/get-own-property-symbols)\n - core-js [npm](https://www.npmjs.com/package/core-js) | [github](https://github.com/zloirock/core-js)\n\n## Tests\nSimply clone the repo, `npm install`, and run `npm test`\n\n[1]: https://npmjs.org/package/has-symbols\n[2]: https://versionbadg.es/inspect-js/has-symbols.svg\n[5]: https://david-dm.org/inspect-js/has-symbols.svg\n[6]: https://david-dm.org/inspect-js/has-symbols\n[7]: https://david-dm.org/inspect-js/has-symbols/dev-status.svg\n[8]: https://david-dm.org/inspect-js/has-symbols#info=devDependencies\n[11]: https://nodei.co/npm/has-symbols.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/has-symbols.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/has-symbols.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=has-symbols\n[codecov-image]: https://codecov.io/gh/inspect-js/has-symbols/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/inspect-js/has-symbols/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/inspect-js/has-symbols\n[actions-url]: https://github.com/inspect-js/has-symbols/actions\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\has-symbols\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\has-symbols\\README.md"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./shams')} */\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\t/** @type {{ [k in symbol]?: unknown }} */\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (var _ in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tvar descriptor = /** @type {PropertyDescriptor} */ (Object.getOwnPropertyDescriptor(obj, sym));\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\has-symbols\\shams.js",
    "RelativePath": "tools\\backend\\node_modules\\has-symbols\\shams.js"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\nvar hasSymbols = require('../');\nvar runSymbolTests = require('./tests');\n\ntest('interface', function (t) {\n\tt.equal(typeof hasSymbols, 'function', 'is a function');\n\tt.equal(typeof hasSymbols(), 'boolean', 'returns a boolean');\n\tt.end();\n});\n\ntest('Symbols are supported', { skip: !hasSymbols() }, function (t) {\n\trunSymbolTests(t);\n\tt.end();\n});\n\ntest('Symbols are not supported', { skip: hasSymbols() }, function (t) {\n\tt.equal(typeof Symbol, 'undefined', 'global Symbol is undefined');\n\tt.equal(typeof Object.getOwnPropertySymbols, 'undefined', 'Object.getOwnPropertySymbols does not exist');\n\tt.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\has-symbols\\test\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\has-symbols\\test\\index.js"
  },
  {
    "Content": "'use strict';\n\n/** @type {(t: import('tape').Test) => false | void} */\n// eslint-disable-next-line consistent-return\nmodule.exports = function runSymbolTests(t) {\n\tt.equal(typeof Symbol, 'function', 'global Symbol is a function');\n\n\tif (typeof Symbol !== 'function') { return false; }\n\n\tt.notEqual(Symbol(), Symbol(), 'two symbols are not equal');\n\n\t/*\n\tt.equal(\n\t\tSymbol.prototype.toString.call(Symbol('foo')),\n\t\tSymbol.prototype.toString.call(Symbol('foo')),\n\t\t'two symbols with the same description stringify the same'\n\t);\n\t*/\n\n\t/*\n\tvar foo = Symbol('foo');\n\n\tt.notEqual(\n\t\tString(foo),\n\t\tString(Symbol('bar')),\n\t\t'two symbols with different descriptions do not stringify the same'\n\t);\n\t*/\n\n\tt.equal(typeof Symbol.prototype.toString, 'function', 'Symbol#toString is a function');\n\t// t.equal(String(foo), Symbol.prototype.toString.call(foo), 'Symbol#toString equals String of the same symbol');\n\n\tt.equal(typeof Object.getOwnPropertySymbols, 'function', 'Object.getOwnPropertySymbols is a function');\n\n\t/** @type {{ [k in symbol]?: unknown }} */\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tt.notEqual(typeof sym, 'string', 'Symbol is not a string');\n\tt.equal(Object.prototype.toString.call(sym), '[object Symbol]', 'symbol primitive Object#toStrings properly');\n\tt.equal(Object.prototype.toString.call(symObj), '[object Symbol]', 'symbol primitive Object#toStrings properly');\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\t// eslint-disable-next-line no-restricted-syntax, no-unused-vars\n\tfor (var _ in obj) { t.fail('symbol property key was found in for..in of object'); }\n\n\tt.deepEqual(Object.keys(obj), [], 'no enumerable own keys on symbol-valued object');\n\tt.deepEqual(Object.getOwnPropertyNames(obj), [], 'no own names on symbol-valued object');\n\tt.deepEqual(Object.getOwnPropertySymbols(obj), [sym], 'one own symbol on symbol-valued object');\n\tt.equal(Object.prototype.propertyIsEnumerable.call(obj, sym), true, 'symbol is enumerable');\n\tt.deepEqual(Object.getOwnPropertyDescriptor(obj, sym), {\n\t\tconfigurable: true,\n\t\tenumerable: true,\n\t\tvalue: 42,\n\t\twritable: true\n\t}, 'property descriptor is correct');\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\has-symbols\\test\\tests.js",
    "RelativePath": "tools\\backend\\node_modules\\has-symbols\\test\\tests.js"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\n\nif (typeof Symbol === 'function' && typeof Symbol() === 'symbol') {\n\ttest('has native Symbol support', function (t) {\n\t\tt.equal(typeof Symbol, 'function');\n\t\tt.equal(typeof Symbol(), 'symbol');\n\t\tt.end();\n\t});\n\t// @ts-expect-error TS is stupid and doesn't know about top level return\n\treturn;\n}\n\nvar hasSymbols = require('../../shams');\n\ntest('polyfilled Symbols', function (t) {\n\t/* eslint-disable global-require */\n\tt.equal(hasSymbols(), false, 'hasSymbols is false before polyfilling');\n\trequire('core-js/fn/symbol');\n\trequire('core-js/fn/symbol/to-string-tag');\n\n\trequire('../tests')(t);\n\n\tvar hasSymbolsAfter = hasSymbols();\n\tt.equal(hasSymbolsAfter, true, 'hasSymbols is true after polyfilling');\n\t/* eslint-enable global-require */\n\tt.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\has-symbols\\test\\shams\\core-js.js",
    "RelativePath": "tools\\backend\\node_modules\\has-symbols\\test\\shams\\core-js.js"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\n\nif (typeof Symbol === 'function' && typeof Symbol() === 'symbol') {\n\ttest('has native Symbol support', function (t) {\n\t\tt.equal(typeof Symbol, 'function');\n\t\tt.equal(typeof Symbol(), 'symbol');\n\t\tt.end();\n\t});\n\t// @ts-expect-error TS is stupid and doesn't know about top level return\n\treturn;\n}\n\nvar hasSymbols = require('../../shams');\n\ntest('polyfilled Symbols', function (t) {\n\t/* eslint-disable global-require */\n\tt.equal(hasSymbols(), false, 'hasSymbols is false before polyfilling');\n\n\trequire('get-own-property-symbols');\n\n\trequire('../tests')(t);\n\n\tvar hasSymbolsAfter = hasSymbols();\n\tt.equal(hasSymbolsAfter, true, 'hasSymbols is true after polyfilling');\n\t/* eslint-enable global-require */\n\tt.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\has-symbols\\test\\shams\\get-own-property-symbols.js",
    "RelativePath": "tools\\backend\\node_modules\\has-symbols\\test\\shams\\get-own-property-symbols.js"
  },
  {
    "Content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v2.0.2](https://github.com/inspect-js/hasOwn/compare/v2.0.1...v2.0.2) - 2024-03-10\n\n### Commits\n\n- [types] use shared config [`68e9d4d`](https://github.com/inspect-js/hasOwn/commit/68e9d4dab6facb4f05f02c6baea94a3f2a4e44b2)\n- [actions] remove redundant finisher; use reusable workflow [`241a68e`](https://github.com/inspect-js/hasOwn/commit/241a68e13ea1fe52bec5ba7f74144befc31fae7b)\n- [Tests] increase coverage [`4125c0d`](https://github.com/inspect-js/hasOwn/commit/4125c0d6121db56ae30e38346dfb0c000b04f0a7)\n- [Tests] skip `npm ls` in old node due to TS [`01b9282`](https://github.com/inspect-js/hasOwn/commit/01b92822f9971dea031eafdd14767df41d61c202)\n- [types] improve predicate type [`d340f85`](https://github.com/inspect-js/hasOwn/commit/d340f85ce02e286ef61096cbbb6697081d40a12b)\n- [Dev Deps] update `tape` [`70089fc`](https://github.com/inspect-js/hasOwn/commit/70089fcf544e64acc024cbe60f5a9b00acad86de)\n- [Tests] use `@arethetypeswrong/cli` [`50b272c`](https://github.com/inspect-js/hasOwn/commit/50b272c829f40d053a3dd91c9796e0ac0b2af084)\n\n## [v2.0.1](https://github.com/inspect-js/hasOwn/compare/v2.0.0...v2.0.1) - 2024-02-10\n\n### Commits\n\n- [types] use a handwritten d.ts file; fix exported type [`012b989`](https://github.com/inspect-js/hasOwn/commit/012b9898ccf91dc441e2ebf594ff70270a5fda58)\n- [Dev Deps] update `@types/function-bind`, `@types/mock-property`, `@types/tape`, `aud`, `mock-property`, `npmignore`, `tape`, `typescript` [`977a56f`](https://github.com/inspect-js/hasOwn/commit/977a56f51a1f8b20566f3c471612137894644025)\n- [meta] add `sideEffects` flag [`3a60b7b`](https://github.com/inspect-js/hasOwn/commit/3a60b7bf42fccd8c605e5f145a6fcc83b13cb46f)\n\n## [v2.0.0](https://github.com/inspect-js/hasOwn/compare/v1.0.1...v2.0.0) - 2023-10-19\n\n### Commits\n\n- revamped implementation, tests, readme [`72bf8b3`](https://github.com/inspect-js/hasOwn/commit/72bf8b338e77a638f0a290c63ffaed18339c36b4)\n- [meta] revamp package.json [`079775f`](https://github.com/inspect-js/hasOwn/commit/079775fb1ec72c1c6334069593617a0be3847458)\n- Only apps should have lockfiles [`6640e23`](https://github.com/inspect-js/hasOwn/commit/6640e233d1bb8b65260880f90787637db157d215)\n\n## v1.0.1 - 2023-10-10\n\n### Commits\n\n- Initial commit [`8dbfde6`](https://github.com/inspect-js/hasOwn/commit/8dbfde6e8fb0ebb076fab38d138f2984eb340a62)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\hasown\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\hasown\\CHANGELOG.md"
  },
  {
    "Content": "'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\hasown\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\hasown\\index.js"
  },
  {
    "Content": "# hasown <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\nA robust, ES3 compatible, \"has own property\" predicate.\n\n## Example\n\n```js\nconst assert = require('assert');\nconst hasOwn = require('hasown');\n\nassert.equal(hasOwn({}, 'toString'), false);\nassert.equal(hasOwn([], 'length'), true);\nassert.equal(hasOwn({ a: 42 }, 'a'), true);\n```\n\n## Tests\nSimply clone the repo, `npm install`, and run `npm test`\n\n[package-url]: https://npmjs.org/package/hasown\n[npm-version-svg]: https://versionbadg.es/inspect-js/hasown.svg\n[deps-svg]: https://david-dm.org/inspect-js/hasOwn.svg\n[deps-url]: https://david-dm.org/inspect-js/hasOwn\n[dev-deps-svg]: https://david-dm.org/inspect-js/hasOwn/dev-status.svg\n[dev-deps-url]: https://david-dm.org/inspect-js/hasOwn#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/hasown.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/hasown.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/hasown.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=hasown\n[codecov-image]: https://codecov.io/gh/inspect-js/hasOwn/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/inspect-js/hasOwn/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/inspect-js/hasOwn\n[actions-url]: https://github.com/inspect-js/hasOwn/actions\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\hasown\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\hasown\\README.md"
  },
  {
    "Content": "2.0.0 / 2021-12-17\n==================\n\n  * Drop support for Node.js 0.6\n  * Remove `I'mateapot` export; use `ImATeapot` instead\n  * Remove support for status being non-first argument\n  * Rename `UnorderedCollection` constructor to `TooEarly`\n  * deps: depd@2.0.0\n    - Replace internal `eval` usage with `Function` constructor\n    - Use instance methods on `process` to check for listeners\n  * deps: statuses@2.0.1\n    - Fix messaging casing of `418 I'm a Teapot`\n    - Remove code 306\n    - Rename `425 Unordered Collection` to standard `425 Too Early`\n\n2021-11-14 / 1.8.1\n==================\n\n  * deps: toidentifier@1.0.1\n\n2020-06-29 / 1.8.0\n==================\n\n  * Add `isHttpError` export to determine if value is an HTTP error\n  * deps: setprototypeof@1.2.0\n\n2019-06-24 / 1.7.3\n==================\n\n  * deps: inherits@2.0.4\n\n2019-02-18 / 1.7.2\n==================\n\n  * deps: setprototypeof@1.1.1\n\n2018-09-08 / 1.7.1\n==================\n\n  * Fix error creating objects in some environments\n\n2018-07-30 / 1.7.0\n==================\n\n  * Set constructor name when possible\n  * Use `toidentifier` module to make class names\n  * deps: statuses@'>= 1.5.0 < 2'\n\n2018-03-29 / 1.6.3\n==================\n\n  * deps: depd@~1.1.2\n    - perf: remove argument reassignment\n  * deps: setprototypeof@1.1.0\n  * deps: statuses@'>= 1.4.0 < 2'\n\n2017-08-04 / 1.6.2\n==================\n\n  * deps: depd@1.1.1\n    - Remove unnecessary `Buffer` loading\n\n2017-02-20 / 1.6.1\n==================\n\n  * deps: setprototypeof@1.0.3\n    - Fix shim for old browsers\n\n2017-02-14 / 1.6.0\n==================\n\n  * Accept custom 4xx and 5xx status codes in factory\n  * Add deprecation message to `\"I'mateapot\"` export\n  * Deprecate passing status code as anything except first argument in factory\n  * Deprecate using non-error status codes\n  * Make `message` property enumerable for `HttpError`s\n\n2016-11-16 / 1.5.1\n==================\n\n  * deps: inherits@2.0.3\n    - Fix issue loading in browser\n  * deps: setprototypeof@1.0.2\n  * deps: statuses@'>= 1.3.1 < 2'\n\n2016-05-18 / 1.5.0\n==================\n\n  * Support new code `421 Misdirected Request`\n  * Use `setprototypeof` module to replace `__proto__` setting\n  * deps: statuses@'>= 1.3.0 < 2'\n    - Add `421 Misdirected Request`\n    - perf: enable strict mode\n  * perf: enable strict mode\n\n2016-01-28 / 1.4.0\n==================\n\n  * Add `HttpError` export, for `err instanceof createError.HttpError`\n  * deps: inherits@2.0.1\n  * deps: statuses@'>= 1.2.1 < 2'\n    - Fix message for status 451\n    - Remove incorrect nginx status code\n\n2015-02-02 / 1.3.1\n==================\n\n  * Fix regression where status can be overwritten in `createError` `props`\n\n2015-02-01 / 1.3.0\n==================\n\n  * Construct errors using defined constructors from `createError`\n  * Fix error names that are not identifiers\n    - `createError[\"I'mateapot\"]` is now `createError.ImATeapot`\n  * Set a meaningful `name` property on constructed errors\n\n2014-12-09 / 1.2.8\n==================\n\n  * Fix stack trace from exported function\n  * Remove `arguments.callee` usage\n\n2014-10-14 / 1.2.7\n==================\n\n  * Remove duplicate line\n\n2014-10-02 / 1.2.6\n==================\n\n  * Fix `expose` to be `true` for `ClientError` constructor\n\n2014-09-28 / 1.2.5\n==================\n\n  * deps: statuses@1\n\n2014-09-21 / 1.2.4\n==================\n\n  * Fix dependency version to work with old `npm`s\n\n2014-09-21 / 1.2.3\n==================\n\n  * deps: statuses@~1.1.0\n\n2014-09-21 / 1.2.2\n==================\n\n  * Fix publish error\n\n2014-09-21 / 1.2.1\n==================\n\n  * Support Node.js 0.6\n  * Use `inherits` instead of `util`\n\n2014-09-09 / 1.2.0\n==================\n\n  * Fix the way inheriting functions\n  * Support `expose` being provided in properties argument\n\n2014-09-08 / 1.1.0\n==================\n\n  * Default status to 500\n  * Support provided `error` to extend\n\n2014-09-08 / 1.0.1\n==================\n\n  * Fix accepting string message\n\n2014-09-08 / 1.0.0\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\http-errors\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\http-errors\\HISTORY.md"
  },
  {
    "Content": "/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\nvar toIdentifier = require('toidentifier')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\nmodule.exports.isHttpError = createIsHttpErrorFunction(module.exports.HttpError)\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    var type = typeof arg\n    if (type === 'object' && arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n    } else if (type === 'number' && i === 0) {\n      status = arg\n    } else if (type === 'string') {\n      msg = arg\n    } else if (type === 'object') {\n      props = arg\n    } else {\n      throw new TypeError('argument #' + (i + 1) + ' unsupported type ' + type)\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses.message[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses.message[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError, Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError, HttpError)\n  nameFunc(ClientError, className)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create function to test is a value is a HttpError.\n * @private\n */\n\nfunction createIsHttpErrorFunction (HttpError) {\n  return function isHttpError (val) {\n    if (!val || typeof val !== 'object') {\n      return false\n    }\n\n    if (val instanceof HttpError) {\n      return true\n    }\n\n    return val instanceof Error &&\n      typeof val.expose === 'boolean' &&\n      typeof val.statusCode === 'number' && val.status === val.statusCode\n  }\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError, HttpError)\n  nameFunc(ServerError, className)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Set the name of a function, if possible.\n * @private\n */\n\nfunction nameFunc (func, name) {\n  var desc = Object.getOwnPropertyDescriptor(func, 'name')\n\n  if (desc && desc.configurable) {\n    desc.value = name\n    Object.defineProperty(func, 'name', desc)\n  }\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports, codes, HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses.message[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n}\n\n/**\n * Get a class name from a name identifier.\n * @private\n */\n\nfunction toClassName (name) {\n  return name.substr(-5) !== 'Error'\n    ? name + 'Error'\n    : name\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\http-errors\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\http-errors\\index.js"
  },
  {
    "Content": "# http-errors\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][node-url]\n[![Node.js Version][node-image]][node-url]\n[![Build Status][ci-image]][ci-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nCreate HTTP errors for Express, Koa, Connect, etc. with ease.\n\n## Install\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```console\n$ npm install http-errors\n```\n\n## Example\n\n```js\nvar createError = require('http-errors')\nvar express = require('express')\nvar app = express()\n\napp.use(function (req, res, next) {\n  if (!req.user) return next(createError(401, 'Please login to view this page.'))\n  next()\n})\n```\n\n## API\n\nThis is the current API, currently extracted from Koa and subject to change.\n\n### Error Properties\n\n- `expose` - can be used to signal if `message` should be sent to the client,\n  defaulting to `false` when `status` >= 500\n- `headers` - can be an object of header names to values to be sent to the\n  client, defaulting to `undefined`. When defined, the key names should all\n  be lower-cased\n- `message` - the traditional error message, which should be kept short and all\n  single line\n- `status` - the status code of the error, mirroring `statusCode` for general\n  compatibility\n- `statusCode` - the status code of the error, defaulting to `500`\n\n### createError([status], [message], [properties])\n\nCreate a new error object with the given message `msg`.\nThe error object inherits from `createError.HttpError`.\n\n```js\nvar err = createError(404, 'This video does not exist!')\n```\n\n- `status: 500` - the status code as a number\n- `message` - the message of the error, defaulting to node's text for that status code.\n- `properties` - custom properties to attach to the object\n\n### createError([status], [error], [properties])\n\nExtend the given `error` object with `createError.HttpError`\nproperties. This will not alter the inheritance of the given\n`error` object, and the modified `error` object is the\nreturn value.\n\n<!-- eslint-disable no-redeclare -->\n\n```js\nfs.readFile('foo.txt', function (err, buf) {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      var httpError = createError(404, err, { expose: false })\n    } else {\n      var httpError = createError(500, err)\n    }\n  }\n})\n```\n\n- `status` - the status code as a number\n- `error` - the error object to extend\n- `properties` - custom properties to attach to the object\n\n### createError.isHttpError(val)\n\nDetermine if the provided `val` is an `HttpError`. This will return `true`\nif the error inherits from the `HttpError` constructor of this module or\nmatches the \"duck type\" for an error this module creates. All outputs from\nthe `createError` factory will return `true` for this function, including\nif an non-`HttpError` was passed into the factory.\n\n### new createError\\[code || name\\](\\[msg]\\))\n\nCreate a new error object with the given message `msg`.\nThe error object inherits from `createError.HttpError`.\n\n```js\nvar err = new createError.NotFound()\n```\n\n- `code` - the status code as a number\n- `name` - the name of the error as a \"bumpy case\", i.e. `NotFound` or `InternalServerError`.\n\n#### List of all constructors\n\n|Status Code|Constructor Name             |\n|-----------|-----------------------------|\n|400        |BadRequest                   |\n|401        |Unauthorized                 |\n|402        |PaymentRequired              |\n|403        |Forbidden                    |\n|404        |NotFound                     |\n|405        |MethodNotAllowed             |\n|406        |NotAcceptable                |\n|407        |ProxyAuthenticationRequired  |\n|408        |RequestTimeout               |\n|409        |Conflict                     |\n|410        |Gone                         |\n|411        |LengthRequired               |\n|412        |PreconditionFailed           |\n|413        |PayloadTooLarge              |\n|414        |URITooLong                   |\n|415        |UnsupportedMediaType         |\n|416        |RangeNotSatisfiable          |\n|417        |ExpectationFailed            |\n|418        |ImATeapot                    |\n|421        |MisdirectedRequest           |\n|422        |UnprocessableEntity          |\n|423        |Locked                       |\n|424        |FailedDependency             |\n|425        |TooEarly                     |\n|426        |UpgradeRequired              |\n|428        |PreconditionRequired         |\n|429        |TooManyRequests              |\n|431        |RequestHeaderFieldsTooLarge  |\n|451        |UnavailableForLegalReasons   |\n|500        |InternalServerError          |\n|501        |NotImplemented               |\n|502        |BadGateway                   |\n|503        |ServiceUnavailable           |\n|504        |GatewayTimeout               |\n|505        |HTTPVersionNotSupported      |\n|506        |VariantAlsoNegotiates        |\n|507        |InsufficientStorage          |\n|508        |LoopDetected                 |\n|509        |BandwidthLimitExceeded       |\n|510        |NotExtended                  |\n|511        |NetworkAuthenticationRequired|\n\n## License\n\n[MIT](LICENSE)\n\n[ci-image]: https://badgen.net/github/checks/jshttp/http-errors/master?label=ci\n[ci-url]: https://github.com/jshttp/http-errors/actions?query=workflow%3Aci\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/http-errors/master\n[coveralls-url]: https://coveralls.io/r/jshttp/http-errors?branch=master\n[node-image]: https://badgen.net/npm/node/http-errors\n[node-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/http-errors\n[npm-url]: https://npmjs.org/package/http-errors\n[npm-version-image]: https://badgen.net/npm/v/http-errors\n[travis-image]: https://badgen.net/travis/jshttp/http-errors/master\n[travis-url]: https://travis-ci.org/jshttp/http-errors\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\http-errors\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\http-errors\\README.md"
  },
  {
    "Content": "# 0.4.24 / 2018-08-22\n\n  * Added MIK encoding (#196, by @Ivan-Kalatchev)\n\n\n# 0.4.23 / 2018-05-07\n\n  * Fix deprecation warning in Node v10 due to the last usage of `new Buffer` (#185, by @felixbuenemann)\n  * Switched from NodeBuffer to Buffer in typings (#155 by @felixfbecker, #186 by @larssn)\n\n\n# 0.4.22 / 2018-05-05\n\n  * Use older semver style for dependencies to be compatible with Node version 0.10 (#182, by @dougwilson)\n  * Fix tests to accomodate fixes in Node v10 (#182, by @dougwilson)\n\n\n# 0.4.21 / 2018-04-06\n\n  * Fix encoding canonicalization (#156)\n  * Fix the paths in the \"browser\" field in package.json (#174 by @LMLB)\n  * Removed \"contributors\" section in package.json - see Git history instead.\n\n\n# 0.4.20 / 2018-04-06\n\n  * Updated `new Buffer()` usages with recommended replacements as it's being deprecated in Node v10 (#176, #178 by @ChALkeR)\n\n\n# 0.4.19 / 2017-09-09\n\n  * Fixed iso8859-1 codec regression in handling untranslatable characters (#162, caused by #147)\n  * Re-generated windows1255 codec, because it was updated in iconv project\n  * Fixed grammar in error message when iconv-lite is loaded with encoding other than utf8\n\n\n# 0.4.18 / 2017-06-13\n\n  * Fixed CESU-8 regression in Node v8.\n\n\n# 0.4.17 / 2017-04-22\n\n * Updated typescript definition file to support Angular 2 AoT mode (#153 by @larssn)\n\n\n# 0.4.16 / 2017-04-22\n\n * Added support for React Native (#150)\n * Changed iso8859-1 encoding to usine internal 'binary' encoding, as it's the same thing (#147 by @mscdex)\n * Fixed typo in Readme (#138 by @jiangzhuo)\n * Fixed build for Node v6.10+ by making correct version comparison\n * Added a warning if iconv-lite is loaded not as utf-8 (see #142)\n\n\n# 0.4.15 / 2016-11-21\n\n * Fixed typescript type definition (#137)\n\n\n# 0.4.14 / 2016-11-20\n\n * Preparation for v1.0\n * Added Node v6 and latest Node versions to Travis CI test rig\n * Deprecated Node v0.8 support\n * Typescript typings (@larssn)\n * Fix encoding of Euro character in GB 18030 (inspired by @lygstate)\n * Add ms prefix to dbcs windows encodings (@rokoroku)\n\n\n# 0.4.13 / 2015-10-01\n\n * Fix silly mistake in deprecation notice.\n\n\n# 0.4.12 / 2015-09-26\n\n * Node v4 support:\n   * Added CESU-8 decoding (#106)\n   * Added deprecation notice for `extendNodeEncodings`\n   * Added Travis tests for Node v4 and io.js latest (#105 by @Mithgol)\n\n\n# 0.4.11 / 2015-07-03\n\n * Added CESU-8 encoding.\n\n\n# 0.4.10 / 2015-05-26\n\n * Changed UTF-16 endianness heuristic to take into account any ASCII chars, not\n   just spaces. This should minimize the importance of \"default\" endianness.\n\n\n# 0.4.9 / 2015-05-24\n\n * Streamlined BOM handling: strip BOM by default, add BOM when encoding if \n   addBOM: true. Added docs to Readme.\n * UTF16 now uses UTF16-LE by default.\n * Fixed minor issue with big5 encoding.\n * Added io.js testing on Travis; updated node-iconv version to test against.\n   Now we just skip testing SBCS encodings that node-iconv doesn't support.\n * (internal refactoring) Updated codec interface to use classes.\n * Use strict mode in all files.\n\n\n# 0.4.8 / 2015-04-14\n \n * added alias UNICODE-1-1-UTF-7 for UTF-7 encoding (#94)\n\n\n# 0.4.7 / 2015-02-05\n\n * stop official support of Node.js v0.8. Should still work, but no guarantees.\n   reason: Packages needed for testing are hard to get on Travis CI.\n * work in environment where Object.prototype is monkey patched with enumerable \n   props (#89).\n\n\n# 0.4.6 / 2015-01-12\n \n * fix rare aliases of single-byte encodings (thanks @mscdex)\n * double the timeout for dbcs tests to make them less flaky on travis\n\n\n# 0.4.5 / 2014-11-20\n\n * fix windows-31j and x-sjis encoding support (@nleush)\n * minor fix: undefined variable reference when internal error happens\n\n\n# 0.4.4 / 2014-07-16\n\n * added encodings UTF-7 (RFC2152) and UTF-7-IMAP (RFC3501 Section 5.1.3)\n * fixed streaming base64 encoding\n\n\n# 0.4.3 / 2014-06-14\n\n * added encodings UTF-16BE and UTF-16 with BOM\n\n\n# 0.4.2 / 2014-06-12\n\n * don't throw exception if `extendNodeEncodings()` is called more than once\n\n\n# 0.4.1 / 2014-06-11\n\n * codepage 808 added\n\n\n# 0.4.0 / 2014-06-10\n\n * code is rewritten from scratch\n * all widespread encodings are supported\n * streaming interface added\n * browserify compatibility added\n * (optional) extend core primitive encodings to make usage even simpler\n * moved from vows to mocha as the testing framework\n\n\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\iconv-lite\\Changelog.md",
    "RelativePath": "tools\\backend\\node_modules\\iconv-lite\\Changelog.md"
  },
  {
    "Content": "## Pure JS character encoding conversion [![Build Status](https://travis-ci.org/ashtuchkin/iconv-lite.svg?branch=master)](https://travis-ci.org/ashtuchkin/iconv-lite)\n\n * Doesn't need native code compilation. Works on Windows and in sandboxed environments like [Cloud9](http://c9.io).\n * Used in popular projects like [Express.js (body_parser)](https://github.com/expressjs/body-parser), \n   [Grunt](http://gruntjs.com/), [Nodemailer](http://www.nodemailer.com/), [Yeoman](http://yeoman.io/) and others.\n * Faster than [node-iconv](https://github.com/bnoordhuis/node-iconv) (see below for performance comparison).\n * Intuitive encode/decode API\n * Streaming support for Node v0.10+\n * [Deprecated] Can extend Node.js primitives (buffers, streams) to support all iconv-lite encodings.\n * In-browser usage via [Browserify](https://github.com/substack/node-browserify) (~180k gzip compressed with Buffer shim included).\n * Typescript [type definition file](https://github.com/ashtuchkin/iconv-lite/blob/master/lib/index.d.ts) included.\n * React Native is supported (need to explicitly `npm install` two more modules: `buffer` and `stream`).\n * License: MIT.\n\n[![NPM Stats](https://nodei.co/npm/iconv-lite.png?downloads=true&downloadRank=true)](https://npmjs.org/packages/iconv-lite/)\n\n## Usage\n### Basic API\n```javascript\nvar iconv = require('iconv-lite');\n\n// Convert from an encoded buffer to js string.\nstr = iconv.decode(Buffer.from([0x68, 0x65, 0x6c, 0x6c, 0x6f]), 'win1251');\n\n// Convert from js string to an encoded buffer.\nbuf = iconv.encode(\"Sample input string\", 'win1251');\n\n// Check if encoding is supported\niconv.encodingExists(\"us-ascii\")\n```\n\n### Streaming API (Node v0.10+)\n```javascript\n\n// Decode stream (from binary stream to js strings)\nhttp.createServer(function(req, res) {\n    var converterStream = iconv.decodeStream('win1251');\n    req.pipe(converterStream);\n\n    converterStream.on('data', function(str) {\n        console.log(str); // Do something with decoded strings, chunk-by-chunk.\n    });\n});\n\n// Convert encoding streaming example\nfs.createReadStream('file-in-win1251.txt')\n    .pipe(iconv.decodeStream('win1251'))\n    .pipe(iconv.encodeStream('ucs2'))\n    .pipe(fs.createWriteStream('file-in-ucs2.txt'));\n\n// Sugar: all encode/decode streams have .collect(cb) method to accumulate data.\nhttp.createServer(function(req, res) {\n    req.pipe(iconv.decodeStream('win1251')).collect(function(err, body) {\n        assert(typeof body == 'string');\n        console.log(body); // full request body string\n    });\n});\n```\n\n### [Deprecated] Extend Node.js own encodings\n> NOTE: This doesn't work on latest Node versions. See [details](https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility).\n\n```javascript\n// After this call all Node basic primitives will understand iconv-lite encodings.\niconv.extendNodeEncodings();\n\n// Examples:\nbuf = new Buffer(str, 'win1251');\nbuf.write(str, 'gbk');\nstr = buf.toString('latin1');\nassert(Buffer.isEncoding('iso-8859-15'));\nBuffer.byteLength(str, 'us-ascii');\n\nhttp.createServer(function(req, res) {\n    req.setEncoding('big5');\n    req.collect(function(err, body) {\n        console.log(body);\n    });\n});\n\nfs.createReadStream(\"file.txt\", \"shift_jis\");\n\n// External modules are also supported (if they use Node primitives, which they probably do).\nrequest = require('request');\nrequest({\n    url: \"http://github.com/\", \n    encoding: \"cp932\"\n});\n\n// To remove extensions\niconv.undoExtendNodeEncodings();\n```\n\n## Supported encodings\n\n *  All node.js native encodings: utf8, ucs2 / utf16-le, ascii, binary, base64, hex.\n *  Additional unicode encodings: utf16, utf16-be, utf-7, utf-7-imap.\n *  All widespread singlebyte encodings: Windows 125x family, ISO-8859 family, \n    IBM/DOS codepages, Macintosh family, KOI8 family, all others supported by iconv library. \n    Aliases like 'latin1', 'us-ascii' also supported.\n *  All widespread multibyte encodings: CP932, CP936, CP949, CP950, GB2312, GBK, GB18030, Big5, Shift_JIS, EUC-JP.\n\nSee [all supported encodings on wiki](https://github.com/ashtuchkin/iconv-lite/wiki/Supported-Encodings).\n\nMost singlebyte encodings are generated automatically from [node-iconv](https://github.com/bnoordhuis/node-iconv). Thank you Ben Noordhuis and libiconv authors!\n\nMultibyte encodings are generated from [Unicode.org mappings](http://www.unicode.org/Public/MAPPINGS/) and [WHATWG Encoding Standard mappings](http://encoding.spec.whatwg.org/). Thank you, respective authors!\n\n\n## Encoding/decoding speed\n\nComparison with node-iconv module (1000x256kb, on MacBook Pro, Core i5/2.6 GHz, Node v0.12.0). \nNote: your results may vary, so please always check on your hardware.\n\n    operation             iconv@2.1.4   iconv-lite@0.4.7\n    ----------------------------------------------------------\n    encode('win1251')     ~96 Mb/s      ~320 Mb/s\n    decode('win1251')     ~95 Mb/s      ~246 Mb/s\n\n## BOM handling\n\n * Decoding: BOM is stripped by default, unless overridden by passing `stripBOM: false` in options\n   (f.ex. `iconv.decode(buf, enc, {stripBOM: false})`).\n   A callback might also be given as a `stripBOM` parameter - it'll be called if BOM character was actually found.\n * If you want to detect UTF-8 BOM when decoding other encodings, use [node-autodetect-decoder-stream](https://github.com/danielgindi/node-autodetect-decoder-stream) module.\n * Encoding: No BOM added, unless overridden by `addBOM: true` option.\n\n## UTF-16 Encodings\n\nThis library supports UTF-16LE, UTF-16BE and UTF-16 encodings. First two are straightforward, but UTF-16 is trying to be\nsmart about endianness in the following ways:\n * Decoding: uses BOM and 'spaces heuristic' to determine input endianness. Default is UTF-16LE, but can be \n   overridden with `defaultEncoding: 'utf-16be'` option. Strips BOM unless `stripBOM: false`.\n * Encoding: uses UTF-16LE and writes BOM by default. Use `addBOM: false` to override.\n\n## Other notes\n\nWhen decoding, be sure to supply a Buffer to decode() method, otherwise [bad things usually happen](https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding).  \nUntranslatable characters are set to � or ?. No transliteration is currently supported.  \nNode versions 0.10.31 and 0.11.13 are buggy, don't use them (see #65, #77).  \n\n## Testing\n\n```bash\n$ git clone git@github.com:ashtuchkin/iconv-lite.git\n$ cd iconv-lite\n$ npm install\n$ npm test\n    \n$ # To view performance:\n$ node test/performance.js\n\n$ # To view test coverage:\n$ npm run coverage\n$ open coverage/lcov-report/index.html\n```\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\iconv-lite\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\iconv-lite\\README.md"
  },
  {
    "Content": "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\iconv-lite\\encodings\\dbcs-codec.js",
    "RelativePath": "tools\\backend\\node_modules\\iconv-lite\\encodings\\dbcs-codec.js"
  },
  {
    "Content": "\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\iconv-lite\\encodings\\dbcs-data.js",
    "RelativePath": "tools\\backend\\node_modules\\iconv-lite\\encodings\\dbcs-data.js"
  },
  {
    "Content": "\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\iconv-lite\\encodings\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\iconv-lite\\encodings\\index.js"
  },
  {
    "Content": "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\iconv-lite\\encodings\\internal.js",
    "RelativePath": "tools\\backend\\node_modules\\iconv-lite\\encodings\\internal.js"
  },
  {
    "Content": "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\iconv-lite\\encodings\\sbcs-codec.js",
    "RelativePath": "tools\\backend\\node_modules\\iconv-lite\\encodings\\sbcs-codec.js"
  },
  {
    "Content": "\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0085 ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\iconv-lite\\encodings\\sbcs-data-generated.js",
    "RelativePath": "tools\\backend\\node_modules\\iconv-lite\\encodings\\sbcs-data-generated.js"
  },
  {
    "Content": "\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\iconv-lite\\encodings\\sbcs-data.js",
    "RelativePath": "tools\\backend\\node_modules\\iconv-lite\\encodings\\sbcs-data.js"
  },
  {
    "Content": "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\iconv-lite\\encodings\\utf16.js",
    "RelativePath": "tools\\backend\\node_modules\\iconv-lite\\encodings\\utf16.js"
  },
  {
    "Content": "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\iconv-lite\\encodings\\utf7.js",
    "RelativePath": "tools\\backend\\node_modules\\iconv-lite\\encodings\\utf7.js"
  },
  {
    "Content": "\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\iconv-lite\\lib\\bom-handling.js",
    "RelativePath": "tools\\backend\\node_modules\\iconv-lite\\lib\\bom-handling.js"
  },
  {
    "Content": "\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\iconv-lite\\lib\\extend-node.js",
    "RelativePath": "tools\\backend\\node_modules\\iconv-lite\\lib\\extend-node.js"
  },
  {
    "Content": "\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\iconv-lite\\lib\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\iconv-lite\\lib\\index.js"
  },
  {
    "Content": "\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\iconv-lite\\lib\\streams.js",
    "RelativePath": "tools\\backend\\node_modules\\iconv-lite\\lib\\streams.js"
  },
  {
    "Content": "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\inherits\\inherits_browser.js",
    "RelativePath": "tools\\backend\\node_modules\\inherits\\inherits_browser.js"
  },
  {
    "Content": "try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\inherits\\inherits.js",
    "RelativePath": "tools\\backend\\node_modules\\inherits\\inherits.js"
  },
  {
    "Content": "Browser-friendly inheritance fully compatible with standard node.js\n[inherits](http://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor).\n\nThis package exports standard `inherits` from node.js `util` module in\nnode environment, but also provides alternative browser-friendly\nimplementation through [browser\nfield](https://gist.github.com/shtylman/4339901). Alternative\nimplementation is a literal copy of standard one located in standalone\nmodule to avoid requiring of `util`. It also has a shim for old\nbrowsers with no `Object.create` support.\n\nWhile keeping you sure you are using standard `inherits`\nimplementation in node.js environment, it allows bundlers such as\n[browserify](https://github.com/substack/node-browserify) to not\ninclude full `util` package to your client code if all you need is\njust `inherits` function. It worth, because browser shim for `util`\npackage is large and `inherits` is often the single function you need\nfrom it.\n\nIt's recommended to use this package instead of\n`require('util').inherits` for any code that has chances to be used\nnot only in node.js but in browser too.\n\n## usage\n\n```js\nvar inherits = require('inherits');\n// then use exactly as the standard one\n```\n\n## note on version ~1.0\n\nVersion ~1.0 had completely different motivation and is not compatible\nneither with 2.0 nor with standard node.js `inherits`.\n\nIf you are using version ~1.0 and planning to switch to ~2.0, be\ncareful:\n\n* new version uses `super_` instead of `super` for referencing\n  superclass\n* new version overwrites current prototype while old one preserves any\n  existing fields on it\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\inherits\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\inherits\\README.md"
  },
  {
    "Content": "(function(){var r,t,n,e,i,o,a,s;t={},s=this,\"undefined\"!=typeof module&&null!==module&&module.exports?module.exports=t:s.ipaddr=t,a=function(r,t,n,e){var i,o;if(r.length!==t.length)throw new Error(\"ipaddr: cannot match CIDR for objects with different lengths\");for(i=0;e>0;){if((o=n-e)<0&&(o=0),r[i]>>o!=t[i]>>o)return!1;e-=n,i+=1}return!0},t.subnetMatch=function(r,t,n){var e,i,o,a,s;null==n&&(n=\"unicast\");for(o in t)for(!(a=t[o])[0]||a[0]instanceof Array||(a=[a]),e=0,i=a.length;e<i;e++)if(s=a[e],r.kind()===s[0].kind()&&r.match.apply(r,s))return o;return n},t.IPv4=function(){function r(r){var t,n,e;if(4!==r.length)throw new Error(\"ipaddr: ipv4 octet count should be 4\");for(t=0,n=r.length;t<n;t++)if(!(0<=(e=r[t])&&e<=255))throw new Error(\"ipaddr: ipv4 octet should fit in 8 bits\");this.octets=r}return r.prototype.kind=function(){return\"ipv4\"},r.prototype.toString=function(){return this.octets.join(\".\")},r.prototype.toNormalizedString=function(){return this.toString()},r.prototype.toByteArray=function(){return this.octets.slice(0)},r.prototype.match=function(r,t){var n;if(void 0===t&&(r=(n=r)[0],t=n[1]),\"ipv4\"!==r.kind())throw new Error(\"ipaddr: cannot match ipv4 address with non-ipv4 one\");return a(this.octets,r.octets,8,t)},r.prototype.SpecialRanges={unspecified:[[new r([0,0,0,0]),8]],broadcast:[[new r([255,255,255,255]),32]],multicast:[[new r([224,0,0,0]),4]],linkLocal:[[new r([169,254,0,0]),16]],loopback:[[new r([127,0,0,0]),8]],carrierGradeNat:[[new r([100,64,0,0]),10]],private:[[new r([10,0,0,0]),8],[new r([172,16,0,0]),12],[new r([192,168,0,0]),16]],reserved:[[new r([192,0,0,0]),24],[new r([192,0,2,0]),24],[new r([192,88,99,0]),24],[new r([198,51,100,0]),24],[new r([203,0,113,0]),24],[new r([240,0,0,0]),4]]},r.prototype.range=function(){return t.subnetMatch(this,this.SpecialRanges)},r.prototype.toIPv4MappedAddress=function(){return t.IPv6.parse(\"::ffff:\"+this.toString())},r.prototype.prefixLengthFromSubnetMask=function(){var r,t,n,e,i,o,a;for(a={0:8,128:7,192:6,224:5,240:4,248:3,252:2,254:1,255:0},r=0,i=!1,t=n=3;n>=0;t=n+=-1){if(!((e=this.octets[t])in a))return null;if(o=a[e],i&&0!==o)return null;8!==o&&(i=!0),r+=o}return 32-r},r}(),n=\"(0?\\\\d+|0x[a-f0-9]+)\",e={fourOctet:new RegExp(\"^\"+n+\"\\\\.\"+n+\"\\\\.\"+n+\"\\\\.\"+n+\"$\",\"i\"),longValue:new RegExp(\"^\"+n+\"$\",\"i\")},t.IPv4.parser=function(r){var t,n,i,o,a;if(n=function(r){return\"0\"===r[0]&&\"x\"!==r[1]?parseInt(r,8):parseInt(r)},t=r.match(e.fourOctet))return function(){var r,e,o,a;for(a=[],r=0,e=(o=t.slice(1,6)).length;r<e;r++)i=o[r],a.push(n(i));return a}();if(t=r.match(e.longValue)){if((a=n(t[1]))>4294967295||a<0)throw new Error(\"ipaddr: address outside defined range\");return function(){var r,t;for(t=[],o=r=0;r<=24;o=r+=8)t.push(a>>o&255);return t}().reverse()}return null},t.IPv6=function(){function r(r,t){var n,e,i,o,a,s;if(16===r.length)for(this.parts=[],n=e=0;e<=14;n=e+=2)this.parts.push(r[n]<<8|r[n+1]);else{if(8!==r.length)throw new Error(\"ipaddr: ipv6 part count should be 8 or 16\");this.parts=r}for(i=0,o=(s=this.parts).length;i<o;i++)if(!(0<=(a=s[i])&&a<=65535))throw new Error(\"ipaddr: ipv6 part should fit in 16 bits\");t&&(this.zoneId=t)}return r.prototype.kind=function(){return\"ipv6\"},r.prototype.toString=function(){return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/,\"::\")},r.prototype.toRFC5952String=function(){var r,t,n,e,i;for(e=/((^|:)(0(:|$)){2,})/g,i=this.toNormalizedString(),r=0,t=-1;n=e.exec(i);)n[0].length>t&&(r=n.index,t=n[0].length);return t<0?i:i.substring(0,r)+\"::\"+i.substring(r+t)},r.prototype.toByteArray=function(){var r,t,n,e,i;for(r=[],t=0,n=(i=this.parts).length;t<n;t++)e=i[t],r.push(e>>8),r.push(255&e);return r},r.prototype.toNormalizedString=function(){var r,t,n;return r=function(){var r,n,e,i;for(i=[],r=0,n=(e=this.parts).length;r<n;r++)t=e[r],i.push(t.toString(16));return i}.call(this).join(\":\"),n=\"\",this.zoneId&&(n=\"%\"+this.zoneId),r+n},r.prototype.toFixedLengthString=function(){var r,t,n;return r=function(){var r,n,e,i;for(i=[],r=0,n=(e=this.parts).length;r<n;r++)t=e[r],i.push(t.toString(16).padStart(4,\"0\"));return i}.call(this).join(\":\"),n=\"\",this.zoneId&&(n=\"%\"+this.zoneId),r+n},r.prototype.match=function(r,t){var n;if(void 0===t&&(r=(n=r)[0],t=n[1]),\"ipv6\"!==r.kind())throw new Error(\"ipaddr: cannot match ipv6 address with non-ipv6 one\");return a(this.parts,r.parts,16,t)},r.prototype.SpecialRanges={unspecified:[new r([0,0,0,0,0,0,0,0]),128],linkLocal:[new r([65152,0,0,0,0,0,0,0]),10],multicast:[new r([65280,0,0,0,0,0,0,0]),8],loopback:[new r([0,0,0,0,0,0,0,1]),128],uniqueLocal:[new r([64512,0,0,0,0,0,0,0]),7],ipv4Mapped:[new r([0,0,0,0,0,65535,0,0]),96],rfc6145:[new r([0,0,0,0,65535,0,0,0]),96],rfc6052:[new r([100,65435,0,0,0,0,0,0]),96],\"6to4\":[new r([8194,0,0,0,0,0,0,0]),16],teredo:[new r([8193,0,0,0,0,0,0,0]),32],reserved:[[new r([8193,3512,0,0,0,0,0,0]),32]]},r.prototype.range=function(){return t.subnetMatch(this,this.SpecialRanges)},r.prototype.isIPv4MappedAddress=function(){return\"ipv4Mapped\"===this.range()},r.prototype.toIPv4Address=function(){var r,n,e;if(!this.isIPv4MappedAddress())throw new Error(\"ipaddr: trying to convert a generic ipv6 address to ipv4\");return e=this.parts.slice(-2),r=e[0],n=e[1],new t.IPv4([r>>8,255&r,n>>8,255&n])},r.prototype.prefixLengthFromSubnetMask=function(){var r,t,n,e,i,o,a;for(a={0:16,32768:15,49152:14,57344:13,61440:12,63488:11,64512:10,65024:9,65280:8,65408:7,65472:6,65504:5,65520:4,65528:3,65532:2,65534:1,65535:0},r=0,i=!1,t=n=7;n>=0;t=n+=-1){if(!((e=this.parts[t])in a))return null;if(o=a[e],i&&0!==o)return null;16!==o&&(i=!0),r+=o}return 128-r},r}(),i=\"(?:[0-9a-f]+::?)+\",o={zoneIndex:new RegExp(\"%[0-9a-z]{1,}\",\"i\"),native:new RegExp(\"^(::)?(\"+i+\")?([0-9a-f]+)?(::)?(%[0-9a-z]{1,})?$\",\"i\"),transitional:new RegExp(\"^((?:\"+i+\")|(?:::)(?:\"+i+\")?)\"+n+\"\\\\.\"+n+\"\\\\.\"+n+\"\\\\.\"+n+\"(%[0-9a-z]{1,})?$\",\"i\")},r=function(r,t){var n,e,i,a,s,p;if(r.indexOf(\"::\")!==r.lastIndexOf(\"::\"))return null;for((p=(r.match(o.zoneIndex)||[])[0])&&(p=p.substring(1),r=r.replace(/%.+$/,\"\")),n=0,e=-1;(e=r.indexOf(\":\",e+1))>=0;)n++;if(\"::\"===r.substr(0,2)&&n--,\"::\"===r.substr(-2,2)&&n--,n>t)return null;for(s=t-n,a=\":\";s--;)a+=\"0:\";return\":\"===(r=r.replace(\"::\",a))[0]&&(r=r.slice(1)),\":\"===r[r.length-1]&&(r=r.slice(0,-1)),t=function(){var t,n,e,o;for(o=[],t=0,n=(e=r.split(\":\")).length;t<n;t++)i=e[t],o.push(parseInt(i,16));return o}(),{parts:t,zoneId:p}},t.IPv6.parser=function(t){var n,e,i,a,s,p,u;if(o.native.test(t))return r(t,8);if((a=t.match(o.transitional))&&(u=a[6]||\"\",(n=r(a[1].slice(0,-1)+u,6)).parts)){for(e=0,i=(p=[parseInt(a[2]),parseInt(a[3]),parseInt(a[4]),parseInt(a[5])]).length;e<i;e++)if(!(0<=(s=p[e])&&s<=255))return null;return n.parts.push(p[0]<<8|p[1]),n.parts.push(p[2]<<8|p[3]),{parts:n.parts,zoneId:n.zoneId}}return null},t.IPv4.isIPv4=t.IPv6.isIPv6=function(r){return null!==this.parser(r)},t.IPv4.isValid=function(r){try{return new this(this.parser(r)),!0}catch(r){return r,!1}},t.IPv4.isValidFourPartDecimal=function(r){return!(!t.IPv4.isValid(r)||!r.match(/^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){3}$/))},t.IPv6.isValid=function(r){var t;if(\"string\"==typeof r&&-1===r.indexOf(\":\"))return!1;try{return t=this.parser(r),new this(t.parts,t.zoneId),!0}catch(r){return r,!1}},t.IPv4.parse=function(r){var t;if(null===(t=this.parser(r)))throw new Error(\"ipaddr: string is not formatted like ip address\");return new this(t)},t.IPv6.parse=function(r){var t;if(null===(t=this.parser(r)).parts)throw new Error(\"ipaddr: string is not formatted like ip address\");return new this(t.parts,t.zoneId)},t.IPv4.parseCIDR=function(r){var t,n,e;if((n=r.match(/^(.+)\\/(\\d+)$/))&&(t=parseInt(n[2]))>=0&&t<=32)return e=[this.parse(n[1]),t],Object.defineProperty(e,\"toString\",{value:function(){return this.join(\"/\")}}),e;throw new Error(\"ipaddr: string is not formatted like an IPv4 CIDR range\")},t.IPv4.subnetMaskFromPrefixLength=function(r){var t,n,e;if((r=parseInt(r))<0||r>32)throw new Error(\"ipaddr: invalid IPv4 prefix length\");for(e=[0,0,0,0],n=0,t=Math.floor(r/8);n<t;)e[n]=255,n++;return t<4&&(e[t]=Math.pow(2,r%8)-1<<8-r%8),new this(e)},t.IPv4.broadcastAddressFromCIDR=function(r){var t,n,e,i,o;try{for(e=(t=this.parseCIDR(r))[0].toByteArray(),o=this.subnetMaskFromPrefixLength(t[1]).toByteArray(),i=[],n=0;n<4;)i.push(parseInt(e[n],10)|255^parseInt(o[n],10)),n++;return new this(i)}catch(r){throw r,new Error(\"ipaddr: the address does not have IPv4 CIDR format\")}},t.IPv4.networkAddressFromCIDR=function(r){var t,n,e,i,o;try{for(e=(t=this.parseCIDR(r))[0].toByteArray(),o=this.subnetMaskFromPrefixLength(t[1]).toByteArray(),i=[],n=0;n<4;)i.push(parseInt(e[n],10)&parseInt(o[n],10)),n++;return new this(i)}catch(r){throw r,new Error(\"ipaddr: the address does not have IPv4 CIDR format\")}},t.IPv6.parseCIDR=function(r){var t,n,e;if((n=r.match(/^(.+)\\/(\\d+)$/))&&(t=parseInt(n[2]))>=0&&t<=128)return e=[this.parse(n[1]),t],Object.defineProperty(e,\"toString\",{value:function(){return this.join(\"/\")}}),e;throw new Error(\"ipaddr: string is not formatted like an IPv6 CIDR range\")},t.isValid=function(r){return t.IPv6.isValid(r)||t.IPv4.isValid(r)},t.parse=function(r){if(t.IPv6.isValid(r))return t.IPv6.parse(r);if(t.IPv4.isValid(r))return t.IPv4.parse(r);throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 format\")},t.parseCIDR=function(r){try{return t.IPv6.parseCIDR(r)}catch(n){n;try{return t.IPv4.parseCIDR(r)}catch(r){throw r,new Error(\"ipaddr: the address has neither IPv6 nor IPv4 CIDR format\")}}},t.fromByteArray=function(r){var n;if(4===(n=r.length))return new t.IPv4(r);if(16===n)return new t.IPv6(r);throw new Error(\"ipaddr: the binary input is neither an IPv6 nor IPv4 address\")},t.process=function(r){var t;return t=this.parse(r),\"ipv6\"===t.kind()&&t.isIPv4MappedAddress()?t.toIPv4Address():t}}).call(this);",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\ipaddr.js\\ipaddr.min.js",
    "RelativePath": "tools\\backend\\node_modules\\ipaddr.js\\ipaddr.min.js"
  },
  {
    "Content": "# ipaddr.js — an IPv6 and IPv4 address manipulation library [![Build Status](https://travis-ci.org/whitequark/ipaddr.js.svg)](https://travis-ci.org/whitequark/ipaddr.js)\n\nipaddr.js is a small (1.9K minified and gzipped) library for manipulating\nIP addresses in JavaScript environments. It runs on both CommonJS runtimes\n(e.g. [nodejs]) and in a web browser.\n\nipaddr.js allows you to verify and parse string representation of an IP\naddress, match it against a CIDR range or range list, determine if it falls\ninto some reserved ranges (examples include loopback and private ranges),\nand convert between IPv4 and IPv4-mapped IPv6 addresses.\n\n[nodejs]: http://nodejs.org\n\n## Installation\n\n`npm install ipaddr.js`\n\nor\n\n`bower install ipaddr.js`\n\n## API\n\nipaddr.js defines one object in the global scope: `ipaddr`. In CommonJS,\nit is exported from the module:\n\n```js\nvar ipaddr = require('ipaddr.js');\n```\n\nThe API consists of several global methods and two classes: ipaddr.IPv6 and ipaddr.IPv4.\n\n### Global methods\n\nThere are three global methods defined: `ipaddr.isValid`, `ipaddr.parse` and\n`ipaddr.process`. All of them receive a string as a single parameter.\n\nThe `ipaddr.isValid` method returns `true` if the address is a valid IPv4 or\nIPv6 address, and `false` otherwise. It does not throw any exceptions.\n\nThe `ipaddr.parse` method returns an object representing the IP address,\nor throws an `Error` if the passed string is not a valid representation of an\nIP address.\n\nThe `ipaddr.process` method works just like the `ipaddr.parse` one, but it\nautomatically converts IPv4-mapped IPv6 addresses to their IPv4 counterparts\nbefore returning. It is useful when you have a Node.js instance listening\non an IPv6 socket, and the `net.ivp6.bindv6only` sysctl parameter (or its\nequivalent on non-Linux OS) is set to 0. In this case, you can accept IPv4\nconnections on your IPv6-only socket, but the remote address will be mangled.\nUse `ipaddr.process` method to automatically demangle it.\n\n### Object representation\n\nParsing methods return an object which descends from `ipaddr.IPv6` or\n`ipaddr.IPv4`. These objects share some properties, but most of them differ.\n\n#### Shared properties\n\nOne can determine the type of address by calling `addr.kind()`. It will return\neither `\"ipv6\"` or `\"ipv4\"`.\n\nAn address can be converted back to its string representation with `addr.toString()`.\nNote that this method:\n * does not return the original string used to create the object (in fact, there is\n   no way of getting that string)\n * returns a compact representation (when it is applicable)\n\nA `match(range, bits)` method can be used to check if the address falls into a\ncertain CIDR range.\nNote that an address can be (obviously) matched only against an address of the same type.\n\nFor example:\n\n```js\nvar addr = ipaddr.parse(\"2001:db8:1234::1\");\nvar range = ipaddr.parse(\"2001:db8::\");\n\naddr.match(range, 32); // => true\n```\n\nAlternatively, `match` can also be called as `match([range, bits])`. In this way,\nit can be used together with the `parseCIDR(string)` method, which parses an IP\naddress together with a CIDR range.\n\nFor example:\n\n```js\nvar addr = ipaddr.parse(\"2001:db8:1234::1\");\n\naddr.match(ipaddr.parseCIDR(\"2001:db8::/32\")); // => true\n```\n\nA `range()` method returns one of predefined names for several special ranges defined\nby IP protocols. The exact names (and their respective CIDR ranges) can be looked up\nin the source: [IPv6 ranges] and [IPv4 ranges]. Some common ones include `\"unicast\"`\n(the default one) and `\"reserved\"`.\n\nYou can match against your own range list by using\n`ipaddr.subnetMatch(address, rangeList, defaultName)` method. It can work with a mix of IPv6 or IPv4 addresses, and accepts a name-to-subnet map as the range list. For example:\n\n```js\nvar rangeList = {\n  documentationOnly: [ ipaddr.parse('2001:db8::'), 32 ],\n  tunnelProviders: [\n    [ ipaddr.parse('2001:470::'), 32 ], // he.net\n    [ ipaddr.parse('2001:5c0::'), 32 ]  // freenet6\n  ]\n};\nipaddr.subnetMatch(ipaddr.parse('2001:470:8:66::1'), rangeList, 'unknown'); // => \"tunnelProviders\"\n```\n\nThe addresses can be converted to their byte representation with `toByteArray()`.\n(Actually, JavaScript mostly does not know about byte buffers. They are emulated with\narrays of numbers, each in range of 0..255.)\n\n```js\nvar bytes = ipaddr.parse('2a00:1450:8007::68').toByteArray(); // ipv6.google.com\nbytes // => [42, 0x00, 0x14, 0x50, 0x80, 0x07, 0x00, <zeroes...>, 0x00, 0x68 ]\n```\n\nThe `ipaddr.IPv4` and `ipaddr.IPv6` objects have some methods defined, too. All of them\nhave the same interface for both protocols, and are similar to global methods.\n\n`ipaddr.IPvX.isValid(string)` can be used to check if the string is a valid address\nfor particular protocol, and `ipaddr.IPvX.parse(string)` is the error-throwing parser.\n\n`ipaddr.IPvX.isValid(string)` uses the same format for parsing as the POSIX `inet_ntoa` function, which accepts unusual formats like `0xc0.168.1.1` or `0x10000000`. The function `ipaddr.IPv4.isValidFourPartDecimal(string)` validates the IPv4 address and also ensures that it is written in four-part decimal format.\n\n[IPv6 ranges]: https://github.com/whitequark/ipaddr.js/blob/master/src/ipaddr.coffee#L186\n[IPv4 ranges]: https://github.com/whitequark/ipaddr.js/blob/master/src/ipaddr.coffee#L71\n\n#### IPv6 properties\n\nSometimes you will want to convert IPv6 not to a compact string representation (with\nthe `::` substitution); the `toNormalizedString()` method will return an address where\nall zeroes are explicit.\n\nFor example:\n\n```js\nvar addr = ipaddr.parse(\"2001:0db8::0001\");\naddr.toString(); // => \"2001:db8::1\"\naddr.toNormalizedString(); // => \"2001:db8:0:0:0:0:0:1\"\n```\n\nThe `isIPv4MappedAddress()` method will return `true` if this address is an IPv4-mapped\none, and `toIPv4Address()` will return an IPv4 object address.\n\nTo access the underlying binary representation of the address, use `addr.parts`.\n\n```js\nvar addr = ipaddr.parse(\"2001:db8:10::1234:DEAD\");\naddr.parts // => [0x2001, 0xdb8, 0x10, 0, 0, 0, 0x1234, 0xdead]\n```\n\nA IPv6 zone index can be accessed via `addr.zoneId`:\n\n```js\nvar addr = ipaddr.parse(\"2001:db8::%eth0\");\naddr.zoneId // => 'eth0'\n```\n\n#### IPv4 properties\n\n`toIPv4MappedAddress()` will return a corresponding IPv4-mapped IPv6 address.\n\nTo access the underlying representation of the address, use `addr.octets`.\n\n```js\nvar addr = ipaddr.parse(\"192.168.1.1\");\naddr.octets // => [192, 168, 1, 1]\n```\n\n`prefixLengthFromSubnetMask()` will return a CIDR prefix length for a valid IPv4 netmask or\nnull if the netmask is not valid.\n\n```js\nipaddr.IPv4.parse('255.255.255.240').prefixLengthFromSubnetMask() == 28\nipaddr.IPv4.parse('255.192.164.0').prefixLengthFromSubnetMask()  == null\n```\n\n`subnetMaskFromPrefixLength()` will return an IPv4 netmask for a valid CIDR prefix length.\n\n```js\nipaddr.IPv4.subnetMaskFromPrefixLength(24) == \"255.255.255.0\"\nipaddr.IPv4.subnetMaskFromPrefixLength(29) == \"255.255.255.248\"\n```\n\n`broadcastAddressFromCIDR()` will return the broadcast address for a given IPv4 interface and netmask in CIDR notation.\n```js\nipaddr.IPv4.broadcastAddressFromCIDR(\"172.0.0.1/24\") == \"172.0.0.255\"\n```\n`networkAddressFromCIDR()` will return the network address for a given IPv4 interface and netmask in CIDR notation.\n```js\nipaddr.IPv4.networkAddressFromCIDR(\"172.0.0.1/24\") == \"172.0.0.0\"\n```\n\n#### Conversion\n\nIPv4 and IPv6 can be converted bidirectionally to and from network byte order (MSB) byte arrays.\n\nThe `fromByteArray()` method will take an array and create an appropriate IPv4 or IPv6 object\nif the input satisfies the requirements. For IPv4 it has to be an array of four 8-bit values,\nwhile for IPv6 it has to be an array of sixteen 8-bit values.\n\nFor example:\n```js\nvar addr = ipaddr.fromByteArray([0x7f, 0, 0, 1]);\naddr.toString(); // => \"127.0.0.1\"\n```\n\nor\n\n```js\nvar addr = ipaddr.fromByteArray([0x20, 1, 0xd, 0xb8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\naddr.toString(); // => \"2001:db8::1\"\n```\n\nBoth objects also offer a `toByteArray()` method, which returns an array in network byte order (MSB).\n\nFor example:\n```js\nvar addr = ipaddr.parse(\"127.0.0.1\");\naddr.toByteArray(); // => [0x7f, 0, 0, 1]\n```\n\nor\n\n```js\nvar addr = ipaddr.parse(\"2001:db8::1\");\naddr.toByteArray(); // => [0x20, 1, 0xd, 0xb8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]\n```\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\ipaddr.js\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\ipaddr.js\\README.md"
  },
  {
    "Content": "(function() {\n  var expandIPv6, ipaddr, ipv4Part, ipv4Regexes, ipv6Part, ipv6Regexes, matchCIDR, root, zoneIndex;\n\n  ipaddr = {};\n\n  root = this;\n\n  if ((typeof module !== \"undefined\" && module !== null) && module.exports) {\n    module.exports = ipaddr;\n  } else {\n    root['ipaddr'] = ipaddr;\n  }\n\n  matchCIDR = function(first, second, partSize, cidrBits) {\n    var part, shift;\n    if (first.length !== second.length) {\n      throw new Error(\"ipaddr: cannot match CIDR for objects with different lengths\");\n    }\n    part = 0;\n    while (cidrBits > 0) {\n      shift = partSize - cidrBits;\n      if (shift < 0) {\n        shift = 0;\n      }\n      if (first[part] >> shift !== second[part] >> shift) {\n        return false;\n      }\n      cidrBits -= partSize;\n      part += 1;\n    }\n    return true;\n  };\n\n  ipaddr.subnetMatch = function(address, rangeList, defaultName) {\n    var k, len, rangeName, rangeSubnets, subnet;\n    if (defaultName == null) {\n      defaultName = 'unicast';\n    }\n    for (rangeName in rangeList) {\n      rangeSubnets = rangeList[rangeName];\n      if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {\n        rangeSubnets = [rangeSubnets];\n      }\n      for (k = 0, len = rangeSubnets.length; k < len; k++) {\n        subnet = rangeSubnets[k];\n        if (address.kind() === subnet[0].kind()) {\n          if (address.match.apply(address, subnet)) {\n            return rangeName;\n          }\n        }\n      }\n    }\n    return defaultName;\n  };\n\n  ipaddr.IPv4 = (function() {\n    function IPv4(octets) {\n      var k, len, octet;\n      if (octets.length !== 4) {\n        throw new Error(\"ipaddr: ipv4 octet count should be 4\");\n      }\n      for (k = 0, len = octets.length; k < len; k++) {\n        octet = octets[k];\n        if (!((0 <= octet && octet <= 255))) {\n          throw new Error(\"ipaddr: ipv4 octet should fit in 8 bits\");\n        }\n      }\n      this.octets = octets;\n    }\n\n    IPv4.prototype.kind = function() {\n      return 'ipv4';\n    };\n\n    IPv4.prototype.toString = function() {\n      return this.octets.join(\".\");\n    };\n\n    IPv4.prototype.toNormalizedString = function() {\n      return this.toString();\n    };\n\n    IPv4.prototype.toByteArray = function() {\n      return this.octets.slice(0);\n    };\n\n    IPv4.prototype.match = function(other, cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv4') {\n        throw new Error(\"ipaddr: cannot match ipv4 address with non-ipv4 one\");\n      }\n      return matchCIDR(this.octets, other.octets, 8, cidrRange);\n    };\n\n    IPv4.prototype.SpecialRanges = {\n      unspecified: [[new IPv4([0, 0, 0, 0]), 8]],\n      broadcast: [[new IPv4([255, 255, 255, 255]), 32]],\n      multicast: [[new IPv4([224, 0, 0, 0]), 4]],\n      linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],\n      loopback: [[new IPv4([127, 0, 0, 0]), 8]],\n      carrierGradeNat: [[new IPv4([100, 64, 0, 0]), 10]],\n      \"private\": [[new IPv4([10, 0, 0, 0]), 8], [new IPv4([172, 16, 0, 0]), 12], [new IPv4([192, 168, 0, 0]), 16]],\n      reserved: [[new IPv4([192, 0, 0, 0]), 24], [new IPv4([192, 0, 2, 0]), 24], [new IPv4([192, 88, 99, 0]), 24], [new IPv4([198, 51, 100, 0]), 24], [new IPv4([203, 0, 113, 0]), 24], [new IPv4([240, 0, 0, 0]), 4]]\n    };\n\n    IPv4.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv4.prototype.toIPv4MappedAddress = function() {\n      return ipaddr.IPv6.parse(\"::ffff:\" + (this.toString()));\n    };\n\n    IPv4.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr, i, k, octet, stop, zeros, zerotable;\n      zerotable = {\n        0: 8,\n        128: 7,\n        192: 6,\n        224: 5,\n        240: 4,\n        248: 3,\n        252: 2,\n        254: 1,\n        255: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 3; k >= 0; i = k += -1) {\n        octet = this.octets[i];\n        if (octet in zerotable) {\n          zeros = zerotable[octet];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 8) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 32 - cidr;\n    };\n\n    return IPv4;\n\n  })();\n\n  ipv4Part = \"(0?\\\\d+|0x[a-f0-9]+)\";\n\n  ipv4Regexes = {\n    fourOctet: new RegExp(\"^\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"$\", 'i'),\n    longValue: new RegExp(\"^\" + ipv4Part + \"$\", 'i')\n  };\n\n  ipaddr.IPv4.parser = function(string) {\n    var match, parseIntAuto, part, shift, value;\n    parseIntAuto = function(string) {\n      if (string[0] === \"0\" && string[1] !== \"x\") {\n        return parseInt(string, 8);\n      } else {\n        return parseInt(string);\n      }\n    };\n    if (match = string.match(ipv4Regexes.fourOctet)) {\n      return (function() {\n        var k, len, ref, results;\n        ref = match.slice(1, 6);\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(parseIntAuto(part));\n        }\n        return results;\n      })();\n    } else if (match = string.match(ipv4Regexes.longValue)) {\n      value = parseIntAuto(match[1]);\n      if (value > 0xffffffff || value < 0) {\n        throw new Error(\"ipaddr: address outside defined range\");\n      }\n      return ((function() {\n        var k, results;\n        results = [];\n        for (shift = k = 0; k <= 24; shift = k += 8) {\n          results.push((value >> shift) & 0xff);\n        }\n        return results;\n      })()).reverse();\n    } else {\n      return null;\n    }\n  };\n\n  ipaddr.IPv6 = (function() {\n    function IPv6(parts, zoneId) {\n      var i, k, l, len, part, ref;\n      if (parts.length === 16) {\n        this.parts = [];\n        for (i = k = 0; k <= 14; i = k += 2) {\n          this.parts.push((parts[i] << 8) | parts[i + 1]);\n        }\n      } else if (parts.length === 8) {\n        this.parts = parts;\n      } else {\n        throw new Error(\"ipaddr: ipv6 part count should be 8 or 16\");\n      }\n      ref = this.parts;\n      for (l = 0, len = ref.length; l < len; l++) {\n        part = ref[l];\n        if (!((0 <= part && part <= 0xffff))) {\n          throw new Error(\"ipaddr: ipv6 part should fit in 16 bits\");\n        }\n      }\n      if (zoneId) {\n        this.zoneId = zoneId;\n      }\n    }\n\n    IPv6.prototype.kind = function() {\n      return 'ipv6';\n    };\n\n    IPv6.prototype.toString = function() {\n      return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/, '::');\n    };\n\n    IPv6.prototype.toRFC5952String = function() {\n      var bestMatchIndex, bestMatchLength, match, regex, string;\n      regex = /((^|:)(0(:|$)){2,})/g;\n      string = this.toNormalizedString();\n      bestMatchIndex = 0;\n      bestMatchLength = -1;\n      while ((match = regex.exec(string))) {\n        if (match[0].length > bestMatchLength) {\n          bestMatchIndex = match.index;\n          bestMatchLength = match[0].length;\n        }\n      }\n      if (bestMatchLength < 0) {\n        return string;\n      }\n      return string.substring(0, bestMatchIndex) + '::' + string.substring(bestMatchIndex + bestMatchLength);\n    };\n\n    IPv6.prototype.toByteArray = function() {\n      var bytes, k, len, part, ref;\n      bytes = [];\n      ref = this.parts;\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        bytes.push(part >> 8);\n        bytes.push(part & 0xff);\n      }\n      return bytes;\n    };\n\n    IPv6.prototype.toNormalizedString = function() {\n      var addr, part, suffix;\n      addr = ((function() {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16));\n        }\n        return results;\n      }).call(this)).join(\":\");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.toFixedLengthString = function() {\n      var addr, part, suffix;\n      addr = ((function() {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16).padStart(4, '0'));\n        }\n        return results;\n      }).call(this)).join(\":\");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.match = function(other, cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv6') {\n        throw new Error(\"ipaddr: cannot match ipv6 address with non-ipv6 one\");\n      }\n      return matchCIDR(this.parts, other.parts, 16, cidrRange);\n    };\n\n    IPv6.prototype.SpecialRanges = {\n      unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],\n      linkLocal: [new IPv6([0xfe80, 0, 0, 0, 0, 0, 0, 0]), 10],\n      multicast: [new IPv6([0xff00, 0, 0, 0, 0, 0, 0, 0]), 8],\n      loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],\n      uniqueLocal: [new IPv6([0xfc00, 0, 0, 0, 0, 0, 0, 0]), 7],\n      ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 0xffff, 0, 0]), 96],\n      rfc6145: [new IPv6([0, 0, 0, 0, 0xffff, 0, 0, 0]), 96],\n      rfc6052: [new IPv6([0x64, 0xff9b, 0, 0, 0, 0, 0, 0]), 96],\n      '6to4': [new IPv6([0x2002, 0, 0, 0, 0, 0, 0, 0]), 16],\n      teredo: [new IPv6([0x2001, 0, 0, 0, 0, 0, 0, 0]), 32],\n      reserved: [[new IPv6([0x2001, 0xdb8, 0, 0, 0, 0, 0, 0]), 32]]\n    };\n\n    IPv6.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv6.prototype.isIPv4MappedAddress = function() {\n      return this.range() === 'ipv4Mapped';\n    };\n\n    IPv6.prototype.toIPv4Address = function() {\n      var high, low, ref;\n      if (!this.isIPv4MappedAddress()) {\n        throw new Error(\"ipaddr: trying to convert a generic ipv6 address to ipv4\");\n      }\n      ref = this.parts.slice(-2), high = ref[0], low = ref[1];\n      return new ipaddr.IPv4([high >> 8, high & 0xff, low >> 8, low & 0xff]);\n    };\n\n    IPv6.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr, i, k, part, stop, zeros, zerotable;\n      zerotable = {\n        0: 16,\n        32768: 15,\n        49152: 14,\n        57344: 13,\n        61440: 12,\n        63488: 11,\n        64512: 10,\n        65024: 9,\n        65280: 8,\n        65408: 7,\n        65472: 6,\n        65504: 5,\n        65520: 4,\n        65528: 3,\n        65532: 2,\n        65534: 1,\n        65535: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 7; k >= 0; i = k += -1) {\n        part = this.parts[i];\n        if (part in zerotable) {\n          zeros = zerotable[part];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 16) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 128 - cidr;\n    };\n\n    return IPv6;\n\n  })();\n\n  ipv6Part = \"(?:[0-9a-f]+::?)+\";\n\n  zoneIndex = \"%[0-9a-z]{1,}\";\n\n  ipv6Regexes = {\n    zoneIndex: new RegExp(zoneIndex, 'i'),\n    \"native\": new RegExp(\"^(::)?(\" + ipv6Part + \")?([0-9a-f]+)?(::)?(\" + zoneIndex + \")?$\", 'i'),\n    transitional: new RegExp((\"^((?:\" + ipv6Part + \")|(?:::)(?:\" + ipv6Part + \")?)\") + (ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part) + (\"(\" + zoneIndex + \")?$\"), 'i')\n  };\n\n  expandIPv6 = function(string, parts) {\n    var colonCount, lastColon, part, replacement, replacementCount, zoneId;\n    if (string.indexOf('::') !== string.lastIndexOf('::')) {\n      return null;\n    }\n    zoneId = (string.match(ipv6Regexes['zoneIndex']) || [])[0];\n    if (zoneId) {\n      zoneId = zoneId.substring(1);\n      string = string.replace(/%.+$/, '');\n    }\n    colonCount = 0;\n    lastColon = -1;\n    while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {\n      colonCount++;\n    }\n    if (string.substr(0, 2) === '::') {\n      colonCount--;\n    }\n    if (string.substr(-2, 2) === '::') {\n      colonCount--;\n    }\n    if (colonCount > parts) {\n      return null;\n    }\n    replacementCount = parts - colonCount;\n    replacement = ':';\n    while (replacementCount--) {\n      replacement += '0:';\n    }\n    string = string.replace('::', replacement);\n    if (string[0] === ':') {\n      string = string.slice(1);\n    }\n    if (string[string.length - 1] === ':') {\n      string = string.slice(0, -1);\n    }\n    parts = (function() {\n      var k, len, ref, results;\n      ref = string.split(\":\");\n      results = [];\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        results.push(parseInt(part, 16));\n      }\n      return results;\n    })();\n    return {\n      parts: parts,\n      zoneId: zoneId\n    };\n  };\n\n  ipaddr.IPv6.parser = function(string) {\n    var addr, k, len, match, octet, octets, zoneId;\n    if (ipv6Regexes['native'].test(string)) {\n      return expandIPv6(string, 8);\n    } else if (match = string.match(ipv6Regexes['transitional'])) {\n      zoneId = match[6] || '';\n      addr = expandIPv6(match[1].slice(0, -1) + zoneId, 6);\n      if (addr.parts) {\n        octets = [parseInt(match[2]), parseInt(match[3]), parseInt(match[4]), parseInt(match[5])];\n        for (k = 0, len = octets.length; k < len; k++) {\n          octet = octets[k];\n          if (!((0 <= octet && octet <= 255))) {\n            return null;\n          }\n        }\n        addr.parts.push(octets[0] << 8 | octets[1]);\n        addr.parts.push(octets[2] << 8 | octets[3]);\n        return {\n          parts: addr.parts,\n          zoneId: addr.zoneId\n        };\n      }\n    }\n    return null;\n  };\n\n  ipaddr.IPv4.isIPv4 = ipaddr.IPv6.isIPv6 = function(string) {\n    return this.parser(string) !== null;\n  };\n\n  ipaddr.IPv4.isValid = function(string) {\n    var e;\n    try {\n      new this(this.parser(string));\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.isValidFourPartDecimal = function(string) {\n    if (ipaddr.IPv4.isValid(string) && string.match(/^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){3}$/)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  ipaddr.IPv6.isValid = function(string) {\n    var addr, e;\n    if (typeof string === \"string\" && string.indexOf(\":\") === -1) {\n      return false;\n    }\n    try {\n      addr = this.parser(string);\n      new this(addr.parts, addr.zoneId);\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.parse = function(string) {\n    var parts;\n    parts = this.parser(string);\n    if (parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(parts);\n  };\n\n  ipaddr.IPv6.parse = function(string) {\n    var addr;\n    addr = this.parser(string);\n    if (addr.parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(addr.parts, addr.zoneId);\n  };\n\n  ipaddr.IPv4.parseCIDR = function(string) {\n    var maskLength, match, parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 32) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error(\"ipaddr: string is not formatted like an IPv4 CIDR range\");\n  };\n\n  ipaddr.IPv4.subnetMaskFromPrefixLength = function(prefix) {\n    var filledOctetCount, j, octets;\n    prefix = parseInt(prefix);\n    if (prefix < 0 || prefix > 32) {\n      throw new Error('ipaddr: invalid IPv4 prefix length');\n    }\n    octets = [0, 0, 0, 0];\n    j = 0;\n    filledOctetCount = Math.floor(prefix / 8);\n    while (j < filledOctetCount) {\n      octets[j] = 255;\n      j++;\n    }\n    if (filledOctetCount < 4) {\n      octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);\n    }\n    return new this(octets);\n  };\n\n  ipaddr.IPv4.broadcastAddressFromCIDR = function(string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv4.networkAddressFromCIDR = function(string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv6.parseCIDR = function(string) {\n    var maskLength, match, parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 128) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error(\"ipaddr: string is not formatted like an IPv6 CIDR range\");\n  };\n\n  ipaddr.isValid = function(string) {\n    return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\n  };\n\n  ipaddr.parse = function(string) {\n    if (ipaddr.IPv6.isValid(string)) {\n      return ipaddr.IPv6.parse(string);\n    } else if (ipaddr.IPv4.isValid(string)) {\n      return ipaddr.IPv4.parse(string);\n    } else {\n      throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 format\");\n    }\n  };\n\n  ipaddr.parseCIDR = function(string) {\n    var e;\n    try {\n      return ipaddr.IPv6.parseCIDR(string);\n    } catch (error1) {\n      e = error1;\n      try {\n        return ipaddr.IPv4.parseCIDR(string);\n      } catch (error1) {\n        e = error1;\n        throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 CIDR format\");\n      }\n    }\n  };\n\n  ipaddr.fromByteArray = function(bytes) {\n    var length;\n    length = bytes.length;\n    if (length === 4) {\n      return new ipaddr.IPv4(bytes);\n    } else if (length === 16) {\n      return new ipaddr.IPv6(bytes);\n    } else {\n      throw new Error(\"ipaddr: the binary input is neither an IPv6 nor IPv4 address\");\n    }\n  };\n\n  ipaddr.process = function(string) {\n    var addr;\n    addr = this.parse(string);\n    if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\n      return addr.toIPv4Address();\n    } else {\n      return addr;\n    }\n  };\n\n}).call(this);\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\ipaddr.js\\lib\\ipaddr.js",
    "RelativePath": "tools\\backend\\node_modules\\ipaddr.js\\lib\\ipaddr.js"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./abs')} */\nmodule.exports = Math.abs;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\math-intrinsics\\abs.js",
    "RelativePath": "tools\\backend\\node_modules\\math-intrinsics\\abs.js"
  },
  {
    "Content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v1.1.0](https://github.com/es-shims/math-intrinsics/compare/v1.0.0...v1.1.0) - 2024-12-18\n\n### Commits\n\n- [New] add `round` [`7cfb044`](https://github.com/es-shims/math-intrinsics/commit/7cfb04460c0fbdf1ca101eecbac3f59d11994130)\n- [Tests] add attw [`e96be8f`](https://github.com/es-shims/math-intrinsics/commit/e96be8fbf58449eafe976446a0470e6ea561ad8d)\n- [Dev Deps] update `@types/tape` [`30d0023`](https://github.com/es-shims/math-intrinsics/commit/30d00234ce8a3fa0094a61cd55d6686eb91e36ec)\n\n## v1.0.0 - 2024-12-11\n\n### Commits\n\n- Initial implementation, tests, readme, types [`b898caa`](https://github.com/es-shims/math-intrinsics/commit/b898caae94e9994a94a42b8740f7bbcfd0a868fe)\n- Initial commit [`02745b0`](https://github.com/es-shims/math-intrinsics/commit/02745b03a62255af8a332771987b55d127538d9c)\n- [New] add `constants/maxArrayLength`, `mod` [`b978178`](https://github.com/es-shims/math-intrinsics/commit/b978178a57685bd23ed1c7efe2137f3784f5fcc5)\n- npm init [`a39fc57`](https://github.com/es-shims/math-intrinsics/commit/a39fc57e5639a645d0bd52a0dc56202480223be2)\n- Only apps should have lockfiles [`9451580`](https://github.com/es-shims/math-intrinsics/commit/94515800fb34db4f3cc7e99290042d45609ac7bd)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\math-intrinsics\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\math-intrinsics\\CHANGELOG.md"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./floor')} */\nmodule.exports = Math.floor;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\math-intrinsics\\floor.js",
    "RelativePath": "tools\\backend\\node_modules\\math-intrinsics\\floor.js"
  },
  {
    "Content": "'use strict';\n\nvar $isNaN = require('./isNaN');\n\n/** @type {import('./isFinite')} */\nmodule.exports = function isFinite(x) {\n\treturn (typeof x === 'number' || typeof x === 'bigint')\n        && !$isNaN(x)\n        && x !== Infinity\n        && x !== -Infinity;\n};\n\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\math-intrinsics\\isFinite.js",
    "RelativePath": "tools\\backend\\node_modules\\math-intrinsics\\isFinite.js"
  },
  {
    "Content": "'use strict';\n\nvar $abs = require('./abs');\nvar $floor = require('./floor');\n\nvar $isNaN = require('./isNaN');\nvar $isFinite = require('./isFinite');\n\n/** @type {import('./isInteger')} */\nmodule.exports = function isInteger(argument) {\n\tif (typeof argument !== 'number' || $isNaN(argument) || !$isFinite(argument)) {\n\t\treturn false;\n\t}\n\tvar absValue = $abs(argument);\n\treturn $floor(absValue) === absValue;\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\math-intrinsics\\isInteger.js",
    "RelativePath": "tools\\backend\\node_modules\\math-intrinsics\\isInteger.js"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./isNaN')} */\nmodule.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\math-intrinsics\\isNaN.js",
    "RelativePath": "tools\\backend\\node_modules\\math-intrinsics\\isNaN.js"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./isNegativeZero')} */\nmodule.exports = function isNegativeZero(x) {\n\treturn x === 0 && 1 / x === 1 / -0;\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\math-intrinsics\\isNegativeZero.js",
    "RelativePath": "tools\\backend\\node_modules\\math-intrinsics\\isNegativeZero.js"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./max')} */\nmodule.exports = Math.max;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\math-intrinsics\\max.js",
    "RelativePath": "tools\\backend\\node_modules\\math-intrinsics\\max.js"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./min')} */\nmodule.exports = Math.min;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\math-intrinsics\\min.js",
    "RelativePath": "tools\\backend\\node_modules\\math-intrinsics\\min.js"
  },
  {
    "Content": "'use strict';\n\nvar $floor = require('./floor');\n\n/** @type {import('./mod')} */\nmodule.exports = function mod(number, modulo) {\n\tvar remain = number % modulo;\n\treturn $floor(remain >= 0 ? remain : remain + modulo);\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\math-intrinsics\\mod.js",
    "RelativePath": "tools\\backend\\node_modules\\math-intrinsics\\mod.js"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./pow')} */\nmodule.exports = Math.pow;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\math-intrinsics\\pow.js",
    "RelativePath": "tools\\backend\\node_modules\\math-intrinsics\\pow.js"
  },
  {
    "Content": "# math-intrinsics <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\nES Math-related intrinsics and helpers, robustly cached.\n\n - `abs`\n - `floor`\n - `isFinite`\n - `isInteger`\n - `isNaN`\n - `isNegativeZero`\n - `max`\n - `min`\n - `mod`\n - `pow`\n - `round`\n - `sign`\n - `constants/maxArrayLength`\n - `constants/maxSafeInteger`\n - `constants/maxValue`\n\n\n## Tests\nSimply clone the repo, `npm install`, and run `npm test`\n\n## Security\n\nPlease email [@ljharb](https://github.com/ljharb) or see https://tidelift.com/security if you have a potential security vulnerability to report.\n\n[package-url]: https://npmjs.org/package/math-intrinsics\n[npm-version-svg]: https://versionbadg.es/es-shims/math-intrinsics.svg\n[deps-svg]: https://david-dm.org/es-shims/math-intrinsics.svg\n[deps-url]: https://david-dm.org/es-shims/math-intrinsics\n[dev-deps-svg]: https://david-dm.org/es-shims/math-intrinsics/dev-status.svg\n[dev-deps-url]: https://david-dm.org/es-shims/math-intrinsics#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/math-intrinsics.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/math-intrinsics.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/es-object.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=math-intrinsics\n[codecov-image]: https://codecov.io/gh/es-shims/math-intrinsics/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/es-shims/math-intrinsics/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/es-shims/math-intrinsics\n[actions-url]: https://github.com/es-shims/math-intrinsics/actions\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\math-intrinsics\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\math-intrinsics\\README.md"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./round')} */\nmodule.exports = Math.round;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\math-intrinsics\\round.js",
    "RelativePath": "tools\\backend\\node_modules\\math-intrinsics\\round.js"
  },
  {
    "Content": "'use strict';\n\nvar $isNaN = require('./isNaN');\n\n/** @type {import('./sign')} */\nmodule.exports = function sign(number) {\n\tif ($isNaN(number) || number === 0) {\n\t\treturn number;\n\t}\n\treturn number < 0 ? -1 : +1;\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\math-intrinsics\\sign.js",
    "RelativePath": "tools\\backend\\node_modules\\math-intrinsics\\sign.js"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./maxArrayLength')} */\nmodule.exports = 4294967295; // Math.pow(2, 32) - 1;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\math-intrinsics\\constants\\maxArrayLength.js",
    "RelativePath": "tools\\backend\\node_modules\\math-intrinsics\\constants\\maxArrayLength.js"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./maxSafeInteger')} */\n// eslint-disable-next-line no-extra-parens\nmodule.exports = /** @type {import('./maxSafeInteger')} */ (Number.MAX_SAFE_INTEGER) || 9007199254740991; // Math.pow(2, 53) - 1;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\math-intrinsics\\constants\\maxSafeInteger.js",
    "RelativePath": "tools\\backend\\node_modules\\math-intrinsics\\constants\\maxSafeInteger.js"
  },
  {
    "Content": "'use strict';\n\n/** @type {import('./maxValue')}  */\n// eslint-disable-next-line no-extra-parens\nmodule.exports = /** @type {import('./maxValue')}  */ (Number.MAX_VALUE) || 1.7976931348623157e+308;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\math-intrinsics\\constants\\maxValue.js",
    "RelativePath": "tools\\backend\\node_modules\\math-intrinsics\\constants\\maxValue.js"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\nvar v = require('es-value-fixtures');\nvar forEach = require('for-each');\nvar inspect = require('object-inspect');\n\nvar abs = require('../abs');\nvar floor = require('../floor');\nvar isFinite = require('../isFinite');\nvar isInteger = require('../isInteger');\nvar isNaN = require('../isNaN');\nvar isNegativeZero = require('../isNegativeZero');\nvar max = require('../max');\nvar min = require('../min');\nvar mod = require('../mod');\nvar pow = require('../pow');\nvar round = require('../round');\nvar sign = require('../sign');\n\nvar maxArrayLength = require('../constants/maxArrayLength');\nvar maxSafeInteger = require('../constants/maxSafeInteger');\nvar maxValue = require('../constants/maxValue');\n\ntest('abs', function (t) {\n\tt.equal(abs(-1), 1, 'abs(-1) === 1');\n\tt.equal(abs(+1), 1, 'abs(+1) === 1');\n\tt.equal(abs(+0), +0, 'abs(+0) === +0');\n\tt.equal(abs(-0), +0, 'abs(-0) === +0');\n\n\tt.end();\n});\n\ntest('floor', function (t) {\n\tt.equal(floor(-1.1), -2, 'floor(-1.1) === -2');\n\tt.equal(floor(+1.1), 1, 'floor(+1.1) === 1');\n\tt.equal(floor(+0), +0, 'floor(+0) === +0');\n\tt.equal(floor(-0), -0, 'floor(-0) === -0');\n\tt.equal(floor(-Infinity), -Infinity, 'floor(-Infinity) === -Infinity');\n\tt.equal(floor(Number(Infinity)), Number(Infinity), 'floor(+Infinity) === +Infinity');\n\tt.equal(floor(NaN), NaN, 'floor(NaN) === NaN');\n\tt.equal(floor(0), +0, 'floor(0) === +0');\n\tt.equal(floor(-0), -0, 'floor(-0) === -0');\n\tt.equal(floor(1), 1, 'floor(1) === 1');\n\tt.equal(floor(-1), -1, 'floor(-1) === -1');\n\tt.equal(floor(1.1), 1, 'floor(1.1) === 1');\n\tt.equal(floor(-1.1), -2, 'floor(-1.1) === -2');\n\tt.equal(floor(maxValue), maxValue, 'floor(maxValue) === maxValue');\n\tt.equal(floor(maxSafeInteger), maxSafeInteger, 'floor(maxSafeInteger) === maxSafeInteger');\n\n\tt.end();\n});\n\ntest('isFinite', function (t) {\n\tt.equal(isFinite(0), true, 'isFinite(+0) === true');\n\tt.equal(isFinite(-0), true, 'isFinite(-0) === true');\n\tt.equal(isFinite(1), true, 'isFinite(1) === true');\n\tt.equal(isFinite(Infinity), false, 'isFinite(Infinity) === false');\n\tt.equal(isFinite(-Infinity), false, 'isFinite(-Infinity) === false');\n\tt.equal(isFinite(NaN), false, 'isFinite(NaN) === false');\n\n\tforEach(v.nonNumbers, function (nonNumber) {\n\t\tt.equal(isFinite(nonNumber), false, 'isFinite(' + inspect(nonNumber) + ') === false');\n\t});\n\n\tt.end();\n});\n\ntest('isInteger', function (t) {\n\tforEach([].concat(\n\t\t// @ts-expect-error TS sucks with concat\n\t\tv.nonNumbers,\n\t\tv.nonIntegerNumbers\n\t), function (nonInteger) {\n\t\tt.equal(isInteger(nonInteger), false, 'isInteger(' + inspect(nonInteger) + ') === false');\n\t});\n\n\tt.end();\n});\n\ntest('isNaN', function (t) {\n\tforEach([].concat(\n\t\t// @ts-expect-error TS sucks with concat\n\t\tv.nonNumbers,\n\t\tv.infinities,\n\t\tv.zeroes,\n\t\tv.integerNumbers\n\t), function (nonNaN) {\n\t\tt.equal(isNaN(nonNaN), false, 'isNaN(' + inspect(nonNaN) + ') === false');\n\t});\n\n\tt.equal(isNaN(NaN), true, 'isNaN(NaN) === true');\n\n\tt.end();\n});\n\ntest('isNegativeZero', function (t) {\n\tt.equal(isNegativeZero(-0), true, 'isNegativeZero(-0) === true');\n\tt.equal(isNegativeZero(+0), false, 'isNegativeZero(+0) === false');\n\tt.equal(isNegativeZero(1), false, 'isNegativeZero(1) === false');\n\tt.equal(isNegativeZero(-1), false, 'isNegativeZero(-1) === false');\n\tt.equal(isNegativeZero(NaN), false, 'isNegativeZero(NaN) === false');\n\tt.equal(isNegativeZero(Infinity), false, 'isNegativeZero(Infinity) === false');\n\tt.equal(isNegativeZero(-Infinity), false, 'isNegativeZero(-Infinity) === false');\n\n\tforEach(v.nonNumbers, function (nonNumber) {\n\t\tt.equal(isNegativeZero(nonNumber), false, 'isNegativeZero(' + inspect(nonNumber) + ') === false');\n\t});\n\n\tt.end();\n});\n\ntest('max', function (t) {\n\tt.equal(max(1, 2), 2, 'max(1, 2) === 2');\n\tt.equal(max(1, 2, 3), 3, 'max(1, 2, 3) === 3');\n\tt.equal(max(1, 2, 3, 4), 4, 'max(1, 2, 3, 4) === 4');\n\tt.equal(max(1, 2, 3, 4, 5), 5, 'max(1, 2, 3, 4, 5) === 5');\n\tt.equal(max(1, 2, 3, 4, 5, 6), 6, 'max(1, 2, 3, 4, 5, 6) === 6');\n\tt.equal(max(1, 2, 3, 4, 5, 6, 7), 7, 'max(1, 2, 3, 4, 5, 6, 7) === 7');\n\n\tt.end();\n});\n\ntest('min', function (t) {\n\tt.equal(min(1, 2), 1, 'min(1, 2) === 1');\n\tt.equal(min(1, 2, 3), 1, 'min(1, 2, 3) === 1');\n\tt.equal(min(1, 2, 3, 4), 1, 'min(1, 2, 3, 4) === 1');\n\tt.equal(min(1, 2, 3, 4, 5), 1, 'min(1, 2, 3, 4, 5) === 1');\n\tt.equal(min(1, 2, 3, 4, 5, 6), 1, 'min(1, 2, 3, 4, 5, 6) === 1');\n\n\tt.end();\n});\n\ntest('mod', function (t) {\n\tt.equal(mod(1, 2), 1, 'mod(1, 2) === 1');\n\tt.equal(mod(2, 2), 0, 'mod(2, 2) === 0');\n\tt.equal(mod(3, 2), 1, 'mod(3, 2) === 1');\n\tt.equal(mod(4, 2), 0, 'mod(4, 2) === 0');\n\tt.equal(mod(5, 2), 1, 'mod(5, 2) === 1');\n\tt.equal(mod(6, 2), 0, 'mod(6, 2) === 0');\n\tt.equal(mod(7, 2), 1, 'mod(7, 2) === 1');\n\tt.equal(mod(8, 2), 0, 'mod(8, 2) === 0');\n\tt.equal(mod(9, 2), 1, 'mod(9, 2) === 1');\n\tt.equal(mod(10, 2), 0, 'mod(10, 2) === 0');\n\tt.equal(mod(11, 2), 1, 'mod(11, 2) === 1');\n\n\tt.end();\n});\n\ntest('pow', function (t) {\n\tt.equal(pow(2, 2), 4, 'pow(2, 2) === 4');\n\tt.equal(pow(2, 3), 8, 'pow(2, 3) === 8');\n\tt.equal(pow(2, 4), 16, 'pow(2, 4) === 16');\n\tt.equal(pow(2, 5), 32, 'pow(2, 5) === 32');\n\tt.equal(pow(2, 6), 64, 'pow(2, 6) === 64');\n\tt.equal(pow(2, 7), 128, 'pow(2, 7) === 128');\n\tt.equal(pow(2, 8), 256, 'pow(2, 8) === 256');\n\tt.equal(pow(2, 9), 512, 'pow(2, 9) === 512');\n\tt.equal(pow(2, 10), 1024, 'pow(2, 10) === 1024');\n\n\tt.end();\n});\n\ntest('round', function (t) {\n\tt.equal(round(1.1), 1, 'round(1.1) === 1');\n\tt.equal(round(1.5), 2, 'round(1.5) === 2');\n\tt.equal(round(1.9), 2, 'round(1.9) === 2');\n\n\tt.end();\n});\n\ntest('sign', function (t) {\n\tt.equal(sign(-1), -1, 'sign(-1) === -1');\n\tt.equal(sign(+1), +1, 'sign(+1) === +1');\n\tt.equal(sign(+0), +0, 'sign(+0) === +0');\n\tt.equal(sign(-0), -0, 'sign(-0) === -0');\n\tt.equal(sign(NaN), NaN, 'sign(NaN) === NaN');\n\tt.equal(sign(Infinity), +1, 'sign(Infinity) === +1');\n\tt.equal(sign(-Infinity), -1, 'sign(-Infinity) === -1');\n\tt.equal(sign(maxValue), +1, 'sign(maxValue) === +1');\n\tt.equal(sign(maxSafeInteger), +1, 'sign(maxSafeInteger) === +1');\n\n\tt.end();\n});\n\ntest('constants', function (t) {\n\tt.equal(typeof maxArrayLength, 'number', 'typeof maxArrayLength === \"number\"');\n\tt.equal(typeof maxSafeInteger, 'number', 'typeof maxSafeInteger === \"number\"');\n\tt.equal(typeof maxValue, 'number', 'typeof maxValue === \"number\"');\n\n\tt.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\math-intrinsics\\test\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\math-intrinsics\\test\\index.js"
  },
  {
    "Content": "0.3.0 / 2014-09-07\n==================\n\n  * Support Node.js 0.6\n  * Throw error when parameter format invalid on parse\n\n0.2.0 / 2014-06-18\n==================\n\n  * Add `typer.format()` to format media types\n\n0.1.0 / 2014-06-17\n==================\n\n  * Accept `req` as argument to `parse`\n  * Accept `res` as argument to `parse`\n  * Parse media type with extra LWS between type and first parameter\n\n0.0.0 / 2014-06-13\n==================\n\n  * Initial implementation\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\media-typer\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\media-typer\\HISTORY.md"
  },
  {
    "Content": "/*!\n * media-typer\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 2616 sec 3.7\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * SHT           = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n */\nvar paramRegExp = /; *([!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *(\"(?:[ !\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u0020-\\u007e])*\"|[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g;\nvar textRegExp = /^[\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar tokenRegExp = /^[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n */\nvar qescRegExp = /\\\\([\\u0000-\\u007f])/g;\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n */\nvar quoteRegExp = /([\\\\\"])/g;\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nvar typeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nvar typeRegExp = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @api public\n */\n\nfunction format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !typeNameRegExp.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !subtypeNameRegExp.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!typeNameRegExp.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!tokenRegExp.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @api public\n */\n\nfunction parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  if (typeof string === 'object') {\n    string = getcontenttype(string)\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = string.indexOf(';')\n  var type = index !== -1\n    ? string.substr(0, index)\n    : string\n\n  var key\n  var match\n  var obj = splitType(type)\n  var params = {}\n  var value\n\n  paramRegExp.lastIndex = index\n\n  while (match = paramRegExp.exec(string)) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(qescRegExp, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  obj.parameters = params\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @api private\n */\n\nfunction getcontenttype(obj) {\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    return obj.getHeader('content-type')\n  }\n\n  if (typeof obj.headers === 'object') {\n    // req-like\n    return obj.headers && obj.headers['content-type']\n  }\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction qstring(val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (tokenRegExp.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !textRegExp.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(quoteRegExp, '\\\\$1') + '\"'\n}\n\n/**\n * Simply \"type/subtype+siffx\" into parts.\n *\n * @param {string} string\n * @return {Object}\n * @api private\n */\n\nfunction splitType(string) {\n  var match = typeRegExp.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  var obj = {\n    type: type,\n    subtype: subtype,\n    suffix: suffix\n  }\n\n  return obj\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\media-typer\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\media-typer\\index.js"
  },
  {
    "Content": "# media-typer\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nSimple RFC 6838 media type parser\n\n## Installation\n\n```sh\n$ npm install media-typer\n```\n\n## API\n\n```js\nvar typer = require('media-typer')\n```\n\n### typer.parse(string)\n\n```js\nvar obj = typer.parse('image/svg+xml; charset=utf-8')\n```\n\nParse a media type string. This will return an object with the following\nproperties (examples are shown for the string `'image/svg+xml; charset=utf-8'`):\n\n - `type`: The type of the media type (always lower case). Example: `'image'`\n\n - `subtype`: The subtype of the media type (always lower case). Example: `'svg'`\n\n - `suffix`: The suffix of the media type (always lower case). Example: `'xml'`\n\n - `parameters`: An object of the parameters in the media type (name of parameter always lower case). Example: `{charset: 'utf-8'}`\n\n### typer.parse(req)\n\n```js\nvar obj = typer.parse(req)\n```\n\nParse the `content-type` header from the given `req`. Short-cut for\n`typer.parse(req.headers['content-type'])`.\n\n### typer.parse(res)\n\n```js\nvar obj = typer.parse(res)\n```\n\nParse the `content-type` header set on the given `res`. Short-cut for\n`typer.parse(res.getHeader('content-type'))`.\n\n### typer.format(obj)\n\n```js\nvar obj = typer.format({type: 'image', subtype: 'svg', suffix: 'xml'})\n```\n\nFormat an object into a media type string. This will return a string of the\nmime type for the given object. For the properties of the object, see the\ndocumentation for `typer.parse(string)`.\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/media-typer.svg?style=flat\n[npm-url]: https://npmjs.org/package/media-typer\n[node-version-image]: https://img.shields.io/badge/node.js-%3E%3D_0.6-brightgreen.svg?style=flat\n[node-version-url]: http://nodejs.org/download/\n[travis-image]: https://img.shields.io/travis/jshttp/media-typer.svg?style=flat\n[travis-url]: https://travis-ci.org/jshttp/media-typer\n[coveralls-image]: https://img.shields.io/coveralls/jshttp/media-typer.svg?style=flat\n[coveralls-url]: https://coveralls.io/r/jshttp/media-typer\n[downloads-image]: https://img.shields.io/npm/dm/media-typer.svg?style=flat\n[downloads-url]: https://npmjs.org/package/media-typer\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\media-typer\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\media-typer\\README.md"
  },
  {
    "Content": "1.0.1 / 2016-01-17\n==================\n\n  * perf: enable strict mode\n\n1.0.0 / 2015-03-01\n==================\n\n  * Add option to only add new descriptors\n  * Add simple argument validation\n  * Add jsdoc to source file\n\n0.0.2 / 2013-12-14\n==================\n\n  * Move repository to `component` organization\n\n0.0.1 / 2013-10-29\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\merge-descriptors\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\merge-descriptors\\HISTORY.md"
  },
  {
    "Content": "/*!\n * merge-descriptors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = merge\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * Merge the property descriptors of `src` into `dest`\n *\n * @param {object} dest Object to add descriptors to\n * @param {object} src Object to clone descriptors from\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\n * @returns {object} Reference to dest\n * @public\n */\n\nfunction merge (dest, src, redefine) {\n  if (!dest) {\n    throw new TypeError('argument dest is required')\n  }\n\n  if (!src) {\n    throw new TypeError('argument src is required')\n  }\n\n  if (redefine === undefined) {\n    // Default to true\n    redefine = true\n  }\n\n  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName (name) {\n    if (!redefine && hasOwnProperty.call(dest, name)) {\n      // Skip descriptor\n      return\n    }\n\n    // Copy descriptor\n    var descriptor = Object.getOwnPropertyDescriptor(src, name)\n    Object.defineProperty(dest, name, descriptor)\n  })\n\n  return dest\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\merge-descriptors\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\merge-descriptors\\index.js"
  },
  {
    "Content": "# merge-descriptors\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nMerge objects using descriptors.\n\n```js\nvar thing = {\n  get name() {\n    return 'jon'\n  }\n}\n\nvar animal = {\n\n}\n\nmerge(animal, thing)\n\nanimal.name === 'jon'\n```\n\n## API\n\n### merge(destination, source)\n\nRedefines `destination`'s descriptors with `source`'s. The return value is the\n`destination` object.\n\n### merge(destination, source, false)\n\nDefines `source`'s descriptors on `destination` if `destination` does not have\na descriptor by the same name. The return value is the `destination` object.\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/merge-descriptors.svg\n[npm-url]: https://npmjs.org/package/merge-descriptors\n[travis-image]: https://img.shields.io/travis/component/merge-descriptors/master.svg\n[travis-url]: https://travis-ci.org/component/merge-descriptors\n[coveralls-image]: https://img.shields.io/coveralls/component/merge-descriptors/master.svg\n[coveralls-url]: https://coveralls.io/r/component/merge-descriptors?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/merge-descriptors.svg\n[downloads-url]: https://npmjs.org/package/merge-descriptors\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\merge-descriptors\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\merge-descriptors\\README.md"
  },
  {
    "Content": "1.1.2 / 2016-01-17\n==================\n\n  * perf: enable strict mode\n\n1.1.1 / 2014-12-30\n==================\n\n  * Improve `browserify` support\n\n1.1.0 / 2014-07-05\n==================\n\n  * Add `CONNECT` method\n \n1.0.1 / 2014-06-02\n==================\n\n  * Fix module to work with harmony transform\n\n1.0.0 / 2014-05-08\n==================\n\n  * Add `PURGE` method\n\n0.1.0 / 2013-10-28\n==================\n\n  * Add `http.METHODS` support\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\methods\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\methods\\HISTORY.md"
  },
  {
    "Content": "/*!\n * methods\n * Copyright(c) 2013-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar http = require('http');\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getCurrentNodeMethods() || getBasicNodeMethods();\n\n/**\n * Get the current Node.js methods.\n * @private\n */\n\nfunction getCurrentNodeMethods() {\n  return http.METHODS && http.METHODS.map(function lowerCaseMethod(method) {\n    return method.toLowerCase();\n  });\n}\n\n/**\n * Get the \"basic\" Node.js methods, a snapshot from Node.js 0.10.\n * @private\n */\n\nfunction getBasicNodeMethods() {\n  return [\n    'get',\n    'post',\n    'put',\n    'head',\n    'delete',\n    'options',\n    'trace',\n    'copy',\n    'lock',\n    'mkcol',\n    'move',\n    'purge',\n    'propfind',\n    'proppatch',\n    'unlock',\n    'report',\n    'mkactivity',\n    'checkout',\n    'merge',\n    'm-search',\n    'notify',\n    'subscribe',\n    'unsubscribe',\n    'patch',\n    'search',\n    'connect'\n  ];\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\methods\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\methods\\index.js"
  },
  {
    "Content": "# Methods\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nHTTP verbs that Node.js core's HTTP parser supports.\n\nThis module provides an export that is just like `http.METHODS` from Node.js core,\nwith the following differences:\n\n  * All method names are lower-cased.\n  * Contains a fallback list of methods for Node.js versions that do not have a\n    `http.METHODS` export (0.10 and lower).\n  * Provides the fallback list when using tools like `browserify` without pulling\n    in the `http` shim module.\n\n## Install\n\n```bash\n$ npm install methods\n```\n\n## API\n\n```js\nvar methods = require('methods')\n```\n\n### methods\n\nThis is an array of lower-cased method names that Node.js supports. If Node.js\nprovides the `http.METHODS` export, then this is the same array lower-cased,\notherwise it is a snapshot of the verbs from Node.js 0.10.\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/methods.svg?style=flat\n[npm-url]: https://npmjs.org/package/methods\n[node-version-image]: https://img.shields.io/node/v/methods.svg?style=flat\n[node-version-url]: https://nodejs.org/en/download/\n[travis-image]: https://img.shields.io/travis/jshttp/methods.svg?style=flat\n[travis-url]: https://travis-ci.org/jshttp/methods\n[coveralls-image]: https://img.shields.io/coveralls/jshttp/methods.svg?style=flat\n[coveralls-url]: https://coveralls.io/r/jshttp/methods?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/methods.svg?style=flat\n[downloads-url]: https://npmjs.org/package/methods\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\methods\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\methods\\README.md"
  },
  {
    "Content": "# Changelog\n\n## v1.6.0 (24/11/2017)\n*No changelog for this release.*\n\n---\n\n## v2.0.4 (24/11/2017)\n- [**closed**] Switch to mime-score module for resolving extension contention issues. [#182](https://github.com/broofa/node-mime/issues/182)\n- [**closed**] Update mime-db to 1.31.0 in v1.x branch [#181](https://github.com/broofa/node-mime/issues/181)\n\n---\n\n## v1.5.0 (22/11/2017)\n- [**closed**] need ES5 version ready in npm package [#179](https://github.com/broofa/node-mime/issues/179)\n- [**closed**] mime-db no trace of iWork - pages / numbers / etc. [#178](https://github.com/broofa/node-mime/issues/178)\n- [**closed**] How it works in brownser ? [#176](https://github.com/broofa/node-mime/issues/176)\n- [**closed**] Missing `./Mime` [#175](https://github.com/broofa/node-mime/issues/175)\n- [**closed**] Vulnerable Regular Expression [#167](https://github.com/broofa/node-mime/issues/167)\n\n---\n\n## v2.0.3 (25/09/2017)\n*No changelog for this release.*\n\n---\n\n## v1.4.1 (25/09/2017)\n- [**closed**] Issue when bundling with webpack [#172](https://github.com/broofa/node-mime/issues/172)\n\n---\n\n## v2.0.2 (15/09/2017)\n- [**V2**] fs.readFileSync is not a function [#165](https://github.com/broofa/node-mime/issues/165)\n- [**closed**] The extension for video/quicktime should map to .mov, not .qt [#164](https://github.com/broofa/node-mime/issues/164)\n- [**V2**] [v2 Feedback request] Mime class API [#163](https://github.com/broofa/node-mime/issues/163)\n- [**V2**] [v2 Feedback request] Resolving conflicts over extensions [#162](https://github.com/broofa/node-mime/issues/162)\n- [**V2**] Allow callers to load module with official, full, or no defined types.  [#161](https://github.com/broofa/node-mime/issues/161)\n- [**V2**] Use \"facets\" to resolve extension conflicts [#160](https://github.com/broofa/node-mime/issues/160)\n- [**V2**] Remove fs and path dependencies [#152](https://github.com/broofa/node-mime/issues/152)\n- [**V2**] Default content-type should not be application/octet-stream [#139](https://github.com/broofa/node-mime/issues/139)\n- [**V2**] reset mime-types [#124](https://github.com/broofa/node-mime/issues/124)\n- [**V2**] Extensionless paths should return null or false [#113](https://github.com/broofa/node-mime/issues/113)\n\n---\n\n## v2.0.1 (14/09/2017)\n- [**closed**] Changelog for v2.0 does not mention breaking changes [#171](https://github.com/broofa/node-mime/issues/171)\n- [**closed**] MIME breaking with 'class' declaration as it is without 'use strict mode' [#170](https://github.com/broofa/node-mime/issues/170)\n\n---\n\n## v2.0.0 (12/09/2017)\n- [**closed**] woff and woff2 [#168](https://github.com/broofa/node-mime/issues/168)\n\n---\n\n## v1.4.0 (28/08/2017)\n- [**closed**] support for ac3 voc files [#159](https://github.com/broofa/node-mime/issues/159)\n- [**closed**] Help understanding change from application/xml to text/xml [#158](https://github.com/broofa/node-mime/issues/158)\n- [**closed**] no longer able to override mimetype [#157](https://github.com/broofa/node-mime/issues/157)\n- [**closed**] application/vnd.adobe.photoshop [#147](https://github.com/broofa/node-mime/issues/147)\n- [**closed**] Directories should appear as something other than application/octet-stream [#135](https://github.com/broofa/node-mime/issues/135)\n- [**closed**] requested features [#131](https://github.com/broofa/node-mime/issues/131)\n- [**closed**] Make types.json loading optional? [#129](https://github.com/broofa/node-mime/issues/129)\n- [**closed**] Cannot find module './types.json' [#120](https://github.com/broofa/node-mime/issues/120)\n- [**V2**] .wav files show up as \"audio/x-wav\" instead of \"audio/x-wave\" [#118](https://github.com/broofa/node-mime/issues/118)\n- [**closed**] Don't be a pain in the ass for node community [#108](https://github.com/broofa/node-mime/issues/108)\n- [**closed**] don't make default_type global [#78](https://github.com/broofa/node-mime/issues/78)\n- [**closed**] mime.extension() fails if the content-type is parameterized [#74](https://github.com/broofa/node-mime/issues/74)\n\n---\n\n## v1.3.6 (11/05/2017)\n- [**closed**] .md should be text/markdown as of March 2016 [#154](https://github.com/broofa/node-mime/issues/154)\n- [**closed**] Error while installing mime [#153](https://github.com/broofa/node-mime/issues/153)\n- [**closed**] application/manifest+json [#149](https://github.com/broofa/node-mime/issues/149)\n- [**closed**] Dynamic adaptive streaming over HTTP (DASH) file extension typo [#141](https://github.com/broofa/node-mime/issues/141)\n- [**closed**] charsets image/png undefined [#140](https://github.com/broofa/node-mime/issues/140)\n- [**closed**] Mime-db dependency out of date [#130](https://github.com/broofa/node-mime/issues/130)\n- [**closed**] how to support plist？ [#126](https://github.com/broofa/node-mime/issues/126)\n- [**closed**] how does .types file format look like? [#123](https://github.com/broofa/node-mime/issues/123)\n- [**closed**] Feature: support for expanding MIME patterns [#121](https://github.com/broofa/node-mime/issues/121)\n- [**closed**] DEBUG_MIME doesn't work [#117](https://github.com/broofa/node-mime/issues/117)\n\n---\n\n## v1.3.4 (06/02/2015)\n*No changelog for this release.*\n\n---\n\n## v1.3.3 (06/02/2015)\n*No changelog for this release.*\n\n---\n\n## v1.3.1 (05/02/2015)\n- [**closed**] Consider adding support for Handlebars .hbs file ending [#111](https://github.com/broofa/node-mime/issues/111)\n- [**closed**] Consider adding support for hjson. [#110](https://github.com/broofa/node-mime/issues/110)\n- [**closed**] Add mime type for Opus audio files [#94](https://github.com/broofa/node-mime/issues/94)\n- [**closed**] Consider making the `Requesting New Types` information more visible [#77](https://github.com/broofa/node-mime/issues/77)\n\n---\n\n## v1.3.0 (05/02/2015)\n- [**closed**] Add common name? [#114](https://github.com/broofa/node-mime/issues/114)\n- [**closed**] application/x-yaml [#104](https://github.com/broofa/node-mime/issues/104)\n- [**closed**] Add mime type for WOFF file format 2.0 [#102](https://github.com/broofa/node-mime/issues/102)\n- [**closed**] application/x-msi for .msi [#99](https://github.com/broofa/node-mime/issues/99)\n- [**closed**] Add mimetype for gettext translation files [#98](https://github.com/broofa/node-mime/issues/98)\n- [**closed**] collaborators [#88](https://github.com/broofa/node-mime/issues/88)\n- [**closed**] getting errot in installation of mime module...any1 can help? [#87](https://github.com/broofa/node-mime/issues/87)\n- [**closed**] should application/json's charset be utf8? [#86](https://github.com/broofa/node-mime/issues/86)\n- [**closed**] Add \"license\" and \"licenses\" to package.json [#81](https://github.com/broofa/node-mime/issues/81)\n- [**closed**] lookup with extension-less file on Windows returns wrong type [#68](https://github.com/broofa/node-mime/issues/68)\n\n---\n\n## v1.2.11 (15/08/2013)\n- [**closed**] Update mime.types [#65](https://github.com/broofa/node-mime/issues/65)\n- [**closed**] Publish a new version [#63](https://github.com/broofa/node-mime/issues/63)\n- [**closed**] README should state upfront that \"application/octet-stream\" is default for unknown extension [#55](https://github.com/broofa/node-mime/issues/55)\n- [**closed**] Suggested improvement to the charset API [#52](https://github.com/broofa/node-mime/issues/52)\n\n---\n\n## v1.2.10 (25/07/2013)\n- [**closed**] Mime type for woff files should be application/font-woff and not application/x-font-woff [#62](https://github.com/broofa/node-mime/issues/62)\n- [**closed**] node.types in conflict with mime.types [#51](https://github.com/broofa/node-mime/issues/51)\n\n---\n\n## v1.2.9 (17/01/2013)\n- [**closed**] Please update \"mime\" NPM [#49](https://github.com/broofa/node-mime/issues/49)\n- [**closed**] Please add semicolon [#46](https://github.com/broofa/node-mime/issues/46)\n- [**closed**] parse full mime types [#43](https://github.com/broofa/node-mime/issues/43)\n\n---\n\n## v1.2.8 (10/01/2013)\n- [**closed**] /js directory mime is application/javascript. Is it correct? [#47](https://github.com/broofa/node-mime/issues/47)\n- [**closed**] Add mime types for lua code. [#45](https://github.com/broofa/node-mime/issues/45)\n\n---\n\n## v1.2.7 (19/10/2012)\n- [**closed**] cannot install 1.2.7 via npm [#41](https://github.com/broofa/node-mime/issues/41)\n- [**closed**] Transfer ownership to @broofa [#36](https://github.com/broofa/node-mime/issues/36)\n- [**closed**] it's wrong to set charset to UTF-8 for text [#30](https://github.com/broofa/node-mime/issues/30)\n- [**closed**] Allow multiple instances of MIME types container [#27](https://github.com/broofa/node-mime/issues/27)\n\n---\n\n## v1.2.5 (16/02/2012)\n- [**closed**] When looking up a types, check hasOwnProperty [#23](https://github.com/broofa/node-mime/issues/23)\n- [**closed**] Bump version to 1.2.2 [#18](https://github.com/broofa/node-mime/issues/18)\n- [**closed**] No license [#16](https://github.com/broofa/node-mime/issues/16)\n- [**closed**] Some types missing that are used by html5/css3 [#13](https://github.com/broofa/node-mime/issues/13)\n- [**closed**] npm install fails for 1.2.1 [#12](https://github.com/broofa/node-mime/issues/12)\n- [**closed**] image/pjpeg + image/x-png [#10](https://github.com/broofa/node-mime/issues/10)\n- [**closed**] symlink [#8](https://github.com/broofa/node-mime/issues/8)\n- [**closed**] gzip [#2](https://github.com/broofa/node-mime/issues/2)\n- [**closed**] ALL CAPS filenames return incorrect mime type [#1](https://github.com/broofa/node-mime/issues/1)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\mime\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\mime\\CHANGELOG.md"
  },
  {
    "Content": "#!/usr/bin/env node\n\nvar mime = require('./mime.js');\nvar file = process.argv[2];\nvar type = mime.lookup(file);\n\nprocess.stdout.write(type + '\\n');\n\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\mime\\cli.js",
    "RelativePath": "tools\\backend\\node_modules\\mime\\cli.js"
  },
  {
    "Content": "var path = require('path');\nvar fs = require('fs');\n\nfunction Mime() {\n  // Map of extension -> mime type\n  this.types = Object.create(null);\n\n  // Map of mime type -> extension\n  this.extensions = Object.create(null);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * @param map (Object) type definitions\n */\nMime.prototype.define = function (map) {\n  for (var type in map) {\n    var exts = map[type];\n    for (var i = 0; i < exts.length; i++) {\n      if (process.env.DEBUG_MIME && this.types[exts[i]]) {\n        console.warn((this._loading || \"define()\").replace(/.*\\//, ''), 'changes \"' + exts[i] + '\" extension type from ' +\n          this.types[exts[i]] + ' to ' + type);\n      }\n\n      this.types[exts[i]] = type;\n    }\n\n    // Default extension is the first one we encounter\n    if (!this.extensions[type]) {\n      this.extensions[type] = exts[0];\n    }\n  }\n};\n\n/**\n * Load an Apache2-style \".types\" file\n *\n * This may be called multiple times (it's expected).  Where files declare\n * overlapping types/extensions, the last file wins.\n *\n * @param file (String) path of file to load.\n */\nMime.prototype.load = function(file) {\n  this._loading = file;\n  // Read file and split into lines\n  var map = {},\n      content = fs.readFileSync(file, 'ascii'),\n      lines = content.split(/[\\r\\n]+/);\n\n  lines.forEach(function(line) {\n    // Clean up whitespace/comments, and split into fields\n    var fields = line.replace(/\\s*#.*|^\\s*|\\s*$/g, '').split(/\\s+/);\n    map[fields.shift()] = fields;\n  });\n\n  this.define(map);\n\n  this._loading = null;\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.lookup = function(path, fallback) {\n  var ext = path.replace(/^.*[\\.\\/\\\\]/, '').toLowerCase();\n\n  return this.types[ext] || fallback || this.default_type;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.extension = function(mimeType) {\n  var type = mimeType.match(/^\\s*([^;\\s]*)(?:;|\\s|$)/)[1].toLowerCase();\n  return this.extensions[type];\n};\n\n// Default instance\nvar mime = new Mime();\n\n// Define built-in types\nmime.define(require('./types.json'));\n\n// Default type\nmime.default_type = mime.lookup('bin');\n\n//\n// Additional API specific to the default instance\n//\n\nmime.Mime = Mime;\n\n/**\n * Lookup a charset based on mime type.\n */\nmime.charsets = {\n  lookup: function(mimeType, fallback) {\n    // Assume text types are utf8\n    return (/^text\\/|^application\\/(javascript|json)/).test(mimeType) ? 'UTF-8' : fallback;\n  }\n};\n\nmodule.exports = mime;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\mime\\mime.js",
    "RelativePath": "tools\\backend\\node_modules\\mime\\mime.js"
  },
  {
    "Content": "# mime\n\nComprehensive MIME type mapping API based on mime-db module.\n\n## Install\n\nInstall with [npm](http://github.com/isaacs/npm):\n\n    npm install mime\n\n## Contributing / Testing\n\n    npm run test\n\n## Command Line\n\n    mime [path_string]\n\nE.g.\n\n    > mime scripts/jquery.js\n    application/javascript\n\n## API - Queries\n\n### mime.lookup(path)\nGet the mime type associated with a file, if no mime type is found `application/octet-stream` is returned. Performs a case-insensitive lookup using the extension in `path` (the substring after the last '/' or '.').  E.g.\n\n```js\nvar mime = require('mime');\n\nmime.lookup('/path/to/file.txt');         // => 'text/plain'\nmime.lookup('file.txt');                  // => 'text/plain'\nmime.lookup('.TXT');                      // => 'text/plain'\nmime.lookup('htm');                       // => 'text/html'\n```\n\n### mime.default_type\nSets the mime type returned when `mime.lookup` fails to find the extension searched for. (Default is `application/octet-stream`.)\n\n### mime.extension(type)\nGet the default extension for `type`\n\n```js\nmime.extension('text/html');                 // => 'html'\nmime.extension('application/octet-stream');  // => 'bin'\n```\n\n### mime.charsets.lookup()\n\nMap mime-type to charset\n\n```js\nmime.charsets.lookup('text/plain');        // => 'UTF-8'\n```\n\n(The logic for charset lookups is pretty rudimentary.  Feel free to suggest improvements.)\n\n## API - Defining Custom Types\n\nCustom type mappings can be added on a per-project basis via the following APIs.\n\n### mime.define()\n\nAdd custom mime/extension mappings\n\n```js\nmime.define({\n    'text/x-some-format': ['x-sf', 'x-sft', 'x-sfml'],\n    'application/x-my-type': ['x-mt', 'x-mtt'],\n    // etc ...\n});\n\nmime.lookup('x-sft');                 // => 'text/x-some-format'\n```\n\nThe first entry in the extensions array is returned by `mime.extension()`. E.g.\n\n```js\nmime.extension('text/x-some-format'); // => 'x-sf'\n```\n\n### mime.load(filepath)\n\nLoad mappings from an Apache \".types\" format file\n\n```js\nmime.load('./my_project.types');\n```\nThe .types file format is simple -  See the `types` dir for examples.\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\mime\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\mime\\README.md"
  },
  {
    "Content": "#!/usr/bin/env node\n\n'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst mimeScore = require('mime-score');\n\nlet db = require('mime-db');\nlet chalk = require('chalk');\n\nconst STANDARD_FACET_SCORE = 900;\n\nconst byExtension = {};\n\n// Clear out any conflict extensions in mime-db\nfor (let type in db) {\n  let entry = db[type];\n  entry.type = type;\n\n  if (!entry.extensions) continue;\n\n  entry.extensions.forEach(ext => {\n    if (ext in byExtension) {\n      const e0 = entry;\n      const e1 = byExtension[ext];\n      e0.pri = mimeScore(e0.type, e0.source);\n      e1.pri = mimeScore(e1.type, e1.source);\n\n      let drop = e0.pri < e1.pri ? e0 : e1;\n      let keep = e0.pri >= e1.pri ? e0 : e1;\n      drop.extensions = drop.extensions.filter(e => e !== ext);\n\n      console.log(`${ext}: Keeping ${chalk.green(keep.type)} (${keep.pri}), dropping ${chalk.red(drop.type)} (${drop.pri})`);\n    }\n    byExtension[ext] = entry;\n  });\n}\n\nfunction writeTypesFile(types, path) {\n  fs.writeFileSync(path, JSON.stringify(types));\n}\n\n// Segregate into standard and non-standard types based on facet per\n// https://tools.ietf.org/html/rfc6838#section-3.1\nconst types = {};\n\nObject.keys(db).sort().forEach(k => {\n  const entry = db[k];\n  types[entry.type] = entry.extensions;\n});\n\nwriteTypesFile(types, path.join(__dirname, '..', 'types.json'));\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\mime\\src\\build.js",
    "RelativePath": "tools\\backend\\node_modules\\mime\\src\\build.js"
  },
  {
    "Content": "/**\n * Usage: node test.js\n */\n\nvar mime = require('../mime');\nvar assert = require('assert');\nvar path = require('path');\n\n//\n// Test mime lookups\n//\n\nassert.equal('text/plain', mime.lookup('text.txt'));     // normal file\nassert.equal('text/plain', mime.lookup('TEXT.TXT'));     // uppercase\nassert.equal('text/plain', mime.lookup('dir/text.txt')); // dir + file\nassert.equal('text/plain', mime.lookup('.text.txt'));    // hidden file\nassert.equal('text/plain', mime.lookup('.txt'));         // nameless\nassert.equal('text/plain', mime.lookup('txt'));          // extension-only\nassert.equal('text/plain', mime.lookup('/txt'));         // extension-less ()\nassert.equal('text/plain', mime.lookup('\\\\txt'));        // Windows, extension-less\nassert.equal('application/octet-stream', mime.lookup('text.nope')); // unrecognized\nassert.equal('fallback', mime.lookup('text.fallback', 'fallback')); // alternate default\n\n//\n// Test extensions\n//\n\nassert.equal('txt', mime.extension(mime.types.text));\nassert.equal('html', mime.extension(mime.types.htm));\nassert.equal('bin', mime.extension('application/octet-stream'));\nassert.equal('bin', mime.extension('application/octet-stream '));\nassert.equal('html', mime.extension(' text/html; charset=UTF-8'));\nassert.equal('html', mime.extension('text/html; charset=UTF-8 '));\nassert.equal('html', mime.extension('text/html; charset=UTF-8'));\nassert.equal('html', mime.extension('text/html ; charset=UTF-8'));\nassert.equal('html', mime.extension('text/html;charset=UTF-8'));\nassert.equal('html', mime.extension('text/Html;charset=UTF-8'));\nassert.equal(undefined, mime.extension('unrecognized'));\n\n//\n// Test node.types lookups\n//\n\nassert.equal('font/woff', mime.lookup('file.woff'));\nassert.equal('application/octet-stream', mime.lookup('file.buffer'));\n// TODO: Uncomment once #157 is resolved\n// assert.equal('audio/mp4', mime.lookup('file.m4a'));\nassert.equal('font/otf', mime.lookup('file.otf'));\n\n//\n// Test charsets\n//\n\nassert.equal('UTF-8', mime.charsets.lookup('text/plain'));\nassert.equal('UTF-8', mime.charsets.lookup(mime.types.js));\nassert.equal('UTF-8', mime.charsets.lookup(mime.types.json));\nassert.equal(undefined, mime.charsets.lookup(mime.types.bin));\nassert.equal('fallback', mime.charsets.lookup('application/octet-stream', 'fallback'));\n\nconsole.log('\\nAll tests passed');\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\mime\\src\\test.js",
    "RelativePath": "tools\\backend\\node_modules\\mime\\src\\test.js"
  },
  {
    "Content": "1.52.0 / 2022-02-21\n===================\n\n  * Add extensions from IANA for more `image/*` types\n  * Add extension `.asc` to `application/pgp-keys`\n  * Add extensions to various XML types\n  * Add new upstream MIME types\n\n1.51.0 / 2021-11-08\n===================\n\n  * Add new upstream MIME types\n  * Mark `image/vnd.microsoft.icon` as compressible\n  * Mark `image/vnd.ms-dds` as compressible\n\n1.50.0 / 2021-09-15\n===================\n\n  * Add deprecated iWorks mime types and extensions\n  * Add new upstream MIME types\n\n1.49.0 / 2021-07-26\n===================\n\n  * Add extension `.trig` to `application/trig`\n  * Add new upstream MIME types\n\n1.48.0 / 2021-05-30\n===================\n\n  * Add extension `.mvt` to `application/vnd.mapbox-vector-tile`\n  * Add new upstream MIME types\n  * Mark `text/yaml` as compressible\n\n1.47.0 / 2021-04-01\n===================\n\n  * Add new upstream MIME types\n  * Remove ambigious extensions from IANA for `application/*+xml` types\n  * Update primary extension to `.es` for `application/ecmascript`\n\n1.46.0 / 2021-02-13\n===================\n\n  * Add extension `.amr` to `audio/amr`\n  * Add extension `.m4s` to `video/iso.segment`\n  * Add extension `.opus` to `audio/ogg`\n  * Add new upstream MIME types\n\n1.45.0 / 2020-09-22\n===================\n\n  * Add `application/ubjson` with extension `.ubj`\n  * Add `image/avif` with extension `.avif`\n  * Add `image/ktx2` with extension `.ktx2`\n  * Add extension `.dbf` to `application/vnd.dbf`\n  * Add extension `.rar` to `application/vnd.rar`\n  * Add extension `.td` to `application/urc-targetdesc+xml`\n  * Add new upstream MIME types\n  * Fix extension of `application/vnd.apple.keynote` to be `.key`\n\n1.44.0 / 2020-04-22\n===================\n\n  * Add charsets from IANA\n  * Add extension `.cjs` to `application/node`\n  * Add new upstream MIME types\n\n1.43.0 / 2020-01-05\n===================\n\n  * Add `application/x-keepass2` with extension `.kdbx`\n  * Add extension `.mxmf` to `audio/mobile-xmf`\n  * Add extensions from IANA for `application/*+xml` types\n  * Add new upstream MIME types\n\n1.42.0 / 2019-09-25\n===================\n\n  * Add `image/vnd.ms-dds` with extension `.dds`\n  * Add new upstream MIME types\n  * Remove compressible from `multipart/mixed`\n\n1.41.0 / 2019-08-30\n===================\n\n  * Add new upstream MIME types\n  * Add `application/toml` with extension `.toml`\n  * Mark `font/ttf` as compressible\n\n1.40.0 / 2019-04-20\n===================\n\n  * Add extensions from IANA for `model/*` types\n  * Add `text/mdx` with extension `.mdx`\n\n1.39.0 / 2019-04-04\n===================\n\n  * Add extensions `.siv` and `.sieve` to `application/sieve`\n  * Add new upstream MIME types\n\n1.38.0 / 2019-02-04\n===================\n\n  * Add extension `.nq` to `application/n-quads`\n  * Add extension `.nt` to `application/n-triples`\n  * Add new upstream MIME types\n  * Mark `text/less` as compressible\n\n1.37.0 / 2018-10-19\n===================\n\n  * Add extensions to HEIC image types\n  * Add new upstream MIME types\n\n1.36.0 / 2018-08-20\n===================\n\n  * Add Apple file extensions from IANA\n  * Add extensions from IANA for `image/*` types\n  * Add new upstream MIME types\n\n1.35.0 / 2018-07-15\n===================\n\n  * Add extension `.owl` to `application/rdf+xml`\n  * Add new upstream MIME types\n    - Removes extension `.woff` from `application/font-woff`\n\n1.34.0 / 2018-06-03\n===================\n\n  * Add extension `.csl` to `application/vnd.citationstyles.style+xml`\n  * Add extension `.es` to `application/ecmascript`\n  * Add new upstream MIME types\n  * Add `UTF-8` as default charset for `text/turtle`\n  * Mark all XML-derived types as compressible\n\n1.33.0 / 2018-02-15\n===================\n\n  * Add extensions from IANA for `message/*` types\n  * Add new upstream MIME types\n  * Fix some incorrect OOXML types\n  * Remove `application/font-woff2`\n\n1.32.0 / 2017-11-29\n===================\n\n  * Add new upstream MIME types\n  * Update `text/hjson` to registered `application/hjson`\n  * Add `text/shex` with extension `.shex`\n\n1.31.0 / 2017-10-25\n===================\n\n  * Add `application/raml+yaml` with extension `.raml`\n  * Add `application/wasm` with extension `.wasm`\n  * Add new `font` type from IANA\n  * Add new upstream font extensions\n  * Add new upstream MIME types\n  * Add extensions for JPEG-2000 images\n\n1.30.0 / 2017-08-27\n===================\n\n  * Add `application/vnd.ms-outlook`\n  * Add `application/x-arj`\n  * Add extension `.mjs` to `application/javascript`\n  * Add glTF types and extensions\n  * Add new upstream MIME types\n  * Add `text/x-org`\n  * Add VirtualBox MIME types\n  * Fix `source` records for `video/*` types that are IANA\n  * Update `font/opentype` to registered `font/otf`\n\n1.29.0 / 2017-07-10\n===================\n\n  * Add `application/fido.trusted-apps+json`\n  * Add extension `.wadl` to `application/vnd.sun.wadl+xml`\n  * Add new upstream MIME types\n  * Add `UTF-8` as default charset for `text/css`\n\n1.28.0 / 2017-05-14\n===================\n\n  * Add new upstream MIME types\n  * Add extension `.gz` to `application/gzip`\n  * Update extensions `.md` and `.markdown` to be `text/markdown`\n\n1.27.0 / 2017-03-16\n===================\n\n  * Add new upstream MIME types\n  * Add `image/apng` with extension `.apng`\n\n1.26.0 / 2017-01-14\n===================\n\n  * Add new upstream MIME types\n  * Add extension `.geojson` to `application/geo+json`\n\n1.25.0 / 2016-11-11\n===================\n\n  * Add new upstream MIME types\n\n1.24.0 / 2016-09-18\n===================\n\n  * Add `audio/mp3`\n  * Add new upstream MIME types\n\n1.23.0 / 2016-05-01\n===================\n\n  * Add new upstream MIME types\n  * Add extension `.3gpp` to `audio/3gpp`\n\n1.22.0 / 2016-02-15\n===================\n\n  * Add `text/slim`\n  * Add extension `.rng` to `application/xml`\n  * Add new upstream MIME types\n  * Fix extension of `application/dash+xml` to be `.mpd`\n  * Update primary extension to `.m4a` for `audio/mp4`\n\n1.21.0 / 2016-01-06\n===================\n\n  * Add Google document types\n  * Add new upstream MIME types\n\n1.20.0 / 2015-11-10\n===================\n\n  * Add `text/x-suse-ymp`\n  * Add new upstream MIME types\n\n1.19.0 / 2015-09-17\n===================\n\n  * Add `application/vnd.apple.pkpass`\n  * Add new upstream MIME types\n\n1.18.0 / 2015-09-03\n===================\n\n  * Add new upstream MIME types\n\n1.17.0 / 2015-08-13\n===================\n\n  * Add `application/x-msdos-program`\n  * Add `audio/g711-0`\n  * Add `image/vnd.mozilla.apng`\n  * Add extension `.exe` to `application/x-msdos-program`\n\n1.16.0 / 2015-07-29\n===================\n\n  * Add `application/vnd.uri-map`\n\n1.15.0 / 2015-07-13\n===================\n\n  * Add `application/x-httpd-php`\n\n1.14.0 / 2015-06-25\n===================\n\n  * Add `application/scim+json`\n  * Add `application/vnd.3gpp.ussd+xml`\n  * Add `application/vnd.biopax.rdf+xml`\n  * Add `text/x-processing`\n\n1.13.0 / 2015-06-07\n===================\n\n  * Add nginx as a source\n  * Add `application/x-cocoa`\n  * Add `application/x-java-archive-diff`\n  * Add `application/x-makeself`\n  * Add `application/x-perl`\n  * Add `application/x-pilot`\n  * Add `application/x-redhat-package-manager`\n  * Add `application/x-sea`\n  * Add `audio/x-m4a`\n  * Add `audio/x-realaudio`\n  * Add `image/x-jng`\n  * Add `text/mathml`\n\n1.12.0 / 2015-06-05\n===================\n\n  * Add `application/bdoc`\n  * Add `application/vnd.hyperdrive+json`\n  * Add `application/x-bdoc`\n  * Add extension `.rtf` to `text/rtf`\n\n1.11.0 / 2015-05-31\n===================\n\n  * Add `audio/wav`\n  * Add `audio/wave`\n  * Add extension `.litcoffee` to `text/coffeescript`\n  * Add extension `.sfd-hdstx` to `application/vnd.hydrostatix.sof-data`\n  * Add extension `.n-gage` to `application/vnd.nokia.n-gage.symbian.install`\n\n1.10.0 / 2015-05-19\n===================\n\n  * Add `application/vnd.balsamiq.bmpr`\n  * Add `application/vnd.microsoft.portable-executable`\n  * Add `application/x-ns-proxy-autoconfig`\n\n1.9.1 / 2015-04-19\n==================\n\n  * Remove `.json` extension from `application/manifest+json`\n    - This is causing bugs downstream\n\n1.9.0 / 2015-04-19\n==================\n\n  * Add `application/manifest+json`\n  * Add `application/vnd.micro+json`\n  * Add `image/vnd.zbrush.pcx`\n  * Add `image/x-ms-bmp`\n\n1.8.0 / 2015-03-13\n==================\n\n  * Add `application/vnd.citationstyles.style+xml`\n  * Add `application/vnd.fastcopy-disk-image`\n  * Add `application/vnd.gov.sk.xmldatacontainer+xml`\n  * Add extension `.jsonld` to `application/ld+json`\n\n1.7.0 / 2015-02-08\n==================\n\n  * Add `application/vnd.gerber`\n  * Add `application/vnd.msa-disk-image`\n\n1.6.1 / 2015-02-05\n==================\n\n  * Community extensions ownership transferred from `node-mime`\n\n1.6.0 / 2015-01-29\n==================\n\n  * Add `application/jose`\n  * Add `application/jose+json`\n  * Add `application/json-seq`\n  * Add `application/jwk+json`\n  * Add `application/jwk-set+json`\n  * Add `application/jwt`\n  * Add `application/rdap+json`\n  * Add `application/vnd.gov.sk.e-form+xml`\n  * Add `application/vnd.ims.imsccv1p3`\n\n1.5.0 / 2014-12-30\n==================\n\n  * Add `application/vnd.oracle.resource+json`\n  * Fix various invalid MIME type entries\n    - `application/mbox+xml`\n    - `application/oscp-response`\n    - `application/vwg-multiplexed`\n    - `audio/g721`\n\n1.4.0 / 2014-12-21\n==================\n\n  * Add `application/vnd.ims.imsccv1p2`\n  * Fix various invalid MIME type entries\n    - `application/vnd-acucobol`\n    - `application/vnd-curl`\n    - `application/vnd-dart`\n    - `application/vnd-dxr`\n    - `application/vnd-fdf`\n    - `application/vnd-mif`\n    - `application/vnd-sema`\n    - `application/vnd-wap-wmlc`\n    - `application/vnd.adobe.flash-movie`\n    - `application/vnd.dece-zip`\n    - `application/vnd.dvb_service`\n    - `application/vnd.micrografx-igx`\n    - `application/vnd.sealed-doc`\n    - `application/vnd.sealed-eml`\n    - `application/vnd.sealed-mht`\n    - `application/vnd.sealed-ppt`\n    - `application/vnd.sealed-tiff`\n    - `application/vnd.sealed-xls`\n    - `application/vnd.sealedmedia.softseal-html`\n    - `application/vnd.sealedmedia.softseal-pdf`\n    - `application/vnd.wap-slc`\n    - `application/vnd.wap-wbxml`\n    - `audio/vnd.sealedmedia.softseal-mpeg`\n    - `image/vnd-djvu`\n    - `image/vnd-svf`\n    - `image/vnd-wap-wbmp`\n    - `image/vnd.sealed-png`\n    - `image/vnd.sealedmedia.softseal-gif`\n    - `image/vnd.sealedmedia.softseal-jpg`\n    - `model/vnd-dwf`\n    - `model/vnd.parasolid.transmit-binary`\n    - `model/vnd.parasolid.transmit-text`\n    - `text/vnd-a`\n    - `text/vnd-curl`\n    - `text/vnd.wap-wml`\n  * Remove example template MIME types\n    - `application/example`\n    - `audio/example`\n    - `image/example`\n    - `message/example`\n    - `model/example`\n    - `multipart/example`\n    - `text/example`\n    - `video/example`\n\n1.3.1 / 2014-12-16\n==================\n\n  * Fix missing extensions\n    - `application/json5`\n    - `text/hjson`\n\n1.3.0 / 2014-12-07\n==================\n\n  * Add `application/a2l`\n  * Add `application/aml`\n  * Add `application/atfx`\n  * Add `application/atxml`\n  * Add `application/cdfx+xml`\n  * Add `application/dii`\n  * Add `application/json5`\n  * Add `application/lxf`\n  * Add `application/mf4`\n  * Add `application/vnd.apache.thrift.compact`\n  * Add `application/vnd.apache.thrift.json`\n  * Add `application/vnd.coffeescript`\n  * Add `application/vnd.enphase.envoy`\n  * Add `application/vnd.ims.imsccv1p1`\n  * Add `text/csv-schema`\n  * Add `text/hjson`\n  * Add `text/markdown`\n  * Add `text/yaml`\n\n1.2.0 / 2014-11-09\n==================\n\n  * Add `application/cea`\n  * Add `application/dit`\n  * Add `application/vnd.gov.sk.e-form+zip`\n  * Add `application/vnd.tmd.mediaflex.api+xml`\n  * Type `application/epub+zip` is now IANA-registered\n\n1.1.2 / 2014-10-23\n==================\n\n  * Rebuild database for `application/x-www-form-urlencoded` change\n\n1.1.1 / 2014-10-20\n==================\n\n  * Mark `application/x-www-form-urlencoded` as compressible.\n\n1.1.0 / 2014-09-28\n==================\n\n  * Add `application/font-woff2`\n\n1.0.3 / 2014-09-25\n==================\n\n  * Fix engine requirement in package\n\n1.0.2 / 2014-09-25\n==================\n\n  * Add `application/coap-group+json`\n  * Add `application/dcd`\n  * Add `application/vnd.apache.thrift.binary`\n  * Add `image/vnd.tencent.tap`\n  * Mark all JSON-derived types as compressible\n  * Update `text/vtt` data\n\n1.0.1 / 2014-08-30\n==================\n\n  * Fix extension ordering\n\n1.0.0 / 2014-08-30\n==================\n\n  * Add `application/atf`\n  * Add `application/merge-patch+json`\n  * Add `multipart/x-mixed-replace`\n  * Add `source: 'apache'` metadata\n  * Add `source: 'iana'` metadata\n  * Remove badly-assumed charset data\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\mime-db\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\mime-db\\HISTORY.md"
  },
  {
    "Content": "/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\mime-db\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\mime-db\\index.js"
  },
  {
    "Content": "# mime-db\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Node.js Version][node-image]][node-url]\n[![Build Status][ci-image]][ci-url]\n[![Coverage Status][coveralls-image]][coveralls-url]\n\nThis is a large database of mime types and information about them.\nIt consists of a single, public JSON file and does not include any logic,\nallowing it to remain as un-opinionated as possible with an API.\nIt aggregates data from the following sources:\n\n- http://www.iana.org/assignments/media-types/media-types.xhtml\n- http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types\n- http://hg.nginx.org/nginx/raw-file/default/conf/mime.types\n\n## Installation\n\n```bash\nnpm install mime-db\n```\n\n### Database Download\n\nIf you're crazy enough to use this in the browser, you can just grab the\nJSON file using [jsDelivr](https://www.jsdelivr.com/). It is recommended to\nreplace `master` with [a release tag](https://github.com/jshttp/mime-db/tags)\nas the JSON format may change in the future.\n\n```\nhttps://cdn.jsdelivr.net/gh/jshttp/mime-db@master/db.json\n```\n\n## Usage\n\n```js\nvar db = require('mime-db')\n\n// grab data on .js files\nvar data = db['application/javascript']\n```\n\n## Data Structure\n\nThe JSON file is a map lookup for lowercased mime types.\nEach mime type has the following properties:\n\n- `.source` - where the mime type is defined.\n    If not set, it's probably a custom media type.\n    - `apache` - [Apache common media types](http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types)\n    - `iana` - [IANA-defined media types](http://www.iana.org/assignments/media-types/media-types.xhtml)\n    - `nginx` - [nginx media types](http://hg.nginx.org/nginx/raw-file/default/conf/mime.types)\n- `.extensions[]` - known extensions associated with this mime type.\n- `.compressible` - whether a file of this type can be gzipped.\n- `.charset` - the default charset associated with this type, if any.\n\nIf unknown, every property could be `undefined`.\n\n## Contributing\n\nTo edit the database, only make PRs against `src/custom-types.json` or\n`src/custom-suffix.json`.\n\nThe `src/custom-types.json` file is a JSON object with the MIME type as the\nkeys and the values being an object with the following keys:\n\n- `compressible` - leave out if you don't know, otherwise `true`/`false` to\n  indicate whether the data represented by the type is typically compressible.\n- `extensions` - include an array of file extensions that are associated with\n  the type.\n- `notes` - human-readable notes about the type, typically what the type is.\n- `sources` - include an array of URLs of where the MIME type and the associated\n  extensions are sourced from. This needs to be a [primary source](https://en.wikipedia.org/wiki/Primary_source);\n  links to type aggregating sites and Wikipedia are _not acceptable_.\n\nTo update the build, run `npm run build`.\n\n### Adding Custom Media Types\n\nThe best way to get new media types included in this library is to register\nthem with the IANA. The community registration procedure is outlined in\n[RFC 6838 section 5](http://tools.ietf.org/html/rfc6838#section-5). Types\nregistered with the IANA are automatically pulled into this library.\n\nIf that is not possible / feasible, they can be added directly here as a\n\"custom\" type. To do this, it is required to have a primary source that\ndefinitively lists the media type. If an extension is going to be listed as\nassociateed with this media type, the source must definitively link the\nmedia type and extension as well.\n\n[ci-image]: https://badgen.net/github/checks/jshttp/mime-db/master?label=ci\n[ci-url]: https://github.com/jshttp/mime-db/actions?query=workflow%3Aci\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/mime-db/master\n[coveralls-url]: https://coveralls.io/r/jshttp/mime-db?branch=master\n[node-image]: https://badgen.net/npm/node/mime-db\n[node-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/mime-db\n[npm-url]: https://npmjs.org/package/mime-db\n[npm-version-image]: https://badgen.net/npm/v/mime-db\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\mime-db\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\mime-db\\README.md"
  },
  {
    "Content": "2.1.35 / 2022-03-12\n===================\n\n  * deps: mime-db@1.52.0\n    - Add extensions from IANA for more `image/*` types\n    - Add extension `.asc` to `application/pgp-keys`\n    - Add extensions to various XML types\n    - Add new upstream MIME types\n\n2.1.34 / 2021-11-08\n===================\n\n  * deps: mime-db@1.51.0\n    - Add new upstream MIME types\n\n2.1.33 / 2021-10-01\n===================\n\n  * deps: mime-db@1.50.0\n    - Add deprecated iWorks mime types and extensions\n    - Add new upstream MIME types\n\n2.1.32 / 2021-07-27\n===================\n\n  * deps: mime-db@1.49.0\n    - Add extension `.trig` to `application/trig`\n    - Add new upstream MIME types\n\n2.1.31 / 2021-06-01\n===================\n\n  * deps: mime-db@1.48.0\n    - Add extension `.mvt` to `application/vnd.mapbox-vector-tile`\n    - Add new upstream MIME types\n\n2.1.30 / 2021-04-02\n===================\n\n  * deps: mime-db@1.47.0\n    - Add extension `.amr` to `audio/amr`\n    - Remove ambigious extensions from IANA for `application/*+xml` types\n    - Update primary extension to `.es` for `application/ecmascript`\n\n2.1.29 / 2021-02-17\n===================\n\n  * deps: mime-db@1.46.0\n    - Add extension `.amr` to `audio/amr`\n    - Add extension `.m4s` to `video/iso.segment`\n    - Add extension `.opus` to `audio/ogg`\n    - Add new upstream MIME types\n\n2.1.28 / 2021-01-01\n===================\n\n  * deps: mime-db@1.45.0\n    - Add `application/ubjson` with extension `.ubj`\n    - Add `image/avif` with extension `.avif`\n    - Add `image/ktx2` with extension `.ktx2`\n    - Add extension `.dbf` to `application/vnd.dbf`\n    - Add extension `.rar` to `application/vnd.rar`\n    - Add extension `.td` to `application/urc-targetdesc+xml`\n    - Add new upstream MIME types\n    - Fix extension of `application/vnd.apple.keynote` to be `.key`\n\n2.1.27 / 2020-04-23\n===================\n\n  * deps: mime-db@1.44.0\n    - Add charsets from IANA\n    - Add extension `.cjs` to `application/node`\n    - Add new upstream MIME types\n\n2.1.26 / 2020-01-05\n===================\n\n  * deps: mime-db@1.43.0\n    - Add `application/x-keepass2` with extension `.kdbx`\n    - Add extension `.mxmf` to `audio/mobile-xmf`\n    - Add extensions from IANA for `application/*+xml` types\n    - Add new upstream MIME types\n\n2.1.25 / 2019-11-12\n===================\n\n  * deps: mime-db@1.42.0\n    - Add new upstream MIME types\n    - Add `application/toml` with extension `.toml`\n    - Add `image/vnd.ms-dds` with extension `.dds`\n\n2.1.24 / 2019-04-20\n===================\n\n  * deps: mime-db@1.40.0\n    - Add extensions from IANA for `model/*` types\n    - Add `text/mdx` with extension `.mdx`\n\n2.1.23 / 2019-04-17\n===================\n\n  * deps: mime-db@~1.39.0\n    - Add extensions `.siv` and `.sieve` to `application/sieve`\n    - Add new upstream MIME types\n\n2.1.22 / 2019-02-14\n===================\n\n  * deps: mime-db@~1.38.0\n    - Add extension `.nq` to `application/n-quads`\n    - Add extension `.nt` to `application/n-triples`\n    - Add new upstream MIME types\n\n2.1.21 / 2018-10-19\n===================\n\n  * deps: mime-db@~1.37.0\n    - Add extensions to HEIC image types\n    - Add new upstream MIME types\n\n2.1.20 / 2018-08-26\n===================\n\n  * deps: mime-db@~1.36.0\n    - Add Apple file extensions from IANA\n    - Add extensions from IANA for `image/*` types\n    - Add new upstream MIME types\n\n2.1.19 / 2018-07-17\n===================\n\n  * deps: mime-db@~1.35.0\n    - Add extension `.csl` to `application/vnd.citationstyles.style+xml`\n    - Add extension `.es` to `application/ecmascript`\n    - Add extension `.owl` to `application/rdf+xml`\n    - Add new upstream MIME types\n    - Add UTF-8 as default charset for `text/turtle`\n\n2.1.18 / 2018-02-16\n===================\n\n  * deps: mime-db@~1.33.0\n    - Add `application/raml+yaml` with extension `.raml`\n    - Add `application/wasm` with extension `.wasm`\n    - Add `text/shex` with extension `.shex`\n    - Add extensions for JPEG-2000 images\n    - Add extensions from IANA for `message/*` types\n    - Add new upstream MIME types\n    - Update font MIME types\n    - Update `text/hjson` to registered `application/hjson`\n\n2.1.17 / 2017-09-01\n===================\n\n  * deps: mime-db@~1.30.0\n    - Add `application/vnd.ms-outlook`\n    - Add `application/x-arj`\n    - Add extension `.mjs` to `application/javascript`\n    - Add glTF types and extensions\n    - Add new upstream MIME types\n    - Add `text/x-org`\n    - Add VirtualBox MIME types\n    - Fix `source` records for `video/*` types that are IANA\n    - Update `font/opentype` to registered `font/otf`\n\n2.1.16 / 2017-07-24\n===================\n\n  * deps: mime-db@~1.29.0\n    - Add `application/fido.trusted-apps+json`\n    - Add extension `.wadl` to `application/vnd.sun.wadl+xml`\n    - Add extension `.gz` to `application/gzip`\n    - Add new upstream MIME types\n    - Update extensions `.md` and `.markdown` to be `text/markdown`\n\n2.1.15 / 2017-03-23\n===================\n\n  * deps: mime-db@~1.27.0\n    - Add new mime types\n    - Add `image/apng`\n\n2.1.14 / 2017-01-14\n===================\n\n  * deps: mime-db@~1.26.0\n    - Add new mime types\n\n2.1.13 / 2016-11-18\n===================\n\n  * deps: mime-db@~1.25.0\n    - Add new mime types\n\n2.1.12 / 2016-09-18\n===================\n\n  * deps: mime-db@~1.24.0\n    - Add new mime types\n    - Add `audio/mp3`\n\n2.1.11 / 2016-05-01\n===================\n\n  * deps: mime-db@~1.23.0\n    - Add new mime types\n\n2.1.10 / 2016-02-15\n===================\n\n  * deps: mime-db@~1.22.0\n    - Add new mime types\n    - Fix extension of `application/dash+xml`\n    - Update primary extension for `audio/mp4`\n\n2.1.9 / 2016-01-06\n==================\n\n  * deps: mime-db@~1.21.0\n    - Add new mime types\n\n2.1.8 / 2015-11-30\n==================\n\n  * deps: mime-db@~1.20.0\n    - Add new mime types\n\n2.1.7 / 2015-09-20\n==================\n\n  * deps: mime-db@~1.19.0\n    - Add new mime types\n\n2.1.6 / 2015-09-03\n==================\n\n  * deps: mime-db@~1.18.0\n    - Add new mime types\n\n2.1.5 / 2015-08-20\n==================\n\n  * deps: mime-db@~1.17.0\n    - Add new mime types\n\n2.1.4 / 2015-07-30\n==================\n\n  * deps: mime-db@~1.16.0\n    - Add new mime types\n\n2.1.3 / 2015-07-13\n==================\n\n  * deps: mime-db@~1.15.0\n    - Add new mime types\n\n2.1.2 / 2015-06-25\n==================\n\n  * deps: mime-db@~1.14.0\n    - Add new mime types\n\n2.1.1 / 2015-06-08\n==================\n\n  * perf: fix deopt during mapping\n\n2.1.0 / 2015-06-07\n==================\n\n  * Fix incorrectly treating extension-less file name as extension\n    - i.e. `'path/to/json'` will no longer return `application/json`\n  * Fix `.charset(type)` to accept parameters\n  * Fix `.charset(type)` to match case-insensitive\n  * Improve generation of extension to MIME mapping\n  * Refactor internals for readability and no argument reassignment\n  * Prefer `application/*` MIME types from the same source\n  * Prefer any type over `application/octet-stream`\n  * deps: mime-db@~1.13.0\n    - Add nginx as a source\n    - Add new mime types\n\n2.0.14 / 2015-06-06\n===================\n\n  * deps: mime-db@~1.12.0\n    - Add new mime types\n\n2.0.13 / 2015-05-31\n===================\n\n  * deps: mime-db@~1.11.0\n    - Add new mime types\n\n2.0.12 / 2015-05-19\n===================\n\n  * deps: mime-db@~1.10.0\n    - Add new mime types\n\n2.0.11 / 2015-05-05\n===================\n\n  * deps: mime-db@~1.9.1\n    - Add new mime types\n\n2.0.10 / 2015-03-13\n===================\n\n  * deps: mime-db@~1.8.0\n    - Add new mime types\n\n2.0.9 / 2015-02-09\n==================\n\n  * deps: mime-db@~1.7.0\n    - Add new mime types\n    - Community extensions ownership transferred from `node-mime`\n\n2.0.8 / 2015-01-29\n==================\n\n  * deps: mime-db@~1.6.0\n    - Add new mime types\n\n2.0.7 / 2014-12-30\n==================\n\n  * deps: mime-db@~1.5.0\n    - Add new mime types\n    - Fix various invalid MIME type entries\n\n2.0.6 / 2014-12-30\n==================\n\n  * deps: mime-db@~1.4.0\n    - Add new mime types\n    - Fix various invalid MIME type entries\n    - Remove example template MIME types\n\n2.0.5 / 2014-12-29\n==================\n\n  * deps: mime-db@~1.3.1\n    - Fix missing extensions\n\n2.0.4 / 2014-12-10\n==================\n\n  * deps: mime-db@~1.3.0\n    - Add new mime types\n\n2.0.3 / 2014-11-09\n==================\n\n  * deps: mime-db@~1.2.0\n    - Add new mime types\n\n2.0.2 / 2014-09-28\n==================\n\n  * deps: mime-db@~1.1.0\n    - Add new mime types\n    - Update charsets\n\n2.0.1 / 2014-09-07\n==================\n\n  * Support Node.js 0.6\n\n2.0.0 / 2014-09-02\n==================\n\n  * Use `mime-db`\n  * Remove `.define()`\n\n1.0.2 / 2014-08-04\n==================\n\n  * Set charset=utf-8 for `text/javascript`\n\n1.0.1 / 2014-06-24\n==================\n\n  * Add `text/jsx` type\n\n1.0.0 / 2014-05-12\n==================\n\n  * Return `false` for unknown types\n  * Set charset=utf-8 for `application/json`\n\n0.1.0 / 2014-05-02\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\mime-types\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\mime-types\\HISTORY.md"
  },
  {
    "Content": "/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\mime-types\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\mime-types\\index.js"
  },
  {
    "Content": "# mime-types\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][ci-image]][ci-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nThe ultimate javascript content-type utility.\n\nSimilar to [the `mime@1.x` module](https://www.npmjs.com/package/mime), except:\n\n- __No fallbacks.__ Instead of naively returning the first available type,\n  `mime-types` simply returns `false`, so do\n  `var type = mime.lookup('unrecognized') || 'application/octet-stream'`.\n- No `new Mime()` business, so you could do `var lookup = require('mime-types').lookup`.\n- No `.define()` functionality\n- Bug fixes for `.lookup(path)`\n\nOtherwise, the API is compatible with `mime` 1.x.\n\n## Install\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install mime-types\n```\n\n## Adding Types\n\nAll mime types are based on [mime-db](https://www.npmjs.com/package/mime-db),\nso open a PR there if you'd like to add mime types.\n\n## API\n\n```js\nvar mime = require('mime-types')\n```\n\nAll functions return `false` if input is invalid or not found.\n\n### mime.lookup(path)\n\nLookup the content-type associated with a file.\n\n```js\nmime.lookup('json') // 'application/json'\nmime.lookup('.md') // 'text/markdown'\nmime.lookup('file.html') // 'text/html'\nmime.lookup('folder/file.js') // 'application/javascript'\nmime.lookup('folder/.htaccess') // false\n\nmime.lookup('cats') // false\n```\n\n### mime.contentType(type)\n\nCreate a full content-type header given a content-type or extension.\nWhen given an extension, `mime.lookup` is used to get the matching\ncontent-type, otherwise the given content-type is used. Then if the\ncontent-type does not already have a `charset` parameter, `mime.charset`\nis used to get the default charset and add to the returned content-type.\n\n```js\nmime.contentType('markdown') // 'text/x-markdown; charset=utf-8'\nmime.contentType('file.json') // 'application/json; charset=utf-8'\nmime.contentType('text/html') // 'text/html; charset=utf-8'\nmime.contentType('text/html; charset=iso-8859-1') // 'text/html; charset=iso-8859-1'\n\n// from a full path\nmime.contentType(path.extname('/path/to/file.json')) // 'application/json; charset=utf-8'\n```\n\n### mime.extension(type)\n\nGet the default extension for a content-type.\n\n```js\nmime.extension('application/octet-stream') // 'bin'\n```\n\n### mime.charset(type)\n\nLookup the implied default charset of a content-type.\n\n```js\nmime.charset('text/markdown') // 'UTF-8'\n```\n\n### var type = mime.types[extension]\n\nA map of content-types by extension.\n\n### [extensions...] = mime.extensions[type]\n\nA map of extensions by content-type.\n\n## License\n\n[MIT](LICENSE)\n\n[ci-image]: https://badgen.net/github/checks/jshttp/mime-types/master?label=ci\n[ci-url]: https://github.com/jshttp/mime-types/actions/workflows/ci.yml\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/mime-types/master\n[coveralls-url]: https://coveralls.io/r/jshttp/mime-types?branch=master\n[node-version-image]: https://badgen.net/npm/node/mime-types\n[node-version-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/mime-types\n[npm-url]: https://npmjs.org/package/mime-types\n[npm-version-image]: https://badgen.net/npm/v/mime-types\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\mime-types\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\mime-types\\README.md"
  },
  {
    "Content": "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\ms\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\ms\\index.js"
  },
  {
    "Content": "The MIT License (MIT)\n\nCopyright (c) 2016 Zeit, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\ms\\license.md",
    "RelativePath": "tools\\backend\\node_modules\\ms\\license.md"
  },
  {
    "Content": "# ms\n\n[![Build Status](https://travis-ci.org/zeit/ms.svg?branch=master)](https://travis-ci.org/zeit/ms)\n[![Slack Channel](http://zeit-slackin.now.sh/badge.svg)](https://zeit.chat/)\n\nUse this package to easily convert various time formats to milliseconds.\n\n## Examples\n\n```js\nms('2 days')  // 172800000\nms('1d')      // 86400000\nms('10h')     // 36000000\nms('2.5 hrs') // 9000000\nms('2h')      // 7200000\nms('1m')      // 60000\nms('5s')      // 5000\nms('1y')      // 31557600000\nms('100')     // 100\n```\n\n### Convert from milliseconds\n\n```js\nms(60000)             // \"1m\"\nms(2 * 60000)         // \"2m\"\nms(ms('10 hours'))    // \"10h\"\n```\n\n### Time format written-out\n\n```js\nms(60000, { long: true })             // \"1 minute\"\nms(2 * 60000, { long: true })         // \"2 minutes\"\nms(ms('10 hours'), { long: true })    // \"10 hours\"\n```\n\n## Features\n\n- Works both in [node](https://nodejs.org) and in the browser.\n- If a number is supplied to `ms`, a string with a unit is returned.\n- If a string that contains the number is supplied, it returns it as a number (e.g.: it returns `100` for `'100'`).\n- If you pass a string with a number and a valid unit, the number of equivalent ms is returned.\n\n## Caught a bug?\n\n1. [Fork](https://help.github.com/articles/fork-a-repo/) this repository to your own GitHub account and then [clone](https://help.github.com/articles/cloning-a-repository/) it to your local device\n2. Link the package to the global module directory: `npm link`\n3. Within the module you want to test your local development instance of ms, just link it to the dependencies: `npm link ms`. Instead of the default one from npm, node will now use your clone of ms!\n\nAs always, you can run the tests using: `npm test`\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\ms\\readme.md",
    "RelativePath": "tools\\backend\\node_modules\\ms\\readme.md"
  },
  {
    "Content": "0.6.3 / 2022-01-22\n==================\n\n  * Revert \"Lazy-load modules from main entry point\"\n\n0.6.2 / 2019-04-29\n==================\n\n  * Fix sorting charset, encoding, and language with extra parameters\n\n0.6.1 / 2016-05-02\n==================\n\n  * perf: improve `Accept` parsing speed\n  * perf: improve `Accept-Charset` parsing speed\n  * perf: improve `Accept-Encoding` parsing speed\n  * perf: improve `Accept-Language` parsing speed\n\n0.6.0 / 2015-09-29\n==================\n\n  * Fix including type extensions in parameters in `Accept` parsing\n  * Fix parsing `Accept` parameters with quoted equals\n  * Fix parsing `Accept` parameters with quoted semicolons\n  * Lazy-load modules from main entry point\n  * perf: delay type concatenation until needed\n  * perf: enable strict mode\n  * perf: hoist regular expressions\n  * perf: remove closures getting spec properties\n  * perf: remove a closure from media type parsing\n  * perf: remove property delete from media type parsing\n\n0.5.3 / 2015-05-10\n==================\n\n  * Fix media type parameter matching to be case-insensitive\n\n0.5.2 / 2015-05-06\n==================\n\n  * Fix comparing media types with quoted values\n  * Fix splitting media types with quoted commas\n\n0.5.1 / 2015-02-14\n==================\n\n  * Fix preference sorting to be stable for long acceptable lists\n\n0.5.0 / 2014-12-18\n==================\n\n  * Fix list return order when large accepted list\n  * Fix missing identity encoding when q=0 exists\n  * Remove dynamic building of Negotiator class\n\n0.4.9 / 2014-10-14\n==================\n\n  * Fix error when media type has invalid parameter\n\n0.4.8 / 2014-09-28\n==================\n\n  * Fix all negotiations to be case-insensitive\n  * Stable sort preferences of same quality according to client order\n  * Support Node.js 0.6\n\n0.4.7 / 2014-06-24\n==================\n\n  * Handle invalid provided languages\n  * Handle invalid provided media types\n\n0.4.6 / 2014-06-11\n==================\n\n  *  Order by specificity when quality is the same\n\n0.4.5 / 2014-05-29\n==================\n\n  * Fix regression in empty header handling\n\n0.4.4 / 2014-05-29\n==================\n\n  * Fix behaviors when headers are not present\n\n0.4.3 / 2014-04-16\n==================\n\n  * Handle slashes on media params correctly\n\n0.4.2 / 2014-02-28\n==================\n\n  * Fix media type sorting\n  * Handle media types params strictly\n\n0.4.1 / 2014-01-16\n==================\n\n  * Use most specific matches\n\n0.4.0 / 2014-01-09\n==================\n\n  * Remove preferred prefix from methods\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\negotiator\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\negotiator\\HISTORY.md"
  },
  {
    "Content": "/*!\n * negotiator\n * Copyright(c) 2012 Federico Romero\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nvar preferredCharsets = require('./lib/charset')\nvar preferredEncodings = require('./lib/encoding')\nvar preferredLanguages = require('./lib/language')\nvar preferredMediaTypes = require('./lib/mediaType')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Negotiator;\nmodule.exports.Negotiator = Negotiator;\n\n/**\n * Create a Negotiator instance from a request.\n * @param {object} request\n * @public\n */\n\nfunction Negotiator(request) {\n  if (!(this instanceof Negotiator)) {\n    return new Negotiator(request);\n  }\n\n  this.request = request;\n}\n\nNegotiator.prototype.charset = function charset(available) {\n  var set = this.charsets(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.charsets = function charsets(available) {\n  return preferredCharsets(this.request.headers['accept-charset'], available);\n};\n\nNegotiator.prototype.encoding = function encoding(available) {\n  var set = this.encodings(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.encodings = function encodings(available) {\n  return preferredEncodings(this.request.headers['accept-encoding'], available);\n};\n\nNegotiator.prototype.language = function language(available) {\n  var set = this.languages(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.languages = function languages(available) {\n  return preferredLanguages(this.request.headers['accept-language'], available);\n};\n\nNegotiator.prototype.mediaType = function mediaType(available) {\n  var set = this.mediaTypes(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.mediaTypes = function mediaTypes(available) {\n  return preferredMediaTypes(this.request.headers.accept, available);\n};\n\n// Backwards compatibility\nNegotiator.prototype.preferredCharset = Negotiator.prototype.charset;\nNegotiator.prototype.preferredCharsets = Negotiator.prototype.charsets;\nNegotiator.prototype.preferredEncoding = Negotiator.prototype.encoding;\nNegotiator.prototype.preferredEncodings = Negotiator.prototype.encodings;\nNegotiator.prototype.preferredLanguage = Negotiator.prototype.language;\nNegotiator.prototype.preferredLanguages = Negotiator.prototype.languages;\nNegotiator.prototype.preferredMediaType = Negotiator.prototype.mediaType;\nNegotiator.prototype.preferredMediaTypes = Negotiator.prototype.mediaTypes;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\negotiator\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\negotiator\\index.js"
  },
  {
    "Content": "# negotiator\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][github-actions-ci-image]][github-actions-ci-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nAn HTTP content negotiator for Node.js\n\n## Installation\n\n```sh\n$ npm install negotiator\n```\n\n## API\n\n```js\nvar Negotiator = require('negotiator')\n```\n\n### Accept Negotiation\n\n```js\navailableMediaTypes = ['text/html', 'text/plain', 'application/json']\n\n// The negotiator constructor receives a request object\nnegotiator = new Negotiator(request)\n\n// Let's say Accept header is 'text/html, application/*;q=0.2, image/jpeg;q=0.8'\n\nnegotiator.mediaTypes()\n// -> ['text/html', 'image/jpeg', 'application/*']\n\nnegotiator.mediaTypes(availableMediaTypes)\n// -> ['text/html', 'application/json']\n\nnegotiator.mediaType(availableMediaTypes)\n// -> 'text/html'\n```\n\nYou can check a working example at `examples/accept.js`.\n\n#### Methods\n\n##### mediaType()\n\nReturns the most preferred media type from the client.\n\n##### mediaType(availableMediaType)\n\nReturns the most preferred media type from a list of available media types.\n\n##### mediaTypes()\n\nReturns an array of preferred media types ordered by the client preference.\n\n##### mediaTypes(availableMediaTypes)\n\nReturns an array of preferred media types ordered by priority from a list of\navailable media types.\n\n### Accept-Language Negotiation\n\n```js\nnegotiator = new Negotiator(request)\n\navailableLanguages = ['en', 'es', 'fr']\n\n// Let's say Accept-Language header is 'en;q=0.8, es, pt'\n\nnegotiator.languages()\n// -> ['es', 'pt', 'en']\n\nnegotiator.languages(availableLanguages)\n// -> ['es', 'en']\n\nlanguage = negotiator.language(availableLanguages)\n// -> 'es'\n```\n\nYou can check a working example at `examples/language.js`.\n\n#### Methods\n\n##### language()\n\nReturns the most preferred language from the client.\n\n##### language(availableLanguages)\n\nReturns the most preferred language from a list of available languages.\n\n##### languages()\n\nReturns an array of preferred languages ordered by the client preference.\n\n##### languages(availableLanguages)\n\nReturns an array of preferred languages ordered by priority from a list of\navailable languages.\n\n### Accept-Charset Negotiation\n\n```js\navailableCharsets = ['utf-8', 'iso-8859-1', 'iso-8859-5']\n\nnegotiator = new Negotiator(request)\n\n// Let's say Accept-Charset header is 'utf-8, iso-8859-1;q=0.8, utf-7;q=0.2'\n\nnegotiator.charsets()\n// -> ['utf-8', 'iso-8859-1', 'utf-7']\n\nnegotiator.charsets(availableCharsets)\n// -> ['utf-8', 'iso-8859-1']\n\nnegotiator.charset(availableCharsets)\n// -> 'utf-8'\n```\n\nYou can check a working example at `examples/charset.js`.\n\n#### Methods\n\n##### charset()\n\nReturns the most preferred charset from the client.\n\n##### charset(availableCharsets)\n\nReturns the most preferred charset from a list of available charsets.\n\n##### charsets()\n\nReturns an array of preferred charsets ordered by the client preference.\n\n##### charsets(availableCharsets)\n\nReturns an array of preferred charsets ordered by priority from a list of\navailable charsets.\n\n### Accept-Encoding Negotiation\n\n```js\navailableEncodings = ['identity', 'gzip']\n\nnegotiator = new Negotiator(request)\n\n// Let's say Accept-Encoding header is 'gzip, compress;q=0.2, identity;q=0.5'\n\nnegotiator.encodings()\n// -> ['gzip', 'identity', 'compress']\n\nnegotiator.encodings(availableEncodings)\n// -> ['gzip', 'identity']\n\nnegotiator.encoding(availableEncodings)\n// -> 'gzip'\n```\n\nYou can check a working example at `examples/encoding.js`.\n\n#### Methods\n\n##### encoding()\n\nReturns the most preferred encoding from the client.\n\n##### encoding(availableEncodings)\n\nReturns the most preferred encoding from a list of available encodings.\n\n##### encodings()\n\nReturns an array of preferred encodings ordered by the client preference.\n\n##### encodings(availableEncodings)\n\nReturns an array of preferred encodings ordered by priority from a list of\navailable encodings.\n\n## See Also\n\nThe [accepts](https://npmjs.org/package/accepts#readme) module builds on\nthis module and provides an alternative interface, mime type validation,\nand more.\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/negotiator.svg\n[npm-url]: https://npmjs.org/package/negotiator\n[node-version-image]: https://img.shields.io/node/v/negotiator.svg\n[node-version-url]: https://nodejs.org/en/download/\n[coveralls-image]: https://img.shields.io/coveralls/jshttp/negotiator/master.svg\n[coveralls-url]: https://coveralls.io/r/jshttp/negotiator?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/negotiator.svg\n[downloads-url]: https://npmjs.org/package/negotiator\n[github-actions-ci-image]: https://img.shields.io/github/workflow/status/jshttp/negotiator/ci/master?label=ci\n[github-actions-ci-url]: https://github.com/jshttp/negotiator/actions/workflows/ci.yml\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\negotiator\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\negotiator\\README.md"
  },
  {
    "Content": "/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredCharsets;\nmodule.exports.preferredCharsets = preferredCharsets;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleCharsetRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Charset header.\n * @private\n */\n\nfunction parseAcceptCharset(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var charset = parseCharset(accepts[i].trim(), i);\n\n    if (charset) {\n      accepts[j++] = charset;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a charset from the Accept-Charset header.\n * @private\n */\n\nfunction parseCharset(str, i) {\n  var match = simpleCharsetRegExp.exec(str);\n  if (!match) return null;\n\n  var charset = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    charset: charset,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a charset.\n * @private\n */\n\nfunction getCharsetPriority(charset, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(charset, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the charset.\n * @private\n */\n\nfunction specify(charset, spec, index) {\n  var s = 0;\n  if(spec.charset.toLowerCase() === charset.toLowerCase()){\n    s |= 1;\n  } else if (spec.charset !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n}\n\n/**\n * Get the preferred charsets from an Accept-Charset header.\n * @public\n */\n\nfunction preferredCharsets(accept, provided) {\n  // RFC 2616 sec 14.2: no header = *\n  var accepts = parseAcceptCharset(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all charsets\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullCharset);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getCharsetPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted charsets\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getCharset(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full charset string.\n * @private\n */\n\nfunction getFullCharset(spec) {\n  return spec.charset;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\negotiator\\lib\\charset.js",
    "RelativePath": "tools\\backend\\node_modules\\negotiator\\lib\\charset.js"
  },
  {
    "Content": "/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredEncodings;\nmodule.exports.preferredEncodings = preferredEncodings;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleEncodingRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Encoding header.\n * @private\n */\n\nfunction parseAcceptEncoding(accept) {\n  var accepts = accept.split(',');\n  var hasIdentity = false;\n  var minQuality = 1;\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var encoding = parseEncoding(accepts[i].trim(), i);\n\n    if (encoding) {\n      accepts[j++] = encoding;\n      hasIdentity = hasIdentity || specify('identity', encoding);\n      minQuality = Math.min(minQuality, encoding.q || 1);\n    }\n  }\n\n  if (!hasIdentity) {\n    /*\n     * If identity doesn't explicitly appear in the accept-encoding header,\n     * it's added to the list of acceptable encoding with the lowest q\n     */\n    accepts[j++] = {\n      encoding: 'identity',\n      q: minQuality,\n      i: i\n    };\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse an encoding from the Accept-Encoding header.\n * @private\n */\n\nfunction parseEncoding(str, i) {\n  var match = simpleEncodingRegExp.exec(str);\n  if (!match) return null;\n\n  var encoding = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';');\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    encoding: encoding,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of an encoding.\n * @private\n */\n\nfunction getEncodingPriority(encoding, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(encoding, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the encoding.\n * @private\n */\n\nfunction specify(encoding, spec, index) {\n  var s = 0;\n  if(spec.encoding.toLowerCase() === encoding.toLowerCase()){\n    s |= 1;\n  } else if (spec.encoding !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred encodings from an Accept-Encoding header.\n * @public\n */\n\nfunction preferredEncodings(accept, provided) {\n  var accepts = parseAcceptEncoding(accept || '');\n\n  if (!provided) {\n    // sorted list of all encodings\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullEncoding);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getEncodingPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted encodings\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getEncoding(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full encoding string.\n * @private\n */\n\nfunction getFullEncoding(spec) {\n  return spec.encoding;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\negotiator\\lib\\encoding.js",
    "RelativePath": "tools\\backend\\node_modules\\negotiator\\lib\\encoding.js"
  },
  {
    "Content": "/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredLanguages;\nmodule.exports.preferredLanguages = preferredLanguages;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Language header.\n * @private\n */\n\nfunction parseAcceptLanguage(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var language = parseLanguage(accepts[i].trim(), i);\n\n    if (language) {\n      accepts[j++] = language;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a language from the Accept-Language header.\n * @private\n */\n\nfunction parseLanguage(str, i) {\n  var match = simpleLanguageRegExp.exec(str);\n  if (!match) return null;\n\n  var prefix = match[1]\n  var suffix = match[2]\n  var full = prefix\n\n  if (suffix) full += \"-\" + suffix;\n\n  var q = 1;\n  if (match[3]) {\n    var params = match[3].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].split('=');\n      if (p[0] === 'q') q = parseFloat(p[1]);\n    }\n  }\n\n  return {\n    prefix: prefix,\n    suffix: suffix,\n    q: q,\n    i: i,\n    full: full\n  };\n}\n\n/**\n * Get the priority of a language.\n * @private\n */\n\nfunction getLanguagePriority(language, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(language, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the language.\n * @private\n */\n\nfunction specify(language, spec, index) {\n  var p = parseLanguage(language)\n  if (!p) return null;\n  var s = 0;\n  if(spec.full.toLowerCase() === p.full.toLowerCase()){\n    s |= 4;\n  } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\n    s |= 2;\n  } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\n    s |= 1;\n  } else if (spec.full !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred languages from an Accept-Language header.\n * @public\n */\n\nfunction preferredLanguages(accept, provided) {\n  // RFC 2616 sec 14.4: no header = *\n  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all languages\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullLanguage);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getLanguagePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted languages\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full language string.\n * @private\n */\n\nfunction getFullLanguage(spec) {\n  return spec.full;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\negotiator\\lib\\language.js",
    "RelativePath": "tools\\backend\\node_modules\\negotiator\\lib\\language.js"
  },
  {
    "Content": "/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredMediaTypes;\nmodule.exports.preferredMediaTypes = preferredMediaTypes;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleMediaTypeRegExp = /^\\s*([^\\s\\/;]+)\\/([^;\\s]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept header.\n * @private\n */\n\nfunction parseAccept(accept) {\n  var accepts = splitMediaTypes(accept);\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var mediaType = parseMediaType(accepts[i].trim(), i);\n\n    if (mediaType) {\n      accepts[j++] = mediaType;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a media type from the Accept header.\n * @private\n */\n\nfunction parseMediaType(str, i) {\n  var match = simpleMediaTypeRegExp.exec(str);\n  if (!match) return null;\n\n  var params = Object.create(null);\n  var q = 1;\n  var subtype = match[2];\n  var type = match[1];\n\n  if (match[3]) {\n    var kvps = splitParameters(match[3]).map(splitKeyValuePair);\n\n    for (var j = 0; j < kvps.length; j++) {\n      var pair = kvps[j];\n      var key = pair[0].toLowerCase();\n      var val = pair[1];\n\n      // get the value, unwrapping quotes\n      var value = val && val[0] === '\"' && val[val.length - 1] === '\"'\n        ? val.substr(1, val.length - 2)\n        : val;\n\n      if (key === 'q') {\n        q = parseFloat(value);\n        break;\n      }\n\n      // store parameter\n      params[key] = value;\n    }\n  }\n\n  return {\n    type: type,\n    subtype: subtype,\n    params: params,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a media type.\n * @private\n */\n\nfunction getMediaTypePriority(type, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(type, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the media type.\n * @private\n */\n\nfunction specify(type, spec, index) {\n  var p = parseMediaType(type);\n  var s = 0;\n\n  if (!p) {\n    return null;\n  }\n\n  if(spec.type.toLowerCase() == p.type.toLowerCase()) {\n    s |= 4\n  } else if(spec.type != '*') {\n    return null;\n  }\n\n  if(spec.subtype.toLowerCase() == p.subtype.toLowerCase()) {\n    s |= 2\n  } else if(spec.subtype != '*') {\n    return null;\n  }\n\n  var keys = Object.keys(spec.params);\n  if (keys.length > 0) {\n    if (keys.every(function (k) {\n      return spec.params[k] == '*' || (spec.params[k] || '').toLowerCase() == (p.params[k] || '').toLowerCase();\n    })) {\n      s |= 1\n    } else {\n      return null\n    }\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s,\n  }\n}\n\n/**\n * Get the preferred media types from an Accept header.\n * @public\n */\n\nfunction preferredMediaTypes(accept, provided) {\n  // RFC 2616 sec 14.2: no header = */*\n  var accepts = parseAccept(accept === undefined ? '*/*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all types\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullType);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getMediaTypePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted types\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full type string.\n * @private\n */\n\nfunction getFullType(spec) {\n  return spec.type + '/' + spec.subtype;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n\n/**\n * Count the number of quotes in a string.\n * @private\n */\n\nfunction quoteCount(string) {\n  var count = 0;\n  var index = 0;\n\n  while ((index = string.indexOf('\"', index)) !== -1) {\n    count++;\n    index++;\n  }\n\n  return count;\n}\n\n/**\n * Split a key value pair.\n * @private\n */\n\nfunction splitKeyValuePair(str) {\n  var index = str.indexOf('=');\n  var key;\n  var val;\n\n  if (index === -1) {\n    key = str;\n  } else {\n    key = str.substr(0, index);\n    val = str.substr(index + 1);\n  }\n\n  return [key, val];\n}\n\n/**\n * Split an Accept header into media types.\n * @private\n */\n\nfunction splitMediaTypes(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 1, j = 0; i < accepts.length; i++) {\n    if (quoteCount(accepts[j]) % 2 == 0) {\n      accepts[++j] = accepts[i];\n    } else {\n      accepts[j] += ',' + accepts[i];\n    }\n  }\n\n  // trim accepts\n  accepts.length = j + 1;\n\n  return accepts;\n}\n\n/**\n * Split a string of parameters.\n * @private\n */\n\nfunction splitParameters(str) {\n  var parameters = str.split(';');\n\n  for (var i = 1, j = 0; i < parameters.length; i++) {\n    if (quoteCount(parameters[j]) % 2 == 0) {\n      parameters[++j] = parameters[i];\n    } else {\n      parameters[j] += ';' + parameters[i];\n    }\n  }\n\n  // trim parameters\n  parameters.length = j + 1;\n\n  for (var i = 0; i < parameters.length; i++) {\n    parameters[i] = parameters[i].trim();\n  }\n\n  return parameters;\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\negotiator\\lib\\mediaType.js",
    "RelativePath": "tools\\backend\\node_modules\\negotiator\\lib\\mediaType.js"
  },
  {
    "Content": "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-assign\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\object-assign\\index.js"
  },
  {
    "Content": "# object-assign [![Build Status](https://travis-ci.org/sindresorhus/object-assign.svg?branch=master)](https://travis-ci.org/sindresorhus/object-assign)\n\n> ES2015 [`Object.assign()`](http://www.2ality.com/2014/01/object-assign.html) [ponyfill](https://ponyfill.com)\n\n\n## Use the built-in\n\nNode.js 4 and up, as well as every evergreen browser (Chrome, Edge, Firefox, Opera, Safari),\nsupport `Object.assign()` :tada:. If you target only those environments, then by all\nmeans, use `Object.assign()` instead of this package.\n\n\n## Install\n\n```\n$ npm install --save object-assign\n```\n\n\n## Usage\n\n```js\nconst objectAssign = require('object-assign');\n\nobjectAssign({foo: 0}, {bar: 1});\n//=> {foo: 0, bar: 1}\n\n// multiple sources\nobjectAssign({foo: 0}, {bar: 1}, {baz: 2});\n//=> {foo: 0, bar: 1, baz: 2}\n\n// overwrites equal keys\nobjectAssign({foo: 0}, {foo: 1}, {foo: 2});\n//=> {foo: 2}\n\n// ignores null and undefined sources\nobjectAssign({foo: 0}, null, {bar: 1}, undefined);\n//=> {foo: 0, bar: 1}\n```\n\n\n## API\n\n### objectAssign(target, [source, ...])\n\nAssigns enumerable own properties of `source` objects to the `target` object and returns the `target` object. Additional `source` objects will overwrite previous ones.\n\n\n## Resources\n\n- [ES2015 spec - Object.assign](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign)\n\n\n## Related\n\n- [deep-assign](https://github.com/sindresorhus/deep-assign) - Recursive `Object.assign()`\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-assign\\readme.md",
    "RelativePath": "tools\\backend\\node_modules\\object-assign\\readme.md"
  },
  {
    "Content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v1.13.4](https://github.com/inspect-js/object-inspect/compare/v1.13.3...v1.13.4) - 2025-02-04\n\n### Commits\n\n- [Fix] avoid being fooled by a `Symbol.toStringTag` [`fa5870d`](https://github.com/inspect-js/object-inspect/commit/fa5870da468a525d2f20193700f70752f506cbf7)\n- [Tests] fix tests in node v6.0 - v6.4 [`2abfe1b`](https://github.com/inspect-js/object-inspect/commit/2abfe1bc3c69f9293c07c5cd65a9d7d87a628b84)\n- [Dev Deps] update `es-value-fixtures`, `for-each`, `has-symbols` [`3edfb01`](https://github.com/inspect-js/object-inspect/commit/3edfb01cc8cce220fba0dfdfe2dc8bc955758cdd)\n\n## [v1.13.3](https://github.com/inspect-js/object-inspect/compare/v1.13.2...v1.13.3) - 2024-11-09\n\n### Commits\n\n- [actions] split out node 10-20, and 20+ [`44395a8`](https://github.com/inspect-js/object-inspect/commit/44395a8fc1deda6718a5e125e86b9ffcaa1c7580)\n- [Fix] `quoteStyle`: properly escape only the containing quotes [`5137f8f`](https://github.com/inspect-js/object-inspect/commit/5137f8f7bea69a7fc671bb683fd35f244f38fc52)\n- [Refactor] clean up `quoteStyle` code [`450680c`](https://github.com/inspect-js/object-inspect/commit/450680cd50de4e689ee3b8e1d6db3a1bcf3fc18c)\n- [Tests] add `quoteStyle` escaping tests [`e997c59`](https://github.com/inspect-js/object-inspect/commit/e997c595aeaea84fd98ca35d7e1c3b5ab3ae26e0)\n- [Dev Deps] update `auto-changelog`, `es-value-fixtures`, `tape` [`d5a469c`](https://github.com/inspect-js/object-inspect/commit/d5a469c99ec07ccaeafc36ac4b36a93285086d48)\n- [Tests] replace `aud` with `npm audit` [`fb7815f`](https://github.com/inspect-js/object-inspect/commit/fb7815f9b72cae277a04f65bbb0543f85b88be62)\n- [Dev Deps] update `mock-property` [`11c817b`](https://github.com/inspect-js/object-inspect/commit/11c817bf10392aa017755962ba6bc89d731359ee)\n\n## [v1.13.2](https://github.com/inspect-js/object-inspect/compare/v1.13.1...v1.13.2) - 2024-06-21\n\n### Commits\n\n- [readme] update badges [`8a51e6b`](https://github.com/inspect-js/object-inspect/commit/8a51e6bedaf389ec40cc4659e9df53e8543d176e)\n- [Dev Deps] update `@ljharb/eslint-config`, `tape` [`ef05f58`](https://github.com/inspect-js/object-inspect/commit/ef05f58c9761a41416ab907299bf0fa79517014b)\n- [Dev Deps] update `error-cause`, `has-tostringtag`, `tape` [`c0c6c26`](https://github.com/inspect-js/object-inspect/commit/c0c6c26c44cee6671f7c5d43d2b91d27c5c00d90)\n- [Fix] Don't throw when `global` is not defined [`d4d0965`](https://github.com/inspect-js/object-inspect/commit/d4d096570f7dbd0e03266a96de11d05eb7b63e0f)\n- [meta] add missing `engines.node` [`17a352a`](https://github.com/inspect-js/object-inspect/commit/17a352af6fe1ba6b70a19081674231eb1a50c940)\n- [Dev Deps] update `globalthis` [`9c08884`](https://github.com/inspect-js/object-inspect/commit/9c08884aa662a149e2f11403f413927736b97da7)\n- [Dev Deps] update `error-cause` [`6af352d`](https://github.com/inspect-js/object-inspect/commit/6af352d7c3929a4cc4c55768c27bf547a5e900f4)\n- [Dev Deps] update `npmignore` [`94e617d`](https://github.com/inspect-js/object-inspect/commit/94e617d38831722562fa73dff4c895746861d267)\n- [Dev Deps] update `mock-property` [`2ac24d7`](https://github.com/inspect-js/object-inspect/commit/2ac24d7e58cd388ad093c33249e413e05bbfd6c3)\n- [Dev Deps] update `tape` [`46125e5`](https://github.com/inspect-js/object-inspect/commit/46125e58f1d1dcfb170ed3d1ea69da550ea8d77b)\n\n## [v1.13.1](https://github.com/inspect-js/object-inspect/compare/v1.13.0...v1.13.1) - 2023-10-19\n\n### Commits\n\n- [Fix] in IE 8, global can !== window despite them being prototypes of each other [`30d0859`](https://github.com/inspect-js/object-inspect/commit/30d0859dc4606cf75c2410edcd5d5c6355f8d372)\n\n## [v1.13.0](https://github.com/inspect-js/object-inspect/compare/v1.12.3...v1.13.0) - 2023-10-14\n\n### Commits\n\n- [New] add special handling for the global object [`431bab2`](https://github.com/inspect-js/object-inspect/commit/431bab21a490ee51d35395966a504501e8c685da)\n- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `tape` [`fd4f619`](https://github.com/inspect-js/object-inspect/commit/fd4f6193562b4b0e95dcf5c0201b4e8cbbc4f58d)\n- [Dev Deps] update `mock-property`, `tape` [`b453f6c`](https://github.com/inspect-js/object-inspect/commit/b453f6ceeebf8a1b738a1029754092e0367a4134)\n- [Dev Deps] update `error-cause` [`e8ffc57`](https://github.com/inspect-js/object-inspect/commit/e8ffc577d73b92bb6a4b00c44f14e3319e374888)\n- [Dev Deps] update `tape` [`054b8b9`](https://github.com/inspect-js/object-inspect/commit/054b8b9b98633284cf989e582450ebfbbe53503c)\n- [Dev Deps] temporarily remove `aud` due to breaking change in transitive deps [`2476845`](https://github.com/inspect-js/object-inspect/commit/2476845e0678dd290c541c81cd3dec8420782c52)\n- [Dev Deps] pin `glob`, since v10.3.8+ requires a broken `jackspeak` [`383fa5e`](https://github.com/inspect-js/object-inspect/commit/383fa5eebc0afd705cc778a4b49d8e26452e49a8)\n- [Dev Deps] pin `jackspeak` since 2.1.2+ depends on npm aliases, which kill the install process in npm &lt; 6 [`68c244c`](https://github.com/inspect-js/object-inspect/commit/68c244c5174cdd877e5dcb8ee90aa3f44b2f25be)\n\n## [v1.12.3](https://github.com/inspect-js/object-inspect/compare/v1.12.2...v1.12.3) - 2023-01-12\n\n### Commits\n\n- [Fix] in eg FF 24, collections lack forEach [`75fc226`](https://github.com/inspect-js/object-inspect/commit/75fc22673c82d45f28322b1946bb0eb41b672b7f)\n- [actions] update rebase action to use reusable workflow [`250a277`](https://github.com/inspect-js/object-inspect/commit/250a277a095e9dacc029ab8454dcfc15de549dcd)\n- [Dev Deps] update `aud`, `es-value-fixtures`, `tape` [`66a19b3`](https://github.com/inspect-js/object-inspect/commit/66a19b3209ccc3c5ef4b34c3cb0160e65d1ce9d5)\n- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `error-cause` [`c43d332`](https://github.com/inspect-js/object-inspect/commit/c43d3324b48384a16fd3dc444e5fc589d785bef3)\n- [Tests] add `@pkgjs/support` to `postlint` [`e2618d2`](https://github.com/inspect-js/object-inspect/commit/e2618d22a7a3fa361b6629b53c1752fddc9c4d80)\n\n## [v1.12.2](https://github.com/inspect-js/object-inspect/compare/v1.12.1...v1.12.2) - 2022-05-26\n\n### Commits\n\n- [Fix] use `util.inspect` for a custom inspection symbol method [`e243bf2`](https://github.com/inspect-js/object-inspect/commit/e243bf2eda6c4403ac6f1146fddb14d12e9646c1)\n- [meta] add support info [`ca20ba3`](https://github.com/inspect-js/object-inspect/commit/ca20ba35713c17068ca912a86c542f5e8acb656c)\n- [Fix] ignore `cause` in node v16.9 and v16.10 where it has a bug [`86aa553`](https://github.com/inspect-js/object-inspect/commit/86aa553a4a455562c2c56f1540f0bf857b9d314b)\n\n## [v1.12.1](https://github.com/inspect-js/object-inspect/compare/v1.12.0...v1.12.1) - 2022-05-21\n\n### Commits\n\n- [Tests] use `mock-property` [`4ec8893`](https://github.com/inspect-js/object-inspect/commit/4ec8893ea9bfd28065ca3638cf6762424bf44352)\n- [meta] use `npmignore` to autogenerate an npmignore file [`07f868c`](https://github.com/inspect-js/object-inspect/commit/07f868c10bd25a9d18686528339bb749c211fc9a)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `tape` [`b05244b`](https://github.com/inspect-js/object-inspect/commit/b05244b4f331e00c43b3151bc498041be77ccc91)\n- [Dev Deps] update `@ljharb/eslint-config`, `error-cause`, `es-value-fixtures`, `functions-have-names`, `tape` [`d037398`](https://github.com/inspect-js/object-inspect/commit/d037398dcc5d531532e4c19c4a711ed677f579c1)\n- [Fix] properly handle callable regexes in older engines [`848fe48`](https://github.com/inspect-js/object-inspect/commit/848fe48bd6dd0064ba781ee6f3c5e54a94144c37)\n\n## [v1.12.0](https://github.com/inspect-js/object-inspect/compare/v1.11.1...v1.12.0) - 2021-12-18\n\n### Commits\n\n- [New] add `numericSeparator` boolean option [`2d2d537`](https://github.com/inspect-js/object-inspect/commit/2d2d537f5359a4300ce1c10241369f8024f89e11)\n- [Robustness] cache more prototype methods [`191533d`](https://github.com/inspect-js/object-inspect/commit/191533da8aec98a05eadd73a5a6e979c9c8653e8)\n- [New] ensure an Error’s `cause` is displayed [`53bc2ce`](https://github.com/inspect-js/object-inspect/commit/53bc2cee4e5a9cc4986f3cafa22c0685f340715e)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config` [`bc164b6`](https://github.com/inspect-js/object-inspect/commit/bc164b6e2e7d36b263970f16f54de63048b84a36)\n- [Robustness] cache `RegExp.prototype.test` [`a314ab8`](https://github.com/inspect-js/object-inspect/commit/a314ab8271b905cbabc594c82914d2485a8daf12)\n- [meta] fix auto-changelog settings [`5ed0983`](https://github.com/inspect-js/object-inspect/commit/5ed0983be72f73e32e2559997517a95525c7e20d)\n\n## [v1.11.1](https://github.com/inspect-js/object-inspect/compare/v1.11.0...v1.11.1) - 2021-12-05\n\n### Commits\n\n- [meta] add `auto-changelog` [`7dbdd22`](https://github.com/inspect-js/object-inspect/commit/7dbdd228401d6025d8b7391476d88aee9ea9bbdf)\n- [actions] reuse common workflows [`c8823bc`](https://github.com/inspect-js/object-inspect/commit/c8823bc0a8790729680709d45fb6e652432e91aa)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `safe-publish-latest`, `tape` [`7532b12`](https://github.com/inspect-js/object-inspect/commit/7532b120598307497b712890f75af8056f6d37a6)\n- [Refactor] use `has-tostringtag` to behave correctly in the presence of symbol shams [`94abb5d`](https://github.com/inspect-js/object-inspect/commit/94abb5d4e745bf33253942dea86b3e538d2ff6c6)\n- [actions] update codecov uploader [`5ed5102`](https://github.com/inspect-js/object-inspect/commit/5ed51025267a00e53b1341357315490ac4eb0874)\n- [Dev Deps] update `eslint`, `tape` [`37b2ad2`](https://github.com/inspect-js/object-inspect/commit/37b2ad26c08d94bfd01d5d07069a0b28ef4e2ad7)\n- [meta] add `sideEffects` flag [`d341f90`](https://github.com/inspect-js/object-inspect/commit/d341f905ef8bffa6a694cda6ddc5ba343532cd4f)\n\n## [v1.11.0](https://github.com/inspect-js/object-inspect/compare/v1.10.3...v1.11.0) - 2021-07-12\n\n### Commits\n\n- [New] `customInspect`: add `symbol` option, to mimic modern util.inspect behavior [`e973a6e`](https://github.com/inspect-js/object-inspect/commit/e973a6e21f8140c5837cf25e9d89bdde88dc3120)\n- [Dev Deps] update `eslint` [`05f1cb3`](https://github.com/inspect-js/object-inspect/commit/05f1cb3cbcfe1f238e8b51cf9bc294305b7ed793)\n\n## [v1.10.3](https://github.com/inspect-js/object-inspect/compare/v1.10.2...v1.10.3) - 2021-05-07\n\n### Commits\n\n- [Fix] handle core-js Symbol shams [`4acfc2c`](https://github.com/inspect-js/object-inspect/commit/4acfc2c4b503498759120eb517abad6d51c9c5d6)\n- [readme] update badges [`95c323a`](https://github.com/inspect-js/object-inspect/commit/95c323ad909d6cbabb95dd6015c190ba6db9c1f2)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud` [`cb38f48`](https://github.com/inspect-js/object-inspect/commit/cb38f485de6ec7a95109b5a9bbd0a1deba2f6611)\n\n## [v1.10.2](https://github.com/inspect-js/object-inspect/compare/v1.10.1...v1.10.2) - 2021-04-17\n\n### Commits\n\n- [Fix] use a robust check for a boxed Symbol [`87f12d6`](https://github.com/inspect-js/object-inspect/commit/87f12d6e69ce530be04659c81a4cd502943acac5)\n\n## [v1.10.1](https://github.com/inspect-js/object-inspect/compare/v1.10.0...v1.10.1) - 2021-04-17\n\n### Commits\n\n- [Fix] use a robust check for a boxed bigint [`d5ca829`](https://github.com/inspect-js/object-inspect/commit/d5ca8298b6d2e5c7b9334a5b21b96ed95d225c91)\n\n## [v1.10.0](https://github.com/inspect-js/object-inspect/compare/v1.9.0...v1.10.0) - 2021-04-17\n\n### Commits\n\n- [Tests] increase coverage [`d8abb8a`](https://github.com/inspect-js/object-inspect/commit/d8abb8a62c2f084919df994a433b346e0d87a227)\n- [actions] use `node/install` instead of `node/run`; use `codecov` action [`4bfec2e`](https://github.com/inspect-js/object-inspect/commit/4bfec2e30aaef6ddef6cbb1448306f9f8b9520b7)\n- [New] respect `Symbol.toStringTag` on objects [`799b58f`](https://github.com/inspect-js/object-inspect/commit/799b58f536a45e4484633a8e9daeb0330835f175)\n- [Fix] do not allow Symbol.toStringTag to masquerade as builtins [`d6c5b37`](https://github.com/inspect-js/object-inspect/commit/d6c5b37d7e94427796b82432fb0c8964f033a6ab)\n- [New] add `WeakRef` support [`b6d898e`](https://github.com/inspect-js/object-inspect/commit/b6d898ee21868c780a7ee66b28532b5b34ed7f09)\n- [meta] do not publish github action workflow files [`918cdfc`](https://github.com/inspect-js/object-inspect/commit/918cdfc4b6fe83f559ff6ef04fe66201e3ff5cbd)\n- [meta] create `FUNDING.yml` [`0bb5fc5`](https://github.com/inspect-js/object-inspect/commit/0bb5fc516dbcd2cd728bd89cee0b580acc5ce301)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `tape` [`22c8dc0`](https://github.com/inspect-js/object-inspect/commit/22c8dc0cac113d70f4781e49a950070923a671be)\n- [meta] use `prepublishOnly` script for npm 7+ [`e52ee09`](https://github.com/inspect-js/object-inspect/commit/e52ee09e8050b8dbac94ef57f786675567728223)\n- [Dev Deps] update `eslint` [`7c4e6fd`](https://github.com/inspect-js/object-inspect/commit/7c4e6fdedcd27cc980e13c9ad834d05a96f3d40c)\n\n## [v1.9.0](https://github.com/inspect-js/object-inspect/compare/v1.8.0...v1.9.0) - 2020-11-30\n\n### Commits\n\n- [Tests] migrate tests to Github Actions [`d262251`](https://github.com/inspect-js/object-inspect/commit/d262251e13e16d3490b5473672f6b6d6ff86675d)\n- [New] add enumerable own Symbols to plain object output [`ee60c03`](https://github.com/inspect-js/object-inspect/commit/ee60c033088cff9d33baa71e59a362a541b48284)\n- [Tests] add passing tests [`01ac3e4`](https://github.com/inspect-js/object-inspect/commit/01ac3e4b5a30f97875a63dc9b1416b3bd626afc9)\n- [actions] add \"Require Allow Edits\" action [`c2d7746`](https://github.com/inspect-js/object-inspect/commit/c2d774680cde4ca4af332d84d4121b26f798ba9e)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `core-js` [`70058de`](https://github.com/inspect-js/object-inspect/commit/70058de1579fc54d1d15ed6c2dbe246637ce70ff)\n- [Fix] hex characters in strings should be uppercased, to match node `assert` [`6ab8faa`](https://github.com/inspect-js/object-inspect/commit/6ab8faaa0abc08fe7a8e2afd8b39c6f1f0e00113)\n- [Tests] run `nyc` on all tests [`4c47372`](https://github.com/inspect-js/object-inspect/commit/4c473727879ddc8e28b599202551ddaaf07b6210)\n- [Tests] node 0.8 has an unpredictable property order; fix `groups` test by removing property [`f192069`](https://github.com/inspect-js/object-inspect/commit/f192069a978a3b60e6f0e0d45ac7df260ab9a778)\n- [New] add enumerable properties to Function inspect result, per node’s `assert` [`fd38e1b`](https://github.com/inspect-js/object-inspect/commit/fd38e1bc3e2a1dc82091ce3e021917462eee64fc)\n- [Tests] fix tests for node &lt; 10, due to regex match `groups` [`2ac6462`](https://github.com/inspect-js/object-inspect/commit/2ac6462cc4f72eaa0b63a8cfee9aabe3008b2330)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config` [`44b59e2`](https://github.com/inspect-js/object-inspect/commit/44b59e2676a7f825ef530dfd19dafb599e3b9456)\n- [Robustness] cache `Symbol.prototype.toString` [`f3c2074`](https://github.com/inspect-js/object-inspect/commit/f3c2074d8f32faf8292587c07c9678ea931703dd)\n- [Dev Deps] update `eslint` [`9411294`](https://github.com/inspect-js/object-inspect/commit/94112944b9245e3302e25453277876402d207e7f)\n- [meta] `require-allow-edits` no longer requires an explicit github token [`36c0220`](https://github.com/inspect-js/object-inspect/commit/36c02205de3c2b0e84d53777c5c9fd54a36c48ab)\n- [actions] update rebase checkout action to v2 [`55a39a6`](https://github.com/inspect-js/object-inspect/commit/55a39a64e944f19c6a7d8efddf3df27700f20d14)\n- [actions] switch Automatic Rebase workflow to `pull_request_target` event [`f59fd3c`](https://github.com/inspect-js/object-inspect/commit/f59fd3cf406c3a7c7ece140904a80bbc6bacfcca)\n- [Dev Deps] update `eslint` [`a492bec`](https://github.com/inspect-js/object-inspect/commit/a492becec644b0155c9c4bc1caf6f9fac11fb2c7)\n\n## [v1.8.0](https://github.com/inspect-js/object-inspect/compare/v1.7.0...v1.8.0) - 2020-06-18\n\n### Fixed\n\n- [New] add `indent` option [`#27`](https://github.com/inspect-js/object-inspect/issues/27)\n\n### Commits\n\n- [Tests] add codecov [`4324cbb`](https://github.com/inspect-js/object-inspect/commit/4324cbb1a2bd7710822a4151ff373570db22453e)\n- [New] add `maxStringLength` option [`b3995cb`](https://github.com/inspect-js/object-inspect/commit/b3995cb71e15b5ee127a3094c43994df9d973502)\n- [New] add `customInspect` option, to disable custom inspect methods [`28b9179`](https://github.com/inspect-js/object-inspect/commit/28b9179ee802bb3b90810100c11637db90c2fb6d)\n- [Tests] add Date and RegExp tests [`3b28eca`](https://github.com/inspect-js/object-inspect/commit/3b28eca57b0367aeadffac604ea09e8bdae7d97b)\n- [actions] add automatic rebasing / merge commit blocking [`0d9c6c0`](https://github.com/inspect-js/object-inspect/commit/0d9c6c044e83475ff0bfffb9d35b149834c83a2e)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `core-js`, `tape`; add `aud` [`7c204f2`](https://github.com/inspect-js/object-inspect/commit/7c204f22b9e41bc97147f4d32d4cb045b17769a6)\n- [readme] fix repo URLs, remove testling [`34ca9a0`](https://github.com/inspect-js/object-inspect/commit/34ca9a0dabfe75bd311f806a326fadad029909a3)\n- [Fix] when truncating a deep array, note it as `[Array]` instead of just `[Object]` [`f74c82d`](https://github.com/inspect-js/object-inspect/commit/f74c82dd0b35386445510deb250f34c41be3ec0e)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `tape` [`1a8a5ea`](https://github.com/inspect-js/object-inspect/commit/1a8a5ea069ea2bee89d77caedad83ffa23d35711)\n- [Fix] do not be fooled by a function’s own `toString` method [`7cb5c65`](https://github.com/inspect-js/object-inspect/commit/7cb5c657a976f94715c19c10556a30f15bb7d5d7)\n- [patch] indicate explicitly that anon functions are anonymous, to match node [`81ebdd4`](https://github.com/inspect-js/object-inspect/commit/81ebdd4215005144074bbdff3f6bafa01407910a)\n- [Dev Deps] loosen the `core-js` dep [`e7472e8`](https://github.com/inspect-js/object-inspect/commit/e7472e8e242117670560bd995830c2a4d12080f5)\n- [Dev Deps] update `tape` [`699827e`](https://github.com/inspect-js/object-inspect/commit/699827e6b37258b5203c33c78c009bf4b0e6a66d)\n- [meta] add `safe-publish-latest` [`c5d2868`](https://github.com/inspect-js/object-inspect/commit/c5d2868d6eb33c472f37a20f89ceef2787046088)\n- [Dev Deps] update `@ljharb/eslint-config` [`9199501`](https://github.com/inspect-js/object-inspect/commit/919950195d486114ccebacbdf9d74d7f382693b0)\n\n## [v1.7.0](https://github.com/inspect-js/object-inspect/compare/v1.6.0...v1.7.0) - 2019-11-10\n\n### Commits\n\n- [Tests] use shared travis-ci configs [`19899ed`](https://github.com/inspect-js/object-inspect/commit/19899edbf31f4f8809acf745ce34ad1ce1bfa63b)\n- [Tests] add linting [`a00f057`](https://github.com/inspect-js/object-inspect/commit/a00f057d917f66ea26dd37769c6b810ec4af97e8)\n- [Tests] lint last file [`2698047`](https://github.com/inspect-js/object-inspect/commit/2698047b58af1e2e88061598ef37a75f228dddf6)\n- [Tests] up to `node` `v12.7`, `v11.15`, `v10.16`, `v8.16`, `v6.17` [`589e87a`](https://github.com/inspect-js/object-inspect/commit/589e87a99cadcff4b600e6a303418e9d922836e8)\n- [New] add support for `WeakMap` and `WeakSet` [`3ddb3e4`](https://github.com/inspect-js/object-inspect/commit/3ddb3e4e0c8287130c61a12e0ed9c104b1549306)\n- [meta] clean up license so github can detect it properly [`27527bb`](https://github.com/inspect-js/object-inspect/commit/27527bb801520c9610c68cc3b55d6f20a2bee56d)\n- [Tests] cover `util.inspect.custom` [`36d47b9`](https://github.com/inspect-js/object-inspect/commit/36d47b9c59056a57ef2f1491602c726359561800)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `core-js`, `tape` [`b614eaa`](https://github.com/inspect-js/object-inspect/commit/b614eaac901da0e5c69151f534671f990a94cace)\n- [Tests] fix coverage thresholds [`7b7b176`](https://github.com/inspect-js/object-inspect/commit/7b7b176e15f8bd6e8b2f261ff5a493c2fe78d9c2)\n- [Tests] bigint tests now can run on unflagged node [`063af31`](https://github.com/inspect-js/object-inspect/commit/063af31ce9cd13c202e3b67c07ba06dc9b7c0f81)\n- [Refactor] add early bailout to `isMap` and `isSet` checks [`fc51047`](https://github.com/inspect-js/object-inspect/commit/fc5104714a3671d37e225813db79470d6335683b)\n- [meta] add `funding` field [`7f9953a`](https://github.com/inspect-js/object-inspect/commit/7f9953a113eec7b064a6393cf9f90ba15f1d131b)\n- [Tests] Fix invalid strict-mode syntax with hexadecimal [`a8b5425`](https://github.com/inspect-js/object-inspect/commit/a8b542503b4af1599a275209a1a99f5fdedb1ead)\n- [Dev Deps] update `@ljharb/eslint-config` [`98df157`](https://github.com/inspect-js/object-inspect/commit/98df1577314d9188a3fc3f17fdcf2fba697ae1bd)\n- add copyright to LICENSE [`bb69fd0`](https://github.com/inspect-js/object-inspect/commit/bb69fd017a062d299e44da1f9b2c7dcd67f621e6)\n- [Tests] use `npx aud` in `posttest` [`4838353`](https://github.com/inspect-js/object-inspect/commit/4838353593974cf7f905b9ef04c03c094f0cdbe2)\n- [Tests] move `0.6` to allowed failures, because it won‘t build on travis [`1bff32a`](https://github.com/inspect-js/object-inspect/commit/1bff32aa52e8aea687f0856b28ba754b3e43ebf7)\n\n## [v1.6.0](https://github.com/inspect-js/object-inspect/compare/v1.5.0...v1.6.0) - 2018-05-02\n\n### Commits\n\n- [New] add support for boxed BigInt primitives [`356c66a`](https://github.com/inspect-js/object-inspect/commit/356c66a410e7aece7162c8319880a5ef647beaa9)\n- [Tests] up to `node` `v10.0`, `v9.11`, `v8.11`, `v6.14`, `v4.9` [`c77b65b`](https://github.com/inspect-js/object-inspect/commit/c77b65bba593811b906b9ec57561c5cba92e2db3)\n- [New] Add support for upcoming `BigInt` [`1ac548e`](https://github.com/inspect-js/object-inspect/commit/1ac548e4b27e26466c28c9a5e63e5d4e0591c31f)\n- [Tests] run bigint tests in CI with --harmony-bigint flag [`d31b738`](https://github.com/inspect-js/object-inspect/commit/d31b73831880254b5c6cf5691cda9a149fbc5f04)\n- [Dev Deps] update `core-js`, `tape` [`ff9eff6`](https://github.com/inspect-js/object-inspect/commit/ff9eff67113341ee1aaf80c1c22d683f43bfbccf)\n- [Docs] fix example to use `safer-buffer` [`48cae12`](https://github.com/inspect-js/object-inspect/commit/48cae12a73ec6cacc955175bc56bbe6aee6a211f)\n\n## [v1.5.0](https://github.com/inspect-js/object-inspect/compare/v1.4.1...v1.5.0) - 2017-12-25\n\n### Commits\n\n- [New] add `quoteStyle` option [`f5a72d2`](https://github.com/inspect-js/object-inspect/commit/f5a72d26edb3959b048f74c056ca7100a6b091e4)\n- [Tests] add more test coverage [`30ebe4e`](https://github.com/inspect-js/object-inspect/commit/30ebe4e1fa943b99ecbb85be7614256d536e2759)\n- [Tests] require 0.6 to pass [`99a008c`](https://github.com/inspect-js/object-inspect/commit/99a008ccace189a60fd7da18bf00e32c9572b980)\n\n## [v1.4.1](https://github.com/inspect-js/object-inspect/compare/v1.4.0...v1.4.1) - 2017-12-19\n\n### Commits\n\n- [Tests] up to `node` `v9.3`, `v8.9`, `v6.12` [`6674476`](https://github.com/inspect-js/object-inspect/commit/6674476cc56acaac1bde96c84fed5ef631911906)\n- [Fix] `inspect(Object(-0))` should be “Object(-0)”, not “Object(0)” [`d0a031f`](https://github.com/inspect-js/object-inspect/commit/d0a031f1cbb3024ee9982bfe364dd18a7e4d1bd3)\n\n## [v1.4.0](https://github.com/inspect-js/object-inspect/compare/v1.3.0...v1.4.0) - 2017-10-24\n\n### Commits\n\n- [Tests] add `npm run coverage` [`3b48fb2`](https://github.com/inspect-js/object-inspect/commit/3b48fb25db037235eeb808f0b2830aad7aa36f70)\n- [Tests] remove commented-out osx builds [`71e24db`](https://github.com/inspect-js/object-inspect/commit/71e24db8ad6ee3b9b381c5300b0475f2ba595a73)\n- [New] add support for `util.inspect.custom`, in node only. [`20cca77`](https://github.com/inspect-js/object-inspect/commit/20cca7762d7e17f15b21a90793dff84acce155df)\n- [Tests] up to `node` `v8.6`; use `nvm install-latest-npm` to ensure new npm doesn’t break old node [`252952d`](https://github.com/inspect-js/object-inspect/commit/252952d230d8065851dd3d4d5fe8398aae068529)\n- [Tests] up to `node` `v8.8` [`4aa868d`](https://github.com/inspect-js/object-inspect/commit/4aa868d3a62914091d489dd6ec6eed194ee67cd3)\n- [Dev Deps] update `core-js`, `tape` [`59483d1`](https://github.com/inspect-js/object-inspect/commit/59483d1df418f852f51fa0db7b24aa6b0209a27a)\n\n## [v1.3.0](https://github.com/inspect-js/object-inspect/compare/v1.2.2...v1.3.0) - 2017-07-31\n\n### Fixed\n\n- [Fix] Map/Set: work around core-js bug &lt; v2.5.0 [`#9`](https://github.com/inspect-js/object-inspect/issues/9)\n\n### Commits\n\n- [New] add support for arrays with additional object keys [`0d19937`](https://github.com/inspect-js/object-inspect/commit/0d199374ee37959e51539616666f420ccb29acb9)\n- [Tests] up to `node` `v8.2`, `v7.10`, `v6.11`; fix new npm breaking on older nodes [`e24784a`](https://github.com/inspect-js/object-inspect/commit/e24784a90c49117787157a12a63897c49cf89bbb)\n- Only apps should have lockfiles [`c6faebc`](https://github.com/inspect-js/object-inspect/commit/c6faebcb2ee486a889a4a1c4d78c0776c7576185)\n- [Dev Deps] update `tape` [`7345a0a`](https://github.com/inspect-js/object-inspect/commit/7345a0aeba7e91b888a079c10004d17696a7f586)\n\n## [v1.2.2](https://github.com/inspect-js/object-inspect/compare/v1.2.1...v1.2.2) - 2017-03-24\n\n### Commits\n\n- [Tests] up to `node` `v7.7`, `v6.10`, `v4.8`; improve test matrix [`a2ddc15`](https://github.com/inspect-js/object-inspect/commit/a2ddc15a1f2c65af18076eea1c0eb9cbceb478a0)\n- [Tests] up to `node` `v7.0`, `v6.9`, `v5.12`, `v4.6`, `io.js` `v3.3`; improve test matrix [`a48949f`](https://github.com/inspect-js/object-inspect/commit/a48949f6b574b2d4d2298109d8e8d0eb3e7a83e7)\n- [Performance] check for primitive types as early as possible. [`3b8092a`](https://github.com/inspect-js/object-inspect/commit/3b8092a2a4deffd0575f94334f00194e2d48dad3)\n- [Refactor] remove unneeded `else`s. [`7255034`](https://github.com/inspect-js/object-inspect/commit/725503402e08de4f96f6bf2d8edef44ac36f26b6)\n- [Refactor] avoid recreating `lowbyte` function every time. [`81edd34`](https://github.com/inspect-js/object-inspect/commit/81edd3475bd15bdd18e84de7472033dcf5004aaa)\n- [Fix] differentiate -0 from 0 [`521d345`](https://github.com/inspect-js/object-inspect/commit/521d3456b009da7bf1c5785c8a9df5a9f8718264)\n- [Refactor] move object key gathering into separate function [`aca6265`](https://github.com/inspect-js/object-inspect/commit/aca626536eaeef697196c6e9db3e90e7e0355b6a)\n- [Refactor] consolidate wrapping logic for boxed primitives into a function. [`4e440cd`](https://github.com/inspect-js/object-inspect/commit/4e440cd9065df04802a2a1dead03f48c353ca301)\n- [Robustness] use `typeof` instead of comparing to literal `undefined` [`5ca6f60`](https://github.com/inspect-js/object-inspect/commit/5ca6f601937506daff8ed2fcf686363b55807b69)\n- [Refactor] consolidate Map/Set notations. [`4e576e5`](https://github.com/inspect-js/object-inspect/commit/4e576e5d7ed2f9ec3fb7f37a0d16732eb10758a9)\n- [Tests] ensure that this function remains anonymous, despite ES6 name inference. [`7540ae5`](https://github.com/inspect-js/object-inspect/commit/7540ae591278756db614fa4def55ca413150e1a3)\n- [Refactor] explicitly coerce Error objects to strings. [`7f4ca84`](https://github.com/inspect-js/object-inspect/commit/7f4ca8424ee8dc2c0ca5a422d94f7fac40327261)\n- [Refactor] split up `var` declarations for debuggability [`6f2c11e`](https://github.com/inspect-js/object-inspect/commit/6f2c11e6a85418586a00292dcec5e97683f89bc3)\n- [Robustness] cache `Object.prototype.toString` [`df44a20`](https://github.com/inspect-js/object-inspect/commit/df44a20adfccf31529d60d1df2079bfc3c836e27)\n- [Dev Deps] update `tape` [`3ec714e`](https://github.com/inspect-js/object-inspect/commit/3ec714eba57bc3f58a6eb4fca1376f49e70d300a)\n- [Dev Deps] update `tape` [`beb72d9`](https://github.com/inspect-js/object-inspect/commit/beb72d969653747d7cde300393c28755375329b0)\n\n## [v1.2.1](https://github.com/inspect-js/object-inspect/compare/v1.2.0...v1.2.1) - 2016-04-09\n\n### Fixed\n\n- [Fix] fix Boolean `false` object inspection. [`#7`](https://github.com/substack/object-inspect/pull/7)\n\n## [v1.2.0](https://github.com/inspect-js/object-inspect/compare/v1.1.0...v1.2.0) - 2016-04-09\n\n### Fixed\n\n- [New] add support for inspecting String/Number/Boolean objects. [`#6`](https://github.com/inspect-js/object-inspect/issues/6)\n\n### Commits\n\n- [Dev Deps] update `tape` [`742caa2`](https://github.com/inspect-js/object-inspect/commit/742caa262cf7af4c815d4821c8bd0129c1446432)\n\n## [v1.1.0](https://github.com/inspect-js/object-inspect/compare/1.0.2...v1.1.0) - 2015-12-14\n\n### Merged\n\n- [New] add ES6 Map/Set support. [`#4`](https://github.com/inspect-js/object-inspect/pull/4)\n\n### Fixed\n\n- [New] add ES6 Map/Set support. [`#3`](https://github.com/inspect-js/object-inspect/issues/3)\n\n### Commits\n\n- Update `travis.yml` to test on bunches of `iojs` and `node` versions. [`4c1fd65`](https://github.com/inspect-js/object-inspect/commit/4c1fd65cc3bd95307e854d114b90478324287fd2)\n- [Dev Deps] update `tape` [`88a907e`](https://github.com/inspect-js/object-inspect/commit/88a907e33afbe408e4b5d6e4e42a33143f88848c)\n\n## [1.0.2](https://github.com/inspect-js/object-inspect/compare/1.0.1...1.0.2) - 2015-08-07\n\n### Commits\n\n- [Fix] Cache `Object.prototype.hasOwnProperty` in case it's deleted later. [`1d0075d`](https://github.com/inspect-js/object-inspect/commit/1d0075d3091dc82246feeb1f9871cb2b8ed227b3)\n- [Dev Deps] Update `tape` [`ca8d5d7`](https://github.com/inspect-js/object-inspect/commit/ca8d5d75635ddbf76f944e628267581e04958457)\n- gitignore node_modules since this is a reusable modules. [`ed41407`](https://github.com/inspect-js/object-inspect/commit/ed41407811743ca530cdeb28f982beb96026af82)\n\n## [1.0.1](https://github.com/inspect-js/object-inspect/compare/1.0.0...1.0.1) - 2015-07-19\n\n### Commits\n\n- Make `inspect` work with symbol primitives and objects, including in node 0.11 and 0.12. [`ddf1b94`](https://github.com/inspect-js/object-inspect/commit/ddf1b94475ab951f1e3bccdc0a48e9073cfbfef4)\n- bump tape [`103d674`](https://github.com/inspect-js/object-inspect/commit/103d67496b504bdcfdd765d303a773f87ec106e2)\n- use newer travis config [`d497276`](https://github.com/inspect-js/object-inspect/commit/d497276c1da14234bb5098a59cf20de75fbc316a)\n\n## [1.0.0](https://github.com/inspect-js/object-inspect/compare/0.4.0...1.0.0) - 2014-08-05\n\n### Commits\n\n- error inspect works properly [`260a22d`](https://github.com/inspect-js/object-inspect/commit/260a22d134d3a8a482c67d52091c6040c34f4299)\n- seen coverage [`57269e8`](https://github.com/inspect-js/object-inspect/commit/57269e8baa992a7439047f47325111fdcbcb8417)\n- htmlelement instance coverage [`397ffe1`](https://github.com/inspect-js/object-inspect/commit/397ffe10a1980350868043ef9de65686d438979f)\n- more element coverage [`6905cc2`](https://github.com/inspect-js/object-inspect/commit/6905cc2f7df35600177e613b0642b4df5efd3eca)\n- failing test for type errors [`385b615`](https://github.com/inspect-js/object-inspect/commit/385b6152e49b51b68449a662f410b084ed7c601a)\n- fn name coverage [`edc906d`](https://github.com/inspect-js/object-inspect/commit/edc906d40fca6b9194d304062c037ee8e398c4c2)\n- server-side element test [`362d1d3`](https://github.com/inspect-js/object-inspect/commit/362d1d3e86f187651c29feeb8478110afada385b)\n- custom inspect fn [`e89b0f6`](https://github.com/inspect-js/object-inspect/commit/e89b0f6fe6d5e03681282af83732a509160435a6)\n- fixed browser test [`b530882`](https://github.com/inspect-js/object-inspect/commit/b5308824a1c8471c5617e394766a03a6977102a9)\n- depth test, matches node [`1cfd9e0`](https://github.com/inspect-js/object-inspect/commit/1cfd9e0285a4ae1dff44101ad482915d9bf47e48)\n- exercise hasOwnProperty path [`8d753fb`](https://github.com/inspect-js/object-inspect/commit/8d753fb362a534fa1106e4d80f2ee9bea06a66d9)\n- more cases covered for errors [`c5c46a5`](https://github.com/inspect-js/object-inspect/commit/c5c46a569ec4606583497e8550f0d8c7ad39a4a4)\n- \\W obj key test case [`b0eceee`](https://github.com/inspect-js/object-inspect/commit/b0eceeea6e0eb94d686c1046e99b9e25e5005f75)\n- coverage for explicit depth param [`e12b91c`](https://github.com/inspect-js/object-inspect/commit/e12b91cd59683362f3a0e80f46481a0211e26c15)\n\n## [0.4.0](https://github.com/inspect-js/object-inspect/compare/0.3.1...0.4.0) - 2014-03-21\n\n### Commits\n\n- passing lowbyte interpolation test [`b847511`](https://github.com/inspect-js/object-inspect/commit/b8475114f5def7e7961c5353d48d3d8d9a520985)\n- lowbyte test [`4a2b0e1`](https://github.com/inspect-js/object-inspect/commit/4a2b0e142667fc933f195472759385ac08f3946c)\n\n## [0.3.1](https://github.com/inspect-js/object-inspect/compare/0.3.0...0.3.1) - 2014-03-04\n\n### Commits\n\n- sort keys [`a07b19c`](https://github.com/inspect-js/object-inspect/commit/a07b19cc3b1521a82d4fafb6368b7a9775428a05)\n\n## [0.3.0](https://github.com/inspect-js/object-inspect/compare/0.2.0...0.3.0) - 2014-03-04\n\n### Commits\n\n- [] and {} instead of [ ] and { } [`654c44b`](https://github.com/inspect-js/object-inspect/commit/654c44b2865811f3519e57bb8526e0821caf5c6b)\n\n## [0.2.0](https://github.com/inspect-js/object-inspect/compare/0.1.3...0.2.0) - 2014-03-04\n\n### Commits\n\n- failing holes test [`99cdfad`](https://github.com/inspect-js/object-inspect/commit/99cdfad03c6474740275a75636fe6ca86c77737a)\n- regex already work [`e324033`](https://github.com/inspect-js/object-inspect/commit/e324033267025995ec97d32ed0a65737c99477a6)\n- failing undef/null test [`1f88a00`](https://github.com/inspect-js/object-inspect/commit/1f88a00265d3209719dda8117b7e6360b4c20943)\n- holes in the all example [`7d345f3`](https://github.com/inspect-js/object-inspect/commit/7d345f3676dcbe980cff89a4f6c243269ebbb709)\n- check for .inspect(), fixes Buffer use-case [`c3f7546`](https://github.com/inspect-js/object-inspect/commit/c3f75466dbca125347d49847c05262c292f12b79)\n- fixes for holes [`ce25f73`](https://github.com/inspect-js/object-inspect/commit/ce25f736683de4b92ff27dc5471218415e2d78d8)\n- weird null behavior [`405c1ea`](https://github.com/inspect-js/object-inspect/commit/405c1ea72cd5a8cf3b498c3eaa903d01b9fbcab5)\n- tape is actually a devDependency, upgrade [`703b0ce`](https://github.com/inspect-js/object-inspect/commit/703b0ce6c5817b4245a082564bccd877e0bb6990)\n- put date in the example [`a342219`](https://github.com/inspect-js/object-inspect/commit/a3422190eeaa013215f46df2d0d37b48595ac058)\n- passing the null test [`4ab737e`](https://github.com/inspect-js/object-inspect/commit/4ab737ebf862a75d247ebe51e79307a34d6380d4)\n\n## [0.1.3](https://github.com/inspect-js/object-inspect/compare/0.1.1...0.1.3) - 2013-07-26\n\n### Commits\n\n- special isElement() check [`882768a`](https://github.com/inspect-js/object-inspect/commit/882768a54035d30747be9de1baf14e5aa0daa128)\n- oh right old IEs don't have indexOf either [`36d1275`](https://github.com/inspect-js/object-inspect/commit/36d12756c38b08a74370b0bb696c809e529913a5)\n\n## [0.1.1](https://github.com/inspect-js/object-inspect/compare/0.1.0...0.1.1) - 2013-07-26\n\n### Commits\n\n- tests! [`4422fd9`](https://github.com/inspect-js/object-inspect/commit/4422fd95532c2745aa6c4f786f35f1090be29998)\n- fix for ie&lt;9, doesn't have hasOwnProperty [`6b7d611`](https://github.com/inspect-js/object-inspect/commit/6b7d61183050f6da801ea04473211da226482613)\n- fix for all IEs: no f.name [`4e0c2f6`](https://github.com/inspect-js/object-inspect/commit/4e0c2f6dfd01c306d067d7163319acc97c94ee50)\n- badges [`5ed0d88`](https://github.com/inspect-js/object-inspect/commit/5ed0d88e4e407f9cb327fa4a146c17921f9680f3)\n\n## [0.1.0](https://github.com/inspect-js/object-inspect/compare/0.0.0...0.1.0) - 2013-07-26\n\n### Commits\n\n- [Function] for functions [`ad5c485`](https://github.com/inspect-js/object-inspect/commit/ad5c485098fc83352cb540a60b2548ca56820e0b)\n\n## 0.0.0 - 2013-07-26\n\n### Commits\n\n- working browser example [`34be6b6`](https://github.com/inspect-js/object-inspect/commit/34be6b6548f9ce92bdc3c27572857ba0c4a1218d)\n- package.json etc [`cad51f2`](https://github.com/inspect-js/object-inspect/commit/cad51f23fc6bcf1a456ed6abe16088256c2f632f)\n- docs complete [`b80cce2`](https://github.com/inspect-js/object-inspect/commit/b80cce2490c4e7183a9ee11ea89071f0abec4446)\n- circular example [`4b4a7b9`](https://github.com/inspect-js/object-inspect/commit/4b4a7b92209e4e6b4630976cb6bcd17d14165a59)\n- string rep [`7afb479`](https://github.com/inspect-js/object-inspect/commit/7afb479baa798d27f09e0a178b72ea327f60f5c8)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\CHANGELOG.md"
  },
  {
    "Content": "var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nvar quotes = {\n    __proto__: null,\n    'double': '\"',\n    single: \"'\"\n};\nvar quoteREs = {\n    __proto__: null,\n    'double': /([\"\\\\])/g,\n    single: /(['\\\\])/g\n};\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && !has(quotes, opts.quoteStyle)) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (\n        (typeof globalThis !== 'undefined' && obj === globalThis)\n        || (typeof global !== 'undefined' && obj === global)\n    ) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var style = opts.quoteStyle || defaultStyle;\n    var quoteChar = quotes[style];\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction canTrustToString(obj) {\n    return !toStringTag || !(typeof obj === 'object' && (toStringTag in obj || typeof obj[toStringTag] !== 'undefined'));\n}\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && canTrustToString(obj); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && canTrustToString(obj); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && canTrustToString(obj); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && canTrustToString(obj); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && canTrustToString(obj); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && canTrustToString(obj); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && canTrustToString(obj); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    var quoteRE = quoteREs[opts.quoteStyle || 'single'];\n    quoteRE.lastIndex = 0;\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, quoteRE, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\index.js"
  },
  {
    "Content": "'use strict';\n\nrequire('core-js');\n\nvar inspect = require('./');\nvar test = require('tape');\n\ntest('Maps', function (t) {\n    t.equal(inspect(new Map([[1, 2]])), 'Map (1) {1 => 2}');\n    t.end();\n});\n\ntest('WeakMaps', function (t) {\n    t.equal(inspect(new WeakMap([[{}, 2]])), 'WeakMap { ? }');\n    t.end();\n});\n\ntest('Sets', function (t) {\n    t.equal(inspect(new Set([[1, 2]])), 'Set (1) {[ 1, 2 ]}');\n    t.end();\n});\n\ntest('WeakSets', function (t) {\n    t.equal(inspect(new WeakSet([[1, 2]])), 'WeakSet { ? }');\n    t.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test-core-js.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test-core-js.js"
  },
  {
    "Content": "module.exports = require('util').inspect;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\util.inspect.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\util.inspect.js"
  },
  {
    "Content": "'use strict';\n\nvar inspect = require('../');\nvar Buffer = require('safer-buffer').Buffer;\n\nvar holes = ['a', 'b'];\nholes[4] = 'e';\nholes[6] = 'g';\n\nvar obj = {\n    a: 1,\n    b: [3, 4, undefined, null],\n    c: undefined,\n    d: null,\n    e: {\n        regex: /^x/i,\n        buf: Buffer.from('abc'),\n        holes: holes\n    },\n    now: new Date()\n};\nobj.self = obj;\nconsole.log(inspect(obj));\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\example\\all.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\example\\all.js"
  },
  {
    "Content": "'use strict';\n\nvar inspect = require('../');\nvar obj = { a: 1, b: [3, 4] };\nobj.c = obj;\nconsole.log(inspect(obj));\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\example\\circular.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\example\\circular.js"
  },
  {
    "Content": "'use strict';\n\nvar inspect = require('../');\nvar obj = [1, 2, function f(n) { return n + 5; }, 4];\nconsole.log(inspect(obj));\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\example\\fn.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\example\\fn.js"
  },
  {
    "Content": "'use strict';\n\n/* eslint-env browser */\nvar inspect = require('../');\n\nvar d = document.createElement('div');\nd.setAttribute('id', 'beep');\nd.innerHTML = '<b>wooo</b><i>iiiii</i>';\n\nconsole.log(inspect([d, { a: 3, b: 4, c: [5, 6, [7, [8, [9]]]] }]));\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\example\\inspect.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\example\\inspect.js"
  },
  {
    "Content": "'use strict';\n\nvar inspect = require('../');\nvar test = require('tape');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\ntest('bigint', { skip: typeof BigInt === 'undefined' }, function (t) {\n    t.test('primitives', function (st) {\n        st.plan(3);\n\n        st.equal(inspect(BigInt(-256)), '-256n');\n        st.equal(inspect(BigInt(0)), '0n');\n        st.equal(inspect(BigInt(256)), '256n');\n    });\n\n    t.test('objects', function (st) {\n        st.plan(3);\n\n        st.equal(inspect(Object(BigInt(-256))), 'Object(-256n)');\n        st.equal(inspect(Object(BigInt(0))), 'Object(0n)');\n        st.equal(inspect(Object(BigInt(256))), 'Object(256n)');\n    });\n\n    t.test('syntactic primitives', function (st) {\n        st.plan(3);\n\n        /* eslint-disable no-new-func */\n        st.equal(inspect(Function('return -256n')()), '-256n');\n        st.equal(inspect(Function('return 0n')()), '0n');\n        st.equal(inspect(Function('return 256n')()), '256n');\n    });\n\n    t.test('toStringTag', { skip: !hasToStringTag }, function (st) {\n        st.plan(1);\n\n        var faker = {};\n        faker[Symbol.toStringTag] = 'BigInt';\n        st.equal(\n            inspect(faker),\n            '{ [Symbol(Symbol.toStringTag)]: \\'BigInt\\' }',\n            'object lying about being a BigInt inspects as an object'\n        );\n    });\n\n    t.test('numericSeparator', function (st) {\n        st.equal(inspect(BigInt(0), { numericSeparator: false }), '0n', '0n, numericSeparator false');\n        st.equal(inspect(BigInt(0), { numericSeparator: true }), '0n', '0n, numericSeparator true');\n\n        st.equal(inspect(BigInt(1234), { numericSeparator: false }), '1234n', '1234n, numericSeparator false');\n        st.equal(inspect(BigInt(1234), { numericSeparator: true }), '1_234n', '1234n, numericSeparator true');\n        st.equal(inspect(BigInt(-1234), { numericSeparator: false }), '-1234n', '1234n, numericSeparator false');\n        st.equal(inspect(BigInt(-1234), { numericSeparator: true }), '-1_234n', '1234n, numericSeparator true');\n\n        st.end();\n    });\n\n    t.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\bigint.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\bigint.js"
  },
  {
    "Content": "var inspect = require('../');\nvar test = require('tape');\n\ntest('circular', function (t) {\n    t.plan(2);\n    var obj = { a: 1, b: [3, 4] };\n    obj.c = obj;\n    t.equal(inspect(obj), '{ a: 1, b: [ 3, 4 ], c: [Circular] }');\n\n    var double = {};\n    double.a = [double];\n    double.b = {};\n    double.b.inner = double.b;\n    double.b.obj = double;\n    t.equal(inspect(double), '{ a: [ [Circular] ], b: { inner: [Circular], obj: [Circular] } }');\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\circular.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\circular.js"
  },
  {
    "Content": "var inspect = require('../');\nvar test = require('tape');\n\ntest('deep', function (t) {\n    t.plan(4);\n    var obj = [[[[[[500]]]]]];\n    t.equal(inspect(obj), '[ [ [ [ [ [Array] ] ] ] ] ]');\n    t.equal(inspect(obj, { depth: 4 }), '[ [ [ [ [Array] ] ] ] ]');\n    t.equal(inspect(obj, { depth: 2 }), '[ [ [Array] ] ]');\n\n    t.equal(inspect([[[{ a: 1 }]]], { depth: 3 }), '[ [ [ [Object] ] ] ]');\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\deep.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\deep.js"
  },
  {
    "Content": "var inspect = require('../');\nvar test = require('tape');\n\ntest('element', function (t) {\n    t.plan(3);\n    var elem = {\n        nodeName: 'div',\n        attributes: [{ name: 'class', value: 'row' }],\n        getAttribute: function (key) { return key; },\n        childNodes: []\n    };\n    var obj = [1, elem, 3];\n    t.deepEqual(inspect(obj), '[ 1, <div class=\"row\"></div>, 3 ]');\n    t.deepEqual(inspect(obj, { quoteStyle: 'single' }), \"[ 1, <div class='row'></div>, 3 ]\");\n    t.deepEqual(inspect(obj, { quoteStyle: 'double' }), '[ 1, <div class=\"row\"></div>, 3 ]');\n});\n\ntest('element no attr', function (t) {\n    t.plan(1);\n    var elem = {\n        nodeName: 'div',\n        getAttribute: function (key) { return key; },\n        childNodes: []\n    };\n    var obj = [1, elem, 3];\n    t.deepEqual(inspect(obj), '[ 1, <div></div>, 3 ]');\n});\n\ntest('element with contents', function (t) {\n    t.plan(1);\n    var elem = {\n        nodeName: 'div',\n        getAttribute: function (key) { return key; },\n        childNodes: [{ nodeName: 'b' }]\n    };\n    var obj = [1, elem, 3];\n    t.deepEqual(inspect(obj), '[ 1, <div>...</div>, 3 ]');\n});\n\ntest('element instance', function (t) {\n    t.plan(1);\n    var h = global.HTMLElement;\n    global.HTMLElement = function (name, attr) {\n        this.nodeName = name;\n        this.attributes = attr;\n    };\n    global.HTMLElement.prototype.getAttribute = function () {};\n\n    var elem = new global.HTMLElement('div', []);\n    var obj = [1, elem, 3];\n    t.deepEqual(inspect(obj), '[ 1, <div></div>, 3 ]');\n    global.HTMLElement = h;\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\element.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\element.js"
  },
  {
    "Content": "var test = require('tape');\nvar ErrorWithCause = require('error-cause/Error');\n\nvar inspect = require('../');\n\ntest('type error', function (t) {\n    t.plan(1);\n    var aerr = new TypeError();\n    aerr.foo = 555;\n    aerr.bar = [1, 2, 3];\n\n    var berr = new TypeError('tuv');\n    berr.baz = 555;\n\n    var cerr = new SyntaxError();\n    cerr.message = 'whoa';\n    cerr['a-b'] = 5;\n\n    var withCause = new ErrorWithCause('foo', { cause: 'bar' });\n    var withCausePlus = new ErrorWithCause('foo', { cause: 'bar' });\n    withCausePlus.foo = 'bar';\n    var withUndefinedCause = new ErrorWithCause('foo', { cause: undefined });\n    var withEnumerableCause = new Error('foo');\n    withEnumerableCause.cause = 'bar';\n\n    var obj = [\n        new TypeError(),\n        new TypeError('xxx'),\n        aerr,\n        berr,\n        cerr,\n        withCause,\n        withCausePlus,\n        withUndefinedCause,\n        withEnumerableCause\n    ];\n    t.equal(inspect(obj), '[ ' + [\n        '[TypeError]',\n        '[TypeError: xxx]',\n        '{ [TypeError] foo: 555, bar: [ 1, 2, 3 ] }',\n        '{ [TypeError: tuv] baz: 555 }',\n        '{ [SyntaxError: whoa] message: \\'whoa\\', \\'a-b\\': 5 }',\n        'cause' in Error.prototype ? '[Error: foo]' : '{ [Error: foo] [cause]: \\'bar\\' }',\n        '{ [Error: foo] ' + ('cause' in Error.prototype ? '' : '[cause]: \\'bar\\', ') + 'foo: \\'bar\\' }',\n        'cause' in Error.prototype ? '[Error: foo]' : '{ [Error: foo] [cause]: undefined }',\n        '{ [Error: foo] cause: \\'bar\\' }'\n    ].join(', ') + ' ]');\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\err.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\err.js"
  },
  {
    "Content": "'use strict';\n\nvar inspect = require('../');\nvar test = require('tape');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar forEach = require('for-each');\n\ntest('fakes', { skip: !hasToStringTag }, function (t) {\n    forEach([\n        'Array',\n        'Boolean',\n        'Date',\n        'Error',\n        'Number',\n        'RegExp',\n        'String'\n    ], function (expected) {\n        var faker = {};\n        faker[Symbol.toStringTag] = expected;\n\n        t.equal(\n            inspect(faker),\n            '{ [Symbol(Symbol.toStringTag)]: \\'' + expected + '\\' }',\n            'faker masquerading as ' + expected + ' is not shown as one'\n        );\n    });\n\n    t.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\fakes.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\fakes.js"
  },
  {
    "Content": "var inspect = require('../');\nvar test = require('tape');\nvar arrow = require('make-arrow-function')();\nvar functionsHaveConfigurableNames = require('functions-have-names').functionsHaveConfigurableNames();\n\ntest('function', function (t) {\n    t.plan(1);\n    var obj = [1, 2, function f(n) { return n; }, 4];\n    t.equal(inspect(obj), '[ 1, 2, [Function: f], 4 ]');\n});\n\ntest('function name', function (t) {\n    t.plan(1);\n    var f = (function () {\n        return function () {};\n    }());\n    f.toString = function toStr() { return 'function xxx () {}'; };\n    var obj = [1, 2, f, 4];\n    t.equal(inspect(obj), '[ 1, 2, [Function (anonymous)] { toString: [Function: toStr] }, 4 ]');\n});\n\ntest('anon function', function (t) {\n    var f = (function () {\n        return function () {};\n    }());\n    var obj = [1, 2, f, 4];\n    t.equal(inspect(obj), '[ 1, 2, [Function (anonymous)], 4 ]');\n\n    t.end();\n});\n\ntest('arrow function', { skip: !arrow }, function (t) {\n    t.equal(inspect(arrow), '[Function (anonymous)]');\n\n    t.end();\n});\n\ntest('truly nameless function', { skip: !arrow || !functionsHaveConfigurableNames }, function (t) {\n    function f() {}\n    Object.defineProperty(f, 'name', { value: false });\n    t.equal(f.name, false);\n    t.equal(\n        inspect(f),\n        '[Function: f]',\n        'named function with falsy `.name` does not hide its original name'\n    );\n\n    function g() {}\n    Object.defineProperty(g, 'name', { value: true });\n    t.equal(g.name, true);\n    t.equal(\n        inspect(g),\n        '[Function: true]',\n        'named function with truthy `.name` hides its original name'\n    );\n\n    var anon = function () {}; // eslint-disable-line func-style\n    Object.defineProperty(anon, 'name', { value: null });\n    t.equal(anon.name, null);\n    t.equal(\n        inspect(anon),\n        '[Function (anonymous)]',\n        'anon function with falsy `.name` does not hide its anonymity'\n    );\n\n    var anon2 = function () {}; // eslint-disable-line func-style\n    Object.defineProperty(anon2, 'name', { value: 1 });\n    t.equal(anon2.name, 1);\n    t.equal(\n        inspect(anon2),\n        '[Function: 1]',\n        'anon function with truthy `.name` hides its anonymity'\n    );\n\n    t.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\fn.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\fn.js"
  },
  {
    "Content": "'use strict';\n\nvar inspect = require('../');\n\nvar test = require('tape');\nvar globalThis = require('globalthis')();\n\ntest('global object', function (t) {\n    /* eslint-env browser */\n    var expected = typeof window === 'undefined' ? 'globalThis' : 'Window';\n    t.equal(\n        inspect([globalThis]),\n        '[ { [object ' + expected + '] } ]'\n    );\n\n    t.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\global.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\global.js"
  },
  {
    "Content": "'use strict';\n\nvar inspect = require('../');\nvar test = require('tape');\nvar mockProperty = require('mock-property');\n\ntest('when Object#hasOwnProperty is deleted', function (t) {\n    t.plan(1);\n    var arr = [1, , 3]; // eslint-disable-line no-sparse-arrays\n\n    t.teardown(mockProperty(Array.prototype, 1, { value: 2 })); // this is needed to account for \"in\" vs \"hasOwnProperty\"\n    t.teardown(mockProperty(Object.prototype, 'hasOwnProperty', { 'delete': true }));\n\n    t.equal(inspect(arr), '[ 1, , 3 ]');\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\has.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\has.js"
  },
  {
    "Content": "var test = require('tape');\nvar inspect = require('../');\n\nvar xs = ['a', 'b'];\nxs[5] = 'f';\nxs[7] = 'j';\nxs[8] = 'k';\n\ntest('holes', function (t) {\n    t.plan(1);\n    t.equal(\n        inspect(xs),\n        \"[ 'a', 'b', , , , 'f', , 'j', 'k' ]\"\n    );\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\holes.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\holes.js"
  },
  {
    "Content": "var test = require('tape');\nvar forEach = require('for-each');\n\nvar inspect = require('../');\n\ntest('bad indent options', function (t) {\n    forEach([\n        undefined,\n        true,\n        false,\n        -1,\n        1.2,\n        Infinity,\n        -Infinity,\n        NaN\n    ], function (indent) {\n        t['throws'](\n            function () { inspect('', { indent: indent }); },\n            TypeError,\n            inspect(indent) + ' is invalid'\n        );\n    });\n\n    t.end();\n});\n\ntest('simple object with indent', function (t) {\n    t.plan(2);\n\n    var obj = { a: 1, b: 2 };\n\n    var expectedSpaces = [\n        '{',\n        '  a: 1,',\n        '  b: 2',\n        '}'\n    ].join('\\n');\n    var expectedTabs = [\n        '{',\n        '\ta: 1,',\n        '\tb: 2',\n        '}'\n    ].join('\\n');\n\n    t.equal(inspect(obj, { indent: 2 }), expectedSpaces, 'two');\n    t.equal(inspect(obj, { indent: '\\t' }), expectedTabs, 'tabs');\n});\n\ntest('two deep object with indent', function (t) {\n    t.plan(2);\n\n    var obj = { a: 1, b: { c: 3, d: 4 } };\n\n    var expectedSpaces = [\n        '{',\n        '  a: 1,',\n        '  b: {',\n        '    c: 3,',\n        '    d: 4',\n        '  }',\n        '}'\n    ].join('\\n');\n    var expectedTabs = [\n        '{',\n        '\ta: 1,',\n        '\tb: {',\n        '\t\tc: 3,',\n        '\t\td: 4',\n        '\t}',\n        '}'\n    ].join('\\n');\n\n    t.equal(inspect(obj, { indent: 2 }), expectedSpaces, 'two');\n    t.equal(inspect(obj, { indent: '\\t' }), expectedTabs, 'tabs');\n});\n\ntest('simple array with all single line elements', function (t) {\n    t.plan(2);\n\n    var obj = [1, 2, 3, 'asdf\\nsdf'];\n\n    var expected = '[ 1, 2, 3, \\'asdf\\\\nsdf\\' ]';\n\n    t.equal(inspect(obj, { indent: 2 }), expected, 'two');\n    t.equal(inspect(obj, { indent: '\\t' }), expected, 'tabs');\n});\n\ntest('array with complex elements', function (t) {\n    t.plan(2);\n\n    var obj = [1, { a: 1, b: { c: 1 } }, 'asdf\\nsdf'];\n\n    var expectedSpaces = [\n        '[',\n        '  1,',\n        '  {',\n        '    a: 1,',\n        '    b: {',\n        '      c: 1',\n        '    }',\n        '  },',\n        '  \\'asdf\\\\nsdf\\'',\n        ']'\n    ].join('\\n');\n    var expectedTabs = [\n        '[',\n        '\t1,',\n        '\t{',\n        '\t\ta: 1,',\n        '\t\tb: {',\n        '\t\t\tc: 1',\n        '\t\t}',\n        '\t},',\n        '\t\\'asdf\\\\nsdf\\'',\n        ']'\n    ].join('\\n');\n\n    t.equal(inspect(obj, { indent: 2 }), expectedSpaces, 'two');\n    t.equal(inspect(obj, { indent: '\\t' }), expectedTabs, 'tabs');\n});\n\ntest('values', function (t) {\n    t.plan(2);\n    var obj = [{}, [], { 'a-b': 5 }];\n\n    var expectedSpaces = [\n        '[',\n        '  {},',\n        '  [],',\n        '  {',\n        '    \\'a-b\\': 5',\n        '  }',\n        ']'\n    ].join('\\n');\n    var expectedTabs = [\n        '[',\n        '\t{},',\n        '\t[],',\n        '\t{',\n        '\t\t\\'a-b\\': 5',\n        '\t}',\n        ']'\n    ].join('\\n');\n\n    t.equal(inspect(obj, { indent: 2 }), expectedSpaces, 'two');\n    t.equal(inspect(obj, { indent: '\\t' }), expectedTabs, 'tabs');\n});\n\ntest('Map', { skip: typeof Map !== 'function' }, function (t) {\n    var map = new Map();\n    map.set({ a: 1 }, ['b']);\n    map.set(3, NaN);\n\n    var expectedStringSpaces = [\n        'Map (2) {',\n        '  { a: 1 } => [ \\'b\\' ],',\n        '  3 => NaN',\n        '}'\n    ].join('\\n');\n    var expectedStringTabs = [\n        'Map (2) {',\n        '\t{ a: 1 } => [ \\'b\\' ],',\n        '\t3 => NaN',\n        '}'\n    ].join('\\n');\n    var expectedStringTabsDoubleQuotes = [\n        'Map (2) {',\n        '\t{ a: 1 } => [ \"b\" ],',\n        '\t3 => NaN',\n        '}'\n    ].join('\\n');\n\n    t.equal(\n        inspect(map, { indent: 2 }),\n        expectedStringSpaces,\n        'Map keys are not indented (two)'\n    );\n    t.equal(\n        inspect(map, { indent: '\\t' }),\n        expectedStringTabs,\n        'Map keys are not indented (tabs)'\n    );\n    t.equal(\n        inspect(map, { indent: '\\t', quoteStyle: 'double' }),\n        expectedStringTabsDoubleQuotes,\n        'Map keys are not indented (tabs + double quotes)'\n    );\n\n    t.equal(inspect(new Map(), { indent: 2 }), 'Map (0) {}', 'empty Map should show as empty (two)');\n    t.equal(inspect(new Map(), { indent: '\\t' }), 'Map (0) {}', 'empty Map should show as empty (tabs)');\n\n    var nestedMap = new Map();\n    nestedMap.set(nestedMap, map);\n    var expectedNestedSpaces = [\n        'Map (1) {',\n        '  [Circular] => Map (2) {',\n        '    { a: 1 } => [ \\'b\\' ],',\n        '    3 => NaN',\n        '  }',\n        '}'\n    ].join('\\n');\n    var expectedNestedTabs = [\n        'Map (1) {',\n        '\t[Circular] => Map (2) {',\n        '\t\t{ a: 1 } => [ \\'b\\' ],',\n        '\t\t3 => NaN',\n        '\t}',\n        '}'\n    ].join('\\n');\n    t.equal(inspect(nestedMap, { indent: 2 }), expectedNestedSpaces, 'Map containing a Map should work (two)');\n    t.equal(inspect(nestedMap, { indent: '\\t' }), expectedNestedTabs, 'Map containing a Map should work (tabs)');\n\n    t.end();\n});\n\ntest('Set', { skip: typeof Set !== 'function' }, function (t) {\n    var set = new Set();\n    set.add({ a: 1 });\n    set.add(['b']);\n    var expectedStringSpaces = [\n        'Set (2) {',\n        '  {',\n        '    a: 1',\n        '  },',\n        '  [ \\'b\\' ]',\n        '}'\n    ].join('\\n');\n    var expectedStringTabs = [\n        'Set (2) {',\n        '\t{',\n        '\t\ta: 1',\n        '\t},',\n        '\t[ \\'b\\' ]',\n        '}'\n    ].join('\\n');\n    t.equal(inspect(set, { indent: 2 }), expectedStringSpaces, 'new Set([{ a: 1 }, [\"b\"]]) should show size and contents (two)');\n    t.equal(inspect(set, { indent: '\\t' }), expectedStringTabs, 'new Set([{ a: 1 }, [\"b\"]]) should show size and contents (tabs)');\n\n    t.equal(inspect(new Set(), { indent: 2 }), 'Set (0) {}', 'empty Set should show as empty (two)');\n    t.equal(inspect(new Set(), { indent: '\\t' }), 'Set (0) {}', 'empty Set should show as empty (tabs)');\n\n    var nestedSet = new Set();\n    nestedSet.add(set);\n    nestedSet.add(nestedSet);\n    var expectedNestedSpaces = [\n        'Set (2) {',\n        '  Set (2) {',\n        '    {',\n        '      a: 1',\n        '    },',\n        '    [ \\'b\\' ]',\n        '  },',\n        '  [Circular]',\n        '}'\n    ].join('\\n');\n    var expectedNestedTabs = [\n        'Set (2) {',\n        '\tSet (2) {',\n        '\t\t{',\n        '\t\t\ta: 1',\n        '\t\t},',\n        '\t\t[ \\'b\\' ]',\n        '\t},',\n        '\t[Circular]',\n        '}'\n    ].join('\\n');\n    t.equal(inspect(nestedSet, { indent: 2 }), expectedNestedSpaces, 'Set containing a Set should work (two)');\n    t.equal(inspect(nestedSet, { indent: '\\t' }), expectedNestedTabs, 'Set containing a Set should work (tabs)');\n\n    t.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\indent-option.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\indent-option.js"
  },
  {
    "Content": "var test = require('tape');\nvar hasSymbols = require('has-symbols/shams')();\nvar utilInspect = require('../util.inspect');\nvar repeat = require('string.prototype.repeat');\n\nvar inspect = require('..');\n\ntest('inspect', function (t) {\n    t.plan(5);\n\n    var obj = [{ inspect: function xyzInspect() { return '!XYZ¡'; } }, []];\n    var stringResult = '[ !XYZ¡, [] ]';\n    var falseResult = '[ { inspect: [Function: xyzInspect] }, [] ]';\n\n    t.equal(inspect(obj), stringResult);\n    t.equal(inspect(obj, { customInspect: true }), stringResult);\n    t.equal(inspect(obj, { customInspect: 'symbol' }), falseResult);\n    t.equal(inspect(obj, { customInspect: false }), falseResult);\n    t['throws'](\n        function () { inspect(obj, { customInspect: 'not a boolean or \"symbol\"' }); },\n        TypeError,\n        '`customInspect` must be a boolean or the string \"symbol\"'\n    );\n});\n\ntest('inspect custom symbol', { skip: !hasSymbols || !utilInspect || !utilInspect.custom }, function (t) {\n    t.plan(4);\n\n    var obj = { inspect: function stringInspect() { return 'string'; } };\n    obj[utilInspect.custom] = function custom() { return 'symbol'; };\n\n    var symbolResult = '[ symbol, [] ]';\n    var stringResult = '[ string, [] ]';\n    var falseResult = '[ { inspect: [Function: stringInspect]' + (utilInspect.custom ? ', [' + inspect(utilInspect.custom) + ']: [Function: custom]' : '') + ' }, [] ]';\n\n    var symbolStringFallback = utilInspect.custom ? symbolResult : stringResult;\n    var symbolFalseFallback = utilInspect.custom ? symbolResult : falseResult;\n\n    t.equal(inspect([obj, []]), symbolStringFallback);\n    t.equal(inspect([obj, []], { customInspect: true }), symbolStringFallback);\n    t.equal(inspect([obj, []], { customInspect: 'symbol' }), symbolFalseFallback);\n    t.equal(inspect([obj, []], { customInspect: false }), falseResult);\n});\n\ntest('symbols', { skip: !hasSymbols }, function (t) {\n    t.plan(2);\n\n    var obj = { a: 1 };\n    obj[Symbol('test')] = 2;\n    obj[Symbol.iterator] = 3;\n    Object.defineProperty(obj, Symbol('non-enum'), {\n        enumerable: false,\n        value: 4\n    });\n\n    if (typeof Symbol.iterator === 'symbol') {\n        t.equal(inspect(obj), '{ a: 1, [Symbol(test)]: 2, [Symbol(Symbol.iterator)]: 3 }', 'object with symbols');\n        t.equal(inspect([obj, []]), '[ { a: 1, [Symbol(test)]: 2, [Symbol(Symbol.iterator)]: 3 }, [] ]', 'object with symbols in array');\n    } else {\n        // symbol sham key ordering is unreliable\n        t.match(\n            inspect(obj),\n            /^(?:{ a: 1, \\[Symbol\\(test\\)\\]: 2, \\[Symbol\\(Symbol.iterator\\)\\]: 3 }|{ a: 1, \\[Symbol\\(Symbol.iterator\\)\\]: 3, \\[Symbol\\(test\\)\\]: 2 })$/,\n            'object with symbols (nondeterministic symbol sham key ordering)'\n        );\n        t.match(\n            inspect([obj, []]),\n            /^\\[ (?:{ a: 1, \\[Symbol\\(test\\)\\]: 2, \\[Symbol\\(Symbol.iterator\\)\\]: 3 }|{ a: 1, \\[Symbol\\(Symbol.iterator\\)\\]: 3, \\[Symbol\\(test\\)\\]: 2 }), \\[\\] \\]$/,\n            'object with symbols in array (nondeterministic symbol sham key ordering)'\n        );\n    }\n});\n\ntest('maxStringLength', function (t) {\n    t['throws'](\n        function () { inspect('', { maxStringLength: -1 }); },\n        TypeError,\n        'maxStringLength must be >= 0, or Infinity, not negative'\n    );\n\n    var str = repeat('a', 1e8);\n\n    t.equal(\n        inspect([str], { maxStringLength: 10 }),\n        '[ \\'aaaaaaaaaa\\'... 99999990 more characters ]',\n        'maxStringLength option limits output'\n    );\n\n    t.equal(\n        inspect(['f'], { maxStringLength: null }),\n        '[ \\'\\'... 1 more character ]',\n        'maxStringLength option accepts `null`'\n    );\n\n    t.equal(\n        inspect([str], { maxStringLength: Infinity }),\n        '[ \\'' + str + '\\' ]',\n        'maxStringLength option accepts ∞'\n    );\n\n    t.end();\n});\n\ntest('inspect options', { skip: !utilInspect.custom }, function (t) {\n    var obj = {};\n    obj[utilInspect.custom] = function () {\n        return JSON.stringify(arguments);\n    };\n    t.equal(\n        inspect(obj),\n        utilInspect(obj, { depth: 5 }),\n        'custom symbols will use node\\'s inspect'\n    );\n    t.equal(\n        inspect(obj, { depth: 2 }),\n        utilInspect(obj, { depth: 2 }),\n        'a reduced depth will be passed to node\\'s inspect'\n    );\n    t.equal(\n        inspect({ d1: obj }, { depth: 3 }),\n        '{ d1: ' + utilInspect(obj, { depth: 2 }) + ' }',\n        'deep objects will receive a reduced depth'\n    );\n    t.equal(\n        inspect({ d1: obj }, { depth: 1 }),\n        '{ d1: [Object] }',\n        'unlike nodejs inspect, customInspect will not be used once the depth is exceeded.'\n    );\n    t.end();\n});\n\ntest('inspect URL', { skip: typeof URL === 'undefined' }, function (t) {\n    t.match(\n        inspect(new URL('https://nodejs.org')),\n        /nodejs\\.org/, // Different environments stringify it differently\n        'url can be inspected'\n    );\n    t.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\inspect.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\inspect.js"
  },
  {
    "Content": "var test = require('tape');\nvar inspect = require('../');\n\nvar obj = { x: 'a\\r\\nb', y: '\\x05! \\x1f \\x12' };\n\ntest('interpolate low bytes', function (t) {\n    t.plan(1);\n    t.equal(\n        inspect(obj),\n        \"{ x: 'a\\\\r\\\\nb', y: '\\\\x05! \\\\x1F \\\\x12' }\"\n    );\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\lowbyte.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\lowbyte.js"
  },
  {
    "Content": "var test = require('tape');\nvar v = require('es-value-fixtures');\nvar forEach = require('for-each');\n\nvar inspect = require('../');\n\ntest('negative zero', function (t) {\n    t.equal(inspect(0), '0', 'inspect(0) === \"0\"');\n    t.equal(inspect(Object(0)), 'Object(0)', 'inspect(Object(0)) === \"Object(0)\"');\n\n    t.equal(inspect(-0), '-0', 'inspect(-0) === \"-0\"');\n    t.equal(inspect(Object(-0)), 'Object(-0)', 'inspect(Object(-0)) === \"Object(-0)\"');\n\n    t.end();\n});\n\ntest('numericSeparator', function (t) {\n    forEach(v.nonBooleans, function (nonBoolean) {\n        t['throws'](\n            function () { inspect(true, { numericSeparator: nonBoolean }); },\n            TypeError,\n            inspect(nonBoolean) + ' is not a boolean'\n        );\n    });\n\n    t.test('3 digit numbers', function (st) {\n        var failed = false;\n        for (var i = -999; i < 1000; i += 1) {\n            var actual = inspect(i);\n            var actualSepNo = inspect(i, { numericSeparator: false });\n            var actualSepYes = inspect(i, { numericSeparator: true });\n            var expected = String(i);\n            if (actual !== expected || actualSepNo !== expected || actualSepYes !== expected) {\n                failed = true;\n                t.equal(actual, expected);\n                t.equal(actualSepNo, expected);\n                t.equal(actualSepYes, expected);\n            }\n        }\n\n        st.notOk(failed, 'all 3 digit numbers passed');\n\n        st.end();\n    });\n\n    t.equal(inspect(1e3), '1000', '1000');\n    t.equal(inspect(1e3, { numericSeparator: false }), '1000', '1000, numericSeparator false');\n    t.equal(inspect(1e3, { numericSeparator: true }), '1_000', '1000, numericSeparator true');\n    t.equal(inspect(-1e3), '-1000', '-1000');\n    t.equal(inspect(-1e3, { numericSeparator: false }), '-1000', '-1000, numericSeparator false');\n    t.equal(inspect(-1e3, { numericSeparator: true }), '-1_000', '-1000, numericSeparator true');\n\n    t.equal(inspect(1234.5678, { numericSeparator: true }), '1_234.567_8', 'fractional numbers get separators');\n    t.equal(inspect(1234.56789, { numericSeparator: true }), '1_234.567_89', 'fractional numbers get separators');\n    t.equal(inspect(1234.567891, { numericSeparator: true }), '1_234.567_891', 'fractional numbers get separators');\n\n    t.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\number.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\number.js"
  },
  {
    "Content": "'use strict';\n\nvar inspect = require('../');\nvar test = require('tape');\n\ntest('quoteStyle option', function (t) {\n    t['throws'](function () { inspect(null, { quoteStyle: false }); }, 'false is not a valid value');\n    t['throws'](function () { inspect(null, { quoteStyle: true }); }, 'true is not a valid value');\n    t['throws'](function () { inspect(null, { quoteStyle: '' }); }, '\"\" is not a valid value');\n    t['throws'](function () { inspect(null, { quoteStyle: {} }); }, '{} is not a valid value');\n    t['throws'](function () { inspect(null, { quoteStyle: [] }); }, '[] is not a valid value');\n    t['throws'](function () { inspect(null, { quoteStyle: 42 }); }, '42 is not a valid value');\n    t['throws'](function () { inspect(null, { quoteStyle: NaN }); }, 'NaN is not a valid value');\n    t['throws'](function () { inspect(null, { quoteStyle: function () {} }); }, 'a function is not a valid value');\n\n    t.equal(inspect('\"', { quoteStyle: 'single' }), '\\'\"\\'', 'double quote, quoteStyle: \"single\"');\n    t.equal(inspect('\"', { quoteStyle: 'double' }), '\"\\\\\"\"', 'double quote, quoteStyle: \"double\"');\n\n    t.equal(inspect('\\'', { quoteStyle: 'single' }), '\\'\\\\\\'\\'', 'single quote, quoteStyle: \"single\"');\n    t.equal(inspect('\\'', { quoteStyle: 'double' }), '\"\\'\"', 'single quote, quoteStyle: \"double\"');\n\n    t.equal(inspect('`', { quoteStyle: 'single' }), '\\'`\\'', 'backtick, quoteStyle: \"single\"');\n    t.equal(inspect('`', { quoteStyle: 'double' }), '\"`\"', 'backtick, quoteStyle: \"double\"');\n\n    t.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\quoteStyle.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\quoteStyle.js"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar inspect = require('../');\n\ntest('Symbol.toStringTag', { skip: !hasToStringTag }, function (t) {\n    t.plan(4);\n\n    var obj = { a: 1 };\n    t.equal(inspect(obj), '{ a: 1 }', 'object, no Symbol.toStringTag');\n\n    obj[Symbol.toStringTag] = 'foo';\n    t.equal(inspect(obj), '{ a: 1, [Symbol(Symbol.toStringTag)]: \\'foo\\' }', 'object with Symbol.toStringTag');\n\n    t.test('null objects', { skip: 'toString' in { __proto__: null } }, function (st) {\n        st.plan(2);\n\n        var dict = { __proto__: null, a: 1 };\n        st.equal(inspect(dict), '[Object: null prototype] { a: 1 }', 'null object with Symbol.toStringTag');\n\n        dict[Symbol.toStringTag] = 'Dict';\n        st.equal(inspect(dict), '[Dict: null prototype] { a: 1, [Symbol(Symbol.toStringTag)]: \\'Dict\\' }', 'null object with Symbol.toStringTag');\n    });\n\n    t.test('instances', function (st) {\n        st.plan(4);\n\n        function C() {\n            this.a = 1;\n        }\n        st.equal(Object.prototype.toString.call(new C()), '[object Object]', 'instance, no toStringTag, Object.prototype.toString');\n        st.equal(inspect(new C()), 'C { a: 1 }', 'instance, no toStringTag');\n\n        C.prototype[Symbol.toStringTag] = 'Class!';\n        st.equal(Object.prototype.toString.call(new C()), '[object Class!]', 'instance, with toStringTag, Object.prototype.toString');\n        st.equal(inspect(new C()), 'C [Class!] { a: 1 }', 'instance, with toStringTag');\n    });\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\toStringTag.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\toStringTag.js"
  },
  {
    "Content": "var test = require('tape');\nvar inspect = require('../');\n\nvar obj = { a: 1, b: [3, 4, undefined, null], c: undefined, d: null };\n\ntest('undef and null', function (t) {\n    t.plan(1);\n    t.equal(\n        inspect(obj),\n        '{ a: 1, b: [ 3, 4, undefined, null ], c: undefined, d: null }'\n    );\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\undef.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\undef.js"
  },
  {
    "Content": "'use strict';\n\nvar inspect = require('../');\nvar test = require('tape');\nvar mockProperty = require('mock-property');\nvar hasSymbols = require('has-symbols/shams')();\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar forEach = require('for-each');\nvar semver = require('semver');\n\ntest('values', function (t) {\n    t.plan(1);\n    var obj = [{}, [], { 'a-b': 5 }];\n    t.equal(inspect(obj), '[ {}, [], { \\'a-b\\': 5 } ]');\n});\n\ntest('arrays with properties', function (t) {\n    t.plan(1);\n    var arr = [3];\n    arr.foo = 'bar';\n    var obj = [1, 2, arr];\n    obj.baz = 'quux';\n    obj.index = -1;\n    t.equal(inspect(obj), '[ 1, 2, [ 3, foo: \\'bar\\' ], baz: \\'quux\\', index: -1 ]');\n});\n\ntest('has', function (t) {\n    t.plan(1);\n    t.teardown(mockProperty(Object.prototype, 'hasOwnProperty', { 'delete': true }));\n\n    t.equal(inspect({ a: 1, b: 2 }), '{ a: 1, b: 2 }');\n});\n\ntest('indexOf seen', function (t) {\n    t.plan(1);\n    var xs = [1, 2, 3, {}];\n    xs.push(xs);\n\n    var seen = [];\n    seen.indexOf = undefined;\n\n    t.equal(\n        inspect(xs, {}, 0, seen),\n        '[ 1, 2, 3, {}, [Circular] ]'\n    );\n});\n\ntest('seen seen', function (t) {\n    t.plan(1);\n    var xs = [1, 2, 3];\n\n    var seen = [xs];\n    seen.indexOf = undefined;\n\n    t.equal(\n        inspect(xs, {}, 0, seen),\n        '[Circular]'\n    );\n});\n\ntest('seen seen seen', function (t) {\n    t.plan(1);\n    var xs = [1, 2, 3];\n\n    var seen = [5, xs];\n    seen.indexOf = undefined;\n\n    t.equal(\n        inspect(xs, {}, 0, seen),\n        '[Circular]'\n    );\n});\n\ntest('symbols', { skip: !hasSymbols }, function (t) {\n    var sym = Symbol('foo');\n    t.equal(inspect(sym), 'Symbol(foo)', 'Symbol(\"foo\") should be \"Symbol(foo)\"');\n    if (typeof sym === 'symbol') {\n        // Symbol shams are incapable of differentiating boxed from unboxed symbols\n        t.equal(inspect(Object(sym)), 'Object(Symbol(foo))', 'Object(Symbol(\"foo\")) should be \"Object(Symbol(foo))\"');\n    }\n\n    t.test('toStringTag', { skip: !hasToStringTag }, function (st) {\n        st.plan(1);\n\n        var faker = {};\n        faker[Symbol.toStringTag] = 'Symbol';\n        st.equal(\n            inspect(faker),\n            '{ [Symbol(Symbol.toStringTag)]: \\'Symbol\\' }',\n            'object lying about being a Symbol inspects as an object'\n        );\n    });\n\n    t.end();\n});\n\ntest('Map', { skip: typeof Map !== 'function' }, function (t) {\n    var map = new Map();\n    map.set({ a: 1 }, ['b']);\n    map.set(3, NaN);\n    var expectedString = 'Map (2) {' + inspect({ a: 1 }) + ' => ' + inspect(['b']) + ', 3 => NaN}';\n    t.equal(inspect(map), expectedString, 'new Map([[{ a: 1 }, [\"b\"]], [3, NaN]]) should show size and contents');\n    t.equal(inspect(new Map()), 'Map (0) {}', 'empty Map should show as empty');\n\n    var nestedMap = new Map();\n    nestedMap.set(nestedMap, map);\n    t.equal(inspect(nestedMap), 'Map (1) {[Circular] => ' + expectedString + '}', 'Map containing a Map should work');\n\n    t.end();\n});\n\ntest('WeakMap', { skip: typeof WeakMap !== 'function' }, function (t) {\n    var map = new WeakMap();\n    map.set({ a: 1 }, ['b']);\n    var expectedString = 'WeakMap { ? }';\n    t.equal(inspect(map), expectedString, 'new WeakMap([[{ a: 1 }, [\"b\"]]]) should not show size or contents');\n    t.equal(inspect(new WeakMap()), 'WeakMap { ? }', 'empty WeakMap should not show as empty');\n\n    t.end();\n});\n\ntest('Set', { skip: typeof Set !== 'function' }, function (t) {\n    var set = new Set();\n    set.add({ a: 1 });\n    set.add(['b']);\n    var expectedString = 'Set (2) {' + inspect({ a: 1 }) + ', ' + inspect(['b']) + '}';\n    t.equal(inspect(set), expectedString, 'new Set([{ a: 1 }, [\"b\"]]) should show size and contents');\n    t.equal(inspect(new Set()), 'Set (0) {}', 'empty Set should show as empty');\n\n    var nestedSet = new Set();\n    nestedSet.add(set);\n    nestedSet.add(nestedSet);\n    t.equal(inspect(nestedSet), 'Set (2) {' + expectedString + ', [Circular]}', 'Set containing a Set should work');\n\n    t.end();\n});\n\ntest('WeakSet', { skip: typeof WeakSet !== 'function' }, function (t) {\n    var map = new WeakSet();\n    map.add({ a: 1 });\n    var expectedString = 'WeakSet { ? }';\n    t.equal(inspect(map), expectedString, 'new WeakSet([{ a: 1 }]) should not show size or contents');\n    t.equal(inspect(new WeakSet()), 'WeakSet { ? }', 'empty WeakSet should not show as empty');\n\n    t.end();\n});\n\ntest('WeakRef', { skip: typeof WeakRef !== 'function' }, function (t) {\n    var ref = new WeakRef({ a: 1 });\n    var expectedString = 'WeakRef { ? }';\n    t.equal(inspect(ref), expectedString, 'new WeakRef({ a: 1 }) should not show contents');\n\n    t.end();\n});\n\ntest('FinalizationRegistry', { skip: typeof FinalizationRegistry !== 'function' }, function (t) {\n    var registry = new FinalizationRegistry(function () {});\n    var expectedString = 'FinalizationRegistry [FinalizationRegistry] {}';\n    t.equal(inspect(registry), expectedString, 'new FinalizationRegistry(function () {}) should work normallys');\n\n    t.end();\n});\n\ntest('Strings', function (t) {\n    var str = 'abc';\n\n    t.equal(inspect(str), \"'\" + str + \"'\", 'primitive string shows as such');\n    t.equal(inspect(str, { quoteStyle: 'single' }), \"'\" + str + \"'\", 'primitive string shows as such, single quoted');\n    t.equal(inspect(str, { quoteStyle: 'double' }), '\"' + str + '\"', 'primitive string shows as such, double quoted');\n    t.equal(inspect(Object(str)), 'Object(' + inspect(str) + ')', 'String object shows as such');\n    t.equal(inspect(Object(str), { quoteStyle: 'single' }), 'Object(' + inspect(str, { quoteStyle: 'single' }) + ')', 'String object shows as such, single quoted');\n    t.equal(inspect(Object(str), { quoteStyle: 'double' }), 'Object(' + inspect(str, { quoteStyle: 'double' }) + ')', 'String object shows as such, double quoted');\n\n    t.end();\n});\n\ntest('Numbers', function (t) {\n    var num = 42;\n\n    t.equal(inspect(num), String(num), 'primitive number shows as such');\n    t.equal(inspect(Object(num)), 'Object(' + inspect(num) + ')', 'Number object shows as such');\n\n    t.end();\n});\n\ntest('Booleans', function (t) {\n    t.equal(inspect(true), String(true), 'primitive true shows as such');\n    t.equal(inspect(Object(true)), 'Object(' + inspect(true) + ')', 'Boolean object true shows as such');\n\n    t.equal(inspect(false), String(false), 'primitive false shows as such');\n    t.equal(inspect(Object(false)), 'Object(' + inspect(false) + ')', 'Boolean false object shows as such');\n\n    t.end();\n});\n\ntest('Date', function (t) {\n    var now = new Date();\n    t.equal(inspect(now), String(now), 'Date shows properly');\n    t.equal(inspect(new Date(NaN)), 'Invalid Date', 'Invalid Date shows properly');\n\n    t.end();\n});\n\ntest('RegExps', function (t) {\n    t.equal(inspect(/a/g), '/a/g', 'regex shows properly');\n    t.equal(inspect(new RegExp('abc', 'i')), '/abc/i', 'new RegExp shows properly');\n\n    var match = 'abc abc'.match(/[ab]+/);\n    delete match.groups; // for node < 10\n    t.equal(inspect(match), '[ \\'ab\\', index: 0, input: \\'abc abc\\' ]', 'RegExp match object shows properly');\n\n    t.end();\n});\n\ntest('Proxies', { skip: typeof Proxy !== 'function' || !hasToStringTag }, function (t) {\n    var target = { proxy: true };\n    var fake = new Proxy(target, { has: function () { return false; } });\n\n    // needed to work around a weird difference in node v6.0 - v6.4 where non-present properties are not logged\n    var isNode60 = semver.satisfies(process.version, '6.0 - 6.4');\n\n    forEach([\n        'Boolean',\n        'Number',\n        'String',\n        'Symbol',\n        'Date'\n    ], function (tag) {\n        target[Symbol.toStringTag] = tag;\n\n        t.equal(\n            inspect(fake),\n            '{ ' + (isNode60 ? '' : 'proxy: true, ') + '[Symbol(Symbol.toStringTag)]: \\'' + tag + '\\' }',\n            'Proxy for + ' + tag + ' shows as the target, which has no slots'\n        );\n    });\n\n    t.end();\n});\n\ntest('fakers', { skip: !hasToStringTag }, function (t) {\n    var target = { proxy: false };\n\n    forEach([\n        'Boolean',\n        'Number',\n        'String',\n        'Symbol',\n        'Date'\n    ], function (tag) {\n        target[Symbol.toStringTag] = tag;\n\n        t.equal(\n            inspect(target),\n            '{ proxy: false, [Symbol(Symbol.toStringTag)]: \\'' + tag + '\\' }',\n            'Object pretending to be ' + tag + ' does not trick us'\n        );\n    });\n\n    t.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\values.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\values.js"
  },
  {
    "Content": "var inspect = require('../../');\nvar test = require('tape');\n\ntest('dom element', function (t) {\n    t.plan(1);\n\n    var d = document.createElement('div');\n    d.setAttribute('id', 'beep');\n    d.innerHTML = '<b>wooo</b><i>iiiii</i>';\n\n    t.equal(\n        inspect([d, { a: 3, b: 4, c: [5, 6, [7, [8, [9]]]] }]),\n        '[ <div id=\"beep\">...</div>, { a: 3, b: 4, c: [ 5, 6, [ 7, [ 8, [Object] ] ] ] } ]'\n    );\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\object-inspect\\test\\browser\\dom.js",
    "RelativePath": "tools\\backend\\node_modules\\object-inspect\\test\\browser\\dom.js"
  },
  {
    "Content": "2.4.1 / 2022-02-22\n==================\n\n  * Fix error on early async hooks implementations\n\n2.4.0 / 2022-02-21\n==================\n\n  * Prevent loss of async hooks context\n\n2.3.0 / 2015-05-26\n==================\n\n  * Add defined behavior for HTTP `CONNECT` requests\n  * Add defined behavior for HTTP `Upgrade` requests\n  * deps: ee-first@1.1.1\n\n2.2.1 / 2015-04-22\n==================\n\n  * Fix `isFinished(req)` when data buffered\n\n2.2.0 / 2014-12-22\n==================\n\n  * Add message object to callback arguments\n\n2.1.1 / 2014-10-22\n==================\n\n  * Fix handling of pipelined requests\n\n2.1.0 / 2014-08-16\n==================\n\n  * Check if `socket` is detached\n  * Return `undefined` for `isFinished` if state unknown\n\n2.0.0 / 2014-08-16\n==================\n\n  * Add `isFinished` function\n  * Move to `jshttp` organization\n  * Remove support for plain socket argument\n  * Rename to `on-finished`\n  * Support both `req` and `res` as arguments\n  * deps: ee-first@1.0.5\n\n1.2.2 / 2014-06-10\n==================\n\n  * Reduce listeners added to emitters\n    - avoids \"event emitter leak\" warnings when used multiple times on same request\n\n1.2.1 / 2014-06-08\n==================\n\n  * Fix returned value when already finished\n\n1.2.0 / 2014-06-05\n==================\n\n  * Call callback when called on already-finished socket\n\n1.1.4 / 2014-05-27\n==================\n\n  * Support node.js 0.8\n\n1.1.3 / 2014-04-30\n==================\n\n  * Make sure errors passed as instanceof `Error`\n\n1.1.2 / 2014-04-18\n==================\n\n  * Default the `socket` to passed-in object\n\n1.1.1 / 2014-01-16\n==================\n\n  * Rename module to `finished`\n\n1.1.0 / 2013-12-25\n==================\n\n  * Call callback when called on already-errored socket\n\n1.0.1 / 2013-12-20\n==================\n\n  * Actually pass the error to the callback\n\n1.0.0 / 2013-12-20\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\on-finished\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\on-finished\\HISTORY.md"
  },
  {
    "Content": "/*!\n * on-finished\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = onFinished\nmodule.exports.isFinished = isFinished\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar asyncHooks = tryRequireAsyncHooks()\nvar first = require('ee-first')\n\n/**\n * Variables.\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\n\n/**\n * Invoke callback when the response has finished, useful for\n * cleaning up resources afterwards.\n *\n * @param {object} msg\n * @param {function} listener\n * @return {object}\n * @public\n */\n\nfunction onFinished (msg, listener) {\n  if (isFinished(msg) !== false) {\n    defer(listener, null, msg)\n    return msg\n  }\n\n  // attach the listener to the message\n  attachListener(msg, wrap(listener))\n\n  return msg\n}\n\n/**\n * Determine if message is already finished.\n *\n * @param {object} msg\n * @return {boolean}\n * @public\n */\n\nfunction isFinished (msg) {\n  var socket = msg.socket\n\n  if (typeof msg.finished === 'boolean') {\n    // OutgoingMessage\n    return Boolean(msg.finished || (socket && !socket.writable))\n  }\n\n  if (typeof msg.complete === 'boolean') {\n    // IncomingMessage\n    return Boolean(msg.upgrade || !socket || !socket.readable || (msg.complete && !msg.readable))\n  }\n\n  // don't know\n  return undefined\n}\n\n/**\n * Attach a finished listener to the message.\n *\n * @param {object} msg\n * @param {function} callback\n * @private\n */\n\nfunction attachFinishedListener (msg, callback) {\n  var eeMsg\n  var eeSocket\n  var finished = false\n\n  function onFinish (error) {\n    eeMsg.cancel()\n    eeSocket.cancel()\n\n    finished = true\n    callback(error)\n  }\n\n  // finished on first message event\n  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish)\n\n  function onSocket (socket) {\n    // remove listener\n    msg.removeListener('socket', onSocket)\n\n    if (finished) return\n    if (eeMsg !== eeSocket) return\n\n    // finished on first socket event\n    eeSocket = first([[socket, 'error', 'close']], onFinish)\n  }\n\n  if (msg.socket) {\n    // socket already assigned\n    onSocket(msg.socket)\n    return\n  }\n\n  // wait for socket to be assigned\n  msg.on('socket', onSocket)\n\n  if (msg.socket === undefined) {\n    // istanbul ignore next: node.js 0.8 patch\n    patchAssignSocket(msg, onSocket)\n  }\n}\n\n/**\n * Attach the listener to the message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction attachListener (msg, listener) {\n  var attached = msg.__onFinished\n\n  // create a private single listener with queue\n  if (!attached || !attached.queue) {\n    attached = msg.__onFinished = createListener(msg)\n    attachFinishedListener(msg, attached)\n  }\n\n  attached.queue.push(listener)\n}\n\n/**\n * Create listener on message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction createListener (msg) {\n  function listener (err) {\n    if (msg.__onFinished === listener) msg.__onFinished = null\n    if (!listener.queue) return\n\n    var queue = listener.queue\n    listener.queue = null\n\n    for (var i = 0; i < queue.length; i++) {\n      queue[i](err, msg)\n    }\n  }\n\n  listener.queue = []\n\n  return listener\n}\n\n/**\n * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\n *\n * @param {ServerResponse} res\n * @param {function} callback\n * @private\n */\n\n// istanbul ignore next: node.js 0.8 patch\nfunction patchAssignSocket (res, callback) {\n  var assignSocket = res.assignSocket\n\n  if (typeof assignSocket !== 'function') return\n\n  // res.on('socket', callback) is broken in 0.8\n  res.assignSocket = function _assignSocket (socket) {\n    assignSocket.call(this, socket)\n    callback(socket)\n  }\n}\n\n/**\n * Try to require async_hooks\n * @private\n */\n\nfunction tryRequireAsyncHooks () {\n  try {\n    return require('async_hooks')\n  } catch (e) {\n    return {}\n  }\n}\n\n/**\n * Wrap function with async resource, if possible.\n * AsyncResource.bind static method backported.\n * @private\n */\n\nfunction wrap (fn) {\n  var res\n\n  // create anonymous resource\n  if (asyncHooks.AsyncResource) {\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\n  }\n\n  // incompatible node.js\n  if (!res || !res.runInAsyncScope) {\n    return fn\n  }\n\n  // return bound function\n  return res.runInAsyncScope.bind(res, fn, null)\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\on-finished\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\on-finished\\index.js"
  },
  {
    "Content": "# on-finished\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Node.js Version][node-image]][node-url]\n[![Build Status][ci-image]][ci-url]\n[![Coverage Status][coveralls-image]][coveralls-url]\n\nExecute a callback when a HTTP request closes, finishes, or errors.\n\n## Install\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install on-finished\n```\n\n## API\n\n```js\nvar onFinished = require('on-finished')\n```\n\n### onFinished(res, listener)\n\nAttach a listener to listen for the response to finish. The listener will\nbe invoked only once when the response finished. If the response finished\nto an error, the first argument will contain the error. If the response\nhas already finished, the listener will be invoked.\n\nListening to the end of a response would be used to close things associated\nwith the response, like open files.\n\nListener is invoked as `listener(err, res)`.\n\n<!-- eslint-disable handle-callback-err -->\n\n```js\nonFinished(res, function (err, res) {\n  // clean up open fds, etc.\n  // err contains the error if request error'd\n})\n```\n\n### onFinished(req, listener)\n\nAttach a listener to listen for the request to finish. The listener will\nbe invoked only once when the request finished. If the request finished\nto an error, the first argument will contain the error. If the request\nhas already finished, the listener will be invoked.\n\nListening to the end of a request would be used to know when to continue\nafter reading the data.\n\nListener is invoked as `listener(err, req)`.\n\n<!-- eslint-disable handle-callback-err -->\n\n```js\nvar data = ''\n\nreq.setEncoding('utf8')\nreq.on('data', function (str) {\n  data += str\n})\n\nonFinished(req, function (err, req) {\n  // data is read unless there is err\n})\n```\n\n### onFinished.isFinished(res)\n\nDetermine if `res` is already finished. This would be useful to check and\nnot even start certain operations if the response has already finished.\n\n### onFinished.isFinished(req)\n\nDetermine if `req` is already finished. This would be useful to check and\nnot even start certain operations if the request has already finished.\n\n## Special Node.js requests\n\n### HTTP CONNECT method\n\nThe meaning of the `CONNECT` method from RFC 7231, section 4.3.6:\n\n> The CONNECT method requests that the recipient establish a tunnel to\n> the destination origin server identified by the request-target and,\n> if successful, thereafter restrict its behavior to blind forwarding\n> of packets, in both directions, until the tunnel is closed.  Tunnels\n> are commonly used to create an end-to-end virtual connection, through\n> one or more proxies, which can then be secured using TLS (Transport\n> Layer Security, [RFC5246]).\n\nIn Node.js, these request objects come from the `'connect'` event on\nthe HTTP server.\n\nWhen this module is used on a HTTP `CONNECT` request, the request is\nconsidered \"finished\" immediately, **due to limitations in the Node.js\ninterface**. This means if the `CONNECT` request contains a request entity,\nthe request will be considered \"finished\" even before it has been read.\n\nThere is no such thing as a response object to a `CONNECT` request in\nNode.js, so there is no support for one.\n\n### HTTP Upgrade request\n\nThe meaning of the `Upgrade` header from RFC 7230, section 6.1:\n\n> The \"Upgrade\" header field is intended to provide a simple mechanism\n> for transitioning from HTTP/1.1 to some other protocol on the same\n> connection.\n\nIn Node.js, these request objects come from the `'upgrade'` event on\nthe HTTP server.\n\nWhen this module is used on a HTTP request with an `Upgrade` header, the\nrequest is considered \"finished\" immediately, **due to limitations in the\nNode.js interface**. This means if the `Upgrade` request contains a request\nentity, the request will be considered \"finished\" even before it has been\nread.\n\nThere is no such thing as a response object to a `Upgrade` request in\nNode.js, so there is no support for one.\n\n## Example\n\nThe following code ensures that file descriptors are always closed\nonce the response finishes.\n\n```js\nvar destroy = require('destroy')\nvar fs = require('fs')\nvar http = require('http')\nvar onFinished = require('on-finished')\n\nhttp.createServer(function onRequest (req, res) {\n  var stream = fs.createReadStream('package.json')\n  stream.pipe(res)\n  onFinished(res, function () {\n    destroy(stream)\n  })\n})\n```\n\n## License\n\n[MIT](LICENSE)\n\n[ci-image]: https://badgen.net/github/checks/jshttp/on-finished/master?label=ci\n[ci-url]: https://github.com/jshttp/on-finished/actions/workflows/ci.yml\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/on-finished/master\n[coveralls-url]: https://coveralls.io/r/jshttp/on-finished?branch=master\n[node-image]: https://badgen.net/npm/node/on-finished\n[node-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/on-finished\n[npm-url]: https://npmjs.org/package/on-finished\n[npm-version-image]: https://badgen.net/npm/v/on-finished\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\on-finished\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\on-finished\\README.md"
  },
  {
    "Content": "1.3.3 / 2019-04-15\n==================\n\n  * Fix Node.js 0.8 return value inconsistencies\n\n1.3.2 / 2017-09-09\n==================\n\n  * perf: reduce overhead for full URLs\n  * perf: unroll the \"fast-path\" `RegExp`\n\n1.3.1 / 2016-01-17\n==================\n\n  * perf: enable strict mode\n\n1.3.0 / 2014-08-09\n==================\n\n  * Add `parseurl.original` for parsing `req.originalUrl` with fallback\n  * Return `undefined` if `req.url` is `undefined`\n\n1.2.0 / 2014-07-21\n==================\n\n  * Cache URLs based on original value\n  * Remove no-longer-needed URL mis-parse work-around\n  * Simplify the \"fast-path\" `RegExp`\n\n1.1.3 / 2014-07-08\n==================\n\n  * Fix typo\n\n1.1.2 / 2014-07-08\n==================\n\n  * Seriously fix Node.js 0.8 compatibility\n\n1.1.1 / 2014-07-08\n==================\n\n  * Fix Node.js 0.8 compatibility\n\n1.1.0 / 2014-07-08\n==================\n\n  * Incorporate URL href-only parse fast-path\n\n1.0.1 / 2014-03-08\n==================\n\n  * Add missing `require`\n\n1.0.0 / 2014-03-08\n==================\n\n  * Genesis from `connect`\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\parseurl\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\parseurl\\HISTORY.md"
  },
  {
    "Content": "/*!\n * parseurl\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar url = require('url')\nvar parse = url.parse\nvar Url = url.Url\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = parseurl\nmodule.exports.original = originalurl\n\n/**\n * Parse the `req` url with memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction parseurl (req) {\n  var url = req.url\n\n  if (url === undefined) {\n    // URL is undefined\n    return undefined\n  }\n\n  var parsed = req._parsedUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedUrl = parsed)\n};\n\n/**\n * Parse the `req` original url with fallback and memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction originalurl (req) {\n  var url = req.originalUrl\n\n  if (typeof url !== 'string') {\n    // Fallback\n    return parseurl(req)\n  }\n\n  var parsed = req._parsedOriginalUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedOriginalUrl = parsed)\n};\n\n/**\n * Parse the `str` url with fast-path short-cut.\n *\n * @param {string} str\n * @return {Object}\n * @private\n */\n\nfunction fastparse (str) {\n  if (typeof str !== 'string' || str.charCodeAt(0) !== 0x2f /* / */) {\n    return parse(str)\n  }\n\n  var pathname = str\n  var query = null\n  var search = null\n\n  // This takes the regexp from https://github.com/joyent/node/pull/7878\n  // Which is /^(\\/[^?#\\s]*)(\\?[^#\\s]*)?$/\n  // And unrolls it into a for loop\n  for (var i = 1; i < str.length; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x3f: /* ?  */\n        if (search === null) {\n          pathname = str.substring(0, i)\n          query = str.substring(i + 1)\n          search = str.substring(i)\n        }\n        break\n      case 0x09: /* \\t */\n      case 0x0a: /* \\n */\n      case 0x0c: /* \\f */\n      case 0x0d: /* \\r */\n      case 0x20: /*    */\n      case 0x23: /* #  */\n      case 0xa0:\n      case 0xfeff:\n        return parse(str)\n    }\n  }\n\n  var url = Url !== undefined\n    ? new Url()\n    : {}\n\n  url.path = str\n  url.href = str\n  url.pathname = pathname\n\n  if (search !== null) {\n    url.query = query\n    url.search = search\n  }\n\n  return url\n}\n\n/**\n * Determine if parsed is still fresh for url.\n *\n * @param {string} url\n * @param {object} parsedUrl\n * @return {boolean}\n * @private\n */\n\nfunction fresh (url, parsedUrl) {\n  return typeof parsedUrl === 'object' &&\n    parsedUrl !== null &&\n    (Url === undefined || parsedUrl instanceof Url) &&\n    parsedUrl._raw === url\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\parseurl\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\parseurl\\index.js"
  },
  {
    "Content": "# parseurl\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Node.js Version][node-image]][node-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nParse a URL with memoization.\n\n## Install\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install parseurl\n```\n\n## API\n\n```js\nvar parseurl = require('parseurl')\n```\n\n### parseurl(req)\n\nParse the URL of the given request object (looks at the `req.url` property)\nand return the result. The result is the same as `url.parse` in Node.js core.\nCalling this function multiple times on the same `req` where `req.url` does\nnot change will return a cached parsed object, rather than parsing again.\n\n### parseurl.original(req)\n\nParse the original URL of the given request object and return the result.\nThis works by trying to parse `req.originalUrl` if it is a string, otherwise\nparses `req.url`. The result is the same as `url.parse` in Node.js core.\nCalling this function multiple times on the same `req` where `req.originalUrl`\ndoes not change will return a cached parsed object, rather than parsing again.\n\n## Benchmark\n\n```bash\n$ npm run-script bench\n\n> parseurl@1.3.3 bench nodejs-parseurl\n> node benchmark/index.js\n\n  http_parser@2.8.0\n  node@10.6.0\n  v8@6.7.288.46-node.13\n  uv@1.21.0\n  zlib@1.2.11\n  ares@1.14.0\n  modules@64\n  nghttp2@1.32.0\n  napi@3\n  openssl@1.1.0h\n  icu@61.1\n  unicode@10.0\n  cldr@33.0\n  tz@2018c\n\n> node benchmark/fullurl.js\n\n  Parsing URL \"http://localhost:8888/foo/bar?user=tj&pet=fluffy\"\n\n  4 tests completed.\n\n  fasturl            x 2,207,842 ops/sec ±3.76% (184 runs sampled)\n  nativeurl - legacy x   507,180 ops/sec ±0.82% (191 runs sampled)\n  nativeurl - whatwg x   290,044 ops/sec ±1.96% (189 runs sampled)\n  parseurl           x   488,907 ops/sec ±2.13% (192 runs sampled)\n\n> node benchmark/pathquery.js\n\n  Parsing URL \"/foo/bar?user=tj&pet=fluffy\"\n\n  4 tests completed.\n\n  fasturl            x 3,812,564 ops/sec ±3.15% (188 runs sampled)\n  nativeurl - legacy x 2,651,631 ops/sec ±1.68% (189 runs sampled)\n  nativeurl - whatwg x   161,837 ops/sec ±2.26% (189 runs sampled)\n  parseurl           x 4,166,338 ops/sec ±2.23% (184 runs sampled)\n\n> node benchmark/samerequest.js\n\n  Parsing URL \"/foo/bar?user=tj&pet=fluffy\" on same request object\n\n  4 tests completed.\n\n  fasturl            x  3,821,651 ops/sec ±2.42% (185 runs sampled)\n  nativeurl - legacy x  2,651,162 ops/sec ±1.90% (187 runs sampled)\n  nativeurl - whatwg x    175,166 ops/sec ±1.44% (188 runs sampled)\n  parseurl           x 14,912,606 ops/sec ±3.59% (183 runs sampled)\n\n> node benchmark/simplepath.js\n\n  Parsing URL \"/foo/bar\"\n\n  4 tests completed.\n\n  fasturl            x 12,421,765 ops/sec ±2.04% (191 runs sampled)\n  nativeurl - legacy x  7,546,036 ops/sec ±1.41% (188 runs sampled)\n  nativeurl - whatwg x    198,843 ops/sec ±1.83% (189 runs sampled)\n  parseurl           x 24,244,006 ops/sec ±0.51% (194 runs sampled)\n\n> node benchmark/slash.js\n\n  Parsing URL \"/\"\n\n  4 tests completed.\n\n  fasturl            x 17,159,456 ops/sec ±3.25% (188 runs sampled)\n  nativeurl - legacy x 11,635,097 ops/sec ±3.79% (184 runs sampled)\n  nativeurl - whatwg x    240,693 ops/sec ±0.83% (189 runs sampled)\n  parseurl           x 42,279,067 ops/sec ±0.55% (190 runs sampled)\n```\n\n## License\n\n  [MIT](LICENSE)\n\n[coveralls-image]: https://badgen.net/coveralls/c/github/pillarjs/parseurl/master\n[coveralls-url]: https://coveralls.io/r/pillarjs/parseurl?branch=master\n[node-image]: https://badgen.net/npm/node/parseurl\n[node-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/parseurl\n[npm-url]: https://npmjs.org/package/parseurl\n[npm-version-image]: https://badgen.net/npm/v/parseurl\n[travis-image]: https://badgen.net/travis/pillarjs/parseurl/master\n[travis-url]: https://travis-ci.org/pillarjs/parseurl\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\parseurl\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\parseurl\\README.md"
  },
  {
    "Content": "/**\n * Expose `pathToRegexp`.\n */\n\nmodule.exports = pathToRegexp;\n\n/**\n * Match matching groups in a regular expression.\n */\nvar MATCHING_GROUP_REGEXP = /\\\\.|\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n/**\n * Normalize the given path string,\n * returning a regular expression.\n *\n * An empty array should be passed,\n * which will contain the placeholder\n * key names. For example \"/user/:id\" will\n * then contain [\"id\"].\n *\n * @param  {String|RegExp|Array} path\n * @param  {Array} keys\n * @param  {Object} options\n * @return {RegExp}\n * @api private\n */\n\nfunction pathToRegexp(path, keys, options) {\n  options = options || {};\n  keys = keys || [];\n  var strict = options.strict;\n  var end = options.end !== false;\n  var flags = options.sensitive ? '' : 'i';\n  var lookahead = options.lookahead !== false;\n  var extraOffset = 0;\n  var keysOffset = keys.length;\n  var i = 0;\n  var name = 0;\n  var pos = 0;\n  var backtrack = '';\n  var m;\n\n  if (path instanceof RegExp) {\n    while (m = MATCHING_GROUP_REGEXP.exec(path.source)) {\n      if (m[0][0] === '\\\\') continue;\n\n      keys.push({\n        name: m[1] || name++,\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    return path;\n  }\n\n  if (Array.isArray(path)) {\n    // Map array parts into regexps and return their source. We also pass\n    // the same keys and options instance into every generation to get\n    // consistent matching groups before we join the sources together.\n    path = path.map(function (value) {\n      return pathToRegexp(value, keys, options).source;\n    });\n\n    return new RegExp(path.join('|'), flags);\n  }\n\n  if (typeof path !== 'string') {\n    throw new TypeError('path must be a string, array of strings, or regular expression');\n  }\n\n  path = path.replace(\n    /\\\\.|(\\/)?(\\.)?:(\\w+)(\\(.*?\\))?(\\*)?(\\?)?|[.*]|\\/\\(/g,\n    function (match, slash, format, key, capture, star, optional, offset) {\n      if (match[0] === '\\\\') {\n        backtrack += match;\n        pos += 2;\n        return match;\n      }\n\n      if (match === '.') {\n        backtrack += '\\\\.';\n        extraOffset += 1;\n        pos += 1;\n        return '\\\\.';\n      }\n\n      if (slash || format) {\n        backtrack = '';\n      } else {\n        backtrack += path.slice(pos, offset);\n      }\n\n      pos = offset + match.length;\n\n      if (match === '*') {\n        extraOffset += 3;\n        return '(.*)';\n      }\n\n      if (match === '/(') {\n        backtrack += '/';\n        extraOffset += 2;\n        return '/(?:';\n      }\n\n      slash = slash || '';\n      format = format ? '\\\\.' : '';\n      optional = optional || '';\n      capture = capture ?\n        capture.replace(/\\\\.|\\*/, function (m) { return m === '*' ? '(.*)' : m; }) :\n        (backtrack ? '((?:(?!/|' + backtrack + ').)+?)' : '([^/' + format + ']+?)');\n\n      keys.push({\n        name: key,\n        optional: !!optional,\n        offset: offset + extraOffset\n      });\n\n      var result = '(?:'\n        + format + slash + capture\n        + (star ? '((?:[/' + format + '].+?)?)' : '')\n        + ')'\n        + optional;\n\n      extraOffset += result.length - match.length;\n\n      return result;\n    });\n\n  // This is a workaround for handling unnamed matching groups.\n  while (m = MATCHING_GROUP_REGEXP.exec(path)) {\n    if (m[0][0] === '\\\\') continue;\n\n    if (keysOffset + i === keys.length || keys[keysOffset + i].offset > m.index) {\n      keys.splice(keysOffset + i, 0, {\n        name: name++, // Unnamed matching groups must be consistently linear.\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    i++;\n  }\n\n  path += strict ? '' : path[path.length - 1] === '/' ? '?' : '/?';\n\n  // If the path is non-ending, match until the end or a slash.\n  if (end) {\n    path += '$';\n  } else if (path[path.length - 1] !== '/') {\n    path += lookahead ? '(?=/|$)' : '(?:/|$)';\n  }\n\n  return new RegExp('^' + path, flags);\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\path-to-regexp\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\path-to-regexp\\index.js"
  },
  {
    "Content": "# Path-to-RegExp\n\nTurn an Express-style path string such as `/user/:name` into a regular expression.\n\n**Note:** This is a legacy branch. You should upgrade to `1.x`.\n\n## Usage\n\n```javascript\nvar pathToRegexp = require('path-to-regexp');\n```\n\n### pathToRegexp(path, keys, options)\n\n - **path** A string in the express format, an array of such strings, or a regular expression\n - **keys** An array to be populated with the keys present in the url.  Once the function completes, this will be an array of strings.\n - **options**\n   - **options.sensitive** Defaults to false, set this to true to make routes case sensitive\n   - **options.strict** Defaults to false, set this to true to make the trailing slash matter.\n   - **options.end** Defaults to true, set this to false to only match the prefix of the URL.\n\n```javascript\nvar keys = [];\nvar exp = pathToRegexp('/foo/:bar', keys);\n//keys = ['bar']\n//exp = /^\\/foo\\/(?:([^\\/]+?))\\/?$/i\n```\n\n## Live Demo\n\nYou can see a live demo of this library in use at [express-route-tester](http://forbeslindesay.github.com/express-route-tester/).\n\n## License\n\n  MIT\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\path-to-regexp\\Readme.md",
    "RelativePath": "tools\\backend\\node_modules\\path-to-regexp\\Readme.md"
  },
  {
    "Content": "2.0.7 / 2021-05-31\n==================\n\n  * deps: forwarded@0.2.0\n    - Use `req.socket` over deprecated `req.connection`\n\n2.0.6 / 2020-02-24\n==================\n\n  * deps: ipaddr.js@1.9.1\n\n2.0.5 / 2019-04-16\n==================\n\n  * deps: ipaddr.js@1.9.0\n\n2.0.4 / 2018-07-26\n==================\n\n  * deps: ipaddr.js@1.8.0\n\n2.0.3 / 2018-02-19\n==================\n\n  * deps: ipaddr.js@1.6.0\n\n2.0.2 / 2017-09-24\n==================\n\n  * deps: forwarded@~0.1.2\n    - perf: improve header parsing\n    - perf: reduce overhead when no `X-Forwarded-For` header\n\n2.0.1 / 2017-09-10\n==================\n\n  * deps: forwarded@~0.1.1\n    - Fix trimming leading / trailing OWS\n    - perf: hoist regular expression\n  * deps: ipaddr.js@1.5.2\n\n2.0.0 / 2017-08-08\n==================\n\n  * Drop support for Node.js below 0.10\n\n1.1.5 / 2017-07-25\n==================\n\n  * Fix array argument being altered\n  * deps: ipaddr.js@1.4.0\n\n1.1.4 / 2017-03-24\n==================\n\n  * deps: ipaddr.js@1.3.0\n\n1.1.3 / 2017-01-14\n==================\n\n  * deps: ipaddr.js@1.2.0\n\n1.1.2 / 2016-05-29\n==================\n\n  * deps: ipaddr.js@1.1.1\n    - Fix IPv6-mapped IPv4 validation edge cases\n\n1.1.1 / 2016-05-03\n==================\n\n  * Fix regression matching mixed versions against multiple subnets\n\n1.1.0 / 2016-05-01\n==================\n\n  * Fix accepting various invalid netmasks\n    - IPv4 netmasks must be contingous\n    - IPv6 addresses cannot be used as a netmask\n  * deps: ipaddr.js@1.1.0\n\n1.0.10 / 2015-12-09\n===================\n\n  * deps: ipaddr.js@1.0.5\n    - Fix regression in `isValid` with non-string arguments\n\n1.0.9 / 2015-12-01\n==================\n\n  * deps: ipaddr.js@1.0.4\n    - Fix accepting some invalid IPv6 addresses\n    - Reject CIDRs with negative or overlong masks\n  * perf: enable strict mode\n\n1.0.8 / 2015-05-10\n==================\n\n  * deps: ipaddr.js@1.0.1\n\n1.0.7 / 2015-03-16\n==================\n\n  * deps: ipaddr.js@0.1.9\n    - Fix OOM on certain inputs to `isValid`\n\n1.0.6 / 2015-02-01\n==================\n\n  * deps: ipaddr.js@0.1.8\n\n1.0.5 / 2015-01-08\n==================\n\n  * deps: ipaddr.js@0.1.6\n\n1.0.4 / 2014-11-23\n==================\n\n  * deps: ipaddr.js@0.1.5\n    - Fix edge cases with `isValid`\n\n1.0.3 / 2014-09-21\n==================\n\n  * Use `forwarded` npm module\n\n1.0.2 / 2014-09-18\n==================\n\n  * Fix a global leak when multiple subnets are trusted\n  * Support Node.js 0.6\n  * deps: ipaddr.js@0.1.3\n\n1.0.1 / 2014-06-03\n==================\n\n  * Fix links in npm package\n\n1.0.0 / 2014-05-08\n==================\n\n  * Add `trust` argument to determine proxy trust on\n    * Accepts custom function\n    * Accepts IPv4/IPv6 address(es)\n    * Accepts subnets\n    * Accepts pre-defined names\n  * Add optional `trust` argument to `proxyaddr.all` to\n    stop at first untrusted\n  * Add `proxyaddr.compile` to pre-compile `trust` function\n    to make subsequent calls faster\n\n0.0.1 / 2014-05-04\n==================\n\n  * Fix bad npm publish\n\n0.0.0 / 2014-05-04\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\proxy-addr\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\proxy-addr\\HISTORY.md"
  },
  {
    "Content": "/*!\n * proxy-addr\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = proxyaddr\nmodule.exports.all = alladdrs\nmodule.exports.compile = compile\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar forwarded = require('forwarded')\nvar ipaddr = require('ipaddr.js')\n\n/**\n * Variables.\n * @private\n */\n\nvar DIGIT_REGEXP = /^[0-9]+$/\nvar isip = ipaddr.isValid\nvar parseip = ipaddr.parse\n\n/**\n * Pre-defined IP ranges.\n * @private\n */\n\nvar IP_RANGES = {\n  linklocal: ['169.254.0.0/16', 'fe80::/10'],\n  loopback: ['127.0.0.1/8', '::1/128'],\n  uniquelocal: ['10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fc00::/7']\n}\n\n/**\n * Get all addresses in the request, optionally stopping\n * at the first untrusted.\n *\n * @param {Object} request\n * @param {Function|Array|String} [trust]\n * @public\n */\n\nfunction alladdrs (req, trust) {\n  // get addresses\n  var addrs = forwarded(req)\n\n  if (!trust) {\n    // Return all addresses\n    return addrs\n  }\n\n  if (typeof trust !== 'function') {\n    trust = compile(trust)\n  }\n\n  for (var i = 0; i < addrs.length - 1; i++) {\n    if (trust(addrs[i], i)) continue\n\n    addrs.length = i + 1\n  }\n\n  return addrs\n}\n\n/**\n * Compile argument into trust function.\n *\n * @param {Array|String} val\n * @private\n */\n\nfunction compile (val) {\n  if (!val) {\n    throw new TypeError('argument is required')\n  }\n\n  var trust\n\n  if (typeof val === 'string') {\n    trust = [val]\n  } else if (Array.isArray(val)) {\n    trust = val.slice()\n  } else {\n    throw new TypeError('unsupported trust argument')\n  }\n\n  for (var i = 0; i < trust.length; i++) {\n    val = trust[i]\n\n    if (!Object.prototype.hasOwnProperty.call(IP_RANGES, val)) {\n      continue\n    }\n\n    // Splice in pre-defined range\n    val = IP_RANGES[val]\n    trust.splice.apply(trust, [i, 1].concat(val))\n    i += val.length - 1\n  }\n\n  return compileTrust(compileRangeSubnets(trust))\n}\n\n/**\n * Compile `arr` elements into range subnets.\n *\n * @param {Array} arr\n * @private\n */\n\nfunction compileRangeSubnets (arr) {\n  var rangeSubnets = new Array(arr.length)\n\n  for (var i = 0; i < arr.length; i++) {\n    rangeSubnets[i] = parseipNotation(arr[i])\n  }\n\n  return rangeSubnets\n}\n\n/**\n * Compile range subnet array into trust function.\n *\n * @param {Array} rangeSubnets\n * @private\n */\n\nfunction compileTrust (rangeSubnets) {\n  // Return optimized function based on length\n  var len = rangeSubnets.length\n  return len === 0\n    ? trustNone\n    : len === 1\n      ? trustSingle(rangeSubnets[0])\n      : trustMulti(rangeSubnets)\n}\n\n/**\n * Parse IP notation string into range subnet.\n *\n * @param {String} note\n * @private\n */\n\nfunction parseipNotation (note) {\n  var pos = note.lastIndexOf('/')\n  var str = pos !== -1\n    ? note.substring(0, pos)\n    : note\n\n  if (!isip(str)) {\n    throw new TypeError('invalid IP address: ' + str)\n  }\n\n  var ip = parseip(str)\n\n  if (pos === -1 && ip.kind() === 'ipv6' && ip.isIPv4MappedAddress()) {\n    // Store as IPv4\n    ip = ip.toIPv4Address()\n  }\n\n  var max = ip.kind() === 'ipv6'\n    ? 128\n    : 32\n\n  var range = pos !== -1\n    ? note.substring(pos + 1, note.length)\n    : null\n\n  if (range === null) {\n    range = max\n  } else if (DIGIT_REGEXP.test(range)) {\n    range = parseInt(range, 10)\n  } else if (ip.kind() === 'ipv4' && isip(range)) {\n    range = parseNetmask(range)\n  } else {\n    range = null\n  }\n\n  if (range <= 0 || range > max) {\n    throw new TypeError('invalid range on address: ' + note)\n  }\n\n  return [ip, range]\n}\n\n/**\n * Parse netmask string into CIDR range.\n *\n * @param {String} netmask\n * @private\n */\n\nfunction parseNetmask (netmask) {\n  var ip = parseip(netmask)\n  var kind = ip.kind()\n\n  return kind === 'ipv4'\n    ? ip.prefixLengthFromSubnetMask()\n    : null\n}\n\n/**\n * Determine address of proxied request.\n *\n * @param {Object} request\n * @param {Function|Array|String} trust\n * @public\n */\n\nfunction proxyaddr (req, trust) {\n  if (!req) {\n    throw new TypeError('req argument is required')\n  }\n\n  if (!trust) {\n    throw new TypeError('trust argument is required')\n  }\n\n  var addrs = alladdrs(req, trust)\n  var addr = addrs[addrs.length - 1]\n\n  return addr\n}\n\n/**\n * Static trust function to trust nothing.\n *\n * @private\n */\n\nfunction trustNone () {\n  return false\n}\n\n/**\n * Compile trust function for multiple subnets.\n *\n * @param {Array} subnets\n * @private\n */\n\nfunction trustMulti (subnets) {\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var ipconv\n    var kind = ip.kind()\n\n    for (var i = 0; i < subnets.length; i++) {\n      var subnet = subnets[i]\n      var subnetip = subnet[0]\n      var subnetkind = subnetip.kind()\n      var subnetrange = subnet[1]\n      var trusted = ip\n\n      if (kind !== subnetkind) {\n        if (subnetkind === 'ipv4' && !ip.isIPv4MappedAddress()) {\n          // Incompatible IP addresses\n          continue\n        }\n\n        if (!ipconv) {\n          // Convert IP to match subnet IP kind\n          ipconv = subnetkind === 'ipv4'\n            ? ip.toIPv4Address()\n            : ip.toIPv4MappedAddress()\n        }\n\n        trusted = ipconv\n      }\n\n      if (trusted.match(subnetip, subnetrange)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Compile trust function for single subnet.\n *\n * @param {Object} subnet\n * @private\n */\n\nfunction trustSingle (subnet) {\n  var subnetip = subnet[0]\n  var subnetkind = subnetip.kind()\n  var subnetisipv4 = subnetkind === 'ipv4'\n  var subnetrange = subnet[1]\n\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var kind = ip.kind()\n\n    if (kind !== subnetkind) {\n      if (subnetisipv4 && !ip.isIPv4MappedAddress()) {\n        // Incompatible IP addresses\n        return false\n      }\n\n      // Convert IP to match subnet IP kind\n      ip = subnetisipv4\n        ? ip.toIPv4Address()\n        : ip.toIPv4MappedAddress()\n    }\n\n    return ip.match(subnetip, subnetrange)\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\proxy-addr\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\proxy-addr\\index.js"
  },
  {
    "Content": "# proxy-addr\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Node.js Version][node-image]][node-url]\n[![Build Status][ci-image]][ci-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nDetermine address of proxied request\n\n## Install\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install proxy-addr\n```\n\n## API\n\n```js\nvar proxyaddr = require('proxy-addr')\n```\n\n### proxyaddr(req, trust)\n\nReturn the address of the request, using the given `trust` parameter.\n\nThe `trust` argument is a function that returns `true` if you trust\nthe address, `false` if you don't. The closest untrusted address is\nreturned.\n\n```js\nproxyaddr(req, function (addr) { return addr === '127.0.0.1' })\nproxyaddr(req, function (addr, i) { return i < 1 })\n```\n\nThe `trust` arugment may also be a single IP address string or an\narray of trusted addresses, as plain IP addresses, CIDR-formatted\nstrings, or IP/netmask strings.\n\n```js\nproxyaddr(req, '127.0.0.1')\nproxyaddr(req, ['127.0.0.0/8', '10.0.0.0/8'])\nproxyaddr(req, ['127.0.0.0/255.0.0.0', '192.168.0.0/255.255.0.0'])\n```\n\nThis module also supports IPv6. Your IPv6 addresses will be normalized\nautomatically (i.e. `fe80::00ed:1` equals `fe80:0:0:0:0:0:ed:1`).\n\n```js\nproxyaddr(req, '::1')\nproxyaddr(req, ['::1/128', 'fe80::/10'])\n```\n\nThis module will automatically work with IPv4-mapped IPv6 addresses\nas well to support node.js in IPv6-only mode. This means that you do\nnot have to specify both `::ffff:a00:1` and `10.0.0.1`.\n\nAs a convenience, this module also takes certain pre-defined names\nin addition to IP addresses, which expand into IP addresses:\n\n```js\nproxyaddr(req, 'loopback')\nproxyaddr(req, ['loopback', 'fc00:ac:1ab5:fff::1/64'])\n```\n\n  * `loopback`: IPv4 and IPv6 loopback addresses (like `::1` and\n    `127.0.0.1`).\n  * `linklocal`: IPv4 and IPv6 link-local addresses (like\n    `fe80::1:1:1:1` and `169.254.0.1`).\n  * `uniquelocal`: IPv4 private addresses and IPv6 unique-local\n    addresses (like `fc00:ac:1ab5:fff::1` and `192.168.0.1`).\n\nWhen `trust` is specified as a function, it will be called for each\naddress to determine if it is a trusted address. The function is\ngiven two arguments: `addr` and `i`, where `addr` is a string of\nthe address to check and `i` is a number that represents the distance\nfrom the socket address.\n\n### proxyaddr.all(req, [trust])\n\nReturn all the addresses of the request, optionally stopping at the\nfirst untrusted. This array is ordered from closest to furthest\n(i.e. `arr[0] === req.connection.remoteAddress`).\n\n```js\nproxyaddr.all(req)\n```\n\nThe optional `trust` argument takes the same arguments as `trust`\ndoes in `proxyaddr(req, trust)`.\n\n```js\nproxyaddr.all(req, 'loopback')\n```\n\n### proxyaddr.compile(val)\n\nCompiles argument `val` into a `trust` function. This function takes\nthe same arguments as `trust` does in `proxyaddr(req, trust)` and\nreturns a function suitable for `proxyaddr(req, trust)`.\n\n```js\nvar trust = proxyaddr.compile('loopback')\nvar addr = proxyaddr(req, trust)\n```\n\nThis function is meant to be optimized for use against every request.\nIt is recommend to compile a trust function up-front for the trusted\nconfiguration and pass that to `proxyaddr(req, trust)` for each request.\n\n## Testing\n\n```sh\n$ npm test\n```\n\n## Benchmarks\n\n```sh\n$ npm run-script bench\n```\n\n## License\n\n[MIT](LICENSE)\n\n[ci-image]: https://badgen.net/github/checks/jshttp/proxy-addr/master?label=ci\n[ci-url]: https://github.com/jshttp/proxy-addr/actions?query=workflow%3Aci\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/proxy-addr/master\n[coveralls-url]: https://coveralls.io/r/jshttp/proxy-addr?branch=master\n[node-image]: https://badgen.net/npm/node/proxy-addr\n[node-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/proxy-addr\n[npm-url]: https://npmjs.org/package/proxy-addr\n[npm-version-image]: https://badgen.net/npm/v/proxy-addr\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\proxy-addr\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\proxy-addr\\README.md"
  },
  {
    "Content": "## **6.13.0**\n- [New] `parse`: add `strictDepth` option (#511)\n- [Tests] use `npm audit` instead of `aud`\n\n## **6.12.3**\n- [Fix] `parse`: properly account for `strictNullHandling` when `allowEmptyArrays`\n- [meta] fix changelog indentation\n\n## **6.12.2**\n- [Fix] `parse`: parse encoded square brackets (#506)\n- [readme] add CII best practices badge\n\n## **6.12.1**\n- [Fix] `parse`: Disable `decodeDotInKeys` by default to restore previous behavior (#501)\n- [Performance] `utils`: Optimize performance under large data volumes, reduce memory usage, and speed up processing (#502)\n- [Refactor] `utils`: use `+=`\n- [Tests] increase coverage\n\n## **6.12.0**\n\n- [New] `parse`/`stringify`: add `decodeDotInKeys`/`encodeDotKeys` options (#488)\n- [New] `parse`: add `duplicates` option\n- [New] `parse`/`stringify`: add `allowEmptyArrays` option to allow [] in object values (#487)\n- [Refactor] `parse`/`stringify`: move allowDots config logic to its own variable\n- [Refactor] `stringify`: move option-handling code into `normalizeStringifyOptions`\n- [readme] update readme, add logos (#484)\n- [readme] `stringify`: clarify default `arrayFormat` behavior\n- [readme] fix line wrapping\n- [readme] remove dead badges\n- [Deps] update `side-channel`\n- [meta] make the dist build 50% smaller\n- [meta] add `sideEffects` flag\n- [meta] run build in prepack, not prepublish\n- [Tests] `parse`: remove useless tests; add coverage\n- [Tests] `stringify`: increase coverage\n- [Tests] use `mock-property`\n- [Tests] `stringify`: improve coverage\n- [Dev Deps] update `@ljharb/eslint-config `, `aud`, `has-override-mistake`, `has-property-descriptors`, `mock-property`, `npmignore`, `object-inspect`, `tape`\n- [Dev Deps] pin `glob`, since v10.3.8+ requires a broken `jackspeak`\n- [Dev Deps] pin `jackspeak` since 2.1.2+ depends on npm aliases, which kill the install process in npm < 6\n\n## **6.11.2**\n- [Fix] `parse`: Fix parsing when the global Object prototype is frozen (#473)\n- [Tests] add passing test cases with empty keys (#473)\n\n## **6.11.1**\n- [Fix] `stringify`: encode comma values more consistently (#463)\n- [readme] add usage of `filter` option for injecting custom serialization, i.e. of custom types (#447)\n- [meta] remove extraneous code backticks (#457)\n- [meta] fix changelog markdown\n- [actions] update checkout action\n- [actions] restrict action permissions\n- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `object-inspect`, `tape`\n\n## **6.11.0**\n- [New] [Fix] `stringify`: revert 0e903c0; add `commaRoundTrip` option (#442)\n- [readme] fix version badge\n\n## **6.10.5**\n- [Fix] `stringify`: with `arrayFormat: comma`, properly include an explicit `[]` on a single-item array (#434)\n\n## **6.10.4**\n- [Fix] `stringify`: with `arrayFormat: comma`, include an explicit `[]` on a single-item array (#441)\n- [meta] use `npmignore` to autogenerate an npmignore file\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `has-symbol`, `object-inspect`, `tape`\n\n## **6.10.3**\n- [Fix] `parse`: ignore `__proto__` keys (#428)\n- [Robustness] `stringify`: avoid relying on a global `undefined` (#427)\n- [actions] reuse common workflows\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `object-inspect`, `tape`\n\n## **6.10.2**\n- [Fix] `stringify`: actually fix cyclic references (#426)\n- [Fix] `stringify`: avoid encoding arrayformat comma when `encodeValuesOnly = true` (#424)\n- [readme] remove travis badge; add github actions/codecov badges; update URLs\n- [Docs] add note and links for coercing primitive values (#408)\n- [actions] update codecov uploader\n- [actions] update workflows\n- [Tests] clean up stringify tests slightly\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `object-inspect`, `safe-publish-latest`, `tape`\n\n## **6.10.1**\n- [Fix] `stringify`: avoid exception on repeated object values (#402)\n\n## **6.10.0**\n- [New] `stringify`: throw on cycles, instead of an infinite loop (#395, #394, #393)\n- [New] `parse`: add `allowSparse` option for collapsing arrays with missing indices (#312)\n- [meta] fix README.md (#399)\n- [meta] only run `npm run dist` in publish, not install\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `has-symbols`, `tape`\n- [Tests] fix tests on node v0.6\n- [Tests] use `ljharb/actions/node/install` instead of `ljharb/actions/node/run`\n- [Tests] Revert \"[meta] ignore eclint transitive audit warning\"\n\n## **6.9.7**\n- [Fix] `parse`: ignore `__proto__` keys (#428)\n- [Fix] `stringify`: avoid encoding arrayformat comma when `encodeValuesOnly = true` (#424)\n- [Robustness] `stringify`: avoid relying on a global `undefined` (#427)\n- [readme] remove travis badge; add github actions/codecov badges; update URLs\n- [Docs] add note and links for coercing primitive values (#408)\n- [Tests] clean up stringify tests slightly\n- [meta] fix README.md (#399)\n- Revert \"[meta] ignore eclint transitive audit warning\"\n- [actions] backport actions from main\n- [Dev Deps] backport updates from main\n\n## **6.9.6**\n- [Fix] restore `dist` dir; mistakenly removed in d4f6c32\n\n## **6.9.5**\n- [Fix] `stringify`: do not encode parens for RFC1738\n- [Fix] `stringify`: fix arrayFormat comma with empty array/objects (#350)\n- [Refactor] `format`: remove `util.assign` call\n- [meta] add \"Allow Edits\" workflow; update rebase workflow\n- [actions] switch Automatic Rebase workflow to `pull_request_target` event\n- [Tests] `stringify`: add tests for #378\n- [Tests] migrate tests to Github Actions\n- [Tests] run `nyc` on all tests; use `tape` runner\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `browserify`, `mkdirp`, `object-inspect`, `tape`; add `aud`\n\n## **6.9.4**\n- [Fix] `stringify`: when `arrayFormat` is `comma`, respect `serializeDate` (#364)\n- [Refactor] `stringify`: reduce branching (part of #350)\n- [Refactor] move `maybeMap` to `utils`\n- [Dev Deps] update `browserify`, `tape`\n\n## **6.9.3**\n- [Fix] proper comma parsing of URL-encoded commas (#361)\n- [Fix] parses comma delimited array while having percent-encoded comma treated as normal text (#336)\n\n## **6.9.2**\n- [Fix] `parse`: Fix parsing array from object with `comma` true (#359)\n- [Fix] `parse`: throw a TypeError instead of an Error for bad charset (#349)\n- [meta] ignore eclint transitive audit warning\n- [meta] fix indentation in package.json\n- [meta] add tidelift marketing copy\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `object-inspect`, `has-symbols`, `tape`, `mkdirp`, `iconv-lite`\n- [actions] add automatic rebasing / merge commit blocking\n\n## **6.9.1**\n- [Fix] `parse`: with comma true, handle field that holds an array of arrays (#335)\n- [Fix] `parse`: with comma true, do not split non-string values (#334)\n- [meta] add `funding` field\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`\n- [Tests] use shared travis-ci config\n\n## **6.9.0**\n- [New] `parse`/`stringify`: Pass extra key/value argument to `decoder` (#333)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `evalmd`\n- [Tests] `parse`: add passing `arrayFormat` tests\n- [Tests] add `posttest` using `npx aud` to run `npm audit` without a lockfile\n- [Tests] up to `node` `v12.10`, `v11.15`, `v10.16`, `v8.16`\n- [Tests] `Buffer.from` in node v5.0-v5.9 and v4.0-v4.4 requires a TypedArray\n\n## **6.8.3**\n- [Fix] `parse`: ignore `__proto__` keys (#428)\n- [Robustness] `stringify`: avoid relying on a global `undefined` (#427)\n- [Fix] `stringify`: avoid encoding arrayformat comma when `encodeValuesOnly = true` (#424)\n- [readme] remove travis badge; add github actions/codecov badges; update URLs\n- [Tests] clean up stringify tests slightly\n- [Docs] add note and links for coercing primitive values (#408)\n- [meta] fix README.md (#399)\n- [actions] backport actions from main\n- [Dev Deps] backport updates from main\n- [Refactor] `stringify`: reduce branching\n- [meta] do not publish workflow files\n\n## **6.8.2**\n- [Fix] proper comma parsing of URL-encoded commas (#361)\n- [Fix] parses comma delimited array while having percent-encoded comma treated as normal text (#336)\n\n## **6.8.1**\n- [Fix] `parse`: Fix parsing array from object with `comma` true (#359)\n- [Fix] `parse`: throw a TypeError instead of an Error for bad charset (#349)\n- [Fix] `parse`: with comma true, handle field that holds an array of arrays (#335)\n- [fix] `parse`: with comma true, do not split non-string values (#334)\n- [meta] add tidelift marketing copy\n- [meta] add `funding` field\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `tape`, `safe-publish-latest`, `evalmd`, `has-symbols`, `iconv-lite`, `mkdirp`, `object-inspect`\n- [Tests] `parse`: add passing `arrayFormat` tests\n- [Tests] use shared travis-ci configs\n- [Tests] `Buffer.from` in node v5.0-v5.9 and v4.0-v4.4 requires a TypedArray\n- [actions] add automatic rebasing / merge commit blocking\n\n## **6.8.0**\n- [New] add `depth=false` to preserve the original key; [Fix] `depth=0` should preserve the original key (#326)\n- [New] [Fix] stringify symbols and bigints\n- [Fix] ensure node 0.12 can stringify Symbols\n- [Fix] fix for an impossible situation: when the formatter is called with a non-string value\n- [Refactor] `formats`: tiny bit of cleanup.\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `browserify`, `safe-publish-latest`, `iconv-lite`, `tape`\n- [Tests] add tests for `depth=0` and `depth=false` behavior, both current and intuitive/intended (#326)\n- [Tests] use `eclint` instead of `editorconfig-tools`\n- [docs] readme: add security note\n- [meta] add github sponsorship\n- [meta] add FUNDING.yml\n- [meta] Clean up license text so it’s properly detected as BSD-3-Clause\n\n## **6.7.3**\n- [Fix] `parse`: ignore `__proto__` keys (#428)\n- [Fix] `stringify`: avoid encoding arrayformat comma when `encodeValuesOnly = true` (#424)\n- [Robustness] `stringify`: avoid relying on a global `undefined` (#427)\n- [readme] remove travis badge; add github actions/codecov badges; update URLs\n- [Docs] add note and links for coercing primitive values (#408)\n- [meta] fix README.md (#399)\n- [meta] do not publish workflow files\n- [actions] backport actions from main\n- [Dev Deps] backport updates from main\n- [Tests] use `nyc` for coverage\n- [Tests] clean up stringify tests slightly\n\n## **6.7.2**\n- [Fix] proper comma parsing of URL-encoded commas (#361)\n- [Fix] parses comma delimited array while having percent-encoded comma treated as normal text (#336)\n\n## **6.7.1**\n- [Fix] `parse`: Fix parsing array from object with `comma` true (#359)\n- [Fix] `parse`: with comma true, handle field that holds an array of arrays (#335)\n- [fix] `parse`: with comma true, do not split non-string values (#334)\n- [Fix] `parse`: throw a TypeError instead of an Error for bad charset (#349)\n- [Fix] fix for an impossible situation: when the formatter is called with a non-string value\n- [Refactor] `formats`: tiny bit of cleanup.\n- readme: add security note\n- [meta] add tidelift marketing copy\n- [meta] add `funding` field\n- [meta] add FUNDING.yml\n- [meta] Clean up license text so it’s properly detected as BSD-3-Clause\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `tape`, `safe-publish-latest`, `evalmd`, `iconv-lite`, `mkdirp`, `object-inspect`, `browserify`\n- [Tests] `parse`: add passing `arrayFormat` tests\n- [Tests] use shared travis-ci configs\n- [Tests] `Buffer.from` in node v5.0-v5.9 and v4.0-v4.4 requires a TypedArray\n- [Tests] add tests for `depth=0` and `depth=false` behavior, both current and intuitive/intended\n- [Tests] use `eclint` instead of `editorconfig-tools`\n- [actions] add automatic rebasing / merge commit blocking\n\n## **6.7.0**\n- [New] `stringify`/`parse`: add `comma` as an `arrayFormat` option (#276, #219)\n- [Fix] correctly parse nested arrays (#212)\n- [Fix] `utils.merge`: avoid a crash with a null target and a truthy non-array source, also with an array source\n- [Robustness] `stringify`: cache `Object.prototype.hasOwnProperty`\n- [Refactor] `utils`: `isBuffer`: small tweak; add tests\n- [Refactor] use cached `Array.isArray`\n- [Refactor] `parse`/`stringify`: make a function to normalize the options\n- [Refactor] `utils`: reduce observable [[Get]]s\n- [Refactor] `stringify`/`utils`: cache `Array.isArray`\n- [Tests] always use `String(x)` over `x.toString()`\n- [Tests] fix Buffer tests to work in node < 4.5 and node < 5.10\n- [Tests] temporarily allow coverage to fail\n\n## **6.6.1**\n- [Fix] `parse`: ignore `__proto__` keys (#428)\n- [Fix] fix for an impossible situation: when the formatter is called with a non-string value\n- [Fix] `utils.merge`: avoid a crash with a null target and an array source\n- [Fix] `utils.merge`: avoid a crash with a null target and a truthy non-array source\n- [Fix] correctly parse nested arrays\n- [Robustness] `stringify`: avoid relying on a global `undefined` (#427)\n- [Robustness] `stringify`: cache `Object.prototype.hasOwnProperty`\n- [Refactor] `formats`: tiny bit of cleanup.\n- [Refactor] `utils`: `isBuffer`: small tweak; add tests\n- [Refactor]: `stringify`/`utils`: cache `Array.isArray`\n- [Refactor] `utils`: reduce observable [[Get]]s\n- [Refactor] use cached `Array.isArray`\n- [Refactor] `parse`/`stringify`: make a function to normalize the options\n- [readme] remove travis badge; add github actions/codecov badges; update URLs\n- [Docs] Clarify the need for \"arrayLimit\" option\n- [meta] fix README.md (#399)\n- [meta] do not publish workflow files\n- [meta] Clean up license text so it’s properly detected as BSD-3-Clause\n- [meta] add FUNDING.yml\n- [meta] Fixes typo in CHANGELOG.md\n- [actions] backport actions from main\n- [Tests] fix Buffer tests to work in node < 4.5 and node < 5.10\n- [Tests] always use `String(x)` over `x.toString()`\n- [Dev Deps] backport from main\n\n## **6.6.0**\n- [New] Add support for iso-8859-1, utf8 \"sentinel\" and numeric entities (#268)\n- [New] move two-value combine to a `utils` function (#189)\n- [Fix] `stringify`: fix a crash with `strictNullHandling` and a custom `filter`/`serializeDate` (#279)\n- [Fix] when `parseArrays` is false, properly handle keys ending in `[]` (#260)\n- [Fix] `stringify`: do not crash in an obscure combo of `interpretNumericEntities`, a bad custom `decoder`, & `iso-8859-1`\n- [Fix] `utils`: `merge`: fix crash when `source` is a truthy primitive & no options are provided\n- [refactor] `stringify`: Avoid arr = arr.concat(...), push to the existing instance (#269)\n- [Refactor] `parse`: only need to reassign the var once\n- [Refactor] `parse`/`stringify`: clean up `charset` options checking; fix defaults\n- [Refactor] add missing defaults\n- [Refactor] `parse`: one less `concat` call\n- [Refactor] `utils`: `compactQueue`: make it explicitly side-effecting\n- [Dev Deps] update `browserify`, `eslint`, `@ljharb/eslint-config`, `iconv-lite`, `safe-publish-latest`, `tape`\n- [Tests] up to `node` `v10.10`, `v9.11`, `v8.12`, `v6.14`, `v4.9`; pin included builds to LTS\n\n## **6.5.3**\n- [Fix] `parse`: ignore `__proto__` keys (#428)\n- [Fix] `utils.merge`: avoid a crash with a null target and a truthy non-array source\n- [Fix] correctly parse nested arrays\n- [Fix] `stringify`: fix a crash with `strictNullHandling` and a custom `filter`/`serializeDate` (#279)\n- [Fix] `utils`: `merge`: fix crash when `source` is a truthy primitive & no options are provided\n- [Fix] when `parseArrays` is false, properly handle keys ending in `[]`\n- [Fix] fix for an impossible situation: when the formatter is called with a non-string value\n- [Fix] `utils.merge`: avoid a crash with a null target and an array source\n- [Refactor] `utils`: reduce observable [[Get]]s\n- [Refactor] use cached `Array.isArray`\n- [Refactor] `stringify`: Avoid arr = arr.concat(...), push to the existing instance (#269)\n- [Refactor] `parse`: only need to reassign the var once\n- [Robustness] `stringify`: avoid relying on a global `undefined` (#427)\n- [readme] remove travis badge; add github actions/codecov badges; update URLs\n- [Docs] Clean up license text so it’s properly detected as BSD-3-Clause\n- [Docs] Clarify the need for \"arrayLimit\" option\n- [meta] fix README.md (#399)\n- [meta] add FUNDING.yml\n- [actions] backport actions from main\n- [Tests] always use `String(x)` over `x.toString()`\n- [Tests] remove nonexistent tape option\n- [Dev Deps] backport from main\n\n## **6.5.2**\n- [Fix] use `safer-buffer` instead of `Buffer` constructor\n- [Refactor] utils: `module.exports` one thing, instead of mutating `exports` (#230)\n- [Dev Deps] update `browserify`, `eslint`, `iconv-lite`, `safer-buffer`, `tape`, `browserify`\n\n## **6.5.1**\n- [Fix] Fix parsing & compacting very deep objects (#224)\n- [Refactor] name utils functions\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `tape`\n- [Tests] up to `node` `v8.4`; use `nvm install-latest-npm` so newer npm doesn’t break older node\n- [Tests] Use precise dist for Node.js 0.6 runtime (#225)\n- [Tests] make 0.6 required, now that it’s passing\n- [Tests] on `node` `v8.2`; fix npm on node 0.6\n\n## **6.5.0**\n- [New] add `utils.assign`\n- [New] pass default encoder/decoder to custom encoder/decoder functions (#206)\n- [New] `parse`/`stringify`: add `ignoreQueryPrefix`/`addQueryPrefix` options, respectively (#213)\n- [Fix] Handle stringifying empty objects with addQueryPrefix (#217)\n- [Fix] do not mutate `options` argument (#207)\n- [Refactor] `parse`: cache index to reuse in else statement (#182)\n- [Docs] add various badges to readme (#208)\n- [Dev Deps] update `eslint`, `browserify`, `iconv-lite`, `tape`\n- [Tests] up to `node` `v8.1`, `v7.10`, `v6.11`; npm v4.6 breaks on node < v1; npm v5+ breaks on node < v4\n- [Tests] add `editorconfig-tools`\n\n## **6.4.1**\n- [Fix] `parse`: ignore `__proto__` keys (#428)\n- [Fix] fix for an impossible situation: when the formatter is called with a non-string value\n- [Fix] use `safer-buffer` instead of `Buffer` constructor\n- [Fix] `utils.merge`: avoid a crash with a null target and an array source\n- [Fix] `utils.merge`: avoid a crash with a null target and a truthy non-array source\n- [Fix] `stringify`: fix a crash with `strictNullHandling` and a custom `filter`/`serializeDate` (#279)\n- [Fix] `utils`: `merge`: fix crash when `source` is a truthy primitive & no options are provided\n- [Fix] when `parseArrays` is false, properly handle keys ending in `[]`\n- [Robustness] `stringify`: avoid relying on a global `undefined` (#427)\n- [Refactor] use cached `Array.isArray`\n- [Refactor] `stringify`: Avoid arr = arr.concat(...), push to the existing instance (#269)\n- [readme] remove travis badge; add github actions/codecov badges; update URLs\n- [Docs] Clarify the need for \"arrayLimit\" option\n- [meta] fix README.md (#399)\n- [meta] Clean up license text so it’s properly detected as BSD-3-Clause\n- [meta] add FUNDING.yml\n- [actions] backport actions from main\n- [Tests] remove nonexistent tape option\n- [Dev Deps] backport from main\n\n## **6.4.0**\n- [New] `qs.stringify`: add `encodeValuesOnly` option\n- [Fix] follow `allowPrototypes` option during merge (#201, #201)\n- [Fix] support keys starting with brackets (#202, #200)\n- [Fix] chmod a-x\n- [Dev Deps] update `eslint`\n- [Tests] up to `node` `v7.7`, `v6.10`,` v4.8`; disable osx builds since they block linux builds\n- [eslint] reduce warnings\n\n## **6.3.3**\n- [Fix] `parse`: ignore `__proto__` keys (#428)\n- [Fix] fix for an impossible situation: when the formatter is called with a non-string value\n- [Fix] `utils.merge`: avoid a crash with a null target and an array source\n- [Fix] `utils.merge`: avoid a crash with a null target and a truthy non-array source\n- [Fix] `stringify`: fix a crash with `strictNullHandling` and a custom `filter`/`serializeDate` (#279)\n- [Fix] `utils`: `merge`: fix crash when `source` is a truthy primitive & no options are provided\n- [Fix] when `parseArrays` is false, properly handle keys ending in `[]`\n- [Robustness] `stringify`: avoid relying on a global `undefined` (#427)\n- [Refactor] use cached `Array.isArray`\n- [Refactor] `stringify`: Avoid arr = arr.concat(...), push to the existing instance (#269)\n- [Docs] Clarify the need for \"arrayLimit\" option\n- [meta] fix README.md (#399)\n- [meta] Clean up license text so it’s properly detected as BSD-3-Clause\n- [meta] add FUNDING.yml\n- [actions] backport actions from main\n- [Tests] use `safer-buffer` instead of `Buffer` constructor\n- [Tests] remove nonexistent tape option\n- [Dev Deps] backport from main\n\n## **6.3.2**\n- [Fix] follow `allowPrototypes` option during merge (#201, #200)\n- [Dev Deps] update `eslint`\n- [Fix] chmod a-x\n- [Fix] support keys starting with brackets (#202, #200)\n- [Tests] up to `node` `v7.7`, `v6.10`,` v4.8`; disable osx builds since they block linux builds\n\n## **6.3.1**\n- [Fix] ensure that `allowPrototypes: false` does not ever shadow Object.prototype properties (thanks, @snyk!)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `browserify`, `iconv-lite`, `qs-iconv`, `tape`\n- [Tests] on all node minors; improve test matrix\n- [Docs] document stringify option `allowDots` (#195)\n- [Docs] add empty object and array values example (#195)\n- [Docs] Fix minor inconsistency/typo (#192)\n- [Docs] document stringify option `sort` (#191)\n- [Refactor] `stringify`: throw faster with an invalid encoder\n- [Refactor] remove unnecessary escapes (#184)\n- Remove contributing.md, since `qs` is no longer part of `hapi` (#183)\n\n## **6.3.0**\n- [New] Add support for RFC 1738 (#174, #173)\n- [New] `stringify`: Add `serializeDate` option to customize Date serialization (#159)\n- [Fix] ensure `utils.merge` handles merging two arrays\n- [Refactor] only constructors should be capitalized\n- [Refactor] capitalized var names are for constructors only\n- [Refactor] avoid using a sparse array\n- [Robustness] `formats`: cache `String#replace`\n- [Dev Deps] update `browserify`, `eslint`, `@ljharb/eslint-config`; add `safe-publish-latest`\n- [Tests] up to `node` `v6.8`, `v4.6`; improve test matrix\n- [Tests] flesh out arrayLimit/arrayFormat tests (#107)\n- [Tests] skip Object.create tests when null objects are not available\n- [Tests] Turn on eslint for test files (#175)\n\n## **6.2.4**\n- [Fix] `parse`: ignore `__proto__` keys (#428)\n- [Fix] `utils.merge`: avoid a crash with a null target and an array source\n- [Fix] `utils.merge`: avoid a crash with a null target and a truthy non-array source\n- [Fix] `utils`: `merge`: fix crash when `source` is a truthy primitive & no options are provided\n- [Fix] when `parseArrays` is false, properly handle keys ending in `[]`\n- [Robustness] `stringify`: avoid relying on a global `undefined` (#427)\n- [Refactor] use cached `Array.isArray`\n- [Docs] Clarify the need for \"arrayLimit\" option\n- [meta] fix README.md (#399)\n- [meta] Clean up license text so it’s properly detected as BSD-3-Clause\n- [meta] add FUNDING.yml\n- [actions] backport actions from main\n- [Tests] use `safer-buffer` instead of `Buffer` constructor\n- [Tests] remove nonexistent tape option\n- [Dev Deps] backport from main\n\n## **6.2.3**\n- [Fix] follow `allowPrototypes` option during merge (#201, #200)\n- [Fix] chmod a-x\n- [Fix] support keys starting with brackets (#202, #200)\n- [Tests] up to `node` `v7.7`, `v6.10`,` v4.8`; disable osx builds since they block linux builds\n\n## **6.2.2**\n- [Fix] ensure that `allowPrototypes: false` does not ever shadow Object.prototype properties\n\n## **6.2.1**\n- [Fix] ensure `key[]=x&key[]&key[]=y` results in 3, not 2, values\n- [Refactor] Be explicit and use `Object.prototype.hasOwnProperty.call`\n- [Tests] remove `parallelshell` since it does not reliably report failures\n- [Tests] up to `node` `v6.3`, `v5.12`\n- [Dev Deps] update `tape`, `eslint`, `@ljharb/eslint-config`, `qs-iconv`\n\n## [**6.2.0**](https://github.com/ljharb/qs/issues?milestone=36&state=closed)\n- [New] pass Buffers to the encoder/decoder directly (#161)\n- [New] add \"encoder\" and \"decoder\" options, for custom param encoding/decoding (#160)\n- [Fix] fix compacting of nested sparse arrays (#150)\n\n## **6.1.2**\n- [Fix] follow `allowPrototypes` option during merge (#201, #200)\n- [Fix] chmod a-x\n- [Fix] support keys starting with brackets (#202, #200)\n- [Tests] up to `node` `v7.7`, `v6.10`,` v4.8`; disable osx builds since they block linux builds\n\n## **6.1.1**\n- [Fix] ensure that `allowPrototypes: false` does not ever shadow Object.prototype properties\n\n## [**6.1.0**](https://github.com/ljharb/qs/issues?milestone=35&state=closed)\n- [New] allowDots option for `stringify` (#151)\n- [Fix] \"sort\" option should work at a depth of 3 or more (#151)\n- [Fix] Restore `dist` directory; will be removed in v7 (#148)\n\n## **6.0.4**\n- [Fix] follow `allowPrototypes` option during merge (#201, #200)\n- [Fix] chmod a-x\n- [Fix] support keys starting with brackets (#202, #200)\n- [Tests] up to `node` `v7.7`, `v6.10`,` v4.8`; disable osx builds since they block linux builds\n\n## **6.0.3**\n- [Fix] ensure that `allowPrototypes: false` does not ever shadow Object.prototype properties\n- [Fix] Restore `dist` directory; will be removed in v7 (#148)\n\n## [**6.0.2**](https://github.com/ljharb/qs/issues?milestone=33&state=closed)\n- Revert ES6 requirement and restore support for node down to v0.8.\n\n## [**6.0.1**](https://github.com/ljharb/qs/issues?milestone=32&state=closed)\n- [**#127**](https://github.com/ljharb/qs/pull/127) Fix engines definition in package.json\n\n## [**6.0.0**](https://github.com/ljharb/qs/issues?milestone=31&state=closed)\n- [**#124**](https://github.com/ljharb/qs/issues/124) Use ES6 and drop support for node < v4\n\n## **5.2.1**\n- [Fix] ensure `key[]=x&key[]&key[]=y` results in 3, not 2, values\n\n## [**5.2.0**](https://github.com/ljharb/qs/issues?milestone=30&state=closed)\n- [**#64**](https://github.com/ljharb/qs/issues/64) Add option to sort object keys in the query string\n\n## [**5.1.0**](https://github.com/ljharb/qs/issues?milestone=29&state=closed)\n- [**#117**](https://github.com/ljharb/qs/issues/117) make URI encoding stringified results optional\n- [**#106**](https://github.com/ljharb/qs/issues/106) Add flag `skipNulls` to optionally skip null values in stringify\n\n## [**5.0.0**](https://github.com/ljharb/qs/issues?milestone=28&state=closed)\n- [**#114**](https://github.com/ljharb/qs/issues/114) default allowDots to false\n- [**#100**](https://github.com/ljharb/qs/issues/100) include dist to npm\n\n## [**4.0.0**](https://github.com/ljharb/qs/issues?milestone=26&state=closed)\n- [**#98**](https://github.com/ljharb/qs/issues/98) make returning plain objects and allowing prototype overwriting properties optional\n\n## [**3.1.0**](https://github.com/ljharb/qs/issues?milestone=24&state=closed)\n- [**#89**](https://github.com/ljharb/qs/issues/89) Add option to disable \"Transform dot notation to bracket notation\"\n\n## [**3.0.0**](https://github.com/ljharb/qs/issues?milestone=23&state=closed)\n- [**#80**](https://github.com/ljharb/qs/issues/80) qs.parse silently drops properties\n- [**#77**](https://github.com/ljharb/qs/issues/77) Perf boost\n- [**#60**](https://github.com/ljharb/qs/issues/60) Add explicit option to disable array parsing\n- [**#74**](https://github.com/ljharb/qs/issues/74) Bad parse when turning array into object\n- [**#81**](https://github.com/ljharb/qs/issues/81) Add a `filter` option\n- [**#68**](https://github.com/ljharb/qs/issues/68) Fixed issue with recursion and passing strings into objects.\n- [**#66**](https://github.com/ljharb/qs/issues/66) Add mixed array and object dot notation support Closes: #47\n- [**#76**](https://github.com/ljharb/qs/issues/76) RFC 3986\n- [**#85**](https://github.com/ljharb/qs/issues/85) No equal sign\n- [**#84**](https://github.com/ljharb/qs/issues/84) update license attribute\n\n## [**2.4.1**](https://github.com/ljharb/qs/issues?milestone=20&state=closed)\n- [**#73**](https://github.com/ljharb/qs/issues/73) Property 'hasOwnProperty' of object #<Object> is not a function\n\n## [**2.4.0**](https://github.com/ljharb/qs/issues?milestone=19&state=closed)\n- [**#70**](https://github.com/ljharb/qs/issues/70) Add arrayFormat option\n\n## [**2.3.3**](https://github.com/ljharb/qs/issues?milestone=18&state=closed)\n- [**#59**](https://github.com/ljharb/qs/issues/59) make sure array indexes are >= 0, closes #57\n- [**#58**](https://github.com/ljharb/qs/issues/58) make qs usable for browser loader\n\n## [**2.3.2**](https://github.com/ljharb/qs/issues?milestone=17&state=closed)\n- [**#55**](https://github.com/ljharb/qs/issues/55) allow merging a string into an object\n\n## [**2.3.1**](https://github.com/ljharb/qs/issues?milestone=16&state=closed)\n- [**#52**](https://github.com/ljharb/qs/issues/52) Return \"undefined\" and \"false\" instead of throwing \"TypeError\".\n\n## [**2.3.0**](https://github.com/ljharb/qs/issues?milestone=15&state=closed)\n- [**#50**](https://github.com/ljharb/qs/issues/50) add option to omit array indices, closes #46\n\n## [**2.2.5**](https://github.com/ljharb/qs/issues?milestone=14&state=closed)\n- [**#39**](https://github.com/ljharb/qs/issues/39) Is there an alternative to Buffer.isBuffer?\n- [**#49**](https://github.com/ljharb/qs/issues/49) refactor utils.merge, fixes #45\n- [**#41**](https://github.com/ljharb/qs/issues/41) avoid browserifying Buffer, for #39\n\n## [**2.2.4**](https://github.com/ljharb/qs/issues?milestone=13&state=closed)\n- [**#38**](https://github.com/ljharb/qs/issues/38) how to handle object keys beginning with a number\n\n## [**2.2.3**](https://github.com/ljharb/qs/issues?milestone=12&state=closed)\n- [**#37**](https://github.com/ljharb/qs/issues/37) parser discards first empty value in array\n- [**#36**](https://github.com/ljharb/qs/issues/36) Update to lab 4.x\n\n## [**2.2.2**](https://github.com/ljharb/qs/issues?milestone=11&state=closed)\n- [**#33**](https://github.com/ljharb/qs/issues/33) Error when plain object in a value\n- [**#34**](https://github.com/ljharb/qs/issues/34) use Object.prototype.hasOwnProperty.call instead of obj.hasOwnProperty\n- [**#24**](https://github.com/ljharb/qs/issues/24) Changelog? Semver?\n\n## [**2.2.1**](https://github.com/ljharb/qs/issues?milestone=10&state=closed)\n- [**#32**](https://github.com/ljharb/qs/issues/32) account for circular references properly, closes #31\n- [**#31**](https://github.com/ljharb/qs/issues/31) qs.parse stackoverflow on circular objects\n\n## [**2.2.0**](https://github.com/ljharb/qs/issues?milestone=9&state=closed)\n- [**#26**](https://github.com/ljharb/qs/issues/26) Don't use Buffer global if it's not present\n- [**#30**](https://github.com/ljharb/qs/issues/30) Bug when merging non-object values into arrays\n- [**#29**](https://github.com/ljharb/qs/issues/29) Don't call Utils.clone at the top of Utils.merge\n- [**#23**](https://github.com/ljharb/qs/issues/23) Ability to not limit parameters?\n\n## [**2.1.0**](https://github.com/ljharb/qs/issues?milestone=8&state=closed)\n- [**#22**](https://github.com/ljharb/qs/issues/22) Enable using a RegExp as delimiter\n\n## [**2.0.0**](https://github.com/ljharb/qs/issues?milestone=7&state=closed)\n- [**#18**](https://github.com/ljharb/qs/issues/18) Why is there arrayLimit?\n- [**#20**](https://github.com/ljharb/qs/issues/20) Configurable parametersLimit\n- [**#21**](https://github.com/ljharb/qs/issues/21) make all limits optional, for #18, for #20\n\n## [**1.2.2**](https://github.com/ljharb/qs/issues?milestone=6&state=closed)\n- [**#19**](https://github.com/ljharb/qs/issues/19) Don't overwrite null values\n\n## [**1.2.1**](https://github.com/ljharb/qs/issues?milestone=5&state=closed)\n- [**#16**](https://github.com/ljharb/qs/issues/16) ignore non-string delimiters\n- [**#15**](https://github.com/ljharb/qs/issues/15) Close code block\n\n## [**1.2.0**](https://github.com/ljharb/qs/issues?milestone=4&state=closed)\n- [**#12**](https://github.com/ljharb/qs/issues/12) Add optional delim argument\n- [**#13**](https://github.com/ljharb/qs/issues/13) fix #11: flattened keys in array are now correctly parsed\n\n## [**1.1.0**](https://github.com/ljharb/qs/issues?milestone=3&state=closed)\n- [**#7**](https://github.com/ljharb/qs/issues/7) Empty values of a POST array disappear after being submitted\n- [**#9**](https://github.com/ljharb/qs/issues/9) Should not omit equals signs (=) when value is null\n- [**#6**](https://github.com/ljharb/qs/issues/6) Minor grammar fix in README\n\n## [**1.0.2**](https://github.com/ljharb/qs/issues?milestone=2&state=closed)\n- [**#5**](https://github.com/ljharb/qs/issues/5) array holes incorrectly copied into object on large index\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\qs\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\qs\\CHANGELOG.md"
  },
  {
    "Content": "BSD 3-Clause License\n\nCopyright (c) 2014, Nathan LaFreniere and other [contributors](https://github.com/ljharb/qs/graphs/contributors)\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\qs\\LICENSE.md",
    "RelativePath": "tools\\backend\\node_modules\\qs\\LICENSE.md"
  },
  {
    "Content": "<p align=\"center\">\n    <img alt=\"qs\" src=\"./logos/banner_default.png\" width=\"800\" />\n</p>\n\n# qs <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/9058/badge)](https://bestpractices.coreinfrastructure.org/projects/9058)\n\n[![npm badge][npm-badge-png]][package-url]\n\nA querystring parsing and stringifying library with some added security.\n\nLead Maintainer: [Jordan Harband](https://github.com/ljharb)\n\nThe **qs** module was originally created and maintained by [TJ Holowaychuk](https://github.com/visionmedia/node-querystring).\n\n## Usage\n\n```javascript\nvar qs = require('qs');\nvar assert = require('assert');\n\nvar obj = qs.parse('a=c');\nassert.deepEqual(obj, { a: 'c' });\n\nvar str = qs.stringify(obj);\nassert.equal(str, 'a=c');\n```\n\n### Parsing Objects\n\n[](#preventEval)\n```javascript\nqs.parse(string, [options]);\n```\n\n**qs** allows you to create nested objects within your query strings, by surrounding the name of sub-keys with square brackets `[]`.\nFor example, the string `'foo[bar]=baz'` converts to:\n\n```javascript\nassert.deepEqual(qs.parse('foo[bar]=baz'), {\n    foo: {\n        bar: 'baz'\n    }\n});\n```\n\nWhen using the `plainObjects` option the parsed value is returned as a null object, created via `Object.create(null)` and as such you should be aware that prototype methods will not exist on it and a user may set those names to whatever value they like:\n\n```javascript\nvar nullObject = qs.parse('a[hasOwnProperty]=b', { plainObjects: true });\nassert.deepEqual(nullObject, { a: { hasOwnProperty: 'b' } });\n```\n\nBy default parameters that would overwrite properties on the object prototype are ignored, if you wish to keep the data from those fields either use `plainObjects` as mentioned above, or set `allowPrototypes` to `true` which will allow user input to overwrite those properties.\n*WARNING* It is generally a bad idea to enable this option as it can cause problems when attempting to use the properties that have been overwritten.\nAlways be careful with this option.\n\n```javascript\nvar protoObject = qs.parse('a[hasOwnProperty]=b', { allowPrototypes: true });\nassert.deepEqual(protoObject, { a: { hasOwnProperty: 'b' } });\n```\n\nURI encoded strings work too:\n\n```javascript\nassert.deepEqual(qs.parse('a%5Bb%5D=c'), {\n    a: { b: 'c' }\n});\n```\n\nYou can also nest your objects, like `'foo[bar][baz]=foobarbaz'`:\n\n```javascript\nassert.deepEqual(qs.parse('foo[bar][baz]=foobarbaz'), {\n    foo: {\n        bar: {\n            baz: 'foobarbaz'\n        }\n    }\n});\n```\n\nBy default, when nesting objects **qs** will only parse up to 5 children deep.\nThis means if you attempt to parse a string like `'a[b][c][d][e][f][g][h][i]=j'` your resulting object will be:\n\n```javascript\nvar expected = {\n    a: {\n        b: {\n            c: {\n                d: {\n                    e: {\n                        f: {\n                            '[g][h][i]': 'j'\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nvar string = 'a[b][c][d][e][f][g][h][i]=j';\nassert.deepEqual(qs.parse(string), expected);\n```\n\nThis depth can be overridden by passing a `depth` option to `qs.parse(string, [options])`:\n\n```javascript\nvar deep = qs.parse('a[b][c][d][e][f][g][h][i]=j', { depth: 1 });\nassert.deepEqual(deep, { a: { b: { '[c][d][e][f][g][h][i]': 'j' } } });\n```\n\nYou can configure **qs** to throw an error when parsing nested input beyond this depth using the `strictDepth` option (defaulted to false):\n\n```javascript\ntry {\n    qs.parse('a[b][c][d][e][f][g][h][i]=j', { depth: 1, strictDepth: true });\n} catch (err) {\n    assert(err instanceof RangeError);\n    assert.strictEqual(err.message, 'Input depth exceeded depth option of 1 and strictDepth is true');\n}\n```\n\nThe depth limit helps mitigate abuse when **qs** is used to parse user input, and it is recommended to keep it a reasonably small number. The strictDepth option adds a layer of protection by throwing an error when the limit is exceeded, allowing you to catch and handle such cases.\n\nFor similar reasons, by default **qs** will only parse up to 1000 parameters. This can be overridden by passing a `parameterLimit` option:\n\n```javascript\nvar limited = qs.parse('a=b&c=d', { parameterLimit: 1 });\nassert.deepEqual(limited, { a: 'b' });\n```\n\nTo bypass the leading question mark, use `ignoreQueryPrefix`:\n\n```javascript\nvar prefixed = qs.parse('?a=b&c=d', { ignoreQueryPrefix: true });\nassert.deepEqual(prefixed, { a: 'b', c: 'd' });\n```\n\nAn optional delimiter can also be passed:\n\n```javascript\nvar delimited = qs.parse('a=b;c=d', { delimiter: ';' });\nassert.deepEqual(delimited, { a: 'b', c: 'd' });\n```\n\nDelimiters can be a regular expression too:\n\n```javascript\nvar regexed = qs.parse('a=b;c=d,e=f', { delimiter: /[;,]/ });\nassert.deepEqual(regexed, { a: 'b', c: 'd', e: 'f' });\n```\n\nOption `allowDots` can be used to enable dot notation:\n\n```javascript\nvar withDots = qs.parse('a.b=c', { allowDots: true });\nassert.deepEqual(withDots, { a: { b: 'c' } });\n```\n\nOption `decodeDotInKeys` can be used to decode dots in keys\nNote: it implies `allowDots`, so `parse` will error if you set `decodeDotInKeys` to `true`, and `allowDots` to `false`.\n\n```javascript\nvar withDots = qs.parse('name%252Eobj.first=John&name%252Eobj.last=Doe', { decodeDotInKeys: true });\nassert.deepEqual(withDots, { 'name.obj': { first: 'John', last: 'Doe' }});\n```\n\nOption `allowEmptyArrays` can be used to allowing empty array values in object\n```javascript\nvar withEmptyArrays = qs.parse('foo[]&bar=baz', { allowEmptyArrays: true });\nassert.deepEqual(withEmptyArrays, { foo: [], bar: 'baz' });\n```\n\nOption `duplicates` can be used to change the behavior when duplicate keys are encountered\n```javascript\nassert.deepEqual(qs.parse('foo=bar&foo=baz'), { foo: ['bar', 'baz'] });\nassert.deepEqual(qs.parse('foo=bar&foo=baz', { duplicates: 'combine' }), { foo: ['bar', 'baz'] });\nassert.deepEqual(qs.parse('foo=bar&foo=baz', { duplicates: 'first' }), { foo: 'bar' });\nassert.deepEqual(qs.parse('foo=bar&foo=baz', { duplicates: 'last' }), { foo: 'baz' });\n```\n\nIf you have to deal with legacy browsers or services, there's also support for decoding percent-encoded octets as iso-8859-1:\n\n```javascript\nvar oldCharset = qs.parse('a=%A7', { charset: 'iso-8859-1' });\nassert.deepEqual(oldCharset, { a: '§' });\n```\n\nSome services add an initial `utf8=✓` value to forms so that old Internet Explorer versions are more likely to submit the form as utf-8.\nAdditionally, the server can check the value against wrong encodings of the checkmark character and detect that a query string or `application/x-www-form-urlencoded` body was *not* sent as utf-8, eg. if the form had an `accept-charset` parameter or the containing page had a different character set.\n\n**qs** supports this mechanism via the `charsetSentinel` option.\nIf specified, the `utf8` parameter will be omitted from the returned object.\nIt will be used to switch to `iso-8859-1`/`utf-8` mode depending on how the checkmark is encoded.\n\n**Important**: When you specify both the `charset` option and the `charsetSentinel` option, the `charset` will be overridden when the request contains a `utf8` parameter from which the actual charset can be deduced.\nIn that sense the `charset` will behave as the default charset rather than the authoritative charset.\n\n```javascript\nvar detectedAsUtf8 = qs.parse('utf8=%E2%9C%93&a=%C3%B8', {\n    charset: 'iso-8859-1',\n    charsetSentinel: true\n});\nassert.deepEqual(detectedAsUtf8, { a: 'ø' });\n\n// Browsers encode the checkmark as &#10003; when submitting as iso-8859-1:\nvar detectedAsIso8859_1 = qs.parse('utf8=%26%2310003%3B&a=%F8', {\n    charset: 'utf-8',\n    charsetSentinel: true\n});\nassert.deepEqual(detectedAsIso8859_1, { a: 'ø' });\n```\n\nIf you want to decode the `&#...;` syntax to the actual character, you can specify the `interpretNumericEntities` option as well:\n\n```javascript\nvar detectedAsIso8859_1 = qs.parse('a=%26%239786%3B', {\n    charset: 'iso-8859-1',\n    interpretNumericEntities: true\n});\nassert.deepEqual(detectedAsIso8859_1, { a: '☺' });\n```\n\nIt also works when the charset has been detected in `charsetSentinel` mode.\n\n### Parsing Arrays\n\n**qs** can also parse arrays using a similar `[]` notation:\n\n```javascript\nvar withArray = qs.parse('a[]=b&a[]=c');\nassert.deepEqual(withArray, { a: ['b', 'c'] });\n```\n\nYou may specify an index as well:\n\n```javascript\nvar withIndexes = qs.parse('a[1]=c&a[0]=b');\nassert.deepEqual(withIndexes, { a: ['b', 'c'] });\n```\n\nNote that the only difference between an index in an array and a key in an object is that the value between the brackets must be a number to create an array.\nWhen creating arrays with specific indices, **qs** will compact a sparse array to only the existing values preserving their order:\n\n```javascript\nvar noSparse = qs.parse('a[1]=b&a[15]=c');\nassert.deepEqual(noSparse, { a: ['b', 'c'] });\n```\n\nYou may also use `allowSparse` option to parse sparse arrays:\n\n```javascript\nvar sparseArray = qs.parse('a[1]=2&a[3]=5', { allowSparse: true });\nassert.deepEqual(sparseArray, { a: [, '2', , '5'] });\n```\n\nNote that an empty string is also a value, and will be preserved:\n\n```javascript\nvar withEmptyString = qs.parse('a[]=&a[]=b');\nassert.deepEqual(withEmptyString, { a: ['', 'b'] });\n\nvar withIndexedEmptyString = qs.parse('a[0]=b&a[1]=&a[2]=c');\nassert.deepEqual(withIndexedEmptyString, { a: ['b', '', 'c'] });\n```\n\n**qs** will also limit specifying indices in an array to a maximum index of `20`.\nAny array members with an index of greater than `20` will instead be converted to an object with the index as the key.\nThis is needed to handle cases when someone sent, for example, `a[999999999]` and it will take significant time to iterate over this huge array.\n\n```javascript\nvar withMaxIndex = qs.parse('a[100]=b');\nassert.deepEqual(withMaxIndex, { a: { '100': 'b' } });\n```\n\nThis limit can be overridden by passing an `arrayLimit` option:\n\n```javascript\nvar withArrayLimit = qs.parse('a[1]=b', { arrayLimit: 0 });\nassert.deepEqual(withArrayLimit, { a: { '1': 'b' } });\n```\n\nTo disable array parsing entirely, set `parseArrays` to `false`.\n\n```javascript\nvar noParsingArrays = qs.parse('a[]=b', { parseArrays: false });\nassert.deepEqual(noParsingArrays, { a: { '0': 'b' } });\n```\n\nIf you mix notations, **qs** will merge the two items into an object:\n\n```javascript\nvar mixedNotation = qs.parse('a[0]=b&a[b]=c');\nassert.deepEqual(mixedNotation, { a: { '0': 'b', b: 'c' } });\n```\n\nYou can also create arrays of objects:\n\n```javascript\nvar arraysOfObjects = qs.parse('a[][b]=c');\nassert.deepEqual(arraysOfObjects, { a: [{ b: 'c' }] });\n```\n\nSome people use comma to join array, **qs** can parse it:\n```javascript\nvar arraysOfObjects = qs.parse('a=b,c', { comma: true })\nassert.deepEqual(arraysOfObjects, { a: ['b', 'c'] })\n```\n(_this cannot convert nested objects, such as `a={b:1},{c:d}`_)\n\n### Parsing primitive/scalar values (numbers, booleans, null, etc)\n\nBy default, all values are parsed as strings.\nThis behavior will not change and is explained in [issue #91](https://github.com/ljharb/qs/issues/91).\n\n```javascript\nvar primitiveValues = qs.parse('a=15&b=true&c=null');\nassert.deepEqual(primitiveValues, { a: '15', b: 'true', c: 'null' });\n```\n\nIf you wish to auto-convert values which look like numbers, booleans, and other values into their primitive counterparts, you can use the [query-types Express JS middleware](https://github.com/xpepermint/query-types) which will auto-convert all request query parameters.\n\n### Stringifying\n\n[](#preventEval)\n```javascript\nqs.stringify(object, [options]);\n```\n\nWhen stringifying, **qs** by default URI encodes output. Objects are stringified as you would expect:\n\n```javascript\nassert.equal(qs.stringify({ a: 'b' }), 'a=b');\nassert.equal(qs.stringify({ a: { b: 'c' } }), 'a%5Bb%5D=c');\n```\n\nThis encoding can be disabled by setting the `encode` option to `false`:\n\n```javascript\nvar unencoded = qs.stringify({ a: { b: 'c' } }, { encode: false });\nassert.equal(unencoded, 'a[b]=c');\n```\n\nEncoding can be disabled for keys by setting the `encodeValuesOnly` option to `true`:\n```javascript\nvar encodedValues = qs.stringify(\n    { a: 'b', c: ['d', 'e=f'], f: [['g'], ['h']] },\n    { encodeValuesOnly: true }\n);\nassert.equal(encodedValues,'a=b&c[0]=d&c[1]=e%3Df&f[0][0]=g&f[1][0]=h');\n```\n\nThis encoding can also be replaced by a custom encoding method set as `encoder` option:\n\n```javascript\nvar encoded = qs.stringify({ a: { b: 'c' } }, { encoder: function (str) {\n    // Passed in values `a`, `b`, `c`\n    return // Return encoded string\n}})\n```\n\n_(Note: the `encoder` option does not apply if `encode` is `false`)_\n\nAnalogue to the `encoder` there is a `decoder` option for `parse` to override decoding of properties and values:\n\n```javascript\nvar decoded = qs.parse('x=z', { decoder: function (str) {\n    // Passed in values `x`, `z`\n    return // Return decoded string\n}})\n```\n\nYou can encode keys and values using different logic by using the type argument provided to the encoder:\n\n```javascript\nvar encoded = qs.stringify({ a: { b: 'c' } }, { encoder: function (str, defaultEncoder, charset, type) {\n    if (type === 'key') {\n        return // Encoded key\n    } else if (type === 'value') {\n        return // Encoded value\n    }\n}})\n```\n\nThe type argument is also provided to the decoder:\n\n```javascript\nvar decoded = qs.parse('x=z', { decoder: function (str, defaultDecoder, charset, type) {\n    if (type === 'key') {\n        return // Decoded key\n    } else if (type === 'value') {\n        return // Decoded value\n    }\n}})\n```\n\nExamples beyond this point will be shown as though the output is not URI encoded for clarity.\nPlease note that the return values in these cases *will* be URI encoded during real usage.\n\nWhen arrays are stringified, they follow the `arrayFormat` option, which defaults to `indices`:\n\n```javascript\nqs.stringify({ a: ['b', 'c', 'd'] });\n// 'a[0]=b&a[1]=c&a[2]=d'\n```\n\nYou may override this by setting the `indices` option to `false`, or to be more explicit, the `arrayFormat` option to `repeat`:\n\n```javascript\nqs.stringify({ a: ['b', 'c', 'd'] }, { indices: false });\n// 'a=b&a=c&a=d'\n```\n\nYou may use the `arrayFormat` option to specify the format of the output array:\n\n```javascript\nqs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'indices' })\n// 'a[0]=b&a[1]=c'\nqs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'brackets' })\n// 'a[]=b&a[]=c'\nqs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'repeat' })\n// 'a=b&a=c'\nqs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'comma' })\n// 'a=b,c'\n```\n\nNote: when using `arrayFormat` set to `'comma'`, you can also pass the `commaRoundTrip` option set to `true` or `false`, to append `[]` on single-item arrays, so that they can round trip through a parse.\n\nWhen objects are stringified, by default they use bracket notation:\n\n```javascript\nqs.stringify({ a: { b: { c: 'd', e: 'f' } } });\n// 'a[b][c]=d&a[b][e]=f'\n```\n\nYou may override this to use dot notation by setting the `allowDots` option to `true`:\n\n```javascript\nqs.stringify({ a: { b: { c: 'd', e: 'f' } } }, { allowDots: true });\n// 'a.b.c=d&a.b.e=f'\n```\n\nYou may encode the dot notation in the keys of object with option `encodeDotInKeys` by setting it to `true`:\nNote: it implies `allowDots`, so `stringify` will error if you set `decodeDotInKeys` to `true`, and `allowDots` to `false`.\nCaveat: when `encodeValuesOnly` is `true` as well as `encodeDotInKeys`, only dots in keys and nothing else will be encoded.\n```javascript\nqs.stringify({ \"name.obj\": { \"first\": \"John\", \"last\": \"Doe\" } }, { allowDots: true, encodeDotInKeys: true })\n// 'name%252Eobj.first=John&name%252Eobj.last=Doe'\n```\n\nYou may allow empty array values by setting the `allowEmptyArrays` option to `true`:\n```javascript\nqs.stringify({ foo: [], bar: 'baz' }, { allowEmptyArrays: true });\n// 'foo[]&bar=baz'\n```\n\nEmpty strings and null values will omit the value, but the equals sign (=) remains in place:\n\n```javascript\nassert.equal(qs.stringify({ a: '' }), 'a=');\n```\n\nKey with no values (such as an empty object or array) will return nothing:\n\n```javascript\nassert.equal(qs.stringify({ a: [] }), '');\nassert.equal(qs.stringify({ a: {} }), '');\nassert.equal(qs.stringify({ a: [{}] }), '');\nassert.equal(qs.stringify({ a: { b: []} }), '');\nassert.equal(qs.stringify({ a: { b: {}} }), '');\n```\n\nProperties that are set to `undefined` will be omitted entirely:\n\n```javascript\nassert.equal(qs.stringify({ a: null, b: undefined }), 'a=');\n```\n\nThe query string may optionally be prepended with a question mark:\n\n```javascript\nassert.equal(qs.stringify({ a: 'b', c: 'd' }, { addQueryPrefix: true }), '?a=b&c=d');\n```\n\nThe delimiter may be overridden with stringify as well:\n\n```javascript\nassert.equal(qs.stringify({ a: 'b', c: 'd' }, { delimiter: ';' }), 'a=b;c=d');\n```\n\nIf you only want to override the serialization of `Date` objects, you can provide a `serializeDate` option:\n\n```javascript\nvar date = new Date(7);\nassert.equal(qs.stringify({ a: date }), 'a=1970-01-01T00:00:00.007Z'.replace(/:/g, '%3A'));\nassert.equal(\n    qs.stringify({ a: date }, { serializeDate: function (d) { return d.getTime(); } }),\n    'a=7'\n);\n```\n\nYou may use the `sort` option to affect the order of parameter keys:\n\n```javascript\nfunction alphabeticalSort(a, b) {\n    return a.localeCompare(b);\n}\nassert.equal(qs.stringify({ a: 'c', z: 'y', b : 'f' }, { sort: alphabeticalSort }), 'a=c&b=f&z=y');\n```\n\nFinally, you can use the `filter` option to restrict which keys will be included in the stringified output.\nIf you pass a function, it will be called for each key to obtain the replacement value.\nOtherwise, if you pass an array, it will be used to select properties and array indices for stringification:\n\n```javascript\nfunction filterFunc(prefix, value) {\n    if (prefix == 'b') {\n        // Return an `undefined` value to omit a property.\n        return;\n    }\n    if (prefix == 'e[f]') {\n        return value.getTime();\n    }\n    if (prefix == 'e[g][0]') {\n        return value * 2;\n    }\n    return value;\n}\nqs.stringify({ a: 'b', c: 'd', e: { f: new Date(123), g: [2] } }, { filter: filterFunc });\n// 'a=b&c=d&e[f]=123&e[g][0]=4'\nqs.stringify({ a: 'b', c: 'd', e: 'f' }, { filter: ['a', 'e'] });\n// 'a=b&e=f'\nqs.stringify({ a: ['b', 'c', 'd'], e: 'f' }, { filter: ['a', 0, 2] });\n// 'a[0]=b&a[2]=d'\n```\n\nYou could also use `filter` to inject custom serialization for user defined types.\nConsider you're working with some api that expects query strings of the format for ranges:\n\n```\nhttps://domain.com/endpoint?range=30...70\n```\n\nFor which you model as:\n\n```javascript\nclass Range {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\n```\n\nYou could _inject_ a custom serializer to handle values of this type:\n\n```javascript\nqs.stringify(\n    {\n        range: new Range(30, 70),\n    },\n    {\n        filter: (prefix, value) => {\n            if (value instanceof Range) {\n                return `${value.from}...${value.to}`;\n            }\n            // serialize the usual way\n            return value;\n        },\n    }\n);\n// range=30...70\n```\n\n### Handling of `null` values\n\nBy default, `null` values are treated like empty strings:\n\n```javascript\nvar withNull = qs.stringify({ a: null, b: '' });\nassert.equal(withNull, 'a=&b=');\n```\n\nParsing does not distinguish between parameters with and without equal signs.\nBoth are converted to empty strings.\n\n```javascript\nvar equalsInsensitive = qs.parse('a&b=');\nassert.deepEqual(equalsInsensitive, { a: '', b: '' });\n```\n\nTo distinguish between `null` values and empty strings use the `strictNullHandling` flag. In the result string the `null`\nvalues have no `=` sign:\n\n```javascript\nvar strictNull = qs.stringify({ a: null, b: '' }, { strictNullHandling: true });\nassert.equal(strictNull, 'a&b=');\n```\n\nTo parse values without `=` back to `null` use the `strictNullHandling` flag:\n\n```javascript\nvar parsedStrictNull = qs.parse('a&b=', { strictNullHandling: true });\nassert.deepEqual(parsedStrictNull, { a: null, b: '' });\n```\n\nTo completely skip rendering keys with `null` values, use the `skipNulls` flag:\n\n```javascript\nvar nullsSkipped = qs.stringify({ a: 'b', c: null}, { skipNulls: true });\nassert.equal(nullsSkipped, 'a=b');\n```\n\nIf you're communicating with legacy systems, you can switch to `iso-8859-1` using the `charset` option:\n\n```javascript\nvar iso = qs.stringify({ æ: 'æ' }, { charset: 'iso-8859-1' });\nassert.equal(iso, '%E6=%E6');\n```\n\nCharacters that don't exist in `iso-8859-1` will be converted to numeric entities, similar to what browsers do:\n\n```javascript\nvar numeric = qs.stringify({ a: '☺' }, { charset: 'iso-8859-1' });\nassert.equal(numeric, 'a=%26%239786%3B');\n```\n\nYou can use the `charsetSentinel` option to announce the character by including an `utf8=✓` parameter with the proper encoding if the checkmark, similar to what Ruby on Rails and others do when submitting forms.\n\n```javascript\nvar sentinel = qs.stringify({ a: '☺' }, { charsetSentinel: true });\nassert.equal(sentinel, 'utf8=%E2%9C%93&a=%E2%98%BA');\n\nvar isoSentinel = qs.stringify({ a: 'æ' }, { charsetSentinel: true, charset: 'iso-8859-1' });\nassert.equal(isoSentinel, 'utf8=%26%2310003%3B&a=%E6');\n```\n\n### Dealing with special character sets\n\nBy default the encoding and decoding of characters is done in `utf-8`, and `iso-8859-1` support is also built in via the `charset` parameter.\n\nIf you wish to encode querystrings to a different character set (i.e.\n[Shift JIS](https://en.wikipedia.org/wiki/Shift_JIS)) you can use the\n[`qs-iconv`](https://github.com/martinheidegger/qs-iconv) library:\n\n```javascript\nvar encoder = require('qs-iconv/encoder')('shift_jis');\nvar shiftJISEncoded = qs.stringify({ a: 'こんにちは！' }, { encoder: encoder });\nassert.equal(shiftJISEncoded, 'a=%82%B1%82%F1%82%C9%82%BF%82%CD%81I');\n```\n\nThis also works for decoding of query strings:\n\n```javascript\nvar decoder = require('qs-iconv/decoder')('shift_jis');\nvar obj = qs.parse('a=%82%B1%82%F1%82%C9%82%BF%82%CD%81I', { decoder: decoder });\nassert.deepEqual(obj, { a: 'こんにちは！' });\n```\n\n### RFC 3986 and RFC 1738 space encoding\n\nRFC3986 used as default option and encodes ' ' to *%20* which is backward compatible.\nIn the same time, output can be stringified as per RFC1738 with ' ' equal to '+'.\n\n```\nassert.equal(qs.stringify({ a: 'b c' }), 'a=b%20c');\nassert.equal(qs.stringify({ a: 'b c' }, { format : 'RFC3986' }), 'a=b%20c');\nassert.equal(qs.stringify({ a: 'b c' }, { format : 'RFC1738' }), 'a=b+c');\n```\n\n## Security\n\nPlease email [@ljharb](https://github.com/ljharb) or see https://tidelift.com/security if you have a potential security vulnerability to report.\n\n## qs for enterprise\n\nAvailable as part of the Tidelift Subscription\n\nThe maintainers of qs and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications.\nSave time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use.\n[Learn more.](https://tidelift.com/subscription/pkg/npm-qs?utm_source=npm-qs&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n[package-url]: https://npmjs.org/package/qs\n[npm-version-svg]: https://versionbadg.es/ljharb/qs.svg\n[deps-svg]: https://david-dm.org/ljharb/qs.svg\n[deps-url]: https://david-dm.org/ljharb/qs\n[dev-deps-svg]: https://david-dm.org/ljharb/qs/dev-status.svg\n[dev-deps-url]: https://david-dm.org/ljharb/qs#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/qs.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/qs.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/qs.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=qs\n[codecov-image]: https://codecov.io/gh/ljharb/qs/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/ljharb/qs/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/qs\n[actions-url]: https://github.com/ljharb/qs/actions\n\n## Acknowledgements\n\nqs logo by [NUMI](https://github.com/numi-hq/open-design):\n\n[<img src=\"https://raw.githubusercontent.com/numi-hq/open-design/main/assets/numi-lockup.png\" alt=\"NUMI Logo\" style=\"width: 200px;\"/>](https://numi.tech/?ref=qs)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\qs\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\qs\\README.md"
  },
  {
    "Content": "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Qs = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";var replace=String.prototype.replace,percentTwenties=/%20/g,Format={RFC1738:\"RFC1738\",RFC3986:\"RFC3986\"};module.exports={default:Format.RFC3986,formatters:{RFC1738:function(e){return replace.call(e,percentTwenties,\"+\")},RFC3986:function(e){return String(e)}},RFC1738:Format.RFC1738,RFC3986:Format.RFC3986};\n\n},{}],2:[function(require,module,exports){\n\"use strict\";var stringify=require(4),parse=require(3),formats=require(1);module.exports={formats:formats,parse:parse,stringify:stringify};\n\n},{\"1\":1,\"3\":3,\"4\":4}],3:[function(require,module,exports){\n\"use strict\";var utils=require(5),has=Object.prototype.hasOwnProperty,isArray=Array.isArray,defaults={allowDots:!1,allowEmptyArrays:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:\"utf-8\",charsetSentinel:!1,comma:!1,decodeDotInKeys:!1,decoder:utils.decode,delimiter:\"&\",depth:5,duplicates:\"combine\",ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictDepth:!1,strictNullHandling:!1},interpretNumericEntities=function(e){return e.replace(/&#(\\d+);/g,(function(e,t){return String.fromCharCode(parseInt(t,10))}))},parseArrayValue=function(e,t){return e&&\"string\"==typeof e&&t.comma&&e.indexOf(\",\")>-1?e.split(\",\"):e},isoSentinel=\"utf8=%26%2310003%3B\",charsetSentinel=\"utf8=%E2%9C%93\",parseValues=function parseQueryStringValues(e,t){var r={__proto__:null},a=t.ignoreQueryPrefix?e.replace(/^\\?/,\"\"):e;a=a.replace(/%5B/gi,\"[\").replace(/%5D/gi,\"]\");var i,o=t.parameterLimit===1/0?void 0:t.parameterLimit,l=a.split(t.delimiter,o),s=-1,n=t.charset;if(t.charsetSentinel)for(i=0;i<l.length;++i)0===l[i].indexOf(\"utf8=\")&&(l[i]===charsetSentinel?n=\"utf-8\":l[i]===isoSentinel&&(n=\"iso-8859-1\"),s=i,i=l.length);for(i=0;i<l.length;++i)if(i!==s){var p,c,d=l[i],u=d.indexOf(\"]=\"),f=-1===u?d.indexOf(\"=\"):u+1;-1===f?(p=t.decoder(d,defaults.decoder,n,\"key\"),c=t.strictNullHandling?null:\"\"):(p=t.decoder(d.slice(0,f),defaults.decoder,n,\"key\"),c=utils.maybeMap(parseArrayValue(d.slice(f+1),t),(function(e){return t.decoder(e,defaults.decoder,n,\"value\")}))),c&&t.interpretNumericEntities&&\"iso-8859-1\"===n&&(c=interpretNumericEntities(c)),d.indexOf(\"[]=\")>-1&&(c=isArray(c)?[c]:c);var y=has.call(r,p);y&&\"combine\"===t.duplicates?r[p]=utils.combine(r[p],c):y&&\"last\"!==t.duplicates||(r[p]=c)}return r},parseObject=function(e,t,r,a){for(var i=a?t:parseArrayValue(t,r),o=e.length-1;o>=0;--o){var l,s=e[o];if(\"[]\"===s&&r.parseArrays)l=r.allowEmptyArrays&&(\"\"===i||r.strictNullHandling&&null===i)?[]:[].concat(i);else{l=r.plainObjects?Object.create(null):{};var n=\"[\"===s.charAt(0)&&\"]\"===s.charAt(s.length-1)?s.slice(1,-1):s,p=r.decodeDotInKeys?n.replace(/%2E/g,\".\"):n,c=parseInt(p,10);r.parseArrays||\"\"!==p?!isNaN(c)&&s!==p&&String(c)===p&&c>=0&&r.parseArrays&&c<=r.arrayLimit?(l=[])[c]=i:\"__proto__\"!==p&&(l[p]=i):l={0:i}}i=l}return i},parseKeys=function parseQueryStringKeys(e,t,r,a){if(e){var i=r.allowDots?e.replace(/\\.([^.[]+)/g,\"[$1]\"):e,o=/(\\[[^[\\]]*])/g,l=r.depth>0&&/(\\[[^[\\]]*])/.exec(i),s=l?i.slice(0,l.index):i,n=[];if(s){if(!r.plainObjects&&has.call(Object.prototype,s)&&!r.allowPrototypes)return;n.push(s)}for(var p=0;r.depth>0&&null!==(l=o.exec(i))&&p<r.depth;){if(p+=1,!r.plainObjects&&has.call(Object.prototype,l[1].slice(1,-1))&&!r.allowPrototypes)return;n.push(l[1])}if(l){if(!0===r.strictDepth)throw new RangeError(\"Input depth exceeded depth option of \"+r.depth+\" and strictDepth is true\");n.push(\"[\"+i.slice(l.index)+\"]\")}return parseObject(n,t,r,a)}},normalizeParseOptions=function normalizeParseOptions(e){if(!e)return defaults;if(void 0!==e.allowEmptyArrays&&\"boolean\"!=typeof e.allowEmptyArrays)throw new TypeError(\"`allowEmptyArrays` option can only be `true` or `false`, when provided\");if(void 0!==e.decodeDotInKeys&&\"boolean\"!=typeof e.decodeDotInKeys)throw new TypeError(\"`decodeDotInKeys` option can only be `true` or `false`, when provided\");if(null!==e.decoder&&void 0!==e.decoder&&\"function\"!=typeof e.decoder)throw new TypeError(\"Decoder has to be a function.\");if(void 0!==e.charset&&\"utf-8\"!==e.charset&&\"iso-8859-1\"!==e.charset)throw new TypeError(\"The charset option must be either utf-8, iso-8859-1, or undefined\");var t=void 0===e.charset?defaults.charset:e.charset,r=void 0===e.duplicates?defaults.duplicates:e.duplicates;if(\"combine\"!==r&&\"first\"!==r&&\"last\"!==r)throw new TypeError(\"The duplicates option must be either combine, first, or last\");return{allowDots:void 0===e.allowDots?!0===e.decodeDotInKeys||defaults.allowDots:!!e.allowDots,allowEmptyArrays:\"boolean\"==typeof e.allowEmptyArrays?!!e.allowEmptyArrays:defaults.allowEmptyArrays,allowPrototypes:\"boolean\"==typeof e.allowPrototypes?e.allowPrototypes:defaults.allowPrototypes,allowSparse:\"boolean\"==typeof e.allowSparse?e.allowSparse:defaults.allowSparse,arrayLimit:\"number\"==typeof e.arrayLimit?e.arrayLimit:defaults.arrayLimit,charset:t,charsetSentinel:\"boolean\"==typeof e.charsetSentinel?e.charsetSentinel:defaults.charsetSentinel,comma:\"boolean\"==typeof e.comma?e.comma:defaults.comma,decodeDotInKeys:\"boolean\"==typeof e.decodeDotInKeys?e.decodeDotInKeys:defaults.decodeDotInKeys,decoder:\"function\"==typeof e.decoder?e.decoder:defaults.decoder,delimiter:\"string\"==typeof e.delimiter||utils.isRegExp(e.delimiter)?e.delimiter:defaults.delimiter,depth:\"number\"==typeof e.depth||!1===e.depth?+e.depth:defaults.depth,duplicates:r,ignoreQueryPrefix:!0===e.ignoreQueryPrefix,interpretNumericEntities:\"boolean\"==typeof e.interpretNumericEntities?e.interpretNumericEntities:defaults.interpretNumericEntities,parameterLimit:\"number\"==typeof e.parameterLimit?e.parameterLimit:defaults.parameterLimit,parseArrays:!1!==e.parseArrays,plainObjects:\"boolean\"==typeof e.plainObjects?e.plainObjects:defaults.plainObjects,strictDepth:\"boolean\"==typeof e.strictDepth?!!e.strictDepth:defaults.strictDepth,strictNullHandling:\"boolean\"==typeof e.strictNullHandling?e.strictNullHandling:defaults.strictNullHandling}};module.exports=function(e,t){var r=normalizeParseOptions(t);if(\"\"===e||null==e)return r.plainObjects?Object.create(null):{};for(var a=\"string\"==typeof e?parseValues(e,r):e,i=r.plainObjects?Object.create(null):{},o=Object.keys(a),l=0;l<o.length;++l){var s=o[l],n=parseKeys(s,a[s],r,\"string\"==typeof e);i=utils.merge(i,n,r)}return!0===r.allowSparse?i:utils.compact(i)};\n\n},{\"5\":5}],4:[function(require,module,exports){\n\"use strict\";var getSideChannel=require(29),utils=require(5),formats=require(1),has=Object.prototype.hasOwnProperty,arrayPrefixGenerators={brackets:function brackets(e){return e+\"[]\"},comma:\"comma\",indices:function indices(e,r){return e+\"[\"+r+\"]\"},repeat:function repeat(e){return e}},isArray=Array.isArray,push=Array.prototype.push,pushToArray=function(e,r){push.apply(e,isArray(r)?r:[r])},toISO=Date.prototype.toISOString,defaultFormat=formats.default,defaults={addQueryPrefix:!1,allowDots:!1,allowEmptyArrays:!1,arrayFormat:\"indices\",charset:\"utf-8\",charsetSentinel:!1,delimiter:\"&\",encode:!0,encodeDotInKeys:!1,encoder:utils.encode,encodeValuesOnly:!1,format:defaultFormat,formatter:formats.formatters[defaultFormat],indices:!1,serializeDate:function serializeDate(e){return toISO.call(e)},skipNulls:!1,strictNullHandling:!1},isNonNullishPrimitive=function isNonNullishPrimitive(e){return\"string\"==typeof e||\"number\"==typeof e||\"boolean\"==typeof e||\"symbol\"==typeof e||\"bigint\"==typeof e},sentinel={},stringify=function stringify(e,r,t,o,a,n,i,l,s,f,u,d,y,c,p,m,h,v){for(var w=e,b=v,g=0,A=!1;void 0!==(b=b.get(sentinel))&&!A;){var D=b.get(e);if(g+=1,void 0!==D){if(D===g)throw new RangeError(\"Cyclic object value\");A=!0}void 0===b.get(sentinel)&&(g=0)}if(\"function\"==typeof f?w=f(r,w):w instanceof Date?w=y(w):\"comma\"===t&&isArray(w)&&(w=utils.maybeMap(w,(function(e){return e instanceof Date?y(e):e}))),null===w){if(n)return s&&!m?s(r,defaults.encoder,h,\"key\",c):r;w=\"\"}if(isNonNullishPrimitive(w)||utils.isBuffer(w))return s?[p(m?r:s(r,defaults.encoder,h,\"key\",c))+\"=\"+p(s(w,defaults.encoder,h,\"value\",c))]:[p(r)+\"=\"+p(String(w))];var E,N=[];if(void 0===w)return N;if(\"comma\"===t&&isArray(w))m&&s&&(w=utils.maybeMap(w,s)),E=[{value:w.length>0?w.join(\",\")||null:void 0}];else if(isArray(f))E=f;else{var S=Object.keys(w);E=u?S.sort(u):S}var O=l?r.replace(/\\./g,\"%2E\"):r,T=o&&isArray(w)&&1===w.length?O+\"[]\":O;if(a&&isArray(w)&&0===w.length)return T+\"[]\";for(var k=0;k<E.length;++k){var I=E[k],P=\"object\"==typeof I&&void 0!==I.value?I.value:w[I];if(!i||null!==P){var x=d&&l?I.replace(/\\./g,\"%2E\"):I,z=isArray(w)?\"function\"==typeof t?t(T,x):T:T+(d?\".\"+x:\"[\"+x+\"]\");v.set(e,g);var K=getSideChannel();K.set(sentinel,v),pushToArray(N,stringify(P,z,t,o,a,n,i,l,\"comma\"===t&&m&&isArray(w)?null:s,f,u,d,y,c,p,m,h,K))}}return N},normalizeStringifyOptions=function normalizeStringifyOptions(e){if(!e)return defaults;if(void 0!==e.allowEmptyArrays&&\"boolean\"!=typeof e.allowEmptyArrays)throw new TypeError(\"`allowEmptyArrays` option can only be `true` or `false`, when provided\");if(void 0!==e.encodeDotInKeys&&\"boolean\"!=typeof e.encodeDotInKeys)throw new TypeError(\"`encodeDotInKeys` option can only be `true` or `false`, when provided\");if(null!==e.encoder&&void 0!==e.encoder&&\"function\"!=typeof e.encoder)throw new TypeError(\"Encoder has to be a function.\");var r=e.charset||defaults.charset;if(void 0!==e.charset&&\"utf-8\"!==e.charset&&\"iso-8859-1\"!==e.charset)throw new TypeError(\"The charset option must be either utf-8, iso-8859-1, or undefined\");var t=formats.default;if(void 0!==e.format){if(!has.call(formats.formatters,e.format))throw new TypeError(\"Unknown format option provided.\");t=e.format}var o,a=formats.formatters[t],n=defaults.filter;if((\"function\"==typeof e.filter||isArray(e.filter))&&(n=e.filter),o=e.arrayFormat in arrayPrefixGenerators?e.arrayFormat:\"indices\"in e?e.indices?\"indices\":\"repeat\":defaults.arrayFormat,\"commaRoundTrip\"in e&&\"boolean\"!=typeof e.commaRoundTrip)throw new TypeError(\"`commaRoundTrip` must be a boolean, or absent\");var i=void 0===e.allowDots?!0===e.encodeDotInKeys||defaults.allowDots:!!e.allowDots;return{addQueryPrefix:\"boolean\"==typeof e.addQueryPrefix?e.addQueryPrefix:defaults.addQueryPrefix,allowDots:i,allowEmptyArrays:\"boolean\"==typeof e.allowEmptyArrays?!!e.allowEmptyArrays:defaults.allowEmptyArrays,arrayFormat:o,charset:r,charsetSentinel:\"boolean\"==typeof e.charsetSentinel?e.charsetSentinel:defaults.charsetSentinel,commaRoundTrip:e.commaRoundTrip,delimiter:void 0===e.delimiter?defaults.delimiter:e.delimiter,encode:\"boolean\"==typeof e.encode?e.encode:defaults.encode,encodeDotInKeys:\"boolean\"==typeof e.encodeDotInKeys?e.encodeDotInKeys:defaults.encodeDotInKeys,encoder:\"function\"==typeof e.encoder?e.encoder:defaults.encoder,encodeValuesOnly:\"boolean\"==typeof e.encodeValuesOnly?e.encodeValuesOnly:defaults.encodeValuesOnly,filter:n,format:t,formatter:a,serializeDate:\"function\"==typeof e.serializeDate?e.serializeDate:defaults.serializeDate,skipNulls:\"boolean\"==typeof e.skipNulls?e.skipNulls:defaults.skipNulls,sort:\"function\"==typeof e.sort?e.sort:null,strictNullHandling:\"boolean\"==typeof e.strictNullHandling?e.strictNullHandling:defaults.strictNullHandling}};module.exports=function(e,r){var t,o=e,a=normalizeStringifyOptions(r);\"function\"==typeof a.filter?o=(0,a.filter)(\"\",o):isArray(a.filter)&&(t=a.filter);var n=[];if(\"object\"!=typeof o||null===o)return\"\";var i=arrayPrefixGenerators[a.arrayFormat],l=\"comma\"===i&&a.commaRoundTrip;t||(t=Object.keys(o)),a.sort&&t.sort(a.sort);for(var s=getSideChannel(),f=0;f<t.length;++f){var u=t[f];a.skipNulls&&null===o[u]||pushToArray(n,stringify(o[u],u,i,l,a.allowEmptyArrays,a.strictNullHandling,a.skipNulls,a.encodeDotInKeys,a.encode?a.encoder:null,a.filter,a.sort,a.allowDots,a.serializeDate,a.format,a.formatter,a.encodeValuesOnly,a.charset,s))}var d=n.join(a.delimiter),y=!0===a.addQueryPrefix?\"?\":\"\";return a.charsetSentinel&&(\"iso-8859-1\"===a.charset?y+=\"utf8=%26%2310003%3B&\":y+=\"utf8=%E2%9C%93&\"),d.length>0?y+d:\"\"};\n\n},{\"1\":1,\"29\":29,\"5\":5}],5:[function(require,module,exports){\n\"use strict\";var formats=require(1),has=Object.prototype.hasOwnProperty,isArray=Array.isArray,hexTable=function(){for(var e=[],r=0;r<256;++r)e.push(\"%\"+((r<16?\"0\":\"\")+r.toString(16)).toUpperCase());return e}(),compactQueue=function compactQueue(e){for(;e.length>1;){var r=e.pop(),t=r.obj[r.prop];if(isArray(t)){for(var o=[],n=0;n<t.length;++n)void 0!==t[n]&&o.push(t[n]);r.obj[r.prop]=o}}},arrayToObject=function arrayToObject(e,r){for(var t=r&&r.plainObjects?Object.create(null):{},o=0;o<e.length;++o)void 0!==e[o]&&(t[o]=e[o]);return t},merge=function merge(e,r,t){if(!r)return e;if(\"object\"!=typeof r){if(isArray(e))e.push(r);else{if(!e||\"object\"!=typeof e)return[e,r];(t&&(t.plainObjects||t.allowPrototypes)||!has.call(Object.prototype,r))&&(e[r]=!0)}return e}if(!e||\"object\"!=typeof e)return[e].concat(r);var o=e;return isArray(e)&&!isArray(r)&&(o=arrayToObject(e,t)),isArray(e)&&isArray(r)?(r.forEach((function(r,o){if(has.call(e,o)){var n=e[o];n&&\"object\"==typeof n&&r&&\"object\"==typeof r?e[o]=merge(n,r,t):e.push(r)}else e[o]=r})),e):Object.keys(r).reduce((function(e,o){var n=r[o];return has.call(e,o)?e[o]=merge(e[o],n,t):e[o]=n,e}),o)},assign=function assignSingleSource(e,r){return Object.keys(r).reduce((function(e,t){return e[t]=r[t],e}),e)},decode=function(e,r,t){var o=e.replace(/\\+/g,\" \");if(\"iso-8859-1\"===t)return o.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(o)}catch(e){return o}},limit=1024,encode=function encode(e,r,t,o,n){if(0===e.length)return e;var a=e;if(\"symbol\"==typeof e?a=Symbol.prototype.toString.call(e):\"string\"!=typeof e&&(a=String(e)),\"iso-8859-1\"===t)return escape(a).replace(/%u[0-9a-f]{4}/gi,(function(e){return\"%26%23\"+parseInt(e.slice(2),16)+\"%3B\"}));for(var c=\"\",i=0;i<a.length;i+=limit){for(var u=a.length>=limit?a.slice(i,i+limit):a,p=[],s=0;s<u.length;++s){var f=u.charCodeAt(s);45===f||46===f||95===f||126===f||f>=48&&f<=57||f>=65&&f<=90||f>=97&&f<=122||n===formats.RFC1738&&(40===f||41===f)?p[p.length]=u.charAt(s):f<128?p[p.length]=hexTable[f]:f<2048?p[p.length]=hexTable[192|f>>6]+hexTable[128|63&f]:f<55296||f>=57344?p[p.length]=hexTable[224|f>>12]+hexTable[128|f>>6&63]+hexTable[128|63&f]:(s+=1,f=65536+((1023&f)<<10|1023&u.charCodeAt(s)),p[p.length]=hexTable[240|f>>18]+hexTable[128|f>>12&63]+hexTable[128|f>>6&63]+hexTable[128|63&f])}c+=p.join(\"\")}return c},compact=function compact(e){for(var r=[{obj:{o:e},prop:\"o\"}],t=[],o=0;o<r.length;++o)for(var n=r[o],a=n.obj[n.prop],c=Object.keys(a),i=0;i<c.length;++i){var u=c[i],p=a[u];\"object\"==typeof p&&null!==p&&-1===t.indexOf(p)&&(r.push({obj:a,prop:u}),t.push(p))}return compactQueue(r),e},isRegExp=function isRegExp(e){return\"[object RegExp]\"===Object.prototype.toString.call(e)},isBuffer=function isBuffer(e){return!(!e||\"object\"!=typeof e||!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e)))},combine=function combine(e,r){return[].concat(e,r)},maybeMap=function maybeMap(e,r){if(isArray(e)){for(var t=[],o=0;o<e.length;o+=1)t.push(r(e[o]));return t}return r(e)};module.exports={/* common-shake removed: arrayToObject:arrayToObject *//* common-shake removed: assign:assign */combine:combine,compact:compact,decode:decode,encode:encode,isBuffer:isBuffer,isRegExp:isRegExp,maybeMap:maybeMap,merge:merge};\n\n},{\"1\":1}],29:[function(require,module,exports){\n\"use strict\";var GetIntrinsic=require(20),callBound=require(7),inspect=require(27),$TypeError=require(16),$WeakMap=GetIntrinsic(\"%WeakMap%\",!0),$Map=GetIntrinsic(\"%Map%\",!0),$weakMapGet=callBound(\"WeakMap.prototype.get\",!0),$weakMapSet=callBound(\"WeakMap.prototype.set\",!0),$weakMapHas=callBound(\"WeakMap.prototype.has\",!0),$mapGet=callBound(\"Map.prototype.get\",!0),$mapSet=callBound(\"Map.prototype.set\",!0),$mapHas=callBound(\"Map.prototype.has\",!0),listGetNode=function(e,t){for(var n,a=e;null!==(n=a.next);a=n)if(n.key===t)return a.next=n.next,n.next=e.next,e.next=n,n},listGet=function(e,t){var n=listGetNode(e,t);return n&&n.value},listSet=function(e,t,n){var a=listGetNode(e,t);a?a.value=n:e.next={key:t,next:e.next,value:n}},listHas=function(e,t){return!!listGetNode(e,t)};module.exports=function getSideChannel(){var e,t,n,a={assert:function(e){if(!a.has(e))throw new $TypeError(\"Side channel does not contain \"+inspect(e))},get:function(a){if($WeakMap&&a&&(\"object\"==typeof a||\"function\"==typeof a)){if(e)return $weakMapGet(e,a)}else if($Map){if(t)return $mapGet(t,a)}else if(n)return listGet(n,a)},has:function(a){if($WeakMap&&a&&(\"object\"==typeof a||\"function\"==typeof a)){if(e)return $weakMapHas(e,a)}else if($Map){if(t)return $mapHas(t,a)}else if(n)return listHas(n,a);return!1},set:function(a,r){$WeakMap&&a&&(\"object\"==typeof a||\"function\"==typeof a)?(e||(e=new $WeakMap),$weakMapSet(e,a,r)):$Map?(t||(t=new $Map),$mapSet(t,a,r)):(n||(n={key:{},next:null}),listSet(n,a,r))}};return a};\n\n},{\"16\":16,\"20\":20,\"27\":27,\"7\":7}],6:[function(require,module,exports){\n\n},{}],7:[function(require,module,exports){\n\"use strict\";var GetIntrinsic=require(20),callBind=require(8),$indexOf=callBind(GetIntrinsic(\"String.prototype.indexOf\"));module.exports=function callBoundIntrinsic(i,n){var t=GetIntrinsic(i,!!n);return\"function\"==typeof t&&$indexOf(i,\".prototype.\")>-1?callBind(t):t};\n\n},{\"20\":20,\"8\":8}],20:[function(require,module,exports){\n\"use strict\";var undefined,$Error=require(12),$EvalError=require(11),$RangeError=require(13),$ReferenceError=require(14),$SyntaxError=require(15),$TypeError=require(16),$URIError=require(17),$Function=Function,getEvalledConstructor=function(r){try{return $Function('\"use strict\"; return ('+r+\").constructor;\")()}catch(r){}},$gOPD=Object.getOwnPropertyDescriptor;if($gOPD)try{$gOPD({},\"\")}catch(r){$gOPD=null}var throwTypeError=function(){throw new $TypeError},ThrowTypeError=$gOPD?function(){try{return throwTypeError}catch(r){try{return $gOPD(arguments,\"callee\").get}catch(r){return throwTypeError}}}():throwTypeError,hasSymbols=require(24)(),hasProto=require(23)(),getProto=Object.getPrototypeOf||(hasProto?function(r){return r.__proto__}:null),needsEval={},TypedArray=\"undefined\"!=typeof Uint8Array&&getProto?getProto(Uint8Array):undefined,INTRINSICS={__proto__:null,\"%AggregateError%\":\"undefined\"==typeof AggregateError?undefined:AggregateError,\"%Array%\":Array,\"%ArrayBuffer%\":\"undefined\"==typeof ArrayBuffer?undefined:ArrayBuffer,\"%ArrayIteratorPrototype%\":hasSymbols&&getProto?getProto([][Symbol.iterator]()):undefined,\"%AsyncFromSyncIteratorPrototype%\":undefined,\"%AsyncFunction%\":needsEval,\"%AsyncGenerator%\":needsEval,\"%AsyncGeneratorFunction%\":needsEval,\"%AsyncIteratorPrototype%\":needsEval,\"%Atomics%\":\"undefined\"==typeof Atomics?undefined:Atomics,\"%BigInt%\":\"undefined\"==typeof BigInt?undefined:BigInt,\"%BigInt64Array%\":\"undefined\"==typeof BigInt64Array?undefined:BigInt64Array,\"%BigUint64Array%\":\"undefined\"==typeof BigUint64Array?undefined:BigUint64Array,\"%Boolean%\":Boolean,\"%DataView%\":\"undefined\"==typeof DataView?undefined:DataView,\"%Date%\":Date,\"%decodeURI%\":decodeURI,\"%decodeURIComponent%\":decodeURIComponent,\"%encodeURI%\":encodeURI,\"%encodeURIComponent%\":encodeURIComponent,\"%Error%\":$Error,\"%eval%\":eval,\"%EvalError%\":$EvalError,\"%Float32Array%\":\"undefined\"==typeof Float32Array?undefined:Float32Array,\"%Float64Array%\":\"undefined\"==typeof Float64Array?undefined:Float64Array,\"%FinalizationRegistry%\":\"undefined\"==typeof FinalizationRegistry?undefined:FinalizationRegistry,\"%Function%\":$Function,\"%GeneratorFunction%\":needsEval,\"%Int8Array%\":\"undefined\"==typeof Int8Array?undefined:Int8Array,\"%Int16Array%\":\"undefined\"==typeof Int16Array?undefined:Int16Array,\"%Int32Array%\":\"undefined\"==typeof Int32Array?undefined:Int32Array,\"%isFinite%\":isFinite,\"%isNaN%\":isNaN,\"%IteratorPrototype%\":hasSymbols&&getProto?getProto(getProto([][Symbol.iterator]())):undefined,\"%JSON%\":\"object\"==typeof JSON?JSON:undefined,\"%Map%\":\"undefined\"==typeof Map?undefined:Map,\"%MapIteratorPrototype%\":\"undefined\"!=typeof Map&&hasSymbols&&getProto?getProto((new Map)[Symbol.iterator]()):undefined,\"%Math%\":Math,\"%Number%\":Number,\"%Object%\":Object,\"%parseFloat%\":parseFloat,\"%parseInt%\":parseInt,\"%Promise%\":\"undefined\"==typeof Promise?undefined:Promise,\"%Proxy%\":\"undefined\"==typeof Proxy?undefined:Proxy,\"%RangeError%\":$RangeError,\"%ReferenceError%\":$ReferenceError,\"%Reflect%\":\"undefined\"==typeof Reflect?undefined:Reflect,\"%RegExp%\":RegExp,\"%Set%\":\"undefined\"==typeof Set?undefined:Set,\"%SetIteratorPrototype%\":\"undefined\"!=typeof Set&&hasSymbols&&getProto?getProto((new Set)[Symbol.iterator]()):undefined,\"%SharedArrayBuffer%\":\"undefined\"==typeof SharedArrayBuffer?undefined:SharedArrayBuffer,\"%String%\":String,\"%StringIteratorPrototype%\":hasSymbols&&getProto?getProto(\"\"[Symbol.iterator]()):undefined,\"%Symbol%\":hasSymbols?Symbol:undefined,\"%SyntaxError%\":$SyntaxError,\"%ThrowTypeError%\":ThrowTypeError,\"%TypedArray%\":TypedArray,\"%TypeError%\":$TypeError,\"%Uint8Array%\":\"undefined\"==typeof Uint8Array?undefined:Uint8Array,\"%Uint8ClampedArray%\":\"undefined\"==typeof Uint8ClampedArray?undefined:Uint8ClampedArray,\"%Uint16Array%\":\"undefined\"==typeof Uint16Array?undefined:Uint16Array,\"%Uint32Array%\":\"undefined\"==typeof Uint32Array?undefined:Uint32Array,\"%URIError%\":$URIError,\"%WeakMap%\":\"undefined\"==typeof WeakMap?undefined:WeakMap,\"%WeakRef%\":\"undefined\"==typeof WeakRef?undefined:WeakRef,\"%WeakSet%\":\"undefined\"==typeof WeakSet?undefined:WeakSet};if(getProto)try{null.error}catch(r){var errorProto=getProto(getProto(r));INTRINSICS[\"%Error.prototype%\"]=errorProto}var doEval=function doEval(r){var e;if(\"%AsyncFunction%\"===r)e=getEvalledConstructor(\"async function () {}\");else if(\"%GeneratorFunction%\"===r)e=getEvalledConstructor(\"function* () {}\");else if(\"%AsyncGeneratorFunction%\"===r)e=getEvalledConstructor(\"async function* () {}\");else if(\"%AsyncGenerator%\"===r){var t=doEval(\"%AsyncGeneratorFunction%\");t&&(e=t.prototype)}else if(\"%AsyncIteratorPrototype%\"===r){var o=doEval(\"%AsyncGenerator%\");o&&getProto&&(e=getProto(o.prototype))}return INTRINSICS[r]=e,e},LEGACY_ALIASES={__proto__:null,\"%ArrayBufferPrototype%\":[\"ArrayBuffer\",\"prototype\"],\"%ArrayPrototype%\":[\"Array\",\"prototype\"],\"%ArrayProto_entries%\":[\"Array\",\"prototype\",\"entries\"],\"%ArrayProto_forEach%\":[\"Array\",\"prototype\",\"forEach\"],\"%ArrayProto_keys%\":[\"Array\",\"prototype\",\"keys\"],\"%ArrayProto_values%\":[\"Array\",\"prototype\",\"values\"],\"%AsyncFunctionPrototype%\":[\"AsyncFunction\",\"prototype\"],\"%AsyncGenerator%\":[\"AsyncGeneratorFunction\",\"prototype\"],\"%AsyncGeneratorPrototype%\":[\"AsyncGeneratorFunction\",\"prototype\",\"prototype\"],\"%BooleanPrototype%\":[\"Boolean\",\"prototype\"],\"%DataViewPrototype%\":[\"DataView\",\"prototype\"],\"%DatePrototype%\":[\"Date\",\"prototype\"],\"%ErrorPrototype%\":[\"Error\",\"prototype\"],\"%EvalErrorPrototype%\":[\"EvalError\",\"prototype\"],\"%Float32ArrayPrototype%\":[\"Float32Array\",\"prototype\"],\"%Float64ArrayPrototype%\":[\"Float64Array\",\"prototype\"],\"%FunctionPrototype%\":[\"Function\",\"prototype\"],\"%Generator%\":[\"GeneratorFunction\",\"prototype\"],\"%GeneratorPrototype%\":[\"GeneratorFunction\",\"prototype\",\"prototype\"],\"%Int8ArrayPrototype%\":[\"Int8Array\",\"prototype\"],\"%Int16ArrayPrototype%\":[\"Int16Array\",\"prototype\"],\"%Int32ArrayPrototype%\":[\"Int32Array\",\"prototype\"],\"%JSONParse%\":[\"JSON\",\"parse\"],\"%JSONStringify%\":[\"JSON\",\"stringify\"],\"%MapPrototype%\":[\"Map\",\"prototype\"],\"%NumberPrototype%\":[\"Number\",\"prototype\"],\"%ObjectPrototype%\":[\"Object\",\"prototype\"],\"%ObjProto_toString%\":[\"Object\",\"prototype\",\"toString\"],\"%ObjProto_valueOf%\":[\"Object\",\"prototype\",\"valueOf\"],\"%PromisePrototype%\":[\"Promise\",\"prototype\"],\"%PromiseProto_then%\":[\"Promise\",\"prototype\",\"then\"],\"%Promise_all%\":[\"Promise\",\"all\"],\"%Promise_reject%\":[\"Promise\",\"reject\"],\"%Promise_resolve%\":[\"Promise\",\"resolve\"],\"%RangeErrorPrototype%\":[\"RangeError\",\"prototype\"],\"%ReferenceErrorPrototype%\":[\"ReferenceError\",\"prototype\"],\"%RegExpPrototype%\":[\"RegExp\",\"prototype\"],\"%SetPrototype%\":[\"Set\",\"prototype\"],\"%SharedArrayBufferPrototype%\":[\"SharedArrayBuffer\",\"prototype\"],\"%StringPrototype%\":[\"String\",\"prototype\"],\"%SymbolPrototype%\":[\"Symbol\",\"prototype\"],\"%SyntaxErrorPrototype%\":[\"SyntaxError\",\"prototype\"],\"%TypedArrayPrototype%\":[\"TypedArray\",\"prototype\"],\"%TypeErrorPrototype%\":[\"TypeError\",\"prototype\"],\"%Uint8ArrayPrototype%\":[\"Uint8Array\",\"prototype\"],\"%Uint8ClampedArrayPrototype%\":[\"Uint8ClampedArray\",\"prototype\"],\"%Uint16ArrayPrototype%\":[\"Uint16Array\",\"prototype\"],\"%Uint32ArrayPrototype%\":[\"Uint32Array\",\"prototype\"],\"%URIErrorPrototype%\":[\"URIError\",\"prototype\"],\"%WeakMapPrototype%\":[\"WeakMap\",\"prototype\"],\"%WeakSetPrototype%\":[\"WeakSet\",\"prototype\"]},bind=require(19),hasOwn=require(26),$concat=bind.call(Function.call,Array.prototype.concat),$spliceApply=bind.call(Function.apply,Array.prototype.splice),$replace=bind.call(Function.call,String.prototype.replace),$strSlice=bind.call(Function.call,String.prototype.slice),$exec=bind.call(Function.call,RegExp.prototype.exec),rePropName=/[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g,reEscapeChar=/\\\\(\\\\)?/g,stringToPath=function stringToPath(r){var e=$strSlice(r,0,1),t=$strSlice(r,-1);if(\"%\"===e&&\"%\"!==t)throw new $SyntaxError(\"invalid intrinsic syntax, expected closing `%`\");if(\"%\"===t&&\"%\"!==e)throw new $SyntaxError(\"invalid intrinsic syntax, expected opening `%`\");var o=[];return $replace(r,rePropName,(function(r,e,t,n){o[o.length]=t?$replace(n,reEscapeChar,\"$1\"):e||r})),o},getBaseIntrinsic=function getBaseIntrinsic(r,e){var t,o=r;if(hasOwn(LEGACY_ALIASES,o)&&(o=\"%\"+(t=LEGACY_ALIASES[o])[0]+\"%\"),hasOwn(INTRINSICS,o)){var n=INTRINSICS[o];if(n===needsEval&&(n=doEval(o)),void 0===n&&!e)throw new $TypeError(\"intrinsic \"+r+\" exists, but is not available. Please file an issue!\");return{alias:t,name:o,value:n}}throw new $SyntaxError(\"intrinsic \"+r+\" does not exist!\")};module.exports=function GetIntrinsic(r,e){if(\"string\"!=typeof r||0===r.length)throw new $TypeError(\"intrinsic name must be a non-empty string\");if(arguments.length>1&&\"boolean\"!=typeof e)throw new $TypeError('\"allowMissing\" argument must be a boolean');if(null===$exec(/^%?[^%]*%?$/,r))throw new $SyntaxError(\"`%` may not be present anywhere but at the beginning and end of the intrinsic name\");var t=stringToPath(r),o=t.length>0?t[0]:\"\",n=getBaseIntrinsic(\"%\"+o+\"%\",e),a=n.name,y=n.value,i=!1,p=n.alias;p&&(o=p[0],$spliceApply(t,$concat([0,1],p)));for(var d=1,s=!0;d<t.length;d+=1){var f=t[d],u=$strSlice(f,0,1),l=$strSlice(f,-1);if(('\"'===u||\"'\"===u||\"`\"===u||'\"'===l||\"'\"===l||\"`\"===l)&&u!==l)throw new $SyntaxError(\"property names with quotes must have matching quotes\");if(\"constructor\"!==f&&s||(i=!0),hasOwn(INTRINSICS,a=\"%\"+(o+=\".\"+f)+\"%\"))y=INTRINSICS[a];else if(null!=y){if(!(f in y)){if(!e)throw new $TypeError(\"base intrinsic for \"+r+\" exists, but the property is not available.\");return}if($gOPD&&d+1>=t.length){var c=$gOPD(y,f);y=(s=!!c)&&\"get\"in c&&!(\"originalValue\"in c.get)?c.get:y[f]}else s=hasOwn(y,f),y=y[f];s&&!i&&(INTRINSICS[a]=y)}}return y};\n\n},{\"11\":11,\"12\":12,\"13\":13,\"14\":14,\"15\":15,\"16\":16,\"17\":17,\"19\":19,\"23\":23,\"24\":24,\"26\":26}],8:[function(require,module,exports){\n\"use strict\";var bind=require(19),GetIntrinsic=require(20),setFunctionLength=require(28),$TypeError=require(16),$apply=GetIntrinsic(\"%Function.prototype.apply%\"),$call=GetIntrinsic(\"%Function.prototype.call%\"),$reflectApply=GetIntrinsic(\"%Reflect.apply%\",!0)||bind.call($call,$apply),$defineProperty=require(10),$max=GetIntrinsic(\"%Math.max%\");module.exports=function callBind(e){if(\"function\"!=typeof e)throw new $TypeError(\"a function is required\");var n=$reflectApply(bind,$call,arguments);return setFunctionLength(n,1+$max(0,e.length-(arguments.length-1)),!0)};var applyBind=function applyBind(){return $reflectApply(bind,$apply,arguments)};$defineProperty?$defineProperty(module.exports,\"apply\",{value:applyBind}):module.exports.apply=applyBind;\n\n},{\"10\":10,\"16\":16,\"19\":19,\"20\":20,\"28\":28}],16:[function(require,module,exports){\n\"use strict\";module.exports=TypeError;\n\n},{}],19:[function(require,module,exports){\n\"use strict\";var implementation=require(18);module.exports=Function.prototype.bind||implementation;\n\n},{\"18\":18}],10:[function(require,module,exports){\n\"use strict\";var GetIntrinsic=require(20),$defineProperty=GetIntrinsic(\"%Object.defineProperty%\",!0)||!1;if($defineProperty)try{$defineProperty({},\"a\",{value:1})}catch(e){$defineProperty=!1}module.exports=$defineProperty;\n\n},{\"20\":20}],28:[function(require,module,exports){\n\"use strict\";var GetIntrinsic=require(20),define=require(9),hasDescriptors=require(22)(),gOPD=require(21),$TypeError=require(16),$floor=GetIntrinsic(\"%Math.floor%\");module.exports=function setFunctionLength(e,r){if(\"function\"!=typeof e)throw new $TypeError(\"`fn` is not a function\");if(\"number\"!=typeof r||r<0||r>4294967295||$floor(r)!==r)throw new $TypeError(\"`length` must be a positive 32-bit integer\");var t=arguments.length>2&&!!arguments[2],i=!0,n=!0;if(\"length\"in e&&gOPD){var o=gOPD(e,\"length\");o&&!o.configurable&&(i=!1),o&&!o.writable&&(n=!1)}return(i||n||!t)&&(hasDescriptors?define(e,\"length\",r,!0,!0):define(e,\"length\",r)),e};\n\n},{\"16\":16,\"20\":20,\"21\":21,\"22\":22,\"9\":9}],9:[function(require,module,exports){\n\"use strict\";var $defineProperty=require(10),$SyntaxError=require(15),$TypeError=require(16),gopd=require(21);module.exports=function defineDataProperty(e,r,o){if(!e||\"object\"!=typeof e&&\"function\"!=typeof e)throw new $TypeError(\"`obj` must be an object or a function`\");if(\"string\"!=typeof r&&\"symbol\"!=typeof r)throw new $TypeError(\"`property` must be a string or a symbol`\");if(arguments.length>3&&\"boolean\"!=typeof arguments[3]&&null!==arguments[3])throw new $TypeError(\"`nonEnumerable`, if provided, must be a boolean or null\");if(arguments.length>4&&\"boolean\"!=typeof arguments[4]&&null!==arguments[4])throw new $TypeError(\"`nonWritable`, if provided, must be a boolean or null\");if(arguments.length>5&&\"boolean\"!=typeof arguments[5]&&null!==arguments[5])throw new $TypeError(\"`nonConfigurable`, if provided, must be a boolean or null\");if(arguments.length>6&&\"boolean\"!=typeof arguments[6])throw new $TypeError(\"`loose`, if provided, must be a boolean\");var n=arguments.length>3?arguments[3]:null,l=arguments.length>4?arguments[4]:null,t=arguments.length>5?arguments[5]:null,i=arguments.length>6&&arguments[6],a=!!gopd&&gopd(e,r);if($defineProperty)$defineProperty(e,r,{configurable:null===t&&a?a.configurable:!t,enumerable:null===n&&a?a.enumerable:!n,value:o,writable:null===l&&a?a.writable:!l});else{if(!i&&(n||l||t))throw new $SyntaxError(\"This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.\");e[r]=o}};\n\n},{\"10\":10,\"15\":15,\"16\":16,\"21\":21}],15:[function(require,module,exports){\n\"use strict\";module.exports=SyntaxError;\n\n},{}],21:[function(require,module,exports){\n\"use strict\";var GetIntrinsic=require(20),$gOPD=GetIntrinsic(\"%Object.getOwnPropertyDescriptor%\",!0);if($gOPD)try{$gOPD([],\"length\")}catch(t){$gOPD=null}module.exports=$gOPD;\n\n},{\"20\":20}],11:[function(require,module,exports){\n\"use strict\";module.exports=EvalError;\n\n},{}],12:[function(require,module,exports){\n\"use strict\";module.exports=Error;\n\n},{}],13:[function(require,module,exports){\n\"use strict\";module.exports=RangeError;\n\n},{}],14:[function(require,module,exports){\n\"use strict\";module.exports=ReferenceError;\n\n},{}],17:[function(require,module,exports){\n\"use strict\";module.exports=URIError;\n\n},{}],18:[function(require,module,exports){\n\"use strict\";var ERROR_MESSAGE=\"Function.prototype.bind called on incompatible \",toStr=Object.prototype.toString,max=Math.max,funcType=\"[object Function]\",concatty=function concatty(t,n){for(var r=[],o=0;o<t.length;o+=1)r[o]=t[o];for(var e=0;e<n.length;e+=1)r[e+t.length]=n[e];return r},slicy=function slicy(t,n){for(var r=[],o=n||0,e=0;o<t.length;o+=1,e+=1)r[e]=t[o];return r},joiny=function(t,n){for(var r=\"\",o=0;o<t.length;o+=1)r+=t[o],o+1<t.length&&(r+=n);return r};module.exports=function bind(t){var n=this;if(\"function\"!=typeof n||toStr.apply(n)!==funcType)throw new TypeError(ERROR_MESSAGE+n);for(var r,o=slicy(arguments,1),e=max(0,n.length-o.length),i=[],c=0;c<e;c++)i[c]=\"$\"+c;if(r=Function(\"binder\",\"return function (\"+joiny(i,\",\")+\"){ return binder.apply(this,arguments); }\")((function(){if(this instanceof r){var e=n.apply(this,concatty(o,arguments));return Object(e)===e?e:this}return n.apply(t,concatty(o,arguments))})),n.prototype){var p=function Empty(){};p.prototype=n.prototype,r.prototype=new p,p.prototype=null}return r};\n\n},{}],23:[function(require,module,exports){\n\"use strict\";var test={__proto__:null,foo:{}},$Object=Object;module.exports=function hasProto(){return{__proto__:test}.foo===test.foo&&!(test instanceof $Object)};\n\n},{}],26:[function(require,module,exports){\n\"use strict\";var call=Function.prototype.call,$hasOwn=Object.prototype.hasOwnProperty,bind=require(19);module.exports=bind.call(call,$hasOwn);\n\n},{\"19\":19}],24:[function(require,module,exports){\n\"use strict\";var origSymbol=\"undefined\"!=typeof Symbol&&Symbol,hasSymbolSham=require(25);module.exports=function hasNativeSymbols(){return\"function\"==typeof origSymbol&&\"function\"==typeof Symbol&&\"symbol\"==typeof origSymbol(\"foo\")&&\"symbol\"==typeof Symbol(\"bar\")&&hasSymbolSham()};\n\n},{\"25\":25}],22:[function(require,module,exports){\n\"use strict\";var $defineProperty=require(10),hasPropertyDescriptors=function hasPropertyDescriptors(){return!!$defineProperty};hasPropertyDescriptors.hasArrayLengthDefineBug=function hasArrayLengthDefineBug(){if(!$defineProperty)return null;try{return 1!==$defineProperty([],\"length\",{value:1}).length}catch(r){return!0}},module.exports=hasPropertyDescriptors;\n\n},{\"10\":10}],25:[function(require,module,exports){\n\"use strict\";module.exports=function hasSymbols(){if(\"function\"!=typeof Symbol||\"function\"!=typeof Object.getOwnPropertySymbols)return!1;if(\"symbol\"==typeof Symbol.iterator)return!0;var t={},e=Symbol(\"test\"),r=Object(e);if(\"string\"==typeof e)return!1;if(\"[object Symbol]\"!==Object.prototype.toString.call(e))return!1;if(\"[object Symbol]\"!==Object.prototype.toString.call(r))return!1;for(e in t[e]=42,t)return!1;if(\"function\"==typeof Object.keys&&0!==Object.keys(t).length)return!1;if(\"function\"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(t).length)return!1;var o=Object.getOwnPropertySymbols(t);if(1!==o.length||o[0]!==e)return!1;if(!Object.prototype.propertyIsEnumerable.call(t,e))return!1;if(\"function\"==typeof Object.getOwnPropertyDescriptor){var n=Object.getOwnPropertyDescriptor(t,e);if(42!==n.value||!0!==n.enumerable)return!1}return!0};\n\n},{}],27:[function(require,module,exports){\n(function (global){(function (){\nvar hasMap=\"function\"==typeof Map&&Map.prototype,mapSizeDescriptor=Object.getOwnPropertyDescriptor&&hasMap?Object.getOwnPropertyDescriptor(Map.prototype,\"size\"):null,mapSize=hasMap&&mapSizeDescriptor&&\"function\"==typeof mapSizeDescriptor.get?mapSizeDescriptor.get:null,mapForEach=hasMap&&Map.prototype.forEach,hasSet=\"function\"==typeof Set&&Set.prototype,setSizeDescriptor=Object.getOwnPropertyDescriptor&&hasSet?Object.getOwnPropertyDescriptor(Set.prototype,\"size\"):null,setSize=hasSet&&setSizeDescriptor&&\"function\"==typeof setSizeDescriptor.get?setSizeDescriptor.get:null,setForEach=hasSet&&Set.prototype.forEach,hasWeakMap=\"function\"==typeof WeakMap&&WeakMap.prototype,weakMapHas=hasWeakMap?WeakMap.prototype.has:null,hasWeakSet=\"function\"==typeof WeakSet&&WeakSet.prototype,weakSetHas=hasWeakSet?WeakSet.prototype.has:null,hasWeakRef=\"function\"==typeof WeakRef&&WeakRef.prototype,weakRefDeref=hasWeakRef?WeakRef.prototype.deref:null,booleanValueOf=Boolean.prototype.valueOf,objectToString=Object.prototype.toString,functionToString=Function.prototype.toString,$match=String.prototype.match,$slice=String.prototype.slice,$replace=String.prototype.replace,$toUpperCase=String.prototype.toUpperCase,$toLowerCase=String.prototype.toLowerCase,$test=RegExp.prototype.test,$concat=Array.prototype.concat,$join=Array.prototype.join,$arrSlice=Array.prototype.slice,$floor=Math.floor,bigIntValueOf=\"function\"==typeof BigInt?BigInt.prototype.valueOf:null,gOPS=Object.getOwnPropertySymbols,symToString=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?Symbol.prototype.toString:null,hasShammedSymbols=\"function\"==typeof Symbol&&\"object\"==typeof Symbol.iterator,toStringTag=\"function\"==typeof Symbol&&Symbol.toStringTag&&(Symbol.toStringTag,1)?Symbol.toStringTag:null,isEnumerable=Object.prototype.propertyIsEnumerable,gPO=(\"function\"==typeof Reflect?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(t){return t.__proto__}:null);function addNumericSeparator(t,e){if(t===1/0||t===-1/0||t!=t||t&&t>-1e3&&t<1e3||$test.call(/e/,e))return e;var r=/[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;if(\"number\"==typeof t){var n=t<0?-$floor(-t):$floor(t);if(n!==t){var o=String(n),i=$slice.call(e,o.length+1);return $replace.call(o,r,\"$&_\")+\".\"+$replace.call($replace.call(i,/([0-9]{3})/g,\"$&_\"),/_$/,\"\")}}return $replace.call(e,r,\"$&_\")}var utilInspect=require(6),inspectCustom=utilInspect.custom,inspectSymbol=isSymbol(inspectCustom)?inspectCustom:null;function wrapQuotes(t,e,r){var n=\"double\"===(r.quoteStyle||e)?'\"':\"'\";return n+t+n}function quote(t){return $replace.call(String(t),/\"/g,\"&quot;\")}function isArray(t){return!(\"[object Array]\"!==toStr(t)||toStringTag&&\"object\"==typeof t&&toStringTag in t)}function isDate(t){return!(\"[object Date]\"!==toStr(t)||toStringTag&&\"object\"==typeof t&&toStringTag in t)}function isRegExp(t){return!(\"[object RegExp]\"!==toStr(t)||toStringTag&&\"object\"==typeof t&&toStringTag in t)}function isError(t){return!(\"[object Error]\"!==toStr(t)||toStringTag&&\"object\"==typeof t&&toStringTag in t)}function isString(t){return!(\"[object String]\"!==toStr(t)||toStringTag&&\"object\"==typeof t&&toStringTag in t)}function isNumber(t){return!(\"[object Number]\"!==toStr(t)||toStringTag&&\"object\"==typeof t&&toStringTag in t)}function isBoolean(t){return!(\"[object Boolean]\"!==toStr(t)||toStringTag&&\"object\"==typeof t&&toStringTag in t)}function isSymbol(t){if(hasShammedSymbols)return t&&\"object\"==typeof t&&t instanceof Symbol;if(\"symbol\"==typeof t)return!0;if(!t||\"object\"!=typeof t||!symToString)return!1;try{return symToString.call(t),!0}catch(t){}return!1}function isBigInt(t){if(!t||\"object\"!=typeof t||!bigIntValueOf)return!1;try{return bigIntValueOf.call(t),!0}catch(t){}return!1}module.exports=function inspect_(t,e,r,n){var o=e||{};if(has(o,\"quoteStyle\")&&\"single\"!==o.quoteStyle&&\"double\"!==o.quoteStyle)throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');if(has(o,\"maxStringLength\")&&(\"number\"==typeof o.maxStringLength?o.maxStringLength<0&&o.maxStringLength!==1/0:null!==o.maxStringLength))throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');var i=!has(o,\"customInspect\")||o.customInspect;if(\"boolean\"!=typeof i&&\"symbol\"!==i)throw new TypeError(\"option \\\"customInspect\\\", if provided, must be `true`, `false`, or `'symbol'`\");if(has(o,\"indent\")&&null!==o.indent&&\"\\t\"!==o.indent&&!(parseInt(o.indent,10)===o.indent&&o.indent>0))throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');if(has(o,\"numericSeparator\")&&\"boolean\"!=typeof o.numericSeparator)throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');var a=o.numericSeparator;if(void 0===t)return\"undefined\";if(null===t)return\"null\";if(\"boolean\"==typeof t)return t?\"true\":\"false\";if(\"string\"==typeof t)return inspectString(t,o);if(\"number\"==typeof t){if(0===t)return 1/0/t>0?\"0\":\"-0\";var c=String(t);return a?addNumericSeparator(t,c):c}if(\"bigint\"==typeof t){var l=String(t)+\"n\";return a?addNumericSeparator(t,l):l}var p=void 0===o.depth?5:o.depth;if(void 0===r&&(r=0),r>=p&&p>0&&\"object\"==typeof t)return isArray(t)?\"[Array]\":\"[Object]\";var u=getIndent(o,r);if(void 0===n)n=[];else if(indexOf(n,t)>=0)return\"[Circular]\";function inspect(t,e,i){if(e&&(n=$arrSlice.call(n)).push(e),i){var a={depth:o.depth};return has(o,\"quoteStyle\")&&(a.quoteStyle=o.quoteStyle),inspect_(t,a,r+1,n)}return inspect_(t,o,r+1,n)}if(\"function\"==typeof t&&!isRegExp(t)){var f=nameOf(t),s=arrObjKeys(t,inspect);return\"[Function\"+(f?\": \"+f:\" (anonymous)\")+\"]\"+(s.length>0?\" { \"+$join.call(s,\", \")+\" }\":\"\")}if(isSymbol(t)){var y=hasShammedSymbols?$replace.call(String(t),/^(Symbol\\(.*\\))_[^)]*$/,\"$1\"):symToString.call(t);return\"object\"!=typeof t||hasShammedSymbols?y:markBoxed(y)}if(isElement(t)){for(var S=\"<\"+$toLowerCase.call(String(t.nodeName)),g=t.attributes||[],b=0;b<g.length;b++)S+=\" \"+g[b].name+\"=\"+wrapQuotes(quote(g[b].value),\"double\",o);return S+=\">\",t.childNodes&&t.childNodes.length&&(S+=\"...\"),S+\"</\"+$toLowerCase.call(String(t.nodeName))+\">\"}if(isArray(t)){if(0===t.length)return\"[]\";var m=arrObjKeys(t,inspect);return u&&!singleLineValues(m)?\"[\"+indentedJoin(m,u)+\"]\":\"[ \"+$join.call(m,\", \")+\" ]\"}if(isError(t)){var h=arrObjKeys(t,inspect);return\"cause\"in Error.prototype||!(\"cause\"in t)||isEnumerable.call(t,\"cause\")?0===h.length?\"[\"+String(t)+\"]\":\"{ [\"+String(t)+\"] \"+$join.call(h,\", \")+\" }\":\"{ [\"+String(t)+\"] \"+$join.call($concat.call(\"[cause]: \"+inspect(t.cause),h),\", \")+\" }\"}if(\"object\"==typeof t&&i){if(inspectSymbol&&\"function\"==typeof t[inspectSymbol]&&utilInspect)return utilInspect(t,{depth:p-r});if(\"symbol\"!==i&&\"function\"==typeof t.inspect)return t.inspect()}if(isMap(t)){var d=[];return mapForEach&&mapForEach.call(t,(function(e,r){d.push(inspect(r,t,!0)+\" => \"+inspect(e,t))})),collectionOf(\"Map\",mapSize.call(t),d,u)}if(isSet(t)){var j=[];return setForEach&&setForEach.call(t,(function(e){j.push(inspect(e,t))})),collectionOf(\"Set\",setSize.call(t),j,u)}if(isWeakMap(t))return weakCollectionOf(\"WeakMap\");if(isWeakSet(t))return weakCollectionOf(\"WeakSet\");if(isWeakRef(t))return weakCollectionOf(\"WeakRef\");if(isNumber(t))return markBoxed(inspect(Number(t)));if(isBigInt(t))return markBoxed(inspect(bigIntValueOf.call(t)));if(isBoolean(t))return markBoxed(booleanValueOf.call(t));if(isString(t))return markBoxed(inspect(String(t)));if(\"undefined\"!=typeof window&&t===window)return\"{ [object Window] }\";if(\"undefined\"!=typeof globalThis&&t===globalThis||\"undefined\"!=typeof global&&t===global)return\"{ [object globalThis] }\";if(!isDate(t)&&!isRegExp(t)){var O=arrObjKeys(t,inspect),w=gPO?gPO(t)===Object.prototype:t instanceof Object||t.constructor===Object,$=t instanceof Object?\"\":\"null prototype\",k=!w&&toStringTag&&Object(t)===t&&toStringTag in t?$slice.call(toStr(t),8,-1):$?\"Object\":\"\",v=(w||\"function\"!=typeof t.constructor?\"\":t.constructor.name?t.constructor.name+\" \":\"\")+(k||$?\"[\"+$join.call($concat.call([],k||[],$||[]),\": \")+\"] \":\"\");return 0===O.length?v+\"{}\":u?v+\"{\"+indentedJoin(O,u)+\"}\":v+\"{ \"+$join.call(O,\", \")+\" }\"}return String(t)};var hasOwn=Object.prototype.hasOwnProperty||function(t){return t in this};function has(t,e){return hasOwn.call(t,e)}function toStr(t){return objectToString.call(t)}function nameOf(t){if(t.name)return t.name;var e=$match.call(functionToString.call(t),/^function\\s*([\\w$]+)/);return e?e[1]:null}function indexOf(t,e){if(t.indexOf)return t.indexOf(e);for(var r=0,n=t.length;r<n;r++)if(t[r]===e)return r;return-1}function isMap(t){if(!mapSize||!t||\"object\"!=typeof t)return!1;try{mapSize.call(t);try{setSize.call(t)}catch(t){return!0}return t instanceof Map}catch(t){}return!1}function isWeakMap(t){if(!weakMapHas||!t||\"object\"!=typeof t)return!1;try{weakMapHas.call(t,weakMapHas);try{weakSetHas.call(t,weakSetHas)}catch(t){return!0}return t instanceof WeakMap}catch(t){}return!1}function isWeakRef(t){if(!weakRefDeref||!t||\"object\"!=typeof t)return!1;try{return weakRefDeref.call(t),!0}catch(t){}return!1}function isSet(t){if(!setSize||!t||\"object\"!=typeof t)return!1;try{setSize.call(t);try{mapSize.call(t)}catch(t){return!0}return t instanceof Set}catch(t){}return!1}function isWeakSet(t){if(!weakSetHas||!t||\"object\"!=typeof t)return!1;try{weakSetHas.call(t,weakSetHas);try{weakMapHas.call(t,weakMapHas)}catch(t){return!0}return t instanceof WeakSet}catch(t){}return!1}function isElement(t){return!(!t||\"object\"!=typeof t)&&(\"undefined\"!=typeof HTMLElement&&t instanceof HTMLElement||\"string\"==typeof t.nodeName&&\"function\"==typeof t.getAttribute)}function inspectString(t,e){if(t.length>e.maxStringLength){var r=t.length-e.maxStringLength,n=\"... \"+r+\" more character\"+(r>1?\"s\":\"\");return inspectString($slice.call(t,0,e.maxStringLength),e)+n}return wrapQuotes($replace.call($replace.call(t,/(['\\\\])/g,\"\\\\$1\"),/[\\x00-\\x1f]/g,lowbyte),\"single\",e)}function lowbyte(t){var e=t.charCodeAt(0),r={8:\"b\",9:\"t\",10:\"n\",12:\"f\",13:\"r\"}[e];return r?\"\\\\\"+r:\"\\\\x\"+(e<16?\"0\":\"\")+$toUpperCase.call(e.toString(16))}function markBoxed(t){return\"Object(\"+t+\")\"}function weakCollectionOf(t){return t+\" { ? }\"}function collectionOf(t,e,r,n){return t+\" (\"+e+\") {\"+(n?indentedJoin(r,n):$join.call(r,\", \"))+\"}\"}function singleLineValues(t){for(var e=0;e<t.length;e++)if(indexOf(t[e],\"\\n\")>=0)return!1;return!0}function getIndent(t,e){var r;if(\"\\t\"===t.indent)r=\"\\t\";else{if(!(\"number\"==typeof t.indent&&t.indent>0))return null;r=$join.call(Array(t.indent+1),\" \")}return{base:r,prev:$join.call(Array(e+1),r)}}function indentedJoin(t,e){if(0===t.length)return\"\";var r=\"\\n\"+e.prev+e.base;return r+$join.call(t,\",\"+r)+\"\\n\"+e.prev}function arrObjKeys(t,e){var r=isArray(t),n=[];if(r){n.length=t.length;for(var o=0;o<t.length;o++)n[o]=has(t,o)?e(t[o],t):\"\"}var i,a=\"function\"==typeof gOPS?gOPS(t):[];if(hasShammedSymbols){i={};for(var c=0;c<a.length;c++)i[\"$\"+a[c]]=a[c]}for(var l in t)has(t,l)&&(r&&String(Number(l))===l&&l<t.length||hasShammedSymbols&&i[\"$\"+l]instanceof Symbol||($test.call(/[^\\w$]/,l)?n.push(e(l,t)+\": \"+e(t[l],t)):n.push(l+\": \"+e(t[l],t))));if(\"function\"==typeof gOPS)for(var p=0;p<a.length;p++)isEnumerable.call(t,a[p])&&n.push(\"[\"+e(a[p])+\"]: \"+e(t[a[p]],t));return n}\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"6\":6}]},{},[2])(2)\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\qs\\dist\\qs.js",
    "RelativePath": "tools\\backend\\node_modules\\qs\\dist\\qs.js"
  },
  {
    "Content": "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\qs\\lib\\formats.js",
    "RelativePath": "tools\\backend\\node_modules\\qs\\lib\\formats.js"
  },
  {
    "Content": "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\qs\\lib\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\qs\\lib\\index.js"
  },
  {
    "Content": "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowEmptyArrays: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decodeDotInKeys: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    duplicates: 'combine',\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictDepth: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    cleanStr = cleanStr.replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        var existing = has.call(obj, key);\n        if (existing && options.duplicates === 'combine') {\n            obj[key] = utils.combine(obj[key], val);\n        } else if (!existing || options.duplicates === 'last') {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = options.allowEmptyArrays && (leaf === '' || (options.strictNullHandling && leaf === null))\n                ? []\n                : [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, '.') : cleanRoot;\n            var index = parseInt(decodedRoot, 10);\n            if (!options.parseArrays && decodedRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== decodedRoot\n                && String(index) === decodedRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (decodedRoot !== '__proto__') {\n                obj[decodedRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, check strictDepth option for throw, else just add whatever is left\n\n    if (segment) {\n        if (options.strictDepth === true) {\n            throw new RangeError('Input depth exceeded depth option of ' + options.depth + ' and strictDepth is true');\n        }\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.decodeDotInKeys !== 'undefined' && typeof opts.decodeDotInKeys !== 'boolean') {\n        throw new TypeError('`decodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.decoder !== null && typeof opts.decoder !== 'undefined' && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    var duplicates = typeof opts.duplicates === 'undefined' ? defaults.duplicates : opts.duplicates;\n\n    if (duplicates !== 'combine' && duplicates !== 'first' && duplicates !== 'last') {\n        throw new TypeError('The duplicates option must be either combine, first, or last');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decodeDotInKeys: typeof opts.decodeDotInKeys === 'boolean' ? opts.decodeDotInKeys : defaults.decodeDotInKeys,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        duplicates: duplicates,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictDepth: typeof opts.strictDepth === 'boolean' ? !!opts.strictDepth : defaults.strictDepth,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\qs\\lib\\parse.js",
    "RelativePath": "tools\\backend\\node_modules\\qs\\lib\\parse.js"
  },
  {
    "Content": "'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    allowEmptyArrays,\n    strictNullHandling,\n    skipNulls,\n    encodeDotInKeys,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var encodedPrefix = encodeDotInKeys ? prefix.replace(/\\./g, '%2E') : prefix;\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encodedPrefix + '[]' : encodedPrefix;\n\n    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n        return adjustedPrefix + '[]';\n    }\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var encodedKey = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, encodedKey) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + encodedKey : '[' + encodedKey + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            allowEmptyArrays,\n            strictNullHandling,\n            skipNulls,\n            encodeDotInKeys,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    var arrayFormat;\n    if (opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = defaults.arrayFormat;\n    }\n\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[options.arrayFormat];\n    var commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.allowEmptyArrays,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encodeDotInKeys,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\qs\\lib\\stringify.js",
    "RelativePath": "tools\\backend\\node_modules\\qs\\lib\\stringify.js"
  },
  {
    "Content": "'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar limit = 1024;\n\n/* eslint operator-linebreak: [2, \"before\"] */\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var j = 0; j < string.length; j += limit) {\n        var segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        var arr = [];\n\n        for (var i = 0; i < segment.length; ++i) {\n            var c = segment.charCodeAt(i);\n            if (\n                c === 0x2D // -\n                || c === 0x2E // .\n                || c === 0x5F // _\n                || c === 0x7E // ~\n                || (c >= 0x30 && c <= 0x39) // 0-9\n                || (c >= 0x41 && c <= 0x5A) // a-z\n                || (c >= 0x61 && c <= 0x7A) // A-Z\n                || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n\n            if (c < 0x80) {\n                arr[arr.length] = hexTable[c];\n                continue;\n            }\n\n            if (c < 0x800) {\n                arr[arr.length] = hexTable[0xC0 | (c >> 6)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            if (c < 0xD800 || c >= 0xE000) {\n                arr[arr.length] = hexTable[0xE0 | (c >> 12)]\n                    + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            i += 1;\n            c = 0x10000 + (((c & 0x3FF) << 10) | (segment.charCodeAt(i) & 0x3FF));\n\n            arr[arr.length] = hexTable[0xF0 | (c >> 18)]\n                + hexTable[0x80 | ((c >> 12) & 0x3F)]\n                + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                + hexTable[0x80 | (c & 0x3F)];\n        }\n\n        out += arr.join('');\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\qs\\lib\\utils.js",
    "RelativePath": "tools\\backend\\node_modules\\qs\\lib\\utils.js"
  },
  {
    "Content": "'use strict';\n\nmodule.exports = {\n    emptyTestCases: [\n        {\n            input: '&',\n            withEmptyKeys: {},\n            stringifyOutput: {\n                brackets: '',\n                indices: '',\n                repeat: ''\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '&&',\n            withEmptyKeys: {},\n            stringifyOutput: {\n                brackets: '',\n                indices: '',\n                repeat: ''\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '&=',\n            withEmptyKeys: { '': '' },\n            stringifyOutput: {\n                brackets: '=',\n                indices: '=',\n                repeat: '='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '&=&',\n            withEmptyKeys: { '': '' },\n            stringifyOutput: {\n                brackets: '=',\n                indices: '=',\n                repeat: '='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '&=&=',\n            withEmptyKeys: { '': ['', ''] },\n            stringifyOutput: {\n                brackets: '[]=&[]=',\n                indices: '[0]=&[1]=',\n                repeat: '=&='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '&=&=&',\n            withEmptyKeys: { '': ['', ''] },\n            stringifyOutput: {\n                brackets: '[]=&[]=',\n                indices: '[0]=&[1]=',\n                repeat: '=&='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '=',\n            withEmptyKeys: { '': '' },\n            noEmptyKeys: {},\n            stringifyOutput: {\n                brackets: '=',\n                indices: '=',\n                repeat: '='\n            }\n        },\n        {\n            input: '=&',\n            withEmptyKeys: { '': '' },\n            stringifyOutput: {\n                brackets: '=',\n                indices: '=',\n                repeat: '='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '=&&&',\n            withEmptyKeys: { '': '' },\n            stringifyOutput: {\n                brackets: '=',\n                indices: '=',\n                repeat: '='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '=&=&=&',\n            withEmptyKeys: { '': ['', '', ''] },\n            stringifyOutput: {\n                brackets: '[]=&[]=&[]=',\n                indices: '[0]=&[1]=&[2]=',\n                repeat: '=&=&='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '=&a[]=b&a[1]=c',\n            withEmptyKeys: { '': '', a: ['b', 'c'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c',\n                indices: '=&a[0]=b&a[1]=c',\n                repeat: '=&a=b&a=c'\n            },\n            noEmptyKeys: { a: ['b', 'c'] }\n        },\n        {\n            input: '=a',\n            withEmptyKeys: { '': 'a' },\n            noEmptyKeys: {},\n            stringifyOutput: {\n                brackets: '=a',\n                indices: '=a',\n                repeat: '=a'\n            }\n        },\n        {\n            input: 'a==a',\n            withEmptyKeys: { a: '=a' },\n            noEmptyKeys: { a: '=a' },\n            stringifyOutput: {\n                brackets: 'a==a',\n                indices: 'a==a',\n                repeat: 'a==a'\n            }\n        },\n        {\n            input: '=&a[]=b',\n            withEmptyKeys: { '': '', a: ['b'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b',\n                indices: '=&a[0]=b',\n                repeat: '=&a=b'\n            },\n            noEmptyKeys: { a: ['b'] }\n        },\n        {\n            input: '=&a[]=b&a[]=c&a[2]=d',\n            withEmptyKeys: { '': '', a: ['b', 'c', 'd'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c&a[]=d',\n                indices: '=&a[0]=b&a[1]=c&a[2]=d',\n                repeat: '=&a=b&a=c&a=d'\n            },\n            noEmptyKeys: { a: ['b', 'c', 'd'] }\n        },\n        {\n            input: '=a&=b',\n            withEmptyKeys: { '': ['a', 'b'] },\n            stringifyOutput: {\n                brackets: '[]=a&[]=b',\n                indices: '[0]=a&[1]=b',\n                repeat: '=a&=b'\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '=a&foo=b',\n            withEmptyKeys: { '': 'a', foo: 'b' },\n            noEmptyKeys: { foo: 'b' },\n            stringifyOutput: {\n                brackets: '=a&foo=b',\n                indices: '=a&foo=b',\n                repeat: '=a&foo=b'\n            }\n        },\n        {\n            input: 'a[]=b&a=c&=',\n            withEmptyKeys: { '': '', a: ['b', 'c'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c',\n                indices: '=&a[0]=b&a[1]=c',\n                repeat: '=&a=b&a=c'\n            },\n            noEmptyKeys: { a: ['b', 'c'] }\n        },\n        {\n            input: 'a[]=b&a=c&=',\n            withEmptyKeys: { '': '', a: ['b', 'c'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c',\n                indices: '=&a[0]=b&a[1]=c',\n                repeat: '=&a=b&a=c'\n            },\n            noEmptyKeys: { a: ['b', 'c'] }\n        },\n        {\n            input: 'a[0]=b&a=c&=',\n            withEmptyKeys: { '': '', a: ['b', 'c'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c',\n                indices: '=&a[0]=b&a[1]=c',\n                repeat: '=&a=b&a=c'\n            },\n            noEmptyKeys: { a: ['b', 'c'] }\n        },\n        {\n            input: 'a=b&a[]=c&=',\n            withEmptyKeys: { '': '', a: ['b', 'c'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c',\n                indices: '=&a[0]=b&a[1]=c',\n                repeat: '=&a=b&a=c'\n            },\n            noEmptyKeys: { a: ['b', 'c'] }\n        },\n        {\n            input: 'a=b&a[0]=c&=',\n            withEmptyKeys: { '': '', a: ['b', 'c'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c',\n                indices: '=&a[0]=b&a[1]=c',\n                repeat: '=&a=b&a=c'\n            },\n            noEmptyKeys: { a: ['b', 'c'] }\n        },\n        {\n            input: '[]=a&[]=b& []=1',\n            withEmptyKeys: { '': ['a', 'b'], ' ': ['1'] },\n            stringifyOutput: {\n                brackets: '[]=a&[]=b& []=1',\n                indices: '[0]=a&[1]=b& [0]=1',\n                repeat: '=a&=b& =1'\n            },\n            noEmptyKeys: { 0: 'a', 1: 'b', ' ': ['1'] }\n        },\n        {\n            input: '[0]=a&[1]=b&a[0]=1&a[1]=2',\n            withEmptyKeys: { '': ['a', 'b'], a: ['1', '2'] },\n            noEmptyKeys: { 0: 'a', 1: 'b', a: ['1', '2'] },\n            stringifyOutput: {\n                brackets: '[]=a&[]=b&a[]=1&a[]=2',\n                indices: '[0]=a&[1]=b&a[0]=1&a[1]=2',\n                repeat: '=a&=b&a=1&a=2'\n            }\n        },\n        {\n            input: '[deep]=a&[deep]=2',\n            withEmptyKeys: { '': { deep: ['a', '2'] }\n            },\n            stringifyOutput: {\n                brackets: '[deep][]=a&[deep][]=2',\n                indices: '[deep][0]=a&[deep][1]=2',\n                repeat: '[deep]=a&[deep]=2'\n            },\n            noEmptyKeys: { deep: ['a', '2'] }\n        },\n        {\n            input: '%5B0%5D=a&%5B1%5D=b',\n            withEmptyKeys: { '': ['a', 'b'] },\n            stringifyOutput: {\n                brackets: '[]=a&[]=b',\n                indices: '[0]=a&[1]=b',\n                repeat: '=a&=b'\n            },\n            noEmptyKeys: { 0: 'a', 1: 'b' }\n        }\n    ]\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\qs\\test\\empty-keys-cases.js",
    "RelativePath": "tools\\backend\\node_modules\\qs\\test\\empty-keys-cases.js"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\nvar hasPropertyDescriptors = require('has-property-descriptors')();\nvar iconv = require('iconv-lite');\nvar mockProperty = require('mock-property');\nvar hasOverrideMistake = require('has-override-mistake')();\nvar SaferBuffer = require('safer-buffer').Buffer;\nvar v = require('es-value-fixtures');\nvar inspect = require('object-inspect');\nvar emptyTestCases = require('./empty-keys-cases').emptyTestCases;\n\nvar qs = require('../');\nvar utils = require('../lib/utils');\n\ntest('parse()', function (t) {\n    t.test('parses a simple string', function (st) {\n        st.deepEqual(qs.parse('0=foo'), { 0: 'foo' });\n        st.deepEqual(qs.parse('foo=c++'), { foo: 'c  ' });\n        st.deepEqual(qs.parse('a[>=]=23'), { a: { '>=': '23' } });\n        st.deepEqual(qs.parse('a[<=>]==23'), { a: { '<=>': '=23' } });\n        st.deepEqual(qs.parse('a[==]=23'), { a: { '==': '23' } });\n        st.deepEqual(qs.parse('foo', { strictNullHandling: true }), { foo: null });\n        st.deepEqual(qs.parse('foo'), { foo: '' });\n        st.deepEqual(qs.parse('foo='), { foo: '' });\n        st.deepEqual(qs.parse('foo=bar'), { foo: 'bar' });\n        st.deepEqual(qs.parse(' foo = bar = baz '), { ' foo ': ' bar = baz ' });\n        st.deepEqual(qs.parse('foo=bar=baz'), { foo: 'bar=baz' });\n        st.deepEqual(qs.parse('foo=bar&bar=baz'), { foo: 'bar', bar: 'baz' });\n        st.deepEqual(qs.parse('foo2=bar2&baz2='), { foo2: 'bar2', baz2: '' });\n        st.deepEqual(qs.parse('foo=bar&baz', { strictNullHandling: true }), { foo: 'bar', baz: null });\n        st.deepEqual(qs.parse('foo=bar&baz'), { foo: 'bar', baz: '' });\n        st.deepEqual(qs.parse('cht=p3&chd=t:60,40&chs=250x100&chl=Hello|World'), {\n            cht: 'p3',\n            chd: 't:60,40',\n            chs: '250x100',\n            chl: 'Hello|World'\n        });\n        st.end();\n    });\n\n    t.test('comma: false', function (st) {\n        st.deepEqual(qs.parse('a[]=b&a[]=c'), { a: ['b', 'c'] });\n        st.deepEqual(qs.parse('a[0]=b&a[1]=c'), { a: ['b', 'c'] });\n        st.deepEqual(qs.parse('a=b,c'), { a: 'b,c' });\n        st.deepEqual(qs.parse('a=b&a=c'), { a: ['b', 'c'] });\n        st.end();\n    });\n\n    t.test('comma: true', function (st) {\n        st.deepEqual(qs.parse('a[]=b&a[]=c', { comma: true }), { a: ['b', 'c'] });\n        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { comma: true }), { a: ['b', 'c'] });\n        st.deepEqual(qs.parse('a=b,c', { comma: true }), { a: ['b', 'c'] });\n        st.deepEqual(qs.parse('a=b&a=c', { comma: true }), { a: ['b', 'c'] });\n        st.end();\n    });\n\n    t.test('allows enabling dot notation', function (st) {\n        st.deepEqual(qs.parse('a.b=c'), { 'a.b': 'c' });\n        st.deepEqual(qs.parse('a.b=c', { allowDots: true }), { a: { b: 'c' } });\n\n        st.end();\n    });\n\n    t.test('decode dot keys correctly', function (st) {\n        st.deepEqual(\n            qs.parse('name%252Eobj.first=John&name%252Eobj.last=Doe', { allowDots: false, decodeDotInKeys: false }),\n            { 'name%2Eobj.first': 'John', 'name%2Eobj.last': 'Doe' },\n            'with allowDots false and decodeDotInKeys false'\n        );\n        st.deepEqual(\n            qs.parse('name.obj.first=John&name.obj.last=Doe', { allowDots: true, decodeDotInKeys: false }),\n            { name: { obj: { first: 'John', last: 'Doe' } } },\n            'with allowDots false and decodeDotInKeys false'\n        );\n        st.deepEqual(\n            qs.parse('name%252Eobj.first=John&name%252Eobj.last=Doe', { allowDots: true, decodeDotInKeys: false }),\n            { 'name%2Eobj': { first: 'John', last: 'Doe' } },\n            'with allowDots true and decodeDotInKeys false'\n        );\n        st.deepEqual(\n            qs.parse('name%252Eobj.first=John&name%252Eobj.last=Doe', { allowDots: true, decodeDotInKeys: true }),\n            { 'name.obj': { first: 'John', last: 'Doe' } },\n            'with allowDots true and decodeDotInKeys true'\n        );\n\n        st.deepEqual(\n            qs.parse(\n                'name%252Eobj%252Esubobject.first%252Egodly%252Ename=John&name%252Eobj%252Esubobject.last=Doe',\n                { allowDots: false, decodeDotInKeys: false }\n            ),\n            { 'name%2Eobj%2Esubobject.first%2Egodly%2Ename': 'John', 'name%2Eobj%2Esubobject.last': 'Doe' },\n            'with allowDots false and decodeDotInKeys false'\n        );\n        st.deepEqual(\n            qs.parse(\n                'name.obj.subobject.first.godly.name=John&name.obj.subobject.last=Doe',\n                { allowDots: true, decodeDotInKeys: false }\n            ),\n            { name: { obj: { subobject: { first: { godly: { name: 'John' } }, last: 'Doe' } } } },\n            'with allowDots true and decodeDotInKeys false'\n        );\n        st.deepEqual(\n            qs.parse(\n                'name%252Eobj%252Esubobject.first%252Egodly%252Ename=John&name%252Eobj%252Esubobject.last=Doe',\n                { allowDots: true, decodeDotInKeys: true }\n            ),\n            { 'name.obj.subobject': { 'first.godly.name': 'John', last: 'Doe' } },\n            'with allowDots true and decodeDotInKeys true'\n        );\n        st.deepEqual(\n            qs.parse('name%252Eobj.first=John&name%252Eobj.last=Doe'),\n            { 'name%2Eobj.first': 'John', 'name%2Eobj.last': 'Doe' },\n            'with allowDots and decodeDotInKeys undefined'\n        );\n\n        st.end();\n    });\n\n    t.test('should decode dot in key of object, and allow enabling dot notation when decodeDotInKeys is set to true and allowDots is undefined', function (st) {\n        st.deepEqual(\n            qs.parse(\n                'name%252Eobj%252Esubobject.first%252Egodly%252Ename=John&name%252Eobj%252Esubobject.last=Doe',\n                { decodeDotInKeys: true }\n            ),\n            { 'name.obj.subobject': { 'first.godly.name': 'John', last: 'Doe' } },\n            'with allowDots undefined and decodeDotInKeys true'\n        );\n\n        st.end();\n    });\n\n    t.test('should throw when decodeDotInKeys is not of type boolean', function (st) {\n        st['throws'](\n            function () { qs.parse('foo[]&bar=baz', { decodeDotInKeys: 'foobar' }); },\n            TypeError\n        );\n\n        st['throws'](\n            function () { qs.parse('foo[]&bar=baz', { decodeDotInKeys: 0 }); },\n            TypeError\n        );\n        st['throws'](\n            function () { qs.parse('foo[]&bar=baz', { decodeDotInKeys: NaN }); },\n            TypeError\n        );\n\n        st['throws'](\n            function () { qs.parse('foo[]&bar=baz', { decodeDotInKeys: null }); },\n            TypeError\n        );\n\n        st.end();\n    });\n\n    t.test('allows empty arrays in obj values', function (st) {\n        st.deepEqual(qs.parse('foo[]&bar=baz', { allowEmptyArrays: true }), { foo: [], bar: 'baz' });\n        st.deepEqual(qs.parse('foo[]&bar=baz', { allowEmptyArrays: false }), { foo: [''], bar: 'baz' });\n\n        st.end();\n    });\n\n    t.test('should throw when allowEmptyArrays is not of type boolean', function (st) {\n        st['throws'](\n            function () { qs.parse('foo[]&bar=baz', { allowEmptyArrays: 'foobar' }); },\n            TypeError\n        );\n\n        st['throws'](\n            function () { qs.parse('foo[]&bar=baz', { allowEmptyArrays: 0 }); },\n            TypeError\n        );\n        st['throws'](\n            function () { qs.parse('foo[]&bar=baz', { allowEmptyArrays: NaN }); },\n            TypeError\n        );\n\n        st['throws'](\n            function () { qs.parse('foo[]&bar=baz', { allowEmptyArrays: null }); },\n            TypeError\n        );\n\n        st.end();\n    });\n\n    t.test('allowEmptyArrays + strictNullHandling', function (st) {\n        st.deepEqual(\n            qs.parse('testEmptyArray[]', { strictNullHandling: true, allowEmptyArrays: true }),\n            { testEmptyArray: [] }\n        );\n\n        st.end();\n    });\n\n    t.deepEqual(qs.parse('a[b]=c'), { a: { b: 'c' } }, 'parses a single nested string');\n    t.deepEqual(qs.parse('a[b][c]=d'), { a: { b: { c: 'd' } } }, 'parses a double nested string');\n    t.deepEqual(\n        qs.parse('a[b][c][d][e][f][g][h]=i'),\n        { a: { b: { c: { d: { e: { f: { '[g][h]': 'i' } } } } } } },\n        'defaults to a depth of 5'\n    );\n\n    t.test('only parses one level when depth = 1', function (st) {\n        st.deepEqual(qs.parse('a[b][c]=d', { depth: 1 }), { a: { b: { '[c]': 'd' } } });\n        st.deepEqual(qs.parse('a[b][c][d]=e', { depth: 1 }), { a: { b: { '[c][d]': 'e' } } });\n        st.end();\n    });\n\n    t.test('uses original key when depth = 0', function (st) {\n        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { depth: 0 }), { 'a[0]': 'b', 'a[1]': 'c' });\n        st.deepEqual(qs.parse('a[0][0]=b&a[0][1]=c&a[1]=d&e=2', { depth: 0 }), { 'a[0][0]': 'b', 'a[0][1]': 'c', 'a[1]': 'd', e: '2' });\n        st.end();\n    });\n\n    t.test('uses original key when depth = false', function (st) {\n        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { depth: false }), { 'a[0]': 'b', 'a[1]': 'c' });\n        st.deepEqual(qs.parse('a[0][0]=b&a[0][1]=c&a[1]=d&e=2', { depth: false }), { 'a[0][0]': 'b', 'a[0][1]': 'c', 'a[1]': 'd', e: '2' });\n        st.end();\n    });\n\n    t.deepEqual(qs.parse('a=b&a=c'), { a: ['b', 'c'] }, 'parses a simple array');\n\n    t.test('parses an explicit array', function (st) {\n        st.deepEqual(qs.parse('a[]=b'), { a: ['b'] });\n        st.deepEqual(qs.parse('a[]=b&a[]=c'), { a: ['b', 'c'] });\n        st.deepEqual(qs.parse('a[]=b&a[]=c&a[]=d'), { a: ['b', 'c', 'd'] });\n        st.end();\n    });\n\n    t.test('parses a mix of simple and explicit arrays', function (st) {\n        st.deepEqual(qs.parse('a=b&a[]=c'), { a: ['b', 'c'] });\n        st.deepEqual(qs.parse('a[]=b&a=c'), { a: ['b', 'c'] });\n        st.deepEqual(qs.parse('a[0]=b&a=c'), { a: ['b', 'c'] });\n        st.deepEqual(qs.parse('a=b&a[0]=c'), { a: ['b', 'c'] });\n\n        st.deepEqual(qs.parse('a[1]=b&a=c', { arrayLimit: 20 }), { a: ['b', 'c'] });\n        st.deepEqual(qs.parse('a[]=b&a=c', { arrayLimit: 0 }), { a: ['b', 'c'] });\n        st.deepEqual(qs.parse('a[]=b&a=c'), { a: ['b', 'c'] });\n\n        st.deepEqual(qs.parse('a=b&a[1]=c', { arrayLimit: 20 }), { a: ['b', 'c'] });\n        st.deepEqual(qs.parse('a=b&a[]=c', { arrayLimit: 0 }), { a: ['b', 'c'] });\n        st.deepEqual(qs.parse('a=b&a[]=c'), { a: ['b', 'c'] });\n\n        st.end();\n    });\n\n    t.test('parses a nested array', function (st) {\n        st.deepEqual(qs.parse('a[b][]=c&a[b][]=d'), { a: { b: ['c', 'd'] } });\n        st.deepEqual(qs.parse('a[>=]=25'), { a: { '>=': '25' } });\n        st.end();\n    });\n\n    t.test('allows to specify array indices', function (st) {\n        st.deepEqual(qs.parse('a[1]=c&a[0]=b&a[2]=d'), { a: ['b', 'c', 'd'] });\n        st.deepEqual(qs.parse('a[1]=c&a[0]=b'), { a: ['b', 'c'] });\n        st.deepEqual(qs.parse('a[1]=c', { arrayLimit: 20 }), { a: ['c'] });\n        st.deepEqual(qs.parse('a[1]=c', { arrayLimit: 0 }), { a: { 1: 'c' } });\n        st.deepEqual(qs.parse('a[1]=c'), { a: ['c'] });\n        st.end();\n    });\n\n    t.test('limits specific array indices to arrayLimit', function (st) {\n        st.deepEqual(qs.parse('a[20]=a', { arrayLimit: 20 }), { a: ['a'] });\n        st.deepEqual(qs.parse('a[21]=a', { arrayLimit: 20 }), { a: { 21: 'a' } });\n\n        st.deepEqual(qs.parse('a[20]=a'), { a: ['a'] });\n        st.deepEqual(qs.parse('a[21]=a'), { a: { 21: 'a' } });\n        st.end();\n    });\n\n    t.deepEqual(qs.parse('a[12b]=c'), { a: { '12b': 'c' } }, 'supports keys that begin with a number');\n\n    t.test('supports encoded = signs', function (st) {\n        st.deepEqual(qs.parse('he%3Dllo=th%3Dere'), { 'he=llo': 'th=ere' });\n        st.end();\n    });\n\n    t.test('is ok with url encoded strings', function (st) {\n        st.deepEqual(qs.parse('a[b%20c]=d'), { a: { 'b c': 'd' } });\n        st.deepEqual(qs.parse('a[b]=c%20d'), { a: { b: 'c d' } });\n        st.end();\n    });\n\n    t.test('allows brackets in the value', function (st) {\n        st.deepEqual(qs.parse('pets=[\"tobi\"]'), { pets: '[\"tobi\"]' });\n        st.deepEqual(qs.parse('operators=[\">=\", \"<=\"]'), { operators: '[\">=\", \"<=\"]' });\n        st.end();\n    });\n\n    t.test('allows empty values', function (st) {\n        st.deepEqual(qs.parse(''), {});\n        st.deepEqual(qs.parse(null), {});\n        st.deepEqual(qs.parse(undefined), {});\n        st.end();\n    });\n\n    t.test('transforms arrays to objects', function (st) {\n        st.deepEqual(qs.parse('foo[0]=bar&foo[bad]=baz'), { foo: { 0: 'bar', bad: 'baz' } });\n        st.deepEqual(qs.parse('foo[bad]=baz&foo[0]=bar'), { foo: { bad: 'baz', 0: 'bar' } });\n        st.deepEqual(qs.parse('foo[bad]=baz&foo[]=bar'), { foo: { bad: 'baz', 0: 'bar' } });\n        st.deepEqual(qs.parse('foo[]=bar&foo[bad]=baz'), { foo: { 0: 'bar', bad: 'baz' } });\n        st.deepEqual(qs.parse('foo[bad]=baz&foo[]=bar&foo[]=foo'), { foo: { bad: 'baz', 0: 'bar', 1: 'foo' } });\n        st.deepEqual(qs.parse('foo[0][a]=a&foo[0][b]=b&foo[1][a]=aa&foo[1][b]=bb'), { foo: [{ a: 'a', b: 'b' }, { a: 'aa', b: 'bb' }] });\n\n        st.deepEqual(qs.parse('a[]=b&a[t]=u&a[hasOwnProperty]=c', { allowPrototypes: false }), { a: { 0: 'b', t: 'u' } });\n        st.deepEqual(qs.parse('a[]=b&a[t]=u&a[hasOwnProperty]=c', { allowPrototypes: true }), { a: { 0: 'b', t: 'u', hasOwnProperty: 'c' } });\n        st.deepEqual(qs.parse('a[]=b&a[hasOwnProperty]=c&a[x]=y', { allowPrototypes: false }), { a: { 0: 'b', x: 'y' } });\n        st.deepEqual(qs.parse('a[]=b&a[hasOwnProperty]=c&a[x]=y', { allowPrototypes: true }), { a: { 0: 'b', hasOwnProperty: 'c', x: 'y' } });\n        st.end();\n    });\n\n    t.test('transforms arrays to objects (dot notation)', function (st) {\n        st.deepEqual(qs.parse('foo[0].baz=bar&fool.bad=baz', { allowDots: true }), { foo: [{ baz: 'bar' }], fool: { bad: 'baz' } });\n        st.deepEqual(qs.parse('foo[0].baz=bar&fool.bad.boo=baz', { allowDots: true }), { foo: [{ baz: 'bar' }], fool: { bad: { boo: 'baz' } } });\n        st.deepEqual(qs.parse('foo[0][0].baz=bar&fool.bad=baz', { allowDots: true }), { foo: [[{ baz: 'bar' }]], fool: { bad: 'baz' } });\n        st.deepEqual(qs.parse('foo[0].baz[0]=15&foo[0].bar=2', { allowDots: true }), { foo: [{ baz: ['15'], bar: '2' }] });\n        st.deepEqual(qs.parse('foo[0].baz[0]=15&foo[0].baz[1]=16&foo[0].bar=2', { allowDots: true }), { foo: [{ baz: ['15', '16'], bar: '2' }] });\n        st.deepEqual(qs.parse('foo.bad=baz&foo[0]=bar', { allowDots: true }), { foo: { bad: 'baz', 0: 'bar' } });\n        st.deepEqual(qs.parse('foo.bad=baz&foo[]=bar', { allowDots: true }), { foo: { bad: 'baz', 0: 'bar' } });\n        st.deepEqual(qs.parse('foo[]=bar&foo.bad=baz', { allowDots: true }), { foo: { 0: 'bar', bad: 'baz' } });\n        st.deepEqual(qs.parse('foo.bad=baz&foo[]=bar&foo[]=foo', { allowDots: true }), { foo: { bad: 'baz', 0: 'bar', 1: 'foo' } });\n        st.deepEqual(qs.parse('foo[0].a=a&foo[0].b=b&foo[1].a=aa&foo[1].b=bb', { allowDots: true }), { foo: [{ a: 'a', b: 'b' }, { a: 'aa', b: 'bb' }] });\n        st.end();\n    });\n\n    t.test('correctly prunes undefined values when converting an array to an object', function (st) {\n        st.deepEqual(qs.parse('a[2]=b&a[99999999]=c'), { a: { 2: 'b', 99999999: 'c' } });\n        st.end();\n    });\n\n    t.test('supports malformed uri characters', function (st) {\n        st.deepEqual(qs.parse('{%:%}', { strictNullHandling: true }), { '{%:%}': null });\n        st.deepEqual(qs.parse('{%:%}='), { '{%:%}': '' });\n        st.deepEqual(qs.parse('foo=%:%}'), { foo: '%:%}' });\n        st.end();\n    });\n\n    t.test('doesn\\'t produce empty keys', function (st) {\n        st.deepEqual(qs.parse('_r=1&'), { _r: '1' });\n        st.end();\n    });\n\n    t.test('cannot access Object prototype', function (st) {\n        qs.parse('constructor[prototype][bad]=bad');\n        qs.parse('bad[constructor][prototype][bad]=bad');\n        st.equal(typeof Object.prototype.bad, 'undefined');\n        st.end();\n    });\n\n    t.test('parses arrays of objects', function (st) {\n        st.deepEqual(qs.parse('a[][b]=c'), { a: [{ b: 'c' }] });\n        st.deepEqual(qs.parse('a[0][b]=c'), { a: [{ b: 'c' }] });\n        st.end();\n    });\n\n    t.test('allows for empty strings in arrays', function (st) {\n        st.deepEqual(qs.parse('a[]=b&a[]=&a[]=c'), { a: ['b', '', 'c'] });\n\n        st.deepEqual(\n            qs.parse('a[0]=b&a[1]&a[2]=c&a[19]=', { strictNullHandling: true, arrayLimit: 20 }),\n            { a: ['b', null, 'c', ''] },\n            'with arrayLimit 20 + array indices: null then empty string works'\n        );\n        st.deepEqual(\n            qs.parse('a[]=b&a[]&a[]=c&a[]=', { strictNullHandling: true, arrayLimit: 0 }),\n            { a: ['b', null, 'c', ''] },\n            'with arrayLimit 0 + array brackets: null then empty string works'\n        );\n\n        st.deepEqual(\n            qs.parse('a[0]=b&a[1]=&a[2]=c&a[19]', { strictNullHandling: true, arrayLimit: 20 }),\n            { a: ['b', '', 'c', null] },\n            'with arrayLimit 20 + array indices: empty string then null works'\n        );\n        st.deepEqual(\n            qs.parse('a[]=b&a[]=&a[]=c&a[]', { strictNullHandling: true, arrayLimit: 0 }),\n            { a: ['b', '', 'c', null] },\n            'with arrayLimit 0 + array brackets: empty string then null works'\n        );\n\n        st.deepEqual(\n            qs.parse('a[]=&a[]=b&a[]=c'),\n            { a: ['', 'b', 'c'] },\n            'array brackets: empty strings work'\n        );\n        st.end();\n    });\n\n    t.test('compacts sparse arrays', function (st) {\n        st.deepEqual(qs.parse('a[10]=1&a[2]=2', { arrayLimit: 20 }), { a: ['2', '1'] });\n        st.deepEqual(qs.parse('a[1][b][2][c]=1', { arrayLimit: 20 }), { a: [{ b: [{ c: '1' }] }] });\n        st.deepEqual(qs.parse('a[1][2][3][c]=1', { arrayLimit: 20 }), { a: [[[{ c: '1' }]]] });\n        st.deepEqual(qs.parse('a[1][2][3][c][1]=1', { arrayLimit: 20 }), { a: [[[{ c: ['1'] }]]] });\n        st.end();\n    });\n\n    t.test('parses sparse arrays', function (st) {\n        /* eslint no-sparse-arrays: 0 */\n        st.deepEqual(qs.parse('a[4]=1&a[1]=2', { allowSparse: true }), { a: [, '2', , , '1'] });\n        st.deepEqual(qs.parse('a[1][b][2][c]=1', { allowSparse: true }), { a: [, { b: [, , { c: '1' }] }] });\n        st.deepEqual(qs.parse('a[1][2][3][c]=1', { allowSparse: true }), { a: [, [, , [, , , { c: '1' }]]] });\n        st.deepEqual(qs.parse('a[1][2][3][c][1]=1', { allowSparse: true }), { a: [, [, , [, , , { c: [, '1'] }]]] });\n        st.end();\n    });\n\n    t.test('parses semi-parsed strings', function (st) {\n        st.deepEqual(qs.parse({ 'a[b]': 'c' }), { a: { b: 'c' } });\n        st.deepEqual(qs.parse({ 'a[b]': 'c', 'a[d]': 'e' }), { a: { b: 'c', d: 'e' } });\n        st.end();\n    });\n\n    t.test('parses buffers correctly', function (st) {\n        var b = SaferBuffer.from('test');\n        st.deepEqual(qs.parse({ a: b }), { a: b });\n        st.end();\n    });\n\n    t.test('parses jquery-param strings', function (st) {\n        // readable = 'filter[0][]=int1&filter[0][]==&filter[0][]=77&filter[]=and&filter[2][]=int2&filter[2][]==&filter[2][]=8'\n        var encoded = 'filter%5B0%5D%5B%5D=int1&filter%5B0%5D%5B%5D=%3D&filter%5B0%5D%5B%5D=77&filter%5B%5D=and&filter%5B2%5D%5B%5D=int2&filter%5B2%5D%5B%5D=%3D&filter%5B2%5D%5B%5D=8';\n        var expected = { filter: [['int1', '=', '77'], 'and', ['int2', '=', '8']] };\n        st.deepEqual(qs.parse(encoded), expected);\n        st.end();\n    });\n\n    t.test('continues parsing when no parent is found', function (st) {\n        st.deepEqual(qs.parse('[]=&a=b'), { 0: '', a: 'b' });\n        st.deepEqual(qs.parse('[]&a=b', { strictNullHandling: true }), { 0: null, a: 'b' });\n        st.deepEqual(qs.parse('[foo]=bar'), { foo: 'bar' });\n        st.end();\n    });\n\n    t.test('does not error when parsing a very long array', function (st) {\n        var str = 'a[]=a';\n        while (Buffer.byteLength(str) < 128 * 1024) {\n            str = str + '&' + str;\n        }\n\n        st.doesNotThrow(function () {\n            qs.parse(str);\n        });\n\n        st.end();\n    });\n\n    t.test('should not throw when a native prototype has an enumerable property', function (st) {\n        st.intercept(Object.prototype, 'crash', { value: '' });\n        st.intercept(Array.prototype, 'crash', { value: '' });\n\n        st.doesNotThrow(qs.parse.bind(null, 'a=b'));\n        st.deepEqual(qs.parse('a=b'), { a: 'b' });\n        st.doesNotThrow(qs.parse.bind(null, 'a[][b]=c'));\n        st.deepEqual(qs.parse('a[][b]=c'), { a: [{ b: 'c' }] });\n\n        st.end();\n    });\n\n    t.test('parses a string with an alternative string delimiter', function (st) {\n        st.deepEqual(qs.parse('a=b;c=d', { delimiter: ';' }), { a: 'b', c: 'd' });\n        st.end();\n    });\n\n    t.test('parses a string with an alternative RegExp delimiter', function (st) {\n        st.deepEqual(qs.parse('a=b; c=d', { delimiter: /[;,] */ }), { a: 'b', c: 'd' });\n        st.end();\n    });\n\n    t.test('does not use non-splittable objects as delimiters', function (st) {\n        st.deepEqual(qs.parse('a=b&c=d', { delimiter: true }), { a: 'b', c: 'd' });\n        st.end();\n    });\n\n    t.test('allows overriding parameter limit', function (st) {\n        st.deepEqual(qs.parse('a=b&c=d', { parameterLimit: 1 }), { a: 'b' });\n        st.end();\n    });\n\n    t.test('allows setting the parameter limit to Infinity', function (st) {\n        st.deepEqual(qs.parse('a=b&c=d', { parameterLimit: Infinity }), { a: 'b', c: 'd' });\n        st.end();\n    });\n\n    t.test('allows overriding array limit', function (st) {\n        st.deepEqual(qs.parse('a[0]=b', { arrayLimit: -1 }), { a: { 0: 'b' } });\n        st.deepEqual(qs.parse('a[0]=b', { arrayLimit: 0 }), { a: ['b'] });\n\n        st.deepEqual(qs.parse('a[-1]=b', { arrayLimit: -1 }), { a: { '-1': 'b' } });\n        st.deepEqual(qs.parse('a[-1]=b', { arrayLimit: 0 }), { a: { '-1': 'b' } });\n\n        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { arrayLimit: -1 }), { a: { 0: 'b', 1: 'c' } });\n        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { arrayLimit: 0 }), { a: { 0: 'b', 1: 'c' } });\n\n        st.end();\n    });\n\n    t.test('allows disabling array parsing', function (st) {\n        var indices = qs.parse('a[0]=b&a[1]=c', { parseArrays: false });\n        st.deepEqual(indices, { a: { 0: 'b', 1: 'c' } });\n        st.equal(Array.isArray(indices.a), false, 'parseArrays:false, indices case is not an array');\n\n        var emptyBrackets = qs.parse('a[]=b', { parseArrays: false });\n        st.deepEqual(emptyBrackets, { a: { 0: 'b' } });\n        st.equal(Array.isArray(emptyBrackets.a), false, 'parseArrays:false, empty brackets case is not an array');\n\n        st.end();\n    });\n\n    t.test('allows for query string prefix', function (st) {\n        st.deepEqual(qs.parse('?foo=bar', { ignoreQueryPrefix: true }), { foo: 'bar' });\n        st.deepEqual(qs.parse('foo=bar', { ignoreQueryPrefix: true }), { foo: 'bar' });\n        st.deepEqual(qs.parse('?foo=bar', { ignoreQueryPrefix: false }), { '?foo': 'bar' });\n\n        st.end();\n    });\n\n    t.test('parses an object', function (st) {\n        var input = {\n            'user[name]': { 'pop[bob]': 3 },\n            'user[email]': null\n        };\n\n        var expected = {\n            user: {\n                name: { 'pop[bob]': 3 },\n                email: null\n            }\n        };\n\n        var result = qs.parse(input);\n\n        st.deepEqual(result, expected);\n        st.end();\n    });\n\n    t.test('parses string with comma as array divider', function (st) {\n        st.deepEqual(qs.parse('foo=bar,tee', { comma: true }), { foo: ['bar', 'tee'] });\n        st.deepEqual(qs.parse('foo[bar]=coffee,tee', { comma: true }), { foo: { bar: ['coffee', 'tee'] } });\n        st.deepEqual(qs.parse('foo=', { comma: true }), { foo: '' });\n        st.deepEqual(qs.parse('foo', { comma: true }), { foo: '' });\n        st.deepEqual(qs.parse('foo', { comma: true, strictNullHandling: true }), { foo: null });\n\n        // test cases inversed from from stringify tests\n        st.deepEqual(qs.parse('a[0]=c'), { a: ['c'] });\n        st.deepEqual(qs.parse('a[]=c'), { a: ['c'] });\n        st.deepEqual(qs.parse('a[]=c', { comma: true }), { a: ['c'] });\n\n        st.deepEqual(qs.parse('a[0]=c&a[1]=d'), { a: ['c', 'd'] });\n        st.deepEqual(qs.parse('a[]=c&a[]=d'), { a: ['c', 'd'] });\n        st.deepEqual(qs.parse('a=c,d', { comma: true }), { a: ['c', 'd'] });\n\n        st.end();\n    });\n\n    t.test('parses values with comma as array divider', function (st) {\n        st.deepEqual(qs.parse({ foo: 'bar,tee' }, { comma: false }), { foo: 'bar,tee' });\n        st.deepEqual(qs.parse({ foo: 'bar,tee' }, { comma: true }), { foo: ['bar', 'tee'] });\n        st.end();\n    });\n\n    t.test('use number decoder, parses string that has one number with comma option enabled', function (st) {\n        var decoder = function (str, defaultDecoder, charset, type) {\n            if (!isNaN(Number(str))) {\n                return parseFloat(str);\n            }\n            return defaultDecoder(str, defaultDecoder, charset, type);\n        };\n\n        st.deepEqual(qs.parse('foo=1', { comma: true, decoder: decoder }), { foo: 1 });\n        st.deepEqual(qs.parse('foo=0', { comma: true, decoder: decoder }), { foo: 0 });\n\n        st.end();\n    });\n\n    t.test('parses brackets holds array of arrays when having two parts of strings with comma as array divider', function (st) {\n        st.deepEqual(qs.parse('foo[]=1,2,3&foo[]=4,5,6', { comma: true }), { foo: [['1', '2', '3'], ['4', '5', '6']] });\n        st.deepEqual(qs.parse('foo[]=1,2,3&foo[]=', { comma: true }), { foo: [['1', '2', '3'], ''] });\n        st.deepEqual(qs.parse('foo[]=1,2,3&foo[]=,', { comma: true }), { foo: [['1', '2', '3'], ['', '']] });\n        st.deepEqual(qs.parse('foo[]=1,2,3&foo[]=a', { comma: true }), { foo: [['1', '2', '3'], 'a'] });\n\n        st.end();\n    });\n\n    t.test('parses url-encoded brackets holds array of arrays when having two parts of strings with comma as array divider', function (st) {\n        st.deepEqual(qs.parse('foo%5B%5D=1,2,3&foo%5B%5D=4,5,6', { comma: true }), { foo: [['1', '2', '3'], ['4', '5', '6']] });\n        st.deepEqual(qs.parse('foo%5B%5D=1,2,3&foo%5B%5D=', { comma: true }), { foo: [['1', '2', '3'], ''] });\n        st.deepEqual(qs.parse('foo%5B%5D=1,2,3&foo%5B%5D=,', { comma: true }), { foo: [['1', '2', '3'], ['', '']] });\n        st.deepEqual(qs.parse('foo%5B%5D=1,2,3&foo%5B%5D=a', { comma: true }), { foo: [['1', '2', '3'], 'a'] });\n\n        st.end();\n    });\n\n    t.test('parses comma delimited array while having percent-encoded comma treated as normal text', function (st) {\n        st.deepEqual(qs.parse('foo=a%2Cb', { comma: true }), { foo: 'a,b' });\n        st.deepEqual(qs.parse('foo=a%2C%20b,d', { comma: true }), { foo: ['a, b', 'd'] });\n        st.deepEqual(qs.parse('foo=a%2C%20b,c%2C%20d', { comma: true }), { foo: ['a, b', 'c, d'] });\n\n        st.end();\n    });\n\n    t.test('parses an object in dot notation', function (st) {\n        var input = {\n            'user.name': { 'pop[bob]': 3 },\n            'user.email.': null\n        };\n\n        var expected = {\n            user: {\n                name: { 'pop[bob]': 3 },\n                email: null\n            }\n        };\n\n        var result = qs.parse(input, { allowDots: true });\n\n        st.deepEqual(result, expected);\n        st.end();\n    });\n\n    t.test('parses an object and not child values', function (st) {\n        var input = {\n            'user[name]': { 'pop[bob]': { test: 3 } },\n            'user[email]': null\n        };\n\n        var expected = {\n            user: {\n                name: { 'pop[bob]': { test: 3 } },\n                email: null\n            }\n        };\n\n        var result = qs.parse(input);\n\n        st.deepEqual(result, expected);\n        st.end();\n    });\n\n    t.test('does not blow up when Buffer global is missing', function (st) {\n        var restore = mockProperty(global, 'Buffer', { 'delete': true });\n\n        var result = qs.parse('a=b&c=d');\n\n        restore();\n\n        st.deepEqual(result, { a: 'b', c: 'd' });\n        st.end();\n    });\n\n    t.test('does not crash when parsing circular references', function (st) {\n        var a = {};\n        a.b = a;\n\n        var parsed;\n\n        st.doesNotThrow(function () {\n            parsed = qs.parse({ 'foo[bar]': 'baz', 'foo[baz]': a });\n        });\n\n        st.equal('foo' in parsed, true, 'parsed has \"foo\" property');\n        st.equal('bar' in parsed.foo, true);\n        st.equal('baz' in parsed.foo, true);\n        st.equal(parsed.foo.bar, 'baz');\n        st.deepEqual(parsed.foo.baz, a);\n        st.end();\n    });\n\n    t.test('does not crash when parsing deep objects', function (st) {\n        var parsed;\n        var str = 'foo';\n\n        for (var i = 0; i < 5000; i++) {\n            str += '[p]';\n        }\n\n        str += '=bar';\n\n        st.doesNotThrow(function () {\n            parsed = qs.parse(str, { depth: 5000 });\n        });\n\n        st.equal('foo' in parsed, true, 'parsed has \"foo\" property');\n\n        var depth = 0;\n        var ref = parsed.foo;\n        while ((ref = ref.p)) {\n            depth += 1;\n        }\n\n        st.equal(depth, 5000, 'parsed is 5000 properties deep');\n\n        st.end();\n    });\n\n    t.test('parses null objects correctly', { skip: !Object.create }, function (st) {\n        var a = Object.create(null);\n        a.b = 'c';\n\n        st.deepEqual(qs.parse(a), { b: 'c' });\n        var result = qs.parse({ a: a });\n        st.equal('a' in result, true, 'result has \"a\" property');\n        st.deepEqual(result.a, a);\n        st.end();\n    });\n\n    t.test('parses dates correctly', function (st) {\n        var now = new Date();\n        st.deepEqual(qs.parse({ a: now }), { a: now });\n        st.end();\n    });\n\n    t.test('parses regular expressions correctly', function (st) {\n        var re = /^test$/;\n        st.deepEqual(qs.parse({ a: re }), { a: re });\n        st.end();\n    });\n\n    t.test('does not allow overwriting prototype properties', function (st) {\n        st.deepEqual(qs.parse('a[hasOwnProperty]=b', { allowPrototypes: false }), {});\n        st.deepEqual(qs.parse('hasOwnProperty=b', { allowPrototypes: false }), {});\n\n        st.deepEqual(\n            qs.parse('toString', { allowPrototypes: false }),\n            {},\n            'bare \"toString\" results in {}'\n        );\n\n        st.end();\n    });\n\n    t.test('can allow overwriting prototype properties', function (st) {\n        st.deepEqual(qs.parse('a[hasOwnProperty]=b', { allowPrototypes: true }), { a: { hasOwnProperty: 'b' } });\n        st.deepEqual(qs.parse('hasOwnProperty=b', { allowPrototypes: true }), { hasOwnProperty: 'b' });\n\n        st.deepEqual(\n            qs.parse('toString', { allowPrototypes: true }),\n            { toString: '' },\n            'bare \"toString\" results in { toString: \"\" }'\n        );\n\n        st.end();\n    });\n\n    t.test('does not crash when the global Object prototype is frozen', { skip: !hasPropertyDescriptors || !hasOverrideMistake }, function (st) {\n        // We can't actually freeze the global Object prototype as that will interfere with other tests, and once an object is frozen, it\n        // can't be unfrozen. Instead, we add a new non-writable property to simulate this.\n        st.teardown(mockProperty(Object.prototype, 'frozenProp', { value: 'foo', nonWritable: true, nonEnumerable: true }));\n\n        st['throws'](\n            function () {\n                var obj = {};\n                obj.frozenProp = 'bar';\n            },\n            // node < 6 has a different error message\n            /^TypeError: Cannot assign to read only property 'frozenProp' of (?:object '#<Object>'|#<Object>)/,\n            'regular assignment of an inherited non-writable property throws'\n        );\n\n        var parsed;\n        st.doesNotThrow(\n            function () {\n                parsed = qs.parse('frozenProp', { allowPrototypes: false });\n            },\n            'parsing a nonwritable Object.prototype property does not throw'\n        );\n\n        st.deepEqual(parsed, {}, 'bare \"frozenProp\" results in {}');\n\n        st.end();\n    });\n\n    t.test('params starting with a closing bracket', function (st) {\n        st.deepEqual(qs.parse(']=toString'), { ']': 'toString' });\n        st.deepEqual(qs.parse(']]=toString'), { ']]': 'toString' });\n        st.deepEqual(qs.parse(']hello]=toString'), { ']hello]': 'toString' });\n        st.end();\n    });\n\n    t.test('params starting with a starting bracket', function (st) {\n        st.deepEqual(qs.parse('[=toString'), { '[': 'toString' });\n        st.deepEqual(qs.parse('[[=toString'), { '[[': 'toString' });\n        st.deepEqual(qs.parse('[hello[=toString'), { '[hello[': 'toString' });\n        st.end();\n    });\n\n    t.test('add keys to objects', function (st) {\n        st.deepEqual(\n            qs.parse('a[b]=c&a=d'),\n            { a: { b: 'c', d: true } },\n            'can add keys to objects'\n        );\n\n        st.deepEqual(\n            qs.parse('a[b]=c&a=toString'),\n            { a: { b: 'c' } },\n            'can not overwrite prototype'\n        );\n\n        st.deepEqual(\n            qs.parse('a[b]=c&a=toString', { allowPrototypes: true }),\n            { a: { b: 'c', toString: true } },\n            'can overwrite prototype with allowPrototypes true'\n        );\n\n        st.deepEqual(\n            qs.parse('a[b]=c&a=toString', { plainObjects: true }),\n            { __proto__: null, a: { __proto__: null, b: 'c', toString: true } },\n            'can overwrite prototype with plainObjects true'\n        );\n\n        st.end();\n    });\n\n    t.test('dunder proto is ignored', function (st) {\n        var payload = 'categories[__proto__]=login&categories[__proto__]&categories[length]=42';\n        var result = qs.parse(payload, { allowPrototypes: true });\n\n        st.deepEqual(\n            result,\n            {\n                categories: {\n                    length: '42'\n                }\n            },\n            'silent [[Prototype]] payload'\n        );\n\n        var plainResult = qs.parse(payload, { allowPrototypes: true, plainObjects: true });\n\n        st.deepEqual(\n            plainResult,\n            {\n                __proto__: null,\n                categories: {\n                    __proto__: null,\n                    length: '42'\n                }\n            },\n            'silent [[Prototype]] payload: plain objects'\n        );\n\n        var query = qs.parse('categories[__proto__]=cats&categories[__proto__]=dogs&categories[some][json]=toInject', { allowPrototypes: true });\n\n        st.notOk(Array.isArray(query.categories), 'is not an array');\n        st.notOk(query.categories instanceof Array, 'is not instanceof an array');\n        st.deepEqual(query.categories, { some: { json: 'toInject' } });\n        st.equal(JSON.stringify(query.categories), '{\"some\":{\"json\":\"toInject\"}}', 'stringifies as a non-array');\n\n        st.deepEqual(\n            qs.parse('foo[__proto__][hidden]=value&foo[bar]=stuffs', { allowPrototypes: true }),\n            {\n                foo: {\n                    bar: 'stuffs'\n                }\n            },\n            'hidden values'\n        );\n\n        st.deepEqual(\n            qs.parse('foo[__proto__][hidden]=value&foo[bar]=stuffs', { allowPrototypes: true, plainObjects: true }),\n            {\n                __proto__: null,\n                foo: {\n                    __proto__: null,\n                    bar: 'stuffs'\n                }\n            },\n            'hidden values: plain objects'\n        );\n\n        st.end();\n    });\n\n    t.test('can return null objects', { skip: !Object.create }, function (st) {\n        var expected = Object.create(null);\n        expected.a = Object.create(null);\n        expected.a.b = 'c';\n        expected.a.hasOwnProperty = 'd';\n        st.deepEqual(qs.parse('a[b]=c&a[hasOwnProperty]=d', { plainObjects: true }), expected);\n        st.deepEqual(qs.parse(null, { plainObjects: true }), Object.create(null));\n        var expectedArray = Object.create(null);\n        expectedArray.a = Object.create(null);\n        expectedArray.a[0] = 'b';\n        expectedArray.a.c = 'd';\n        st.deepEqual(qs.parse('a[]=b&a[c]=d', { plainObjects: true }), expectedArray);\n        st.end();\n    });\n\n    t.test('can parse with custom encoding', function (st) {\n        st.deepEqual(qs.parse('%8c%a7=%91%e5%8d%e3%95%7b', {\n            decoder: function (str) {\n                var reg = /%([0-9A-F]{2})/ig;\n                var result = [];\n                var parts = reg.exec(str);\n                while (parts) {\n                    result.push(parseInt(parts[1], 16));\n                    parts = reg.exec(str);\n                }\n                return String(iconv.decode(SaferBuffer.from(result), 'shift_jis'));\n            }\n        }), { 県: '大阪府' });\n        st.end();\n    });\n\n    t.test('receives the default decoder as a second argument', function (st) {\n        st.plan(1);\n        qs.parse('a', {\n            decoder: function (str, defaultDecoder) {\n                st.equal(defaultDecoder, utils.decode);\n            }\n        });\n        st.end();\n    });\n\n    t.test('throws error with wrong decoder', function (st) {\n        st['throws'](function () {\n            qs.parse({}, { decoder: 'string' });\n        }, new TypeError('Decoder has to be a function.'));\n        st.end();\n    });\n\n    t.test('does not mutate the options argument', function (st) {\n        var options = {};\n        qs.parse('a[b]=true', options);\n        st.deepEqual(options, {});\n        st.end();\n    });\n\n    t.test('throws if an invalid charset is specified', function (st) {\n        st['throws'](function () {\n            qs.parse('a=b', { charset: 'foobar' });\n        }, new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined'));\n        st.end();\n    });\n\n    t.test('parses an iso-8859-1 string if asked to', function (st) {\n        st.deepEqual(qs.parse('%A2=%BD', { charset: 'iso-8859-1' }), { '¢': '½' });\n        st.end();\n    });\n\n    var urlEncodedCheckmarkInUtf8 = '%E2%9C%93';\n    var urlEncodedOSlashInUtf8 = '%C3%B8';\n    var urlEncodedNumCheckmark = '%26%2310003%3B';\n    var urlEncodedNumSmiley = '%26%239786%3B';\n\n    t.test('prefers an utf-8 charset specified by the utf8 sentinel to a default charset of iso-8859-1', function (st) {\n        st.deepEqual(qs.parse('utf8=' + urlEncodedCheckmarkInUtf8 + '&' + urlEncodedOSlashInUtf8 + '=' + urlEncodedOSlashInUtf8, { charsetSentinel: true, charset: 'iso-8859-1' }), { ø: 'ø' });\n        st.end();\n    });\n\n    t.test('prefers an iso-8859-1 charset specified by the utf8 sentinel to a default charset of utf-8', function (st) {\n        st.deepEqual(qs.parse('utf8=' + urlEncodedNumCheckmark + '&' + urlEncodedOSlashInUtf8 + '=' + urlEncodedOSlashInUtf8, { charsetSentinel: true, charset: 'utf-8' }), { 'Ã¸': 'Ã¸' });\n        st.end();\n    });\n\n    t.test('does not require the utf8 sentinel to be defined before the parameters whose decoding it affects', function (st) {\n        st.deepEqual(qs.parse('a=' + urlEncodedOSlashInUtf8 + '&utf8=' + urlEncodedNumCheckmark, { charsetSentinel: true, charset: 'utf-8' }), { a: 'Ã¸' });\n        st.end();\n    });\n\n    t.test('should ignore an utf8 sentinel with an unknown value', function (st) {\n        st.deepEqual(qs.parse('utf8=foo&' + urlEncodedOSlashInUtf8 + '=' + urlEncodedOSlashInUtf8, { charsetSentinel: true, charset: 'utf-8' }), { ø: 'ø' });\n        st.end();\n    });\n\n    t.test('uses the utf8 sentinel to switch to utf-8 when no default charset is given', function (st) {\n        st.deepEqual(qs.parse('utf8=' + urlEncodedCheckmarkInUtf8 + '&' + urlEncodedOSlashInUtf8 + '=' + urlEncodedOSlashInUtf8, { charsetSentinel: true }), { ø: 'ø' });\n        st.end();\n    });\n\n    t.test('uses the utf8 sentinel to switch to iso-8859-1 when no default charset is given', function (st) {\n        st.deepEqual(qs.parse('utf8=' + urlEncodedNumCheckmark + '&' + urlEncodedOSlashInUtf8 + '=' + urlEncodedOSlashInUtf8, { charsetSentinel: true }), { 'Ã¸': 'Ã¸' });\n        st.end();\n    });\n\n    t.test('interprets numeric entities in iso-8859-1 when `interpretNumericEntities`', function (st) {\n        st.deepEqual(qs.parse('foo=' + urlEncodedNumSmiley, { charset: 'iso-8859-1', interpretNumericEntities: true }), { foo: '☺' });\n        st.end();\n    });\n\n    t.test('handles a custom decoder returning `null`, in the `iso-8859-1` charset, when `interpretNumericEntities`', function (st) {\n        st.deepEqual(qs.parse('foo=&bar=' + urlEncodedNumSmiley, {\n            charset: 'iso-8859-1',\n            decoder: function (str, defaultDecoder, charset) {\n                return str ? defaultDecoder(str, defaultDecoder, charset) : null;\n            },\n            interpretNumericEntities: true\n        }), { foo: null, bar: '☺' });\n        st.end();\n    });\n\n    t.test('does not interpret numeric entities in iso-8859-1 when `interpretNumericEntities` is absent', function (st) {\n        st.deepEqual(qs.parse('foo=' + urlEncodedNumSmiley, { charset: 'iso-8859-1' }), { foo: '&#9786;' });\n        st.end();\n    });\n\n    t.test('does not interpret numeric entities when the charset is utf-8, even when `interpretNumericEntities`', function (st) {\n        st.deepEqual(qs.parse('foo=' + urlEncodedNumSmiley, { charset: 'utf-8', interpretNumericEntities: true }), { foo: '&#9786;' });\n        st.end();\n    });\n\n    t.test('does not interpret %uXXXX syntax in iso-8859-1 mode', function (st) {\n        st.deepEqual(qs.parse('%u263A=%u263A', { charset: 'iso-8859-1' }), { '%u263A': '%u263A' });\n        st.end();\n    });\n\n    t.test('allows for decoding keys and values differently', function (st) {\n        var decoder = function (str, defaultDecoder, charset, type) {\n            if (type === 'key') {\n                return defaultDecoder(str, defaultDecoder, charset, type).toLowerCase();\n            }\n            if (type === 'value') {\n                return defaultDecoder(str, defaultDecoder, charset, type).toUpperCase();\n            }\n            throw 'this should never happen! type: ' + type;\n        };\n\n        st.deepEqual(qs.parse('KeY=vAlUe', { decoder: decoder }), { key: 'VALUE' });\n        st.end();\n    });\n\n    t.end();\n});\n\ntest('parses empty keys', function (t) {\n    emptyTestCases.forEach(function (testCase) {\n        t.test('skips empty string key with ' + testCase.input, function (st) {\n            st.deepEqual(qs.parse(testCase.input), testCase.noEmptyKeys);\n\n            st.end();\n        });\n    });\n});\n\ntest('`duplicates` option', function (t) {\n    v.nonStrings.concat('not a valid option').forEach(function (invalidOption) {\n        if (typeof invalidOption !== 'undefined') {\n            t['throws'](\n                function () { qs.parse('', { duplicates: invalidOption }); },\n                TypeError,\n                'throws on invalid option: ' + inspect(invalidOption)\n            );\n        }\n    });\n\n    t.deepEqual(\n        qs.parse('foo=bar&foo=baz'),\n        { foo: ['bar', 'baz'] },\n        'duplicates: default, combine'\n    );\n\n    t.deepEqual(\n        qs.parse('foo=bar&foo=baz', { duplicates: 'combine' }),\n        { foo: ['bar', 'baz'] },\n        'duplicates: combine'\n    );\n\n    t.deepEqual(\n        qs.parse('foo=bar&foo=baz', { duplicates: 'first' }),\n        { foo: 'bar' },\n        'duplicates: first'\n    );\n\n    t.deepEqual(\n        qs.parse('foo=bar&foo=baz', { duplicates: 'last' }),\n        { foo: 'baz' },\n        'duplicates: last'\n    );\n\n    t.end();\n});\n\ntest('qs strictDepth option - throw cases', function (t) {\n    t.test('throws an exception when depth exceeds the limit with strictDepth: true', function (st) {\n        st['throws'](\n            function () {\n                qs.parse('a[b][c][d][e][f][g][h][i]=j', { depth: 1, strictDepth: true });\n            },\n            RangeError,\n            'Should throw RangeError'\n        );\n        st.end();\n    });\n\n    t.test('throws an exception for multiple nested arrays with strictDepth: true', function (st) {\n        st['throws'](\n            function () {\n                qs.parse('a[0][1][2][3][4]=b', { depth: 3, strictDepth: true });\n            },\n            RangeError,\n            'Should throw RangeError'\n        );\n        st.end();\n    });\n\n    t.test('throws an exception for nested objects and arrays with strictDepth: true', function (st) {\n        st['throws'](\n            function () {\n                qs.parse('a[b][c][0][d][e]=f', { depth: 3, strictDepth: true });\n            },\n            RangeError,\n            'Should throw RangeError'\n        );\n        st.end();\n    });\n\n    t.test('throws an exception for different types of values with strictDepth: true', function (st) {\n        st['throws'](\n            function () {\n                qs.parse('a[b][c][d][e]=true&a[b][c][d][f]=42', { depth: 3, strictDepth: true });\n            },\n            RangeError,\n            'Should throw RangeError'\n        );\n        st.end();\n    });\n\n});\n\ntest('qs strictDepth option - non-throw cases', function (t) {\n    t.test('when depth is 0 and strictDepth true, do not throw', function (st) {\n        st.doesNotThrow(\n            function () {\n                qs.parse('a[b][c][d][e]=true&a[b][c][d][f]=42', { depth: 0, strictDepth: true });\n            },\n            RangeError,\n            'Should not throw RangeError'\n        );\n        st.end();\n    });\n\n    t.test('parses successfully when depth is within the limit with strictDepth: true', function (st) {\n        st.doesNotThrow(\n            function () {\n                var result = qs.parse('a[b]=c', { depth: 1, strictDepth: true });\n                st.deepEqual(result, { a: { b: 'c' } }, 'Should parse correctly');\n            }\n        );\n        st.end();\n    });\n\n    t.test('does not throw an exception when depth exceeds the limit with strictDepth: false', function (st) {\n        st.doesNotThrow(\n            function () {\n                var result = qs.parse('a[b][c][d][e][f][g][h][i]=j', { depth: 1 });\n                st.deepEqual(result, { a: { b: { '[c][d][e][f][g][h][i]': 'j' } } }, 'Should parse with depth limit');\n            }\n        );\n        st.end();\n    });\n\n    t.test('parses successfully when depth is within the limit with strictDepth: false', function (st) {\n        st.doesNotThrow(\n            function () {\n                var result = qs.parse('a[b]=c', { depth: 1 });\n                st.deepEqual(result, { a: { b: 'c' } }, 'Should parse correctly');\n            }\n        );\n        st.end();\n    });\n\n    t.test('does not throw when depth is exactly at the limit with strictDepth: true', function (st) {\n        st.doesNotThrow(\n            function () {\n                var result = qs.parse('a[b][c]=d', { depth: 2, strictDepth: true });\n                st.deepEqual(result, { a: { b: { c: 'd' } } }, 'Should parse correctly');\n            }\n        );\n        st.end();\n    });\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\qs\\test\\parse.js",
    "RelativePath": "tools\\backend\\node_modules\\qs\\test\\parse.js"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\nvar qs = require('../');\nvar utils = require('../lib/utils');\nvar iconv = require('iconv-lite');\nvar SaferBuffer = require('safer-buffer').Buffer;\nvar hasSymbols = require('has-symbols');\nvar mockProperty = require('mock-property');\nvar emptyTestCases = require('./empty-keys-cases').emptyTestCases;\nvar hasBigInt = typeof BigInt === 'function';\n\ntest('stringify()', function (t) {\n    t.test('stringifies a querystring object', function (st) {\n        st.equal(qs.stringify({ a: 'b' }), 'a=b');\n        st.equal(qs.stringify({ a: 1 }), 'a=1');\n        st.equal(qs.stringify({ a: 1, b: 2 }), 'a=1&b=2');\n        st.equal(qs.stringify({ a: 'A_Z' }), 'a=A_Z');\n        st.equal(qs.stringify({ a: '€' }), 'a=%E2%82%AC');\n        st.equal(qs.stringify({ a: '' }), 'a=%EE%80%80');\n        st.equal(qs.stringify({ a: 'א' }), 'a=%D7%90');\n        st.equal(qs.stringify({ a: '𐐷' }), 'a=%F0%90%90%B7');\n        st.end();\n    });\n\n    t.test('stringifies falsy values', function (st) {\n        st.equal(qs.stringify(undefined), '');\n        st.equal(qs.stringify(null), '');\n        st.equal(qs.stringify(null, { strictNullHandling: true }), '');\n        st.equal(qs.stringify(false), '');\n        st.equal(qs.stringify(0), '');\n        st.end();\n    });\n\n    t.test('stringifies symbols', { skip: !hasSymbols() }, function (st) {\n        st.equal(qs.stringify(Symbol.iterator), '');\n        st.equal(qs.stringify([Symbol.iterator]), '0=Symbol%28Symbol.iterator%29');\n        st.equal(qs.stringify({ a: Symbol.iterator }), 'a=Symbol%28Symbol.iterator%29');\n        st.equal(\n            qs.stringify({ a: [Symbol.iterator] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }),\n            'a[]=Symbol%28Symbol.iterator%29'\n        );\n        st.end();\n    });\n\n    t.test('stringifies bigints', { skip: !hasBigInt }, function (st) {\n        var three = BigInt(3);\n        var encodeWithN = function (value, defaultEncoder, charset) {\n            var result = defaultEncoder(value, defaultEncoder, charset);\n            return typeof value === 'bigint' ? result + 'n' : result;\n        };\n        st.equal(qs.stringify(three), '');\n        st.equal(qs.stringify([three]), '0=3');\n        st.equal(qs.stringify([three], { encoder: encodeWithN }), '0=3n');\n        st.equal(qs.stringify({ a: three }), 'a=3');\n        st.equal(qs.stringify({ a: three }, { encoder: encodeWithN }), 'a=3n');\n        st.equal(\n            qs.stringify({ a: [three] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }),\n            'a[]=3'\n        );\n        st.equal(\n            qs.stringify({ a: [three] }, { encodeValuesOnly: true, encoder: encodeWithN, arrayFormat: 'brackets' }),\n            'a[]=3n'\n        );\n        st.end();\n    });\n\n    t.test('encodes dot in key of object when encodeDotInKeys and allowDots is provided', function (st) {\n        st.equal(\n            qs.stringify(\n                { 'name.obj': { first: 'John', last: 'Doe' } },\n                { allowDots: false, encodeDotInKeys: false }\n            ),\n            'name.obj%5Bfirst%5D=John&name.obj%5Blast%5D=Doe',\n            'with allowDots false and encodeDotInKeys false'\n        );\n        st.equal(\n            qs.stringify(\n                { 'name.obj': { first: 'John', last: 'Doe' } },\n                { allowDots: true, encodeDotInKeys: false }\n            ),\n            'name.obj.first=John&name.obj.last=Doe',\n            'with allowDots true and encodeDotInKeys false'\n        );\n        st.equal(\n            qs.stringify(\n                { 'name.obj': { first: 'John', last: 'Doe' } },\n                { allowDots: false, encodeDotInKeys: true }\n            ),\n            'name%252Eobj%5Bfirst%5D=John&name%252Eobj%5Blast%5D=Doe',\n            'with allowDots false and encodeDotInKeys true'\n        );\n        st.equal(\n            qs.stringify(\n                { 'name.obj': { first: 'John', last: 'Doe' } },\n                { allowDots: true, encodeDotInKeys: true }\n            ),\n            'name%252Eobj.first=John&name%252Eobj.last=Doe',\n            'with allowDots true and encodeDotInKeys true'\n        );\n\n        st.equal(\n            qs.stringify(\n                { 'name.obj.subobject': { 'first.godly.name': 'John', last: 'Doe' } },\n                { allowDots: false, encodeDotInKeys: false }\n            ),\n            'name.obj.subobject%5Bfirst.godly.name%5D=John&name.obj.subobject%5Blast%5D=Doe',\n            'with allowDots false and encodeDotInKeys false'\n        );\n        st.equal(\n            qs.stringify(\n                { 'name.obj.subobject': { 'first.godly.name': 'John', last: 'Doe' } },\n                { allowDots: true, encodeDotInKeys: false }\n            ),\n            'name.obj.subobject.first.godly.name=John&name.obj.subobject.last=Doe',\n            'with allowDots false and encodeDotInKeys false'\n        );\n        st.equal(\n            qs.stringify(\n                { 'name.obj.subobject': { 'first.godly.name': 'John', last: 'Doe' } },\n                { allowDots: false, encodeDotInKeys: true }\n            ),\n            'name%252Eobj%252Esubobject%5Bfirst.godly.name%5D=John&name%252Eobj%252Esubobject%5Blast%5D=Doe',\n            'with allowDots false and encodeDotInKeys true'\n        );\n        st.equal(\n            qs.stringify(\n                { 'name.obj.subobject': { 'first.godly.name': 'John', last: 'Doe' } },\n                { allowDots: true, encodeDotInKeys: true }\n            ),\n            'name%252Eobj%252Esubobject.first%252Egodly%252Ename=John&name%252Eobj%252Esubobject.last=Doe',\n            'with allowDots true and encodeDotInKeys true'\n        );\n\n        st.end();\n    });\n\n    t.test('should encode dot in key of object, and automatically set allowDots to `true` when encodeDotInKeys is true and allowDots in undefined', function (st) {\n        st.equal(\n            qs.stringify(\n                { 'name.obj.subobject': { 'first.godly.name': 'John', last: 'Doe' } },\n                { encodeDotInKeys: true }\n            ),\n            'name%252Eobj%252Esubobject.first%252Egodly%252Ename=John&name%252Eobj%252Esubobject.last=Doe',\n            'with allowDots undefined and encodeDotInKeys true'\n        );\n        st.end();\n    });\n\n    t.test('should encode dot in key of object when encodeDotInKeys and allowDots is provided, and nothing else when encodeValuesOnly is provided', function (st) {\n        st.equal(\n            qs.stringify({ 'name.obj': { first: 'John', last: 'Doe' } }, {\n                encodeDotInKeys: true, allowDots: true, encodeValuesOnly: true\n            }),\n            'name%2Eobj.first=John&name%2Eobj.last=Doe'\n        );\n\n        st.equal(\n            qs.stringify({ 'name.obj.subobject': { 'first.godly.name': 'John', last: 'Doe' } }, { allowDots: true, encodeDotInKeys: true, encodeValuesOnly: true }),\n            'name%2Eobj%2Esubobject.first%2Egodly%2Ename=John&name%2Eobj%2Esubobject.last=Doe'\n        );\n\n        st.end();\n    });\n\n    t.test('throws when `commaRoundTrip` is not a boolean', function (st) {\n        st['throws'](\n            function () { qs.stringify({}, { commaRoundTrip: 'not a boolean' }); },\n            TypeError,\n            'throws when `commaRoundTrip` is not a boolean'\n        );\n\n        st.end();\n    });\n\n    t.test('throws when `encodeDotInKeys` is not a boolean', function (st) {\n        st['throws'](\n            function () { qs.stringify({ a: [], b: 'zz' }, { encodeDotInKeys: 'foobar' }); },\n            TypeError\n        );\n\n        st['throws'](\n            function () { qs.stringify({ a: [], b: 'zz' }, { encodeDotInKeys: 0 }); },\n            TypeError\n        );\n\n        st['throws'](\n            function () { qs.stringify({ a: [], b: 'zz' }, { encodeDotInKeys: NaN }); },\n            TypeError\n        );\n\n        st['throws'](\n            function () { qs.stringify({ a: [], b: 'zz' }, { encodeDotInKeys: null }); },\n            TypeError\n        );\n\n        st.end();\n    });\n\n    t.test('adds query prefix', function (st) {\n        st.equal(qs.stringify({ a: 'b' }, { addQueryPrefix: true }), '?a=b');\n        st.end();\n    });\n\n    t.test('with query prefix, outputs blank string given an empty object', function (st) {\n        st.equal(qs.stringify({}, { addQueryPrefix: true }), '');\n        st.end();\n    });\n\n    t.test('stringifies nested falsy values', function (st) {\n        st.equal(qs.stringify({ a: { b: { c: null } } }), 'a%5Bb%5D%5Bc%5D=');\n        st.equal(qs.stringify({ a: { b: { c: null } } }, { strictNullHandling: true }), 'a%5Bb%5D%5Bc%5D');\n        st.equal(qs.stringify({ a: { b: { c: false } } }), 'a%5Bb%5D%5Bc%5D=false');\n        st.end();\n    });\n\n    t.test('stringifies a nested object', function (st) {\n        st.equal(qs.stringify({ a: { b: 'c' } }), 'a%5Bb%5D=c');\n        st.equal(qs.stringify({ a: { b: { c: { d: 'e' } } } }), 'a%5Bb%5D%5Bc%5D%5Bd%5D=e');\n        st.end();\n    });\n\n    t.test('`allowDots` option: stringifies a nested object with dots notation', function (st) {\n        st.equal(qs.stringify({ a: { b: 'c' } }, { allowDots: true }), 'a.b=c');\n        st.equal(qs.stringify({ a: { b: { c: { d: 'e' } } } }, { allowDots: true }), 'a.b.c.d=e');\n        st.end();\n    });\n\n    t.test('stringifies an array value', function (st) {\n        st.equal(\n            qs.stringify({ a: ['b', 'c', 'd'] }, { arrayFormat: 'indices' }),\n            'a%5B0%5D=b&a%5B1%5D=c&a%5B2%5D=d',\n            'indices => indices'\n        );\n        st.equal(\n            qs.stringify({ a: ['b', 'c', 'd'] }, { arrayFormat: 'brackets' }),\n            'a%5B%5D=b&a%5B%5D=c&a%5B%5D=d',\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify({ a: ['b', 'c', 'd'] }, { arrayFormat: 'comma' }),\n            'a=b%2Cc%2Cd',\n            'comma => comma'\n        );\n        st.equal(\n            qs.stringify({ a: ['b', 'c', 'd'] }, { arrayFormat: 'comma', commaRoundTrip: true }),\n            'a=b%2Cc%2Cd',\n            'comma round trip => comma'\n        );\n        st.equal(\n            qs.stringify({ a: ['b', 'c', 'd'] }),\n            'a%5B0%5D=b&a%5B1%5D=c&a%5B2%5D=d',\n            'default => indices'\n        );\n        st.end();\n    });\n\n    t.test('`skipNulls` option', function (st) {\n        st.equal(\n            qs.stringify({ a: 'b', c: null }, { skipNulls: true }),\n            'a=b',\n            'omits nulls when asked'\n        );\n\n        st.equal(\n            qs.stringify({ a: { b: 'c', d: null } }, { skipNulls: true }),\n            'a%5Bb%5D=c',\n            'omits nested nulls when asked'\n        );\n\n        st.end();\n    });\n\n    t.test('omits array indices when asked', function (st) {\n        st.equal(qs.stringify({ a: ['b', 'c', 'd'] }, { indices: false }), 'a=b&a=c&a=d');\n\n        st.end();\n    });\n\n    t.test('omits object key/value pair when value is empty array', function (st) {\n        st.equal(qs.stringify({ a: [], b: 'zz' }), 'b=zz');\n\n        st.end();\n    });\n\n    t.test('should not omit object key/value pair when value is empty array and when asked', function (st) {\n        st.equal(qs.stringify({ a: [], b: 'zz' }), 'b=zz');\n        st.equal(qs.stringify({ a: [], b: 'zz' }, { allowEmptyArrays: false }), 'b=zz');\n        st.equal(qs.stringify({ a: [], b: 'zz' }, { allowEmptyArrays: true }), 'a[]&b=zz');\n\n        st.end();\n    });\n\n    t.test('should throw when allowEmptyArrays is not of type boolean', function (st) {\n        st['throws'](\n            function () { qs.stringify({ a: [], b: 'zz' }, { allowEmptyArrays: 'foobar' }); },\n            TypeError\n        );\n\n        st['throws'](\n            function () { qs.stringify({ a: [], b: 'zz' }, { allowEmptyArrays: 0 }); },\n            TypeError\n        );\n\n        st['throws'](\n            function () { qs.stringify({ a: [], b: 'zz' }, { allowEmptyArrays: NaN }); },\n            TypeError\n        );\n\n        st['throws'](\n            function () { qs.stringify({ a: [], b: 'zz' }, { allowEmptyArrays: null }); },\n            TypeError\n        );\n\n        st.end();\n    });\n\n    t.test('allowEmptyArrays + strictNullHandling', function (st) {\n        st.equal(\n            qs.stringify(\n                { testEmptyArray: [] },\n                { strictNullHandling: true, allowEmptyArrays: true }\n            ),\n            'testEmptyArray[]'\n        );\n\n        st.end();\n    });\n\n    t.test('stringifies an array value with one item vs multiple items', function (st) {\n        st.test('non-array item', function (s2t) {\n            s2t.equal(qs.stringify({ a: 'c' }, { encodeValuesOnly: true, arrayFormat: 'indices' }), 'a=c');\n            s2t.equal(qs.stringify({ a: 'c' }, { encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a=c');\n            s2t.equal(qs.stringify({ a: 'c' }, { encodeValuesOnly: true, arrayFormat: 'comma' }), 'a=c');\n            s2t.equal(qs.stringify({ a: 'c' }, { encodeValuesOnly: true }), 'a=c');\n\n            s2t.end();\n        });\n\n        st.test('array with a single item', function (s2t) {\n            s2t.equal(qs.stringify({ a: ['c'] }, { encodeValuesOnly: true, arrayFormat: 'indices' }), 'a[0]=c');\n            s2t.equal(qs.stringify({ a: ['c'] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a[]=c');\n            s2t.equal(qs.stringify({ a: ['c'] }, { encodeValuesOnly: true, arrayFormat: 'comma' }), 'a=c');\n            s2t.equal(qs.stringify({ a: ['c'] }, { encodeValuesOnly: true, arrayFormat: 'comma', commaRoundTrip: true }), 'a[]=c'); // so it parses back as an array\n            s2t.equal(qs.stringify({ a: ['c'] }, { encodeValuesOnly: true }), 'a[0]=c');\n\n            s2t.end();\n        });\n\n        st.test('array with multiple items', function (s2t) {\n            s2t.equal(qs.stringify({ a: ['c', 'd'] }, { encodeValuesOnly: true, arrayFormat: 'indices' }), 'a[0]=c&a[1]=d');\n            s2t.equal(qs.stringify({ a: ['c', 'd'] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a[]=c&a[]=d');\n            s2t.equal(qs.stringify({ a: ['c', 'd'] }, { encodeValuesOnly: true, arrayFormat: 'comma' }), 'a=c,d');\n            s2t.equal(qs.stringify({ a: ['c', 'd'] }, { encodeValuesOnly: true, arrayFormat: 'comma', commaRoundTrip: true }), 'a=c,d');\n            s2t.equal(qs.stringify({ a: ['c', 'd'] }, { encodeValuesOnly: true }), 'a[0]=c&a[1]=d');\n\n            s2t.end();\n        });\n\n        st.test('array with multiple items with a comma inside', function (s2t) {\n            s2t.equal(qs.stringify({ a: ['c,d', 'e'] }, { encodeValuesOnly: true, arrayFormat: 'comma' }), 'a=c%2Cd,e');\n            s2t.equal(qs.stringify({ a: ['c,d', 'e'] }, { arrayFormat: 'comma' }), 'a=c%2Cd%2Ce');\n\n            s2t.equal(qs.stringify({ a: ['c,d', 'e'] }, { encodeValuesOnly: true, arrayFormat: 'comma', commaRoundTrip: true }), 'a=c%2Cd,e');\n            s2t.equal(qs.stringify({ a: ['c,d', 'e'] }, { arrayFormat: 'comma', commaRoundTrip: true }), 'a=c%2Cd%2Ce');\n\n            s2t.end();\n        });\n\n        st.end();\n    });\n\n    t.test('stringifies a nested array value', function (st) {\n        st.equal(qs.stringify({ a: { b: ['c', 'd'] } }, { encodeValuesOnly: true, arrayFormat: 'indices' }), 'a[b][0]=c&a[b][1]=d');\n        st.equal(qs.stringify({ a: { b: ['c', 'd'] } }, { encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a[b][]=c&a[b][]=d');\n        st.equal(qs.stringify({ a: { b: ['c', 'd'] } }, { encodeValuesOnly: true, arrayFormat: 'comma' }), 'a[b]=c,d');\n        st.equal(qs.stringify({ a: { b: ['c', 'd'] } }, { encodeValuesOnly: true }), 'a[b][0]=c&a[b][1]=d');\n        st.end();\n    });\n\n    t.test('stringifies comma and empty array values', function (st) {\n        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: false, arrayFormat: 'indices' }), 'a[0]=,&a[1]=&a[2]=c,d%');\n        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: false, arrayFormat: 'brackets' }), 'a[]=,&a[]=&a[]=c,d%');\n        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: false, arrayFormat: 'comma' }), 'a=,,,c,d%');\n        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: false, arrayFormat: 'repeat' }), 'a=,&a=&a=c,d%');\n\n        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: true, encodeValuesOnly: true, arrayFormat: 'indices' }), 'a[0]=%2C&a[1]=&a[2]=c%2Cd%25');\n        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: true, encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a[]=%2C&a[]=&a[]=c%2Cd%25');\n        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: true, encodeValuesOnly: true, arrayFormat: 'comma' }), 'a=%2C,,c%2Cd%25');\n        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: true, encodeValuesOnly: true, arrayFormat: 'repeat' }), 'a=%2C&a=&a=c%2Cd%25');\n\n        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: true, encodeValuesOnly: false, arrayFormat: 'indices' }), 'a%5B0%5D=%2C&a%5B1%5D=&a%5B2%5D=c%2Cd%25');\n        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: true, encodeValuesOnly: false, arrayFormat: 'brackets' }), 'a%5B%5D=%2C&a%5B%5D=&a%5B%5D=c%2Cd%25');\n        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: true, encodeValuesOnly: false, arrayFormat: 'comma' }), 'a=%2C%2C%2Cc%2Cd%25');\n        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: true, encodeValuesOnly: false, arrayFormat: 'repeat' }), 'a=%2C&a=&a=c%2Cd%25');\n\n        st.end();\n    });\n\n    t.test('stringifies comma and empty non-array values', function (st) {\n        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: false, arrayFormat: 'indices' }), 'a=,&b=&c=c,d%');\n        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: false, arrayFormat: 'brackets' }), 'a=,&b=&c=c,d%');\n        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: false, arrayFormat: 'comma' }), 'a=,&b=&c=c,d%');\n        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: false, arrayFormat: 'repeat' }), 'a=,&b=&c=c,d%');\n\n        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: true, encodeValuesOnly: true, arrayFormat: 'indices' }), 'a=%2C&b=&c=c%2Cd%25');\n        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: true, encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a=%2C&b=&c=c%2Cd%25');\n        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: true, encodeValuesOnly: true, arrayFormat: 'comma' }), 'a=%2C&b=&c=c%2Cd%25');\n        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: true, encodeValuesOnly: true, arrayFormat: 'repeat' }), 'a=%2C&b=&c=c%2Cd%25');\n\n        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: true, encodeValuesOnly: false, arrayFormat: 'indices' }), 'a=%2C&b=&c=c%2Cd%25');\n        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: true, encodeValuesOnly: false, arrayFormat: 'brackets' }), 'a=%2C&b=&c=c%2Cd%25');\n        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: true, encodeValuesOnly: false, arrayFormat: 'comma' }), 'a=%2C&b=&c=c%2Cd%25');\n        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: true, encodeValuesOnly: false, arrayFormat: 'repeat' }), 'a=%2C&b=&c=c%2Cd%25');\n\n        st.end();\n    });\n\n    t.test('stringifies a nested array value with dots notation', function (st) {\n        st.equal(\n            qs.stringify(\n                { a: { b: ['c', 'd'] } },\n                { allowDots: true, encodeValuesOnly: true, arrayFormat: 'indices' }\n            ),\n            'a.b[0]=c&a.b[1]=d',\n            'indices: stringifies with dots + indices'\n        );\n        st.equal(\n            qs.stringify(\n                { a: { b: ['c', 'd'] } },\n                { allowDots: true, encodeValuesOnly: true, arrayFormat: 'brackets' }\n            ),\n            'a.b[]=c&a.b[]=d',\n            'brackets: stringifies with dots + brackets'\n        );\n        st.equal(\n            qs.stringify(\n                { a: { b: ['c', 'd'] } },\n                { allowDots: true, encodeValuesOnly: true, arrayFormat: 'comma' }\n            ),\n            'a.b=c,d',\n            'comma: stringifies with dots + comma'\n        );\n        st.equal(\n            qs.stringify(\n                { a: { b: ['c', 'd'] } },\n                { allowDots: true, encodeValuesOnly: true }\n            ),\n            'a.b[0]=c&a.b[1]=d',\n            'default: stringifies with dots + indices'\n        );\n        st.end();\n    });\n\n    t.test('stringifies an object inside an array', function (st) {\n        st.equal(\n            qs.stringify({ a: [{ b: 'c' }] }, { arrayFormat: 'indices', encodeValuesOnly: true }),\n            'a[0][b]=c',\n            'indices => indices'\n        );\n        st.equal(\n            qs.stringify({ a: [{ b: 'c' }] }, { arrayFormat: 'repeat', encodeValuesOnly: true }),\n            'a[b]=c',\n            'repeat => repeat'\n        );\n        st.equal(\n            qs.stringify({ a: [{ b: 'c' }] }, { arrayFormat: 'brackets', encodeValuesOnly: true }),\n            'a[][b]=c',\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify({ a: [{ b: 'c' }] }, { encodeValuesOnly: true }),\n            'a[0][b]=c',\n            'default => indices'\n        );\n\n        st.equal(\n            qs.stringify({ a: [{ b: { c: [1] } }] }, { arrayFormat: 'indices', encodeValuesOnly: true }),\n            'a[0][b][c][0]=1',\n            'indices => indices'\n        );\n        st.equal(\n            qs.stringify({ a: [{ b: { c: [1] } }] }, { arrayFormat: 'repeat', encodeValuesOnly: true }),\n            'a[b][c]=1',\n            'repeat => repeat'\n        );\n        st.equal(\n            qs.stringify({ a: [{ b: { c: [1] } }] }, { arrayFormat: 'brackets', encodeValuesOnly: true }),\n            'a[][b][c][]=1',\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify({ a: [{ b: { c: [1] } }] }, { encodeValuesOnly: true }),\n            'a[0][b][c][0]=1',\n            'default => indices'\n        );\n\n        st.end();\n    });\n\n    t.test('stringifies an array with mixed objects and primitives', function (st) {\n        st.equal(\n            qs.stringify({ a: [{ b: 1 }, 2, 3] }, { encodeValuesOnly: true, arrayFormat: 'indices' }),\n            'a[0][b]=1&a[1]=2&a[2]=3',\n            'indices => indices'\n        );\n        st.equal(\n            qs.stringify({ a: [{ b: 1 }, 2, 3] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }),\n            'a[][b]=1&a[]=2&a[]=3',\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify({ a: [{ b: 1 }, 2, 3] }, { encodeValuesOnly: true, arrayFormat: 'comma' }),\n            '???',\n            'brackets => brackets',\n            { skip: 'TODO: figure out what this should do' }\n        );\n        st.equal(\n            qs.stringify({ a: [{ b: 1 }, 2, 3] }, { encodeValuesOnly: true }),\n            'a[0][b]=1&a[1]=2&a[2]=3',\n            'default => indices'\n        );\n\n        st.end();\n    });\n\n    t.test('stringifies an object inside an array with dots notation', function (st) {\n        st.equal(\n            qs.stringify(\n                { a: [{ b: 'c' }] },\n                { allowDots: true, encode: false, arrayFormat: 'indices' }\n            ),\n            'a[0].b=c',\n            'indices => indices'\n        );\n        st.equal(\n            qs.stringify(\n                { a: [{ b: 'c' }] },\n                { allowDots: true, encode: false, arrayFormat: 'brackets' }\n            ),\n            'a[].b=c',\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify(\n                { a: [{ b: 'c' }] },\n                { allowDots: true, encode: false }\n            ),\n            'a[0].b=c',\n            'default => indices'\n        );\n\n        st.equal(\n            qs.stringify(\n                { a: [{ b: { c: [1] } }] },\n                { allowDots: true, encode: false, arrayFormat: 'indices' }\n            ),\n            'a[0].b.c[0]=1',\n            'indices => indices'\n        );\n        st.equal(\n            qs.stringify(\n                { a: [{ b: { c: [1] } }] },\n                { allowDots: true, encode: false, arrayFormat: 'brackets' }\n            ),\n            'a[].b.c[]=1',\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify(\n                { a: [{ b: { c: [1] } }] },\n                { allowDots: true, encode: false }\n            ),\n            'a[0].b.c[0]=1',\n            'default => indices'\n        );\n\n        st.end();\n    });\n\n    t.test('does not omit object keys when indices = false', function (st) {\n        st.equal(qs.stringify({ a: [{ b: 'c' }] }, { indices: false }), 'a%5Bb%5D=c');\n        st.end();\n    });\n\n    t.test('uses indices notation for arrays when indices=true', function (st) {\n        st.equal(qs.stringify({ a: ['b', 'c'] }, { indices: true }), 'a%5B0%5D=b&a%5B1%5D=c');\n        st.end();\n    });\n\n    t.test('uses indices notation for arrays when no arrayFormat is specified', function (st) {\n        st.equal(qs.stringify({ a: ['b', 'c'] }), 'a%5B0%5D=b&a%5B1%5D=c');\n        st.end();\n    });\n\n    t.test('uses indices notation for arrays when arrayFormat=indices', function (st) {\n        st.equal(qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'indices' }), 'a%5B0%5D=b&a%5B1%5D=c');\n        st.end();\n    });\n\n    t.test('uses repeat notation for arrays when arrayFormat=repeat', function (st) {\n        st.equal(qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'repeat' }), 'a=b&a=c');\n        st.end();\n    });\n\n    t.test('uses brackets notation for arrays when arrayFormat=brackets', function (st) {\n        st.equal(qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'brackets' }), 'a%5B%5D=b&a%5B%5D=c');\n        st.end();\n    });\n\n    t.test('stringifies a complicated object', function (st) {\n        st.equal(qs.stringify({ a: { b: 'c', d: 'e' } }), 'a%5Bb%5D=c&a%5Bd%5D=e');\n        st.end();\n    });\n\n    t.test('stringifies an empty value', function (st) {\n        st.equal(qs.stringify({ a: '' }), 'a=');\n        st.equal(qs.stringify({ a: null }, { strictNullHandling: true }), 'a');\n\n        st.equal(qs.stringify({ a: '', b: '' }), 'a=&b=');\n        st.equal(qs.stringify({ a: null, b: '' }, { strictNullHandling: true }), 'a&b=');\n\n        st.equal(qs.stringify({ a: { b: '' } }), 'a%5Bb%5D=');\n        st.equal(qs.stringify({ a: { b: null } }, { strictNullHandling: true }), 'a%5Bb%5D');\n        st.equal(qs.stringify({ a: { b: null } }, { strictNullHandling: false }), 'a%5Bb%5D=');\n\n        st.end();\n    });\n\n    t.test('stringifies an empty array in different arrayFormat', function (st) {\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false }), 'b[0]=&c=c');\n        // arrayFormat default\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'indices' }), 'b[0]=&c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'brackets' }), 'b[]=&c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'repeat' }), 'b=&c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'comma' }), 'b=&c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'comma', commaRoundTrip: true }), 'b[]=&c=c');\n        // with strictNullHandling\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'indices', strictNullHandling: true }), 'b[0]&c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'brackets', strictNullHandling: true }), 'b[]&c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'repeat', strictNullHandling: true }), 'b&c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'comma', strictNullHandling: true }), 'b&c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'comma', strictNullHandling: true, commaRoundTrip: true }), 'b[]&c=c');\n        // with skipNulls\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'indices', skipNulls: true }), 'c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'brackets', skipNulls: true }), 'c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'repeat', skipNulls: true }), 'c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'comma', skipNulls: true }), 'c=c');\n\n        st.end();\n    });\n\n    t.test('stringifies a null object', { skip: !Object.create }, function (st) {\n        var obj = Object.create(null);\n        obj.a = 'b';\n        st.equal(qs.stringify(obj), 'a=b');\n        st.end();\n    });\n\n    t.test('returns an empty string for invalid input', function (st) {\n        st.equal(qs.stringify(undefined), '');\n        st.equal(qs.stringify(false), '');\n        st.equal(qs.stringify(null), '');\n        st.equal(qs.stringify(''), '');\n        st.end();\n    });\n\n    t.test('stringifies an object with a null object as a child', { skip: !Object.create }, function (st) {\n        var obj = { a: Object.create(null) };\n\n        obj.a.b = 'c';\n        st.equal(qs.stringify(obj), 'a%5Bb%5D=c');\n        st.end();\n    });\n\n    t.test('drops keys with a value of undefined', function (st) {\n        st.equal(qs.stringify({ a: undefined }), '');\n\n        st.equal(qs.stringify({ a: { b: undefined, c: null } }, { strictNullHandling: true }), 'a%5Bc%5D');\n        st.equal(qs.stringify({ a: { b: undefined, c: null } }, { strictNullHandling: false }), 'a%5Bc%5D=');\n        st.equal(qs.stringify({ a: { b: undefined, c: '' } }), 'a%5Bc%5D=');\n        st.end();\n    });\n\n    t.test('url encodes values', function (st) {\n        st.equal(qs.stringify({ a: 'b c' }), 'a=b%20c');\n        st.end();\n    });\n\n    t.test('stringifies a date', function (st) {\n        var now = new Date();\n        var str = 'a=' + encodeURIComponent(now.toISOString());\n        st.equal(qs.stringify({ a: now }), str);\n        st.end();\n    });\n\n    t.test('stringifies the weird object from qs', function (st) {\n        st.equal(qs.stringify({ 'my weird field': '~q1!2\"\\'w$5&7/z8)?' }), 'my%20weird%20field=~q1%212%22%27w%245%267%2Fz8%29%3F');\n        st.end();\n    });\n\n    t.test('skips properties that are part of the object prototype', function (st) {\n        st.intercept(Object.prototype, 'crash', { value: 'test' });\n\n        st.equal(qs.stringify({ a: 'b' }), 'a=b');\n        st.equal(qs.stringify({ a: { b: 'c' } }), 'a%5Bb%5D=c');\n\n        st.end();\n    });\n\n    t.test('stringifies boolean values', function (st) {\n        st.equal(qs.stringify({ a: true }), 'a=true');\n        st.equal(qs.stringify({ a: { b: true } }), 'a%5Bb%5D=true');\n        st.equal(qs.stringify({ b: false }), 'b=false');\n        st.equal(qs.stringify({ b: { c: false } }), 'b%5Bc%5D=false');\n        st.end();\n    });\n\n    t.test('stringifies buffer values', function (st) {\n        st.equal(qs.stringify({ a: SaferBuffer.from('test') }), 'a=test');\n        st.equal(qs.stringify({ a: { b: SaferBuffer.from('test') } }), 'a%5Bb%5D=test');\n        st.end();\n    });\n\n    t.test('stringifies an object using an alternative delimiter', function (st) {\n        st.equal(qs.stringify({ a: 'b', c: 'd' }, { delimiter: ';' }), 'a=b;c=d');\n        st.end();\n    });\n\n    t.test('does not blow up when Buffer global is missing', function (st) {\n        var restore = mockProperty(global, 'Buffer', { 'delete': true });\n\n        var result = qs.stringify({ a: 'b', c: 'd' });\n\n        restore();\n\n        st.equal(result, 'a=b&c=d');\n        st.end();\n    });\n\n    t.test('does not crash when parsing circular references', function (st) {\n        var a = {};\n        a.b = a;\n\n        st['throws'](\n            function () { qs.stringify({ 'foo[bar]': 'baz', 'foo[baz]': a }); },\n            /RangeError: Cyclic object value/,\n            'cyclic values throw'\n        );\n\n        var circular = {\n            a: 'value'\n        };\n        circular.a = circular;\n        st['throws'](\n            function () { qs.stringify(circular); },\n            /RangeError: Cyclic object value/,\n            'cyclic values throw'\n        );\n\n        var arr = ['a'];\n        st.doesNotThrow(\n            function () { qs.stringify({ x: arr, y: arr }); },\n            'non-cyclic values do not throw'\n        );\n\n        st.end();\n    });\n\n    t.test('non-circular duplicated references can still work', function (st) {\n        var hourOfDay = {\n            'function': 'hour_of_day'\n        };\n\n        var p1 = {\n            'function': 'gte',\n            arguments: [hourOfDay, 0]\n        };\n        var p2 = {\n            'function': 'lte',\n            arguments: [hourOfDay, 23]\n        };\n\n        st.equal(\n            qs.stringify({ filters: { $and: [p1, p2] } }, { encodeValuesOnly: true, arrayFormat: 'indices' }),\n            'filters[$and][0][function]=gte&filters[$and][0][arguments][0][function]=hour_of_day&filters[$and][0][arguments][1]=0&filters[$and][1][function]=lte&filters[$and][1][arguments][0][function]=hour_of_day&filters[$and][1][arguments][1]=23'\n        );\n        st.equal(\n            qs.stringify({ filters: { $and: [p1, p2] } }, { encodeValuesOnly: true, arrayFormat: 'brackets' }),\n            'filters[$and][][function]=gte&filters[$and][][arguments][][function]=hour_of_day&filters[$and][][arguments][]=0&filters[$and][][function]=lte&filters[$and][][arguments][][function]=hour_of_day&filters[$and][][arguments][]=23'\n        );\n        st.equal(\n            qs.stringify({ filters: { $and: [p1, p2] } }, { encodeValuesOnly: true, arrayFormat: 'repeat' }),\n            'filters[$and][function]=gte&filters[$and][arguments][function]=hour_of_day&filters[$and][arguments]=0&filters[$and][function]=lte&filters[$and][arguments][function]=hour_of_day&filters[$and][arguments]=23'\n        );\n\n        st.end();\n    });\n\n    t.test('selects properties when filter=array', function (st) {\n        st.equal(qs.stringify({ a: 'b' }, { filter: ['a'] }), 'a=b');\n        st.equal(qs.stringify({ a: 1 }, { filter: [] }), '');\n\n        st.equal(\n            qs.stringify(\n                { a: { b: [1, 2, 3, 4], c: 'd' }, c: 'f' },\n                { filter: ['a', 'b', 0, 2], arrayFormat: 'indices' }\n            ),\n            'a%5Bb%5D%5B0%5D=1&a%5Bb%5D%5B2%5D=3',\n            'indices => indices'\n        );\n        st.equal(\n            qs.stringify(\n                { a: { b: [1, 2, 3, 4], c: 'd' }, c: 'f' },\n                { filter: ['a', 'b', 0, 2], arrayFormat: 'brackets' }\n            ),\n            'a%5Bb%5D%5B%5D=1&a%5Bb%5D%5B%5D=3',\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify(\n                { a: { b: [1, 2, 3, 4], c: 'd' }, c: 'f' },\n                { filter: ['a', 'b', 0, 2] }\n            ),\n            'a%5Bb%5D%5B0%5D=1&a%5Bb%5D%5B2%5D=3',\n            'default => indices'\n        );\n\n        st.end();\n    });\n\n    t.test('supports custom representations when filter=function', function (st) {\n        var calls = 0;\n        var obj = { a: 'b', c: 'd', e: { f: new Date(1257894000000) } };\n        var filterFunc = function (prefix, value) {\n            calls += 1;\n            if (calls === 1) {\n                st.equal(prefix, '', 'prefix is empty');\n                st.equal(value, obj);\n            } else if (prefix === 'c') {\n                return void 0;\n            } else if (value instanceof Date) {\n                st.equal(prefix, 'e[f]');\n                return value.getTime();\n            }\n            return value;\n        };\n\n        st.equal(qs.stringify(obj, { filter: filterFunc }), 'a=b&e%5Bf%5D=1257894000000');\n        st.equal(calls, 5);\n        st.end();\n    });\n\n    t.test('can disable uri encoding', function (st) {\n        st.equal(qs.stringify({ a: 'b' }, { encode: false }), 'a=b');\n        st.equal(qs.stringify({ a: { b: 'c' } }, { encode: false }), 'a[b]=c');\n        st.equal(qs.stringify({ a: 'b', c: null }, { strictNullHandling: true, encode: false }), 'a=b&c');\n        st.end();\n    });\n\n    t.test('can sort the keys', function (st) {\n        var sort = function (a, b) {\n            return a.localeCompare(b);\n        };\n        st.equal(qs.stringify({ a: 'c', z: 'y', b: 'f' }, { sort: sort }), 'a=c&b=f&z=y');\n        st.equal(qs.stringify({ a: 'c', z: { j: 'a', i: 'b' }, b: 'f' }, { sort: sort }), 'a=c&b=f&z%5Bi%5D=b&z%5Bj%5D=a');\n        st.end();\n    });\n\n    t.test('can sort the keys at depth 3 or more too', function (st) {\n        var sort = function (a, b) {\n            return a.localeCompare(b);\n        };\n        st.equal(\n            qs.stringify(\n                { a: 'a', z: { zj: { zjb: 'zjb', zja: 'zja' }, zi: { zib: 'zib', zia: 'zia' } }, b: 'b' },\n                { sort: sort, encode: false }\n            ),\n            'a=a&b=b&z[zi][zia]=zia&z[zi][zib]=zib&z[zj][zja]=zja&z[zj][zjb]=zjb'\n        );\n        st.equal(\n            qs.stringify(\n                { a: 'a', z: { zj: { zjb: 'zjb', zja: 'zja' }, zi: { zib: 'zib', zia: 'zia' } }, b: 'b' },\n                { sort: null, encode: false }\n            ),\n            'a=a&z[zj][zjb]=zjb&z[zj][zja]=zja&z[zi][zib]=zib&z[zi][zia]=zia&b=b'\n        );\n        st.end();\n    });\n\n    t.test('can stringify with custom encoding', function (st) {\n        st.equal(qs.stringify({ 県: '大阪府', '': '' }, {\n            encoder: function (str) {\n                if (str.length === 0) {\n                    return '';\n                }\n                var buf = iconv.encode(str, 'shiftjis');\n                var result = [];\n                for (var i = 0; i < buf.length; ++i) {\n                    result.push(buf.readUInt8(i).toString(16));\n                }\n                return '%' + result.join('%');\n            }\n        }), '%8c%a7=%91%e5%8d%e3%95%7b&=');\n        st.end();\n    });\n\n    t.test('receives the default encoder as a second argument', function (st) {\n        st.plan(8);\n\n        qs.stringify({ a: 1, b: new Date(), c: true, d: [1] }, {\n            encoder: function (str) {\n                st.match(typeof str, /^(?:string|number|boolean)$/);\n                return '';\n            }\n        });\n\n        st.end();\n    });\n\n    t.test('receives the default encoder as a second argument', function (st) {\n        st.plan(2);\n\n        qs.stringify({ a: 1 }, {\n            encoder: function (str, defaultEncoder) {\n                st.equal(defaultEncoder, utils.encode);\n            }\n        });\n\n        st.end();\n    });\n\n    t.test('throws error with wrong encoder', function (st) {\n        st['throws'](function () {\n            qs.stringify({}, { encoder: 'string' });\n        }, new TypeError('Encoder has to be a function.'));\n        st.end();\n    });\n\n    t.test('can use custom encoder for a buffer object', { skip: typeof Buffer === 'undefined' }, function (st) {\n        st.equal(qs.stringify({ a: SaferBuffer.from([1]) }, {\n            encoder: function (buffer) {\n                if (typeof buffer === 'string') {\n                    return buffer;\n                }\n                return String.fromCharCode(buffer.readUInt8(0) + 97);\n            }\n        }), 'a=b');\n\n        st.equal(qs.stringify({ a: SaferBuffer.from('a b') }, {\n            encoder: function (buffer) {\n                return buffer;\n            }\n        }), 'a=a b');\n        st.end();\n    });\n\n    t.test('serializeDate option', function (st) {\n        var date = new Date();\n        st.equal(\n            qs.stringify({ a: date }),\n            'a=' + date.toISOString().replace(/:/g, '%3A'),\n            'default is toISOString'\n        );\n\n        var mutatedDate = new Date();\n        mutatedDate.toISOString = function () {\n            throw new SyntaxError();\n        };\n        st['throws'](function () {\n            mutatedDate.toISOString();\n        }, SyntaxError);\n        st.equal(\n            qs.stringify({ a: mutatedDate }),\n            'a=' + Date.prototype.toISOString.call(mutatedDate).replace(/:/g, '%3A'),\n            'toISOString works even when method is not locally present'\n        );\n\n        var specificDate = new Date(6);\n        st.equal(\n            qs.stringify(\n                { a: specificDate },\n                { serializeDate: function (d) { return d.getTime() * 7; } }\n            ),\n            'a=42',\n            'custom serializeDate function called'\n        );\n\n        st.equal(\n            qs.stringify(\n                { a: [date] },\n                {\n                    serializeDate: function (d) { return d.getTime(); },\n                    arrayFormat: 'comma'\n                }\n            ),\n            'a=' + date.getTime(),\n            'works with arrayFormat comma'\n        );\n        st.equal(\n            qs.stringify(\n                { a: [date] },\n                {\n                    serializeDate: function (d) { return d.getTime(); },\n                    arrayFormat: 'comma',\n                    commaRoundTrip: true\n                }\n            ),\n            'a%5B%5D=' + date.getTime(),\n            'works with arrayFormat comma'\n        );\n\n        st.end();\n    });\n\n    t.test('RFC 1738 serialization', function (st) {\n        st.equal(qs.stringify({ a: 'b c' }, { format: qs.formats.RFC1738 }), 'a=b+c');\n        st.equal(qs.stringify({ 'a b': 'c d' }, { format: qs.formats.RFC1738 }), 'a+b=c+d');\n        st.equal(qs.stringify({ 'a b': SaferBuffer.from('a b') }, { format: qs.formats.RFC1738 }), 'a+b=a+b');\n\n        st.equal(qs.stringify({ 'foo(ref)': 'bar' }, { format: qs.formats.RFC1738 }), 'foo(ref)=bar');\n\n        st.end();\n    });\n\n    t.test('RFC 3986 spaces serialization', function (st) {\n        st.equal(qs.stringify({ a: 'b c' }, { format: qs.formats.RFC3986 }), 'a=b%20c');\n        st.equal(qs.stringify({ 'a b': 'c d' }, { format: qs.formats.RFC3986 }), 'a%20b=c%20d');\n        st.equal(qs.stringify({ 'a b': SaferBuffer.from('a b') }, { format: qs.formats.RFC3986 }), 'a%20b=a%20b');\n\n        st.end();\n    });\n\n    t.test('Backward compatibility to RFC 3986', function (st) {\n        st.equal(qs.stringify({ a: 'b c' }), 'a=b%20c');\n        st.equal(qs.stringify({ 'a b': SaferBuffer.from('a b') }), 'a%20b=a%20b');\n\n        st.end();\n    });\n\n    t.test('Edge cases and unknown formats', function (st) {\n        ['UFO1234', false, 1234, null, {}, []].forEach(function (format) {\n            st['throws'](\n                function () {\n                    qs.stringify({ a: 'b c' }, { format: format });\n                },\n                new TypeError('Unknown format option provided.')\n            );\n        });\n        st.end();\n    });\n\n    t.test('encodeValuesOnly', function (st) {\n        st.equal(\n            qs.stringify(\n                { a: 'b', c: ['d', 'e=f'], f: [['g'], ['h']] },\n                { encodeValuesOnly: true, arrayFormat: 'indices' }\n            ),\n            'a=b&c[0]=d&c[1]=e%3Df&f[0][0]=g&f[1][0]=h',\n            'encodeValuesOnly + indices'\n        );\n        st.equal(\n            qs.stringify(\n                { a: 'b', c: ['d', 'e=f'], f: [['g'], ['h']] },\n                { encodeValuesOnly: true, arrayFormat: 'brackets' }\n            ),\n            'a=b&c[]=d&c[]=e%3Df&f[][]=g&f[][]=h',\n            'encodeValuesOnly + brackets'\n        );\n        st.equal(\n            qs.stringify(\n                { a: 'b', c: ['d', 'e=f'], f: [['g'], ['h']] },\n                { encodeValuesOnly: true, arrayFormat: 'repeat' }\n            ),\n            'a=b&c=d&c=e%3Df&f=g&f=h',\n            'encodeValuesOnly + repeat'\n        );\n\n        st.equal(\n            qs.stringify(\n                { a: 'b', c: ['d', 'e'], f: [['g'], ['h']] },\n                { arrayFormat: 'indices' }\n            ),\n            'a=b&c%5B0%5D=d&c%5B1%5D=e&f%5B0%5D%5B0%5D=g&f%5B1%5D%5B0%5D=h',\n            'no encodeValuesOnly + indices'\n        );\n        st.equal(\n            qs.stringify(\n                { a: 'b', c: ['d', 'e'], f: [['g'], ['h']] },\n                { arrayFormat: 'brackets' }\n            ),\n            'a=b&c%5B%5D=d&c%5B%5D=e&f%5B%5D%5B%5D=g&f%5B%5D%5B%5D=h',\n            'no encodeValuesOnly + brackets'\n        );\n        st.equal(\n            qs.stringify(\n                { a: 'b', c: ['d', 'e'], f: [['g'], ['h']] },\n                { arrayFormat: 'repeat' }\n            ),\n            'a=b&c=d&c=e&f=g&f=h',\n            'no encodeValuesOnly + repeat'\n        );\n\n        st.end();\n    });\n\n    t.test('encodeValuesOnly - strictNullHandling', function (st) {\n        st.equal(\n            qs.stringify(\n                { a: { b: null } },\n                { encodeValuesOnly: true, strictNullHandling: true }\n            ),\n            'a[b]'\n        );\n        st.end();\n    });\n\n    t.test('throws if an invalid charset is specified', function (st) {\n        st['throws'](function () {\n            qs.stringify({ a: 'b' }, { charset: 'foobar' });\n        }, new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined'));\n        st.end();\n    });\n\n    t.test('respects a charset of iso-8859-1', function (st) {\n        st.equal(qs.stringify({ æ: 'æ' }, { charset: 'iso-8859-1' }), '%E6=%E6');\n        st.end();\n    });\n\n    t.test('encodes unrepresentable chars as numeric entities in iso-8859-1 mode', function (st) {\n        st.equal(qs.stringify({ a: '☺' }, { charset: 'iso-8859-1' }), 'a=%26%239786%3B');\n        st.end();\n    });\n\n    t.test('respects an explicit charset of utf-8 (the default)', function (st) {\n        st.equal(qs.stringify({ a: 'æ' }, { charset: 'utf-8' }), 'a=%C3%A6');\n        st.end();\n    });\n\n    t.test('`charsetSentinel` option', function (st) {\n        st.equal(\n            qs.stringify({ a: 'æ' }, { charsetSentinel: true, charset: 'utf-8' }),\n            'utf8=%E2%9C%93&a=%C3%A6',\n            'adds the right sentinel when instructed to and the charset is utf-8'\n        );\n\n        st.equal(\n            qs.stringify({ a: 'æ' }, { charsetSentinel: true, charset: 'iso-8859-1' }),\n            'utf8=%26%2310003%3B&a=%E6',\n            'adds the right sentinel when instructed to and the charset is iso-8859-1'\n        );\n\n        st.end();\n    });\n\n    t.test('does not mutate the options argument', function (st) {\n        var options = {};\n        qs.stringify({}, options);\n        st.deepEqual(options, {});\n        st.end();\n    });\n\n    t.test('strictNullHandling works with custom filter', function (st) {\n        var filter = function (prefix, value) {\n            return value;\n        };\n\n        var options = { strictNullHandling: true, filter: filter };\n        st.equal(qs.stringify({ key: null }, options), 'key');\n        st.end();\n    });\n\n    t.test('strictNullHandling works with null serializeDate', function (st) {\n        var serializeDate = function () {\n            return null;\n        };\n        var options = { strictNullHandling: true, serializeDate: serializeDate };\n        var date = new Date();\n        st.equal(qs.stringify({ key: date }, options), 'key');\n        st.end();\n    });\n\n    t.test('allows for encoding keys and values differently', function (st) {\n        var encoder = function (str, defaultEncoder, charset, type) {\n            if (type === 'key') {\n                return defaultEncoder(str, defaultEncoder, charset, type).toLowerCase();\n            }\n            if (type === 'value') {\n                return defaultEncoder(str, defaultEncoder, charset, type).toUpperCase();\n            }\n            throw 'this should never happen! type: ' + type;\n        };\n\n        st.deepEqual(qs.stringify({ KeY: 'vAlUe' }, { encoder: encoder }), 'key=VALUE');\n        st.end();\n    });\n\n    t.test('objects inside arrays', function (st) {\n        var obj = { a: { b: { c: 'd', e: 'f' } } };\n        var withArray = { a: { b: [{ c: 'd', e: 'f' }] } };\n\n        st.equal(qs.stringify(obj, { encode: false }), 'a[b][c]=d&a[b][e]=f', 'no array, no arrayFormat');\n        st.equal(qs.stringify(obj, { encode: false, arrayFormat: 'brackets' }), 'a[b][c]=d&a[b][e]=f', 'no array, bracket');\n        st.equal(qs.stringify(obj, { encode: false, arrayFormat: 'indices' }), 'a[b][c]=d&a[b][e]=f', 'no array, indices');\n        st.equal(qs.stringify(obj, { encode: false, arrayFormat: 'repeat' }), 'a[b][c]=d&a[b][e]=f', 'no array, repeat');\n        st.equal(qs.stringify(obj, { encode: false, arrayFormat: 'comma' }), 'a[b][c]=d&a[b][e]=f', 'no array, comma');\n\n        st.equal(qs.stringify(withArray, { encode: false }), 'a[b][0][c]=d&a[b][0][e]=f', 'array, no arrayFormat');\n        st.equal(qs.stringify(withArray, { encode: false, arrayFormat: 'brackets' }), 'a[b][][c]=d&a[b][][e]=f', 'array, bracket');\n        st.equal(qs.stringify(withArray, { encode: false, arrayFormat: 'indices' }), 'a[b][0][c]=d&a[b][0][e]=f', 'array, indices');\n        st.equal(qs.stringify(withArray, { encode: false, arrayFormat: 'repeat' }), 'a[b][c]=d&a[b][e]=f', 'array, repeat');\n        st.equal(\n            qs.stringify(withArray, { encode: false, arrayFormat: 'comma' }),\n            '???',\n            'array, comma',\n            { skip: 'TODO: figure out what this should do' }\n        );\n\n        st.end();\n    });\n\n    t.test('stringifies sparse arrays', function (st) {\n        /* eslint no-sparse-arrays: 0 */\n        st.equal(qs.stringify({ a: [, '2', , , '1'] }, { encodeValuesOnly: true, arrayFormat: 'indices' }), 'a[1]=2&a[4]=1');\n        st.equal(qs.stringify({ a: [, '2', , , '1'] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a[]=2&a[]=1');\n        st.equal(qs.stringify({ a: [, '2', , , '1'] }, { encodeValuesOnly: true, arrayFormat: 'repeat' }), 'a=2&a=1');\n\n        st.equal(qs.stringify({ a: [, { b: [, , { c: '1' }] }] }, { encodeValuesOnly: true, arrayFormat: 'indices' }), 'a[1][b][2][c]=1');\n        st.equal(qs.stringify({ a: [, { b: [, , { c: '1' }] }] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a[][b][][c]=1');\n        st.equal(qs.stringify({ a: [, { b: [, , { c: '1' }] }] }, { encodeValuesOnly: true, arrayFormat: 'repeat' }), 'a[b][c]=1');\n\n        st.equal(qs.stringify({ a: [, [, , [, , , { c: '1' }]]] }, { encodeValuesOnly: true, arrayFormat: 'indices' }), 'a[1][2][3][c]=1');\n        st.equal(qs.stringify({ a: [, [, , [, , , { c: '1' }]]] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a[][][][c]=1');\n        st.equal(qs.stringify({ a: [, [, , [, , , { c: '1' }]]] }, { encodeValuesOnly: true, arrayFormat: 'repeat' }), 'a[c]=1');\n\n        st.equal(qs.stringify({ a: [, [, , [, , , { c: [, '1'] }]]] }, { encodeValuesOnly: true, arrayFormat: 'indices' }), 'a[1][2][3][c][1]=1');\n        st.equal(qs.stringify({ a: [, [, , [, , , { c: [, '1'] }]]] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a[][][][c][]=1');\n        st.equal(qs.stringify({ a: [, [, , [, , , { c: [, '1'] }]]] }, { encodeValuesOnly: true, arrayFormat: 'repeat' }), 'a[c]=1');\n\n        st.end();\n    });\n\n    t.test('encodes a very long string', function (st) {\n        var chars = [];\n        var expected = [];\n        for (var i = 0; i < 5e3; i++) {\n            chars.push(' ' + i);\n\n            expected.push('%20' + i);\n        }\n\n        var obj = {\n            foo: chars.join('')\n        };\n\n        st.equal(\n            qs.stringify(obj, { arrayFormat: 'bracket', charset: 'utf-8' }),\n            'foo=' + expected.join('')\n        );\n\n        st.end();\n    });\n\n    t.end();\n});\n\ntest('stringifies empty keys', function (t) {\n    emptyTestCases.forEach(function (testCase) {\n        t.test('stringifies an object with empty string key with ' + testCase.input, function (st) {\n            st.deepEqual(\n                qs.stringify(testCase.withEmptyKeys, { encode: false, arrayFormat: 'indices' }),\n                testCase.stringifyOutput.indices,\n                'test case: ' + testCase.input + ', indices'\n            );\n            st.deepEqual(\n                qs.stringify(testCase.withEmptyKeys, { encode: false, arrayFormat: 'brackets' }),\n                testCase.stringifyOutput.brackets,\n                'test case: ' + testCase.input + ', brackets'\n            );\n            st.deepEqual(\n                qs.stringify(testCase.withEmptyKeys, { encode: false, arrayFormat: 'repeat' }),\n                testCase.stringifyOutput.repeat,\n                'test case: ' + testCase.input + ', repeat'\n            );\n\n            st.end();\n        });\n    });\n\n    t.test('edge case with object/arrays', function (st) {\n        st.deepEqual(qs.stringify({ '': { '': [2, 3] } }, { encode: false }), '[][0]=2&[][1]=3');\n        st.deepEqual(qs.stringify({ '': { '': [2, 3], a: 2 } }, { encode: false }), '[][0]=2&[][1]=3&[a]=2');\n        st.deepEqual(qs.stringify({ '': { '': [2, 3] } }, { encode: false, arrayFormat: 'indices' }), '[][0]=2&[][1]=3');\n        st.deepEqual(qs.stringify({ '': { '': [2, 3], a: 2 } }, { encode: false, arrayFormat: 'indices' }), '[][0]=2&[][1]=3&[a]=2');\n\n        st.end();\n    });\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\qs\\test\\stringify.js",
    "RelativePath": "tools\\backend\\node_modules\\qs\\test\\stringify.js"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\nvar inspect = require('object-inspect');\nvar SaferBuffer = require('safer-buffer').Buffer;\nvar forEach = require('for-each');\nvar utils = require('../lib/utils');\n\ntest('merge()', function (t) {\n    t.deepEqual(utils.merge(null, true), [null, true], 'merges true into null');\n\n    t.deepEqual(utils.merge(null, [42]), [null, 42], 'merges null into an array');\n\n    t.deepEqual(utils.merge({ a: 'b' }, { a: 'c' }), { a: ['b', 'c'] }, 'merges two objects with the same key');\n\n    var oneMerged = utils.merge({ foo: 'bar' }, { foo: { first: '123' } });\n    t.deepEqual(oneMerged, { foo: ['bar', { first: '123' }] }, 'merges a standalone and an object into an array');\n\n    var twoMerged = utils.merge({ foo: ['bar', { first: '123' }] }, { foo: { second: '456' } });\n    t.deepEqual(twoMerged, { foo: { 0: 'bar', 1: { first: '123' }, second: '456' } }, 'merges a standalone and two objects into an array');\n\n    var sandwiched = utils.merge({ foo: ['bar', { first: '123', second: '456' }] }, { foo: 'baz' });\n    t.deepEqual(sandwiched, { foo: ['bar', { first: '123', second: '456' }, 'baz'] }, 'merges an object sandwiched by two standalones into an array');\n\n    var nestedArrays = utils.merge({ foo: ['baz'] }, { foo: ['bar', 'xyzzy'] });\n    t.deepEqual(nestedArrays, { foo: ['baz', 'bar', 'xyzzy'] });\n\n    var noOptionsNonObjectSource = utils.merge({ foo: 'baz' }, 'bar');\n    t.deepEqual(noOptionsNonObjectSource, { foo: 'baz', bar: true });\n\n    t.test(\n        'avoids invoking array setters unnecessarily',\n        { skip: typeof Object.defineProperty !== 'function' },\n        function (st) {\n            var setCount = 0;\n            var getCount = 0;\n            var observed = [];\n            Object.defineProperty(observed, 0, {\n                get: function () {\n                    getCount += 1;\n                    return { bar: 'baz' };\n                },\n                set: function () { setCount += 1; }\n            });\n            utils.merge(observed, [null]);\n            st.equal(setCount, 0);\n            st.equal(getCount, 1);\n            observed[0] = observed[0]; // eslint-disable-line no-self-assign\n            st.equal(setCount, 1);\n            st.equal(getCount, 2);\n            st.end();\n        }\n    );\n\n    t.end();\n});\n\ntest('assign()', function (t) {\n    var target = { a: 1, b: 2 };\n    var source = { b: 3, c: 4 };\n    var result = utils.assign(target, source);\n\n    t.equal(result, target, 'returns the target');\n    t.deepEqual(target, { a: 1, b: 3, c: 4 }, 'target and source are merged');\n    t.deepEqual(source, { b: 3, c: 4 }, 'source is untouched');\n\n    t.end();\n});\n\ntest('combine()', function (t) {\n    t.test('both arrays', function (st) {\n        var a = [1];\n        var b = [2];\n        var combined = utils.combine(a, b);\n\n        st.deepEqual(a, [1], 'a is not mutated');\n        st.deepEqual(b, [2], 'b is not mutated');\n        st.notEqual(a, combined, 'a !== combined');\n        st.notEqual(b, combined, 'b !== combined');\n        st.deepEqual(combined, [1, 2], 'combined is a + b');\n\n        st.end();\n    });\n\n    t.test('one array, one non-array', function (st) {\n        var aN = 1;\n        var a = [aN];\n        var bN = 2;\n        var b = [bN];\n\n        var combinedAnB = utils.combine(aN, b);\n        st.deepEqual(b, [bN], 'b is not mutated');\n        st.notEqual(aN, combinedAnB, 'aN + b !== aN');\n        st.notEqual(a, combinedAnB, 'aN + b !== a');\n        st.notEqual(bN, combinedAnB, 'aN + b !== bN');\n        st.notEqual(b, combinedAnB, 'aN + b !== b');\n        st.deepEqual([1, 2], combinedAnB, 'first argument is array-wrapped when not an array');\n\n        var combinedABn = utils.combine(a, bN);\n        st.deepEqual(a, [aN], 'a is not mutated');\n        st.notEqual(aN, combinedABn, 'a + bN !== aN');\n        st.notEqual(a, combinedABn, 'a + bN !== a');\n        st.notEqual(bN, combinedABn, 'a + bN !== bN');\n        st.notEqual(b, combinedABn, 'a + bN !== b');\n        st.deepEqual([1, 2], combinedABn, 'second argument is array-wrapped when not an array');\n\n        st.end();\n    });\n\n    t.test('neither is an array', function (st) {\n        var combined = utils.combine(1, 2);\n        st.notEqual(1, combined, '1 + 2 !== 1');\n        st.notEqual(2, combined, '1 + 2 !== 2');\n        st.deepEqual([1, 2], combined, 'both arguments are array-wrapped when not an array');\n\n        st.end();\n    });\n\n    t.end();\n});\n\ntest('isBuffer()', function (t) {\n    forEach([null, undefined, true, false, '', 'abc', 42, 0, NaN, {}, [], function () {}, /a/g], function (x) {\n        t.equal(utils.isBuffer(x), false, inspect(x) + ' is not a buffer');\n    });\n\n    var fakeBuffer = { constructor: Buffer };\n    t.equal(utils.isBuffer(fakeBuffer), false, 'fake buffer is not a buffer');\n\n    var saferBuffer = SaferBuffer.from('abc');\n    t.equal(utils.isBuffer(saferBuffer), true, 'SaferBuffer instance is a buffer');\n\n    var buffer = Buffer.from && Buffer.alloc ? Buffer.from('abc') : new Buffer('abc');\n    t.equal(utils.isBuffer(buffer), true, 'real Buffer instance is a buffer');\n    t.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\qs\\test\\utils.js",
    "RelativePath": "tools\\backend\\node_modules\\qs\\test\\utils.js"
  },
  {
    "Content": "1.2.1 / 2019-05-10\n==================\n\n  * Improve error when `str` is not a string\n\n1.2.0 / 2016-06-01\n==================\n\n  * Add `combine` option to combine overlapping ranges\n\n1.1.0 / 2016-05-13\n==================\n\n  * Fix incorrectly returning -1 when there is at least one valid range\n  * perf: remove internal function\n\n1.0.3 / 2015-10-29\n==================\n\n  * perf: enable strict mode\n\n1.0.2 / 2014-09-08\n==================\n\n  * Support Node.js 0.6\n\n1.0.1 / 2014-09-07\n==================\n\n  * Move repository to jshttp\n\n1.0.0 / 2013-12-11\n==================\n\n  * Add repository to package.json\n  * Add MIT license\n\n0.0.4 / 2012-06-17\n==================\n\n  * Change ret -1 for unsatisfiable and -2 when invalid\n\n0.0.3 / 2012-06-17\n==================\n\n  * Fix last-byte-pos default to len - 1\n\n0.0.2 / 2012-06-14\n==================\n\n  * Add `.type`\n\n0.0.1 / 2012-06-11\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\range-parser\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\range-parser\\HISTORY.md"
  },
  {
    "Content": "/*!\n * range-parser\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = rangeParser\n\n/**\n * Parse \"Range\" header `str` relative to the given file `size`.\n *\n * @param {Number} size\n * @param {String} str\n * @param {Object} [options]\n * @return {Array}\n * @public\n */\n\nfunction rangeParser (size, str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string')\n  }\n\n  var index = str.indexOf('=')\n\n  if (index === -1) {\n    return -2\n  }\n\n  // split the range string\n  var arr = str.slice(index + 1).split(',')\n  var ranges = []\n\n  // add ranges type\n  ranges.type = str.slice(0, index)\n\n  // parse all ranges\n  for (var i = 0; i < arr.length; i++) {\n    var range = arr[i].split('-')\n    var start = parseInt(range[0], 10)\n    var end = parseInt(range[1], 10)\n\n    // -nnn\n    if (isNaN(start)) {\n      start = size - end\n      end = size - 1\n    // nnn-\n    } else if (isNaN(end)) {\n      end = size - 1\n    }\n\n    // limit last-byte-pos to current length\n    if (end > size - 1) {\n      end = size - 1\n    }\n\n    // invalid or unsatisifiable\n    if (isNaN(start) || isNaN(end) || start > end || start < 0) {\n      continue\n    }\n\n    // add range\n    ranges.push({\n      start: start,\n      end: end\n    })\n  }\n\n  if (ranges.length < 1) {\n    // unsatisifiable\n    return -1\n  }\n\n  return options && options.combine\n    ? combineRanges(ranges)\n    : ranges\n}\n\n/**\n * Combine overlapping & adjacent ranges.\n * @private\n */\n\nfunction combineRanges (ranges) {\n  var ordered = ranges.map(mapWithIndex).sort(sortByRangeStart)\n\n  for (var j = 0, i = 1; i < ordered.length; i++) {\n    var range = ordered[i]\n    var current = ordered[j]\n\n    if (range.start > current.end + 1) {\n      // next range\n      ordered[++j] = range\n    } else if (range.end > current.end) {\n      // extend range\n      current.end = range.end\n      current.index = Math.min(current.index, range.index)\n    }\n  }\n\n  // trim ordered array\n  ordered.length = j + 1\n\n  // generate combined range\n  var combined = ordered.sort(sortByRangeIndex).map(mapWithoutIndex)\n\n  // copy ranges type\n  combined.type = ranges.type\n\n  return combined\n}\n\n/**\n * Map function to add index value to ranges.\n * @private\n */\n\nfunction mapWithIndex (range, index) {\n  return {\n    start: range.start,\n    end: range.end,\n    index: index\n  }\n}\n\n/**\n * Map function to remove index value from ranges.\n * @private\n */\n\nfunction mapWithoutIndex (range) {\n  return {\n    start: range.start,\n    end: range.end\n  }\n}\n\n/**\n * Sort function to sort ranges by index.\n * @private\n */\n\nfunction sortByRangeIndex (a, b) {\n  return a.index - b.index\n}\n\n/**\n * Sort function to sort ranges by start position.\n * @private\n */\n\nfunction sortByRangeStart (a, b) {\n  return a.start - b.start\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\range-parser\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\range-parser\\index.js"
  },
  {
    "Content": "# range-parser\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Node.js Version][node-image]][node-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nRange header field parser.\n\n## Installation\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install range-parser\n```\n\n## API\n\n<!-- eslint-disable no-unused-vars -->\n\n```js\nvar parseRange = require('range-parser')\n```\n\n### parseRange(size, header, options)\n\nParse the given `header` string where `size` is the maximum size of the resource.\nAn array of ranges will be returned or negative numbers indicating an error parsing.\n\n  * `-2` signals a malformed header string\n  * `-1` signals an unsatisfiable range\n\n<!-- eslint-disable no-undef -->\n\n```js\n// parse header from request\nvar range = parseRange(size, req.headers.range)\n\n// the type of the range\nif (range.type === 'bytes') {\n  // the ranges\n  range.forEach(function (r) {\n    // do something with r.start and r.end\n  })\n}\n```\n\n#### Options\n\nThese properties are accepted in the options object.\n\n##### combine\n\nSpecifies if overlapping & adjacent ranges should be combined, defaults to `false`.\nWhen `true`, ranges will be combined and returned as if they were specified that\nway in the header.\n\n<!-- eslint-disable no-undef -->\n\n```js\nparseRange(100, 'bytes=50-55,0-10,5-10,56-60', { combine: true })\n// => [\n//      { start: 0,  end: 10 },\n//      { start: 50, end: 60 }\n//    ]\n```\n\n## License\n\n[MIT](LICENSE)\n\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/range-parser/master\n[coveralls-url]: https://coveralls.io/r/jshttp/range-parser?branch=master\n[node-image]: https://badgen.net/npm/node/range-parser\n[node-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/range-parser\n[npm-url]: https://npmjs.org/package/range-parser\n[npm-version-image]: https://badgen.net/npm/v/range-parser\n[travis-image]: https://badgen.net/travis/jshttp/range-parser/master\n[travis-url]: https://travis-ci.org/jshttp/range-parser\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\range-parser\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\range-parser\\README.md"
  },
  {
    "Content": "2.5.2 / 2023-02-21\n==================\n\n  * Fix error message for non-stream argument\n\n2.5.1 / 2022-02-28\n==================\n\n  * Fix error on early async hooks implementations\n\n2.5.0 / 2022-02-21\n==================\n\n  * Prevent loss of async hooks context\n  * Prevent hanging when stream is not readable\n  * deps: http-errors@2.0.0\n    - deps: depd@2.0.0\n    - deps: statuses@2.0.1\n\n2.4.3 / 2022-02-14\n==================\n\n  * deps: bytes@3.1.2\n\n2.4.2 / 2021-11-16\n==================\n\n  * deps: bytes@3.1.1\n  * deps: http-errors@1.8.1\n    - deps: setprototypeof@1.2.0\n    - deps: toidentifier@1.0.1\n\n2.4.1 / 2019-06-25\n==================\n\n  * deps: http-errors@1.7.3\n    - deps: inherits@2.0.4\n\n2.4.0 / 2019-04-17\n==================\n\n  * deps: bytes@3.1.0\n    - Add petabyte (`pb`) support\n  * deps: http-errors@1.7.2\n    - Set constructor name when possible\n    - deps: setprototypeof@1.1.1\n    - deps: statuses@'>= 1.5.0 < 2'\n  * deps: iconv-lite@0.4.24\n    - Added encoding MIK\n\n2.3.3 / 2018-05-08\n==================\n\n  * deps: http-errors@1.6.3\n    - deps: depd@~1.1.2\n    - deps: setprototypeof@1.1.0\n    - deps: statuses@'>= 1.3.1 < 2'\n  * deps: iconv-lite@0.4.23\n    - Fix loading encoding with year appended\n    - Fix deprecation warnings on Node.js 10+\n\n2.3.2 / 2017-09-09\n==================\n\n  * deps: iconv-lite@0.4.19\n    - Fix ISO-8859-1 regression\n    - Update Windows-1255\n\n2.3.1 / 2017-09-07\n==================\n\n  * deps: bytes@3.0.0\n  * deps: http-errors@1.6.2\n    - deps: depd@1.1.1\n  * perf: skip buffer decoding on overage chunk\n\n2.3.0 / 2017-08-04\n==================\n\n  * Add TypeScript definitions\n  * Use `http-errors` for standard emitted errors\n  * deps: bytes@2.5.0\n  * deps: iconv-lite@0.4.18\n    - Add support for React Native\n    - Add a warning if not loaded as utf-8\n    - Fix CESU-8 decoding in Node.js 8\n    - Improve speed of ISO-8859-1 encoding\n\n2.2.0 / 2017-01-02\n==================\n\n  * deps: iconv-lite@0.4.15\n    - Added encoding MS-31J\n    - Added encoding MS-932\n    - Added encoding MS-936\n    - Added encoding MS-949\n    - Added encoding MS-950\n    - Fix GBK/GB18030 handling of Euro character\n\n2.1.7 / 2016-06-19\n==================\n\n  * deps: bytes@2.4.0\n  * perf: remove double-cleanup on happy path\n\n2.1.6 / 2016-03-07\n==================\n\n  * deps: bytes@2.3.0\n    - Drop partial bytes on all parsed units\n    - Fix parsing byte string that looks like hex\n\n2.1.5 / 2015-11-30\n==================\n\n  * deps: bytes@2.2.0\n  * deps: iconv-lite@0.4.13\n\n2.1.4 / 2015-09-27\n==================\n\n  * Fix masking critical errors from `iconv-lite`\n  * deps: iconv-lite@0.4.12\n    - Fix CESU-8 decoding in Node.js 4.x\n\n2.1.3 / 2015-09-12\n==================\n\n  * Fix sync callback when attaching data listener causes sync read\n    - Node.js 0.10 compatibility issue\n\n2.1.2 / 2015-07-05\n==================\n\n  * Fix error stack traces to skip `makeError`\n  * deps: iconv-lite@0.4.11\n    - Add encoding CESU-8\n\n2.1.1 / 2015-06-14\n==================\n\n  * Use `unpipe` module for unpiping requests\n\n2.1.0 / 2015-05-28\n==================\n\n  * deps: iconv-lite@0.4.10\n    - Improved UTF-16 endianness detection\n    - Leading BOM is now removed when decoding\n    - The encoding UTF-16 without BOM now defaults to UTF-16LE when detection fails\n\n2.0.2 / 2015-05-21\n==================\n\n  * deps: bytes@2.1.0\n    - Slight optimizations\n\n2.0.1 / 2015-05-10\n==================\n\n  * Fix a false-positive when unpiping in Node.js 0.8\n\n2.0.0 / 2015-05-08\n==================\n\n  * Return a promise without callback instead of thunk\n  * deps: bytes@2.0.1\n    - units no longer case sensitive when parsing\n\n1.3.4 / 2015-04-15\n==================\n\n  * Fix hanging callback if request aborts during read\n  * deps: iconv-lite@0.4.8\n    - Add encoding alias UNICODE-1-1-UTF-7\n\n1.3.3 / 2015-02-08\n==================\n\n  * deps: iconv-lite@0.4.7\n    - Gracefully support enumerables on `Object.prototype`\n\n1.3.2 / 2015-01-20\n==================\n\n  * deps: iconv-lite@0.4.6\n    - Fix rare aliases of single-byte encodings\n\n1.3.1 / 2014-11-21\n==================\n\n  * deps: iconv-lite@0.4.5\n    - Fix Windows-31J and X-SJIS encoding support\n\n1.3.0 / 2014-07-20\n==================\n\n  * Fully unpipe the stream on error\n    - Fixes `Cannot switch to old mode now` error on Node.js 0.10+\n\n1.2.3 / 2014-07-20\n==================\n\n  * deps: iconv-lite@0.4.4\n    - Added encoding UTF-7\n\n1.2.2 / 2014-06-19\n==================\n\n  * Send invalid encoding error to callback\n\n1.2.1 / 2014-06-15\n==================\n\n  * deps: iconv-lite@0.4.3\n    - Added encodings UTF-16BE and UTF-16 with BOM\n\n1.2.0 / 2014-06-13\n==================\n\n  * Passing string as `options` interpreted as encoding\n  * Support all encodings from `iconv-lite`\n\n1.1.7 / 2014-06-12\n==================\n\n  * use `string_decoder` module from npm\n\n1.1.6 / 2014-05-27\n==================\n\n  * check encoding for old streams1\n  * support node.js < 0.10.6\n\n1.1.5 / 2014-05-14\n==================\n\n  * bump bytes\n\n1.1.4 / 2014-04-19\n==================\n\n  * allow true as an option\n  * bump bytes\n\n1.1.3 / 2014-03-02\n==================\n\n  * fix case when length=null\n\n1.1.2 / 2013-12-01\n==================\n\n  * be less strict on state.encoding check\n\n1.1.1 / 2013-11-27\n==================\n\n  * add engines\n\n1.1.0 / 2013-11-27\n==================\n\n  * add err.statusCode and err.type\n  * allow for encoding option to be true\n  * pause the stream instead of dumping on error\n  * throw if the stream's encoding is set\n\n1.0.1 / 2013-11-19\n==================\n\n  * dont support streams1, throw if dev set encoding\n\n1.0.0 / 2013-11-17\n==================\n\n  * rename `expected` option to `length`\n\n0.2.0 / 2013-11-15\n==================\n\n  * republish\n\n0.1.1 / 2013-11-15\n==================\n\n  * use bytes\n\n0.1.0 / 2013-11-11\n==================\n\n  * generator support\n\n0.0.3 / 2013-10-10\n==================\n\n  * update repo\n\n0.0.2 / 2013-09-14\n==================\n\n  * dump stream on bad headers\n  * listen to events after defining received and buffers\n\n0.0.1 / 2013-09-14\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\raw-body\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\raw-body\\HISTORY.md"
  },
  {
    "Content": "/*!\n * raw-body\n * Copyright(c) 2013-2014 Jonathan Ong\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar asyncHooks = tryRequireAsyncHooks()\nvar bytes = require('bytes')\nvar createError = require('http-errors')\nvar iconv = require('iconv-lite')\nvar unpipe = require('unpipe')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getRawBody\n\n/**\n * Module variables.\n * @private\n */\n\nvar ICONV_ENCODING_MESSAGE_REGEXP = /^Encoding not recognized: /\n\n/**\n * Get the decoder for a given encoding.\n *\n * @param {string} encoding\n * @private\n */\n\nfunction getDecoder (encoding) {\n  if (!encoding) return null\n\n  try {\n    return iconv.getDecoder(encoding)\n  } catch (e) {\n    // error getting decoder\n    if (!ICONV_ENCODING_MESSAGE_REGEXP.test(e.message)) throw e\n\n    // the encoding was not found\n    throw createError(415, 'specified encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n}\n\n/**\n * Get the raw body of a stream (typically HTTP).\n *\n * @param {object} stream\n * @param {object|string|function} [options]\n * @param {function} [callback]\n * @public\n */\n\nfunction getRawBody (stream, options, callback) {\n  var done = callback\n  var opts = options || {}\n\n  // light validation\n  if (stream === undefined) {\n    throw new TypeError('argument stream is required')\n  } else if (typeof stream !== 'object' || stream === null || typeof stream.on !== 'function') {\n    throw new TypeError('argument stream must be a stream')\n  }\n\n  if (options === true || typeof options === 'string') {\n    // short cut for encoding\n    opts = {\n      encoding: options\n    }\n  }\n\n  if (typeof options === 'function') {\n    done = options\n    opts = {}\n  }\n\n  // validate callback is a function, if provided\n  if (done !== undefined && typeof done !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!done && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  // get encoding\n  var encoding = opts.encoding !== true\n    ? opts.encoding\n    : 'utf-8'\n\n  // convert the limit to an integer\n  var limit = bytes.parse(opts.limit)\n\n  // convert the expected length to an integer\n  var length = opts.length != null && !isNaN(opts.length)\n    ? parseInt(opts.length, 10)\n    : null\n\n  if (done) {\n    // classic callback style\n    return readStream(stream, encoding, length, limit, wrap(done))\n  }\n\n  return new Promise(function executor (resolve, reject) {\n    readStream(stream, encoding, length, limit, function onRead (err, buf) {\n      if (err) return reject(err)\n      resolve(buf)\n    })\n  })\n}\n\n/**\n * Halt a stream.\n *\n * @param {Object} stream\n * @private\n */\n\nfunction halt (stream) {\n  // unpipe everything from the stream\n  unpipe(stream)\n\n  // pause stream\n  if (typeof stream.pause === 'function') {\n    stream.pause()\n  }\n}\n\n/**\n * Read the data from the stream.\n *\n * @param {object} stream\n * @param {string} encoding\n * @param {number} length\n * @param {number} limit\n * @param {function} callback\n * @public\n */\n\nfunction readStream (stream, encoding, length, limit, callback) {\n  var complete = false\n  var sync = true\n\n  // check the length and limit options.\n  // note: we intentionally leave the stream paused,\n  // so users should handle the stream themselves.\n  if (limit !== null && length !== null && length > limit) {\n    return done(createError(413, 'request entity too large', {\n      expected: length,\n      length: length,\n      limit: limit,\n      type: 'entity.too.large'\n    }))\n  }\n\n  // streams1: assert request encoding is buffer.\n  // streams2+: assert the stream encoding is buffer.\n  //   stream._decoder: streams1\n  //   state.encoding: streams2\n  //   state.decoder: streams2, specifically < 0.10.6\n  var state = stream._readableState\n  if (stream._decoder || (state && (state.encoding || state.decoder))) {\n    // developer error\n    return done(createError(500, 'stream encoding should not be set', {\n      type: 'stream.encoding.set'\n    }))\n  }\n\n  if (typeof stream.readable !== 'undefined' && !stream.readable) {\n    return done(createError(500, 'stream is not readable', {\n      type: 'stream.not.readable'\n    }))\n  }\n\n  var received = 0\n  var decoder\n\n  try {\n    decoder = getDecoder(encoding)\n  } catch (err) {\n    return done(err)\n  }\n\n  var buffer = decoder\n    ? ''\n    : []\n\n  // attach listeners\n  stream.on('aborted', onAborted)\n  stream.on('close', cleanup)\n  stream.on('data', onData)\n  stream.on('end', onEnd)\n  stream.on('error', onEnd)\n\n  // mark sync section complete\n  sync = false\n\n  function done () {\n    var args = new Array(arguments.length)\n\n    // copy arguments\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    // mark complete\n    complete = true\n\n    if (sync) {\n      process.nextTick(invokeCallback)\n    } else {\n      invokeCallback()\n    }\n\n    function invokeCallback () {\n      cleanup()\n\n      if (args[0]) {\n        // halt the stream on error\n        halt(stream)\n      }\n\n      callback.apply(null, args)\n    }\n  }\n\n  function onAborted () {\n    if (complete) return\n\n    done(createError(400, 'request aborted', {\n      code: 'ECONNABORTED',\n      expected: length,\n      length: length,\n      received: received,\n      type: 'request.aborted'\n    }))\n  }\n\n  function onData (chunk) {\n    if (complete) return\n\n    received += chunk.length\n\n    if (limit !== null && received > limit) {\n      done(createError(413, 'request entity too large', {\n        limit: limit,\n        received: received,\n        type: 'entity.too.large'\n      }))\n    } else if (decoder) {\n      buffer += decoder.write(chunk)\n    } else {\n      buffer.push(chunk)\n    }\n  }\n\n  function onEnd (err) {\n    if (complete) return\n    if (err) return done(err)\n\n    if (length !== null && received !== length) {\n      done(createError(400, 'request size did not match content length', {\n        expected: length,\n        length: length,\n        received: received,\n        type: 'request.size.invalid'\n      }))\n    } else {\n      var string = decoder\n        ? buffer + (decoder.end() || '')\n        : Buffer.concat(buffer)\n      done(null, string)\n    }\n  }\n\n  function cleanup () {\n    buffer = null\n\n    stream.removeListener('aborted', onAborted)\n    stream.removeListener('data', onData)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('error', onEnd)\n    stream.removeListener('close', cleanup)\n  }\n}\n\n/**\n * Try to require async_hooks\n * @private\n */\n\nfunction tryRequireAsyncHooks () {\n  try {\n    return require('async_hooks')\n  } catch (e) {\n    return {}\n  }\n}\n\n/**\n * Wrap function with async resource, if possible.\n * AsyncResource.bind static method backported.\n * @private\n */\n\nfunction wrap (fn) {\n  var res\n\n  // create anonymous resource\n  if (asyncHooks.AsyncResource) {\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\n  }\n\n  // incompatible node.js\n  if (!res || !res.runInAsyncScope) {\n    return fn\n  }\n\n  // return bound function\n  return res.runInAsyncScope.bind(res, fn, null)\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\raw-body\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\raw-body\\index.js"
  },
  {
    "Content": "# raw-body\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build status][github-actions-ci-image]][github-actions-ci-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n\nGets the entire buffer of a stream either as a `Buffer` or a string.\nValidates the stream's length against an expected length and maximum limit.\nIdeal for parsing request bodies.\n\n## Install\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install raw-body\n```\n\n### TypeScript\n\nThis module includes a [TypeScript](https://www.typescriptlang.org/)\ndeclaration file to enable auto complete in compatible editors and type\ninformation for TypeScript projects. This module depends on the Node.js\ntypes, so install `@types/node`:\n\n```sh\n$ npm install @types/node\n```\n\n## API\n\n```js\nvar getRawBody = require('raw-body')\n```\n\n### getRawBody(stream, [options], [callback])\n\n**Returns a promise if no callback specified and global `Promise` exists.**\n\nOptions:\n\n- `length` - The length of the stream.\n  If the contents of the stream do not add up to this length,\n  an `400` error code is returned.\n- `limit` - The byte limit of the body.\n  This is the number of bytes or any string format supported by\n  [bytes](https://www.npmjs.com/package/bytes),\n  for example `1000`, `'500kb'` or `'3mb'`.\n  If the body ends up being larger than this limit,\n  a `413` error code is returned.\n- `encoding` - The encoding to use to decode the body into a string.\n  By default, a `Buffer` instance will be returned when no encoding is specified.\n  Most likely, you want `utf-8`, so setting `encoding` to `true` will decode as `utf-8`.\n  You can use any type of encoding supported by [iconv-lite](https://www.npmjs.org/package/iconv-lite#readme).\n\nYou can also pass a string in place of options to just specify the encoding.\n\nIf an error occurs, the stream will be paused, everything unpiped,\nand you are responsible for correctly disposing the stream.\nFor HTTP requests, you may need to finish consuming the stream if\nyou want to keep the socket open for future requests. For streams\nthat use file descriptors, you should `stream.destroy()` or\n`stream.close()` to prevent leaks.\n\n## Errors\n\nThis module creates errors depending on the error condition during reading.\nThe error may be an error from the underlying Node.js implementation, but is\notherwise an error created by this module, which has the following attributes:\n\n  * `limit` - the limit in bytes\n  * `length` and `expected` - the expected length of the stream\n  * `received` - the received bytes\n  * `encoding` - the invalid encoding\n  * `status` and `statusCode` - the corresponding status code for the error\n  * `type` - the error type\n\n### Types\n\nThe errors from this module have a `type` property which allows for the programmatic\ndetermination of the type of error returned.\n\n#### encoding.unsupported\n\nThis error will occur when the `encoding` option is specified, but the value does\nnot map to an encoding supported by the [iconv-lite](https://www.npmjs.org/package/iconv-lite#readme)\nmodule.\n\n#### entity.too.large\n\nThis error will occur when the `limit` option is specified, but the stream has\nan entity that is larger.\n\n#### request.aborted\n\nThis error will occur when the request stream is aborted by the client before\nreading the body has finished.\n\n#### request.size.invalid\n\nThis error will occur when the `length` option is specified, but the stream has\nemitted more bytes.\n\n#### stream.encoding.set\n\nThis error will occur when the given stream has an encoding set on it, making it\na decoded stream. The stream should not have an encoding set and is expected to\nemit `Buffer` objects.\n\n#### stream.not.readable\n\nThis error will occur when the given stream is not readable.\n\n## Examples\n\n### Simple Express example\n\n```js\nvar contentType = require('content-type')\nvar express = require('express')\nvar getRawBody = require('raw-body')\n\nvar app = express()\n\napp.use(function (req, res, next) {\n  getRawBody(req, {\n    length: req.headers['content-length'],\n    limit: '1mb',\n    encoding: contentType.parse(req).parameters.charset\n  }, function (err, string) {\n    if (err) return next(err)\n    req.text = string\n    next()\n  })\n})\n\n// now access req.text\n```\n\n### Simple Koa example\n\n```js\nvar contentType = require('content-type')\nvar getRawBody = require('raw-body')\nvar koa = require('koa')\n\nvar app = koa()\n\napp.use(function * (next) {\n  this.text = yield getRawBody(this.req, {\n    length: this.req.headers['content-length'],\n    limit: '1mb',\n    encoding: contentType.parse(this.req).parameters.charset\n  })\n  yield next\n})\n\n// now access this.text\n```\n\n### Using as a promise\n\nTo use this library as a promise, simply omit the `callback` and a promise is\nreturned, provided that a global `Promise` is defined.\n\n```js\nvar getRawBody = require('raw-body')\nvar http = require('http')\n\nvar server = http.createServer(function (req, res) {\n  getRawBody(req)\n    .then(function (buf) {\n      res.statusCode = 200\n      res.end(buf.length + ' bytes submitted')\n    })\n    .catch(function (err) {\n      res.statusCode = 500\n      res.end(err.message)\n    })\n})\n\nserver.listen(3000)\n```\n\n### Using with TypeScript\n\n```ts\nimport * as getRawBody from 'raw-body';\nimport * as http from 'http';\n\nconst server = http.createServer((req, res) => {\n  getRawBody(req)\n  .then((buf) => {\n    res.statusCode = 200;\n    res.end(buf.length + ' bytes submitted');\n  })\n  .catch((err) => {\n    res.statusCode = err.statusCode;\n    res.end(err.message);\n  });\n});\n\nserver.listen(3000);\n```\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/raw-body.svg\n[npm-url]: https://npmjs.org/package/raw-body\n[node-version-image]: https://img.shields.io/node/v/raw-body.svg\n[node-version-url]: https://nodejs.org/en/download/\n[coveralls-image]: https://img.shields.io/coveralls/stream-utils/raw-body/master.svg\n[coveralls-url]: https://coveralls.io/r/stream-utils/raw-body?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/raw-body.svg\n[downloads-url]: https://npmjs.org/package/raw-body\n[github-actions-ci-image]: https://img.shields.io/github/actions/workflow/status/stream-utils/raw-body/ci.yml?branch=master&label=ci\n[github-actions-ci-url]: https://github.com/jshttp/stream-utils/raw-body?query=workflow%3Aci\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\raw-body\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\raw-body\\README.md"
  },
  {
    "Content": "# Security Policies and Procedures\n\n## Reporting a Bug\n\nThe `raw-body` team and community take all security bugs seriously. Thank you\nfor improving the security of Express. We appreciate your efforts and\nresponsible disclosure and will make every effort to acknowledge your\ncontributions.\n\nReport security bugs by emailing the current owners of `raw-body`. This information\ncan be found in the npm registry using the command `npm owner ls raw-body`.\nIf unsure or unable to get the information from the above, open an issue\nin the [project issue tracker](https://github.com/stream-utils/raw-body/issues)\nasking for the current contact information.\n\nTo ensure the timely response to your report, please ensure that the entirety\nof the report is contained within the email body and not solely behind a web\nlink or an attachment.\n\nAt least one owner will acknowledge your email within 48 hours, and will send a\nmore detailed response within 48 hours indicating the next steps in handling\nyour report. After the initial reply to your report, the owners will\nendeavor to keep you informed of the progress towards a fix and full\nannouncement, and may ask for additional information or guidance.\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\raw-body\\SECURITY.md",
    "RelativePath": "tools\\backend\\node_modules\\raw-body\\SECURITY.md"
  },
  {
    "Content": "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\safe-buffer\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\safe-buffer\\index.js"
  },
  {
    "Content": "# safe-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/feross/safe-buffer/master.svg\n[travis-url]: https://travis-ci.org/feross/safe-buffer\n[npm-image]: https://img.shields.io/npm/v/safe-buffer.svg\n[npm-url]: https://npmjs.org/package/safe-buffer\n[downloads-image]: https://img.shields.io/npm/dm/safe-buffer.svg\n[downloads-url]: https://npmjs.org/package/safe-buffer\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n#### Safer Node.js Buffer API\n\n**Use the new Node.js Buffer APIs (`Buffer.from`, `Buffer.alloc`,\n`Buffer.allocUnsafe`, `Buffer.allocUnsafeSlow`) in all versions of Node.js.**\n\n**Uses the built-in implementation when available.**\n\n## install\n\n```\nnpm install safe-buffer\n```\n\n## usage\n\nThe goal of this package is to provide a safe replacement for the node.js `Buffer`.\n\nIt's a drop-in replacement for `Buffer`. You can use it by adding one `require` line to\nthe top of your node.js modules:\n\n```js\nvar Buffer = require('safe-buffer').Buffer\n\n// Existing buffer code will continue to work without issues:\n\nnew Buffer('hey', 'utf8')\nnew Buffer([1, 2, 3], 'utf8')\nnew Buffer(obj)\nnew Buffer(16) // create an uninitialized buffer (potentially unsafe)\n\n// But you can use these new explicit APIs to make clear what you want:\n\nBuffer.from('hey', 'utf8') // convert from many types to a Buffer\nBuffer.alloc(16) // create a zero-filled buffer (safe)\nBuffer.allocUnsafe(16) // create an uninitialized buffer (potentially unsafe)\n```\n\n## api\n\n### Class Method: Buffer.from(array)\n<!-- YAML\nadded: v3.0.0\n-->\n\n* `array` {Array}\n\nAllocates a new `Buffer` using an `array` of octets.\n\n```js\nconst buf = Buffer.from([0x62,0x75,0x66,0x66,0x65,0x72]);\n  // creates a new Buffer containing ASCII bytes\n  // ['b','u','f','f','e','r']\n```\n\nA `TypeError` will be thrown if `array` is not an `Array`.\n\n### Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `arrayBuffer` {ArrayBuffer} The `.buffer` property of a `TypedArray` or\n  a `new ArrayBuffer()`\n* `byteOffset` {Number} Default: `0`\n* `length` {Number} Default: `arrayBuffer.length - byteOffset`\n\nWhen passed a reference to the `.buffer` property of a `TypedArray` instance,\nthe newly created `Buffer` will share the same allocated memory as the\nTypedArray.\n\n```js\nconst arr = new Uint16Array(2);\narr[0] = 5000;\narr[1] = 4000;\n\nconst buf = Buffer.from(arr.buffer); // shares the memory with arr;\n\nconsole.log(buf);\n  // Prints: <Buffer 88 13 a0 0f>\n\n// changing the TypedArray changes the Buffer also\narr[1] = 6000;\n\nconsole.log(buf);\n  // Prints: <Buffer 88 13 70 17>\n```\n\nThe optional `byteOffset` and `length` arguments specify a memory range within\nthe `arrayBuffer` that will be shared by the `Buffer`.\n\n```js\nconst ab = new ArrayBuffer(10);\nconst buf = Buffer.from(ab, 0, 2);\nconsole.log(buf.length);\n  // Prints: 2\n```\n\nA `TypeError` will be thrown if `arrayBuffer` is not an `ArrayBuffer`.\n\n### Class Method: Buffer.from(buffer)\n<!-- YAML\nadded: v3.0.0\n-->\n\n* `buffer` {Buffer}\n\nCopies the passed `buffer` data onto a new `Buffer` instance.\n\n```js\nconst buf1 = Buffer.from('buffer');\nconst buf2 = Buffer.from(buf1);\n\nbuf1[0] = 0x61;\nconsole.log(buf1.toString());\n  // 'auffer'\nconsole.log(buf2.toString());\n  // 'buffer' (copy is not changed)\n```\n\nA `TypeError` will be thrown if `buffer` is not a `Buffer`.\n\n### Class Method: Buffer.from(str[, encoding])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `str` {String} String to encode.\n* `encoding` {String} Encoding to use, Default: `'utf8'`\n\nCreates a new `Buffer` containing the given JavaScript string `str`. If\nprovided, the `encoding` parameter identifies the character encoding.\nIf not provided, `encoding` defaults to `'utf8'`.\n\n```js\nconst buf1 = Buffer.from('this is a tést');\nconsole.log(buf1.toString());\n  // prints: this is a tést\nconsole.log(buf1.toString('ascii'));\n  // prints: this is a tC)st\n\nconst buf2 = Buffer.from('7468697320697320612074c3a97374', 'hex');\nconsole.log(buf2.toString());\n  // prints: this is a tést\n```\n\nA `TypeError` will be thrown if `str` is not a string.\n\n### Class Method: Buffer.alloc(size[, fill[, encoding]])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n* `fill` {Value} Default: `undefined`\n* `encoding` {String} Default: `utf8`\n\nAllocates a new `Buffer` of `size` bytes. If `fill` is `undefined`, the\n`Buffer` will be *zero-filled*.\n\n```js\nconst buf = Buffer.alloc(5);\nconsole.log(buf);\n  // <Buffer 00 00 00 00 00>\n```\n\nThe `size` must be less than or equal to the value of\n`require('buffer').kMaxLength` (on 64-bit architectures, `kMaxLength` is\n`(2^31)-1`). Otherwise, a [`RangeError`][] is thrown. A zero-length Buffer will\nbe created if a `size` less than or equal to 0 is specified.\n\nIf `fill` is specified, the allocated `Buffer` will be initialized by calling\n`buf.fill(fill)`. See [`buf.fill()`][] for more information.\n\n```js\nconst buf = Buffer.alloc(5, 'a');\nconsole.log(buf);\n  // <Buffer 61 61 61 61 61>\n```\n\nIf both `fill` and `encoding` are specified, the allocated `Buffer` will be\ninitialized by calling `buf.fill(fill, encoding)`. For example:\n\n```js\nconst buf = Buffer.alloc(11, 'aGVsbG8gd29ybGQ=', 'base64');\nconsole.log(buf);\n  // <Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64>\n```\n\nCalling `Buffer.alloc(size)` can be significantly slower than the alternative\n`Buffer.allocUnsafe(size)` but ensures that the newly created `Buffer` instance\ncontents will *never contain sensitive data*.\n\nA `TypeError` will be thrown if `size` is not a number.\n\n### Class Method: Buffer.allocUnsafe(size)\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n\nAllocates a new *non-zero-filled* `Buffer` of `size` bytes.  The `size` must\nbe less than or equal to the value of `require('buffer').kMaxLength` (on 64-bit\narchitectures, `kMaxLength` is `(2^31)-1`). Otherwise, a [`RangeError`][] is\nthrown. A zero-length Buffer will be created if a `size` less than or equal to\n0 is specified.\n\nThe underlying memory for `Buffer` instances created in this way is *not\ninitialized*. The contents of the newly created `Buffer` are unknown and\n*may contain sensitive data*. Use [`buf.fill(0)`][] to initialize such\n`Buffer` instances to zeroes.\n\n```js\nconst buf = Buffer.allocUnsafe(5);\nconsole.log(buf);\n  // <Buffer 78 e0 82 02 01>\n  // (octets will be different, every time)\nbuf.fill(0);\nconsole.log(buf);\n  // <Buffer 00 00 00 00 00>\n```\n\nA `TypeError` will be thrown if `size` is not a number.\n\nNote that the `Buffer` module pre-allocates an internal `Buffer` instance of\nsize `Buffer.poolSize` that is used as a pool for the fast allocation of new\n`Buffer` instances created using `Buffer.allocUnsafe(size)` (and the deprecated\n`new Buffer(size)` constructor) only when `size` is less than or equal to\n`Buffer.poolSize >> 1` (floor of `Buffer.poolSize` divided by two). The default\nvalue of `Buffer.poolSize` is `8192` but can be modified.\n\nUse of this pre-allocated internal memory pool is a key difference between\ncalling `Buffer.alloc(size, fill)` vs. `Buffer.allocUnsafe(size).fill(fill)`.\nSpecifically, `Buffer.alloc(size, fill)` will *never* use the internal Buffer\npool, while `Buffer.allocUnsafe(size).fill(fill)` *will* use the internal\nBuffer pool if `size` is less than or equal to half `Buffer.poolSize`. The\ndifference is subtle but can be important when an application requires the\nadditional performance that `Buffer.allocUnsafe(size)` provides.\n\n### Class Method: Buffer.allocUnsafeSlow(size)\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n\nAllocates a new *non-zero-filled* and non-pooled `Buffer` of `size` bytes.  The\n`size` must be less than or equal to the value of\n`require('buffer').kMaxLength` (on 64-bit architectures, `kMaxLength` is\n`(2^31)-1`). Otherwise, a [`RangeError`][] is thrown. A zero-length Buffer will\nbe created if a `size` less than or equal to 0 is specified.\n\nThe underlying memory for `Buffer` instances created in this way is *not\ninitialized*. The contents of the newly created `Buffer` are unknown and\n*may contain sensitive data*. Use [`buf.fill(0)`][] to initialize such\n`Buffer` instances to zeroes.\n\nWhen using `Buffer.allocUnsafe()` to allocate new `Buffer` instances,\nallocations under 4KB are, by default, sliced from a single pre-allocated\n`Buffer`. This allows applications to avoid the garbage collection overhead of\ncreating many individually allocated Buffers. This approach improves both\nperformance and memory usage by eliminating the need to track and cleanup as\nmany `Persistent` objects.\n\nHowever, in the case where a developer may need to retain a small chunk of\nmemory from a pool for an indeterminate amount of time, it may be appropriate\nto create an un-pooled Buffer instance using `Buffer.allocUnsafeSlow()` then\ncopy out the relevant bits.\n\n```js\n// need to keep around a few small chunks of memory\nconst store = [];\n\nsocket.on('readable', () => {\n  const data = socket.read();\n  // allocate for retained data\n  const sb = Buffer.allocUnsafeSlow(10);\n  // copy the data into the new allocation\n  data.copy(sb, 0, 0, 10);\n  store.push(sb);\n});\n```\n\nUse of `Buffer.allocUnsafeSlow()` should be used only as a last resort *after*\na developer has observed undue memory retention in their applications.\n\nA `TypeError` will be thrown if `size` is not a number.\n\n### All the Rest\n\nThe rest of the `Buffer` API is exactly the same as in node.js.\n[See the docs](https://nodejs.org/api/buffer.html).\n\n\n## Related links\n\n- [Node.js issue: Buffer(number) is unsafe](https://github.com/nodejs/node/issues/4660)\n- [Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate](https://github.com/nodejs/node-eps/pull/4)\n\n## Why is `Buffer` unsafe?\n\nToday, the node.js `Buffer` constructor is overloaded to handle many different argument\ntypes like `String`, `Array`, `Object`, `TypedArrayView` (`Uint8Array`, etc.),\n`ArrayBuffer`, and also `Number`.\n\nThe API is optimized for convenience: you can throw any type at it, and it will try to do\nwhat you want.\n\nBecause the Buffer constructor is so powerful, you often see code like this:\n\n```js\n// Convert UTF-8 strings to hex\nfunction toHex (str) {\n  return new Buffer(str).toString('hex')\n}\n```\n\n***But what happens if `toHex` is called with a `Number` argument?***\n\n### Remote Memory Disclosure\n\nIf an attacker can make your program call the `Buffer` constructor with a `Number`\nargument, then they can make it allocate uninitialized memory from the node.js process.\nThis could potentially disclose TLS private keys, user data, or database passwords.\n\nWhen the `Buffer` constructor is passed a `Number` argument, it returns an\n**UNINITIALIZED** block of memory of the specified `size`. When you create a `Buffer` like\nthis, you **MUST** overwrite the contents before returning it to the user.\n\nFrom the [node.js docs](https://nodejs.org/api/buffer.html#buffer_new_buffer_size):\n\n> `new Buffer(size)`\n>\n> - `size` Number\n>\n> The underlying memory for `Buffer` instances created in this way is not initialized.\n> **The contents of a newly created `Buffer` are unknown and could contain sensitive\n> data.** Use `buf.fill(0)` to initialize a Buffer to zeroes.\n\n(Emphasis our own.)\n\nWhenever the programmer intended to create an uninitialized `Buffer` you often see code\nlike this:\n\n```js\nvar buf = new Buffer(16)\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i < buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n```\n\n\n### Would this ever be a problem in real code?\n\nYes. It's surprisingly common to forget to check the type of your variables in a\ndynamically-typed language like JavaScript.\n\nUsually the consequences of assuming the wrong type is that your program crashes with an\nuncaught exception. But the failure mode for forgetting to check the type of arguments to\nthe `Buffer` constructor is more catastrophic.\n\nHere's an example of a vulnerable service that takes a JSON payload and converts it to\nhex:\n\n```js\n// Take a JSON payload {str: \"some string\"} and convert it to hex\nvar server = http.createServer(function (req, res) {\n  var data = ''\n  req.setEncoding('utf8')\n  req.on('data', function (chunk) {\n    data += chunk\n  })\n  req.on('end', function () {\n    var body = JSON.parse(data)\n    res.end(new Buffer(body.str).toString('hex'))\n  })\n})\n\nserver.listen(8080)\n```\n\nIn this example, an http client just has to send:\n\n```json\n{\n  \"str\": 1000\n}\n```\n\nand it will get back 1,000 bytes of uninitialized memory from the server.\n\nThis is a very serious bug. It's similar in severity to the\n[the Heartbleed bug](http://heartbleed.com/) that allowed disclosure of OpenSSL process\nmemory by remote attackers.\n\n\n### Which real-world packages were vulnerable?\n\n#### [`bittorrent-dht`](https://www.npmjs.com/package/bittorrent-dht)\n\n[Mathias Buus](https://github.com/mafintosh) and I\n([Feross Aboukhadijeh](http://feross.org/)) found this issue in one of our own packages,\n[`bittorrent-dht`](https://www.npmjs.com/package/bittorrent-dht). The bug would allow\nanyone on the internet to send a series of messages to a user of `bittorrent-dht` and get\nthem to reveal 20 bytes at a time of uninitialized memory from the node.js process.\n\nHere's\n[the commit](https://github.com/feross/bittorrent-dht/commit/6c7da04025d5633699800a99ec3fbadf70ad35b8)\nthat fixed it. We released a new fixed version, created a\n[Node Security Project disclosure](https://nodesecurity.io/advisories/68), and deprecated all\nvulnerable versions on npm so users will get a warning to upgrade to a newer version.\n\n#### [`ws`](https://www.npmjs.com/package/ws)\n\nThat got us wondering if there were other vulnerable packages. Sure enough, within a short\nperiod of time, we found the same issue in [`ws`](https://www.npmjs.com/package/ws), the\nmost popular WebSocket implementation in node.js.\n\nIf certain APIs were called with `Number` parameters instead of `String` or `Buffer` as\nexpected, then uninitialized server memory would be disclosed to the remote peer.\n\nThese were the vulnerable methods:\n\n```js\nsocket.send(number)\nsocket.ping(number)\nsocket.pong(number)\n```\n\nHere's a vulnerable socket server with some echo functionality:\n\n```js\nserver.on('connection', function (socket) {\n  socket.on('message', function (message) {\n    message = JSON.parse(message)\n    if (message.type === 'echo') {\n      socket.send(message.data) // send back the user's message\n    }\n  })\n})\n```\n\n`socket.send(number)` called on the server, will disclose server memory.\n\nHere's [the release](https://github.com/websockets/ws/releases/tag/1.0.1) where the issue\nwas fixed, with a more detailed explanation. Props to\n[Arnout Kazemier](https://github.com/3rd-Eden) for the quick fix. Here's the\n[Node Security Project disclosure](https://nodesecurity.io/advisories/67).\n\n\n### What's the solution?\n\nIt's important that node.js offers a fast way to get memory otherwise performance-critical\napplications would needlessly get a lot slower.\n\nBut we need a better way to *signal our intent* as programmers. **When we want\nuninitialized memory, we should request it explicitly.**\n\nSensitive functionality should not be packed into a developer-friendly API that loosely\naccepts many different types. This type of API encourages the lazy practice of passing\nvariables in without checking the type very carefully.\n\n#### A new API: `Buffer.allocUnsafe(number)`\n\nThe functionality of creating buffers with uninitialized memory should be part of another\nAPI. We propose `Buffer.allocUnsafe(number)`. This way, it's not part of an API that\nfrequently gets user input of all sorts of different types passed into it.\n\n```js\nvar buf = Buffer.allocUnsafe(16) // careful, uninitialized memory!\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i < buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n```\n\n\n### How do we fix node.js core?\n\nWe sent [a PR to node.js core](https://github.com/nodejs/node/pull/4514) (merged as\n`semver-major`) which defends against one case:\n\n```js\nvar str = 16\nnew Buffer(str, 'utf8')\n```\n\nIn this situation, it's implied that the programmer intended the first argument to be a\nstring, since they passed an encoding as a second argument. Today, node.js will allocate\nuninitialized memory in the case of `new Buffer(number, encoding)`, which is probably not\nwhat the programmer intended.\n\nBut this is only a partial solution, since if the programmer does `new Buffer(variable)`\n(without an `encoding` parameter) there's no way to know what they intended. If `variable`\nis sometimes a number, then uninitialized memory will sometimes be returned.\n\n### What's the real long-term fix?\n\nWe could deprecate and remove `new Buffer(number)` and use `Buffer.allocUnsafe(number)` when\nwe need uninitialized memory. But that would break 1000s of packages.\n\n~~We believe the best solution is to:~~\n\n~~1. Change `new Buffer(number)` to return safe, zeroed-out memory~~\n\n~~2. Create a new API for creating uninitialized Buffers. We propose: `Buffer.allocUnsafe(number)`~~\n\n#### Update\n\nWe now support adding three new APIs:\n\n- `Buffer.from(value)` - convert from any type to a buffer\n- `Buffer.alloc(size)` - create a zero-filled buffer\n- `Buffer.allocUnsafe(size)` - create an uninitialized buffer with given size\n\nThis solves the core problem that affected `ws` and `bittorrent-dht` which is\n`Buffer(variable)` getting tricked into taking a number argument.\n\nThis way, existing code continues working and the impact on the npm ecosystem will be\nminimal. Over time, npm maintainers can migrate performance-critical code to use\n`Buffer.allocUnsafe(number)` instead of `new Buffer(number)`.\n\n\n### Conclusion\n\nWe think there's a serious design issue with the `Buffer` API as it exists today. It\npromotes insecure software by putting high-risk functionality into a convenient API\nwith friendly \"developer ergonomics\".\n\nThis wasn't merely a theoretical exercise because we found the issue in some of the\nmost popular npm packages.\n\nFortunately, there's an easy fix that can be applied today. Use `safe-buffer` in place of\n`buffer`.\n\n```js\nvar Buffer = require('safe-buffer').Buffer\n```\n\nEventually, we hope that node.js core can switch to this new, safer behavior. We believe\nthe impact on the ecosystem would be minimal since it's not a breaking change.\nWell-maintained, popular packages would be updated to use `Buffer.alloc` quickly, while\nolder, insecure packages would magically become safe from this attack vector.\n\n\n## links\n\n- [Node.js PR: buffer: throw if both length and enc are passed](https://github.com/nodejs/node/pull/4514)\n- [Node Security Project disclosure for `ws`](https://nodesecurity.io/advisories/67)\n- [Node Security Project disclosure for`bittorrent-dht`](https://nodesecurity.io/advisories/68)\n\n\n## credit\n\nThe original issues in `bittorrent-dht`\n([disclosure](https://nodesecurity.io/advisories/68)) and\n`ws` ([disclosure](https://nodesecurity.io/advisories/67)) were discovered by\n[Mathias Buus](https://github.com/mafintosh) and\n[Feross Aboukhadijeh](http://feross.org/).\n\nThanks to [Adam Baldwin](https://github.com/evilpacket) for helping disclose these issues\nand for his work running the [Node Security Project](https://nodesecurity.io/).\n\nThanks to [John Hiesey](https://github.com/jhiesey) for proofreading this README and\nauditing the code.\n\n\n## license\n\nMIT. Copyright (C) [Feross Aboukhadijeh](http://feross.org)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\safe-buffer\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\safe-buffer\\README.md"
  },
  {
    "Content": "/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\nvar safer = require('./safer.js')\nvar Safer = safer.Buffer\n\nvar dangerous = {}\n\nvar key\n\nfor (key in safer) {\n  if (!safer.hasOwnProperty(key)) continue\n  dangerous[key] = safer[key]\n}\n\nvar Dangereous = dangerous.Buffer = {}\n\n// Copy Safer API\nfor (key in Safer) {\n  if (!Safer.hasOwnProperty(key)) continue\n  Dangereous[key] = Safer[key]\n}\n\n// Copy those missing unsafe methods, if they are present\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (Dangereous.hasOwnProperty(key)) continue\n  Dangereous[key] = Buffer[key]\n}\n\nif (!Dangereous.allocUnsafe) {\n  Dangereous.allocUnsafe = function (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    return Buffer(size)\n  }\n}\n\nif (!Dangereous.allocUnsafeSlow) {\n  Dangereous.allocUnsafeSlow = function (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    return buffer.SlowBuffer(size)\n  }\n}\n\nmodule.exports = dangerous\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\safer-buffer\\dangerous.js",
    "RelativePath": "tools\\backend\\node_modules\\safer-buffer\\dangerous.js"
  },
  {
    "Content": "# Porting to the Buffer.from/Buffer.alloc API\n\n<a id=\"overview\"></a>\n## Overview\n\n- [Variant 1: Drop support for Node.js ≤ 4.4.x and 5.0.0 — 5.9.x.](#variant-1) (*recommended*)\n- [Variant 2: Use a polyfill](#variant-2)\n- [Variant 3: manual detection, with safeguards](#variant-3)\n\n### Finding problematic bits of code using grep\n\nJust run `grep -nrE '[^a-zA-Z](Slow)?Buffer\\s*\\(' --exclude-dir node_modules`.\n\nIt will find all the potentially unsafe places in your own code (with some considerably unlikely\nexceptions).\n\n### Finding problematic bits of code using Node.js 8\n\nIf you’re using Node.js ≥ 8.0.0 (which is recommended), Node.js exposes multiple options that help with finding the relevant pieces of code:\n\n- `--trace-warnings` will make Node.js show a stack trace for this warning and other warnings that are printed by Node.js.\n- `--trace-deprecation` does the same thing, but only for deprecation warnings.\n- `--pending-deprecation` will show more types of deprecation warnings. In particular, it will show the `Buffer()` deprecation warning, even on Node.js 8.\n\nYou can set these flags using an environment variable:\n\n```console\n$ export NODE_OPTIONS='--trace-warnings --pending-deprecation'\n$ cat example.js\n'use strict';\nconst foo = new Buffer('foo');\n$ node example.js\n(node:7147) [DEP0005] DeprecationWarning: The Buffer() and new Buffer() constructors are not recommended for use due to security and usability concerns. Please use the new Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() construction methods instead.\n    at showFlaggedDeprecation (buffer.js:127:13)\n    at new Buffer (buffer.js:148:3)\n    at Object.<anonymous> (/path/to/example.js:2:13)\n    [... more stack trace lines ...]\n```\n\n### Finding problematic bits of code using linters\n\nEslint rules [no-buffer-constructor](https://eslint.org/docs/rules/no-buffer-constructor)\nor\n[node/no-deprecated-api](https://github.com/mysticatea/eslint-plugin-node/blob/master/docs/rules/no-deprecated-api.md)\nalso find calls to deprecated `Buffer()` API. Those rules are included in some pre-sets.\n\nThere is a drawback, though, that it doesn't always\n[work correctly](https://github.com/chalker/safer-buffer#why-not-safe-buffer) when `Buffer` is\noverriden e.g. with a polyfill, so recommended is a combination of this and some other method\ndescribed above.\n\n<a id=\"variant-1\"></a>\n## Variant 1: Drop support for Node.js ≤ 4.4.x and 5.0.0 — 5.9.x.\n\nThis is the recommended solution nowadays that would imply only minimal overhead.\n\nThe Node.js 5.x release line has been unsupported since July 2016, and the Node.js 4.x release line reaches its End of Life in April 2018 (→ [Schedule](https://github.com/nodejs/Release#release-schedule)). This means that these versions of Node.js will *not* receive any updates, even in case of security issues, so using these release lines should be avoided, if at all possible.\n\nWhat you would do in this case is to convert all `new Buffer()` or `Buffer()` calls to use `Buffer.alloc()` or `Buffer.from()`, in the following way:\n\n- For `new Buffer(number)`, replace it with `Buffer.alloc(number)`.\n- For `new Buffer(string)` (or `new Buffer(string, encoding)`), replace it with `Buffer.from(string)` (or `Buffer.from(string, encoding)`).\n- For all other combinations of arguments (these are much rarer), also replace `new Buffer(...arguments)` with `Buffer.from(...arguments)`.\n\nNote that `Buffer.alloc()` is also _faster_ on the current Node.js versions than\n`new Buffer(size).fill(0)`, which is what you would otherwise need to ensure zero-filling.\n\nEnabling eslint rule [no-buffer-constructor](https://eslint.org/docs/rules/no-buffer-constructor)\nor\n[node/no-deprecated-api](https://github.com/mysticatea/eslint-plugin-node/blob/master/docs/rules/no-deprecated-api.md)\nis recommended to avoid accidential unsafe Buffer API usage.\n\nThere is also a [JSCodeshift codemod](https://github.com/joyeecheung/node-dep-codemod#dep005)\nfor automatically migrating Buffer constructors to `Buffer.alloc()` or `Buffer.from()`.\nNote that it currently only works with cases where the arguments are literals or where the\nconstructor is invoked with two arguments.\n\n_If you currently support those older Node.js versions and dropping them would be a semver-major change\nfor you, or if you support older branches of your packages, consider using [Variant 2](#variant-2)\nor [Variant 3](#variant-3) on older branches, so people using those older branches will also receive\nthe fix. That way, you will eradicate potential issues caused by unguarded Buffer API usage and\nyour users will not observe a runtime deprecation warning when running your code on Node.js 10._\n\n<a id=\"variant-2\"></a>\n## Variant 2: Use a polyfill\n\nUtilize [safer-buffer](https://www.npmjs.com/package/safer-buffer) as a polyfill to support older\nNode.js versions.\n\nYou would take exacly the same steps as in [Variant 1](#variant-1), but with a polyfill\n`const Buffer = require('safer-buffer').Buffer` in all files where you use the new `Buffer` api.\n\nMake sure that you do not use old `new Buffer` API — in any files where the line above is added,\nusing old `new Buffer()` API will _throw_. It will be easy to notice that in CI, though.\n\nAlternatively, you could use [buffer-from](https://www.npmjs.com/package/buffer-from) and/or\n[buffer-alloc](https://www.npmjs.com/package/buffer-alloc) [ponyfills](https://ponyfill.com/) —\nthose are great, the only downsides being 4 deps in the tree and slightly more code changes to\nmigrate off them (as you would be using e.g. `Buffer.from` under a different name). If you need only\n`Buffer.from` polyfilled — `buffer-from` alone which comes with no extra dependencies.\n\n_Alternatively, you could use [safe-buffer](https://www.npmjs.com/package/safe-buffer) — it also\nprovides a polyfill, but takes a different approach which has\n[it's drawbacks](https://github.com/chalker/safer-buffer#why-not-safe-buffer). It will allow you\nto also use the older `new Buffer()` API in your code, though — but that's arguably a benefit, as\nit is problematic, can cause issues in your code, and will start emitting runtime deprecation\nwarnings starting with Node.js 10._\n\nNote that in either case, it is important that you also remove all calls to the old Buffer\nAPI manually — just throwing in `safe-buffer` doesn't fix the problem by itself, it just provides\na polyfill for the new API. I have seen people doing that mistake.\n\nEnabling eslint rule [no-buffer-constructor](https://eslint.org/docs/rules/no-buffer-constructor)\nor\n[node/no-deprecated-api](https://github.com/mysticatea/eslint-plugin-node/blob/master/docs/rules/no-deprecated-api.md)\nis recommended.\n\n_Don't forget to drop the polyfill usage once you drop support for Node.js < 4.5.0._\n\n<a id=\"variant-3\"></a>\n## Variant 3 — manual detection, with safeguards\n\nThis is useful if you create Buffer instances in only a few places (e.g. one), or you have your own\nwrapper around them.\n\n### Buffer(0)\n\nThis special case for creating empty buffers can be safely replaced with `Buffer.concat([])`, which\nreturns the same result all the way down to Node.js 0.8.x.\n\n### Buffer(notNumber)\n\nBefore:\n\n```js\nvar buf = new Buffer(notNumber, encoding);\n```\n\nAfter:\n\n```js\nvar buf;\nif (Buffer.from && Buffer.from !== Uint8Array.from) {\n  buf = Buffer.from(notNumber, encoding);\n} else {\n  if (typeof notNumber === 'number')\n    throw new Error('The \"size\" argument must be of type number.');\n  buf = new Buffer(notNumber, encoding);\n}\n```\n\n`encoding` is optional.\n\nNote that the `typeof notNumber` before `new Buffer` is required (for cases when `notNumber` argument is not\nhard-coded) and _is not caused by the deprecation of Buffer constructor_ — it's exactly _why_ the\nBuffer constructor is deprecated. Ecosystem packages lacking this type-check caused numereous\nsecurity issues — situations when unsanitized user input could end up in the `Buffer(arg)` create\nproblems ranging from DoS to leaking sensitive information to the attacker from the process memory.\n\nWhen `notNumber` argument is hardcoded (e.g. literal `\"abc\"` or `[0,1,2]`), the `typeof` check can\nbe omitted.\n\nAlso note that using TypeScript does not fix this problem for you — when libs written in\n`TypeScript` are used from JS, or when user input ends up there — it behaves exactly as pure JS, as\nall type checks are translation-time only and are not present in the actual JS code which TS\ncompiles to.\n\n### Buffer(number)\n\nFor Node.js 0.10.x (and below) support:\n\n```js\nvar buf;\nif (Buffer.alloc) {\n  buf = Buffer.alloc(number);\n} else {\n  buf = new Buffer(number);\n  buf.fill(0);\n}\n```\n\nOtherwise (Node.js ≥ 0.12.x):\n\n```js\nconst buf = Buffer.alloc ? Buffer.alloc(number) : new Buffer(number).fill(0);\n```\n\n## Regarding Buffer.allocUnsafe\n\nBe extra cautious when using `Buffer.allocUnsafe`:\n * Don't use it if you don't have a good reason to\n   * e.g. you probably won't ever see a performance difference for small buffers, in fact, those\n     might be even faster with `Buffer.alloc()`,\n   * if your code is not in the hot code path — you also probably won't notice a difference,\n   * keep in mind that zero-filling minimizes the potential risks.\n * If you use it, make sure that you never return the buffer in a partially-filled state,\n   * if you are writing to it sequentially — always truncate it to the actuall written length\n\nErrors in handling buffers allocated with `Buffer.allocUnsafe` could result in various issues,\nranged from undefined behaviour of your code to sensitive data (user input, passwords, certs)\nleaking to the remote attacker.\n\n_Note that the same applies to `new Buffer` usage without zero-filling, depending on the Node.js\nversion (and lacking type checks also adds DoS to the list of potential problems)._\n\n<a id=\"faq\"></a>\n## FAQ\n\n<a id=\"design-flaws\"></a>\n### What is wrong with the `Buffer` constructor?\n\nThe `Buffer` constructor could be used to create a buffer in many different ways:\n\n- `new Buffer(42)` creates a `Buffer` of 42 bytes. Before Node.js 8, this buffer contained\n  *arbitrary memory* for performance reasons, which could include anything ranging from\n  program source code to passwords and encryption keys.\n- `new Buffer('abc')` creates a `Buffer` that contains the UTF-8-encoded version of\n  the string `'abc'`. A second argument could specify another encoding: For example,\n  `new Buffer(string, 'base64')` could be used to convert a Base64 string into the original\n  sequence of bytes that it represents.\n- There are several other combinations of arguments.\n\nThis meant that, in code like `var buffer = new Buffer(foo);`, *it is not possible to tell\nwhat exactly the contents of the generated buffer are* without knowing the type of `foo`.\n\nSometimes, the value of `foo` comes from an external source. For example, this function\ncould be exposed as a service on a web server, converting a UTF-8 string into its Base64 form:\n\n```\nfunction stringToBase64(req, res) {\n  // The request body should have the format of `{ string: 'foobar' }`\n  const rawBytes = new Buffer(req.body.string)\n  const encoded = rawBytes.toString('base64')\n  res.end({ encoded: encoded })\n}\n```\n\nNote that this code does *not* validate the type of `req.body.string`:\n\n- `req.body.string` is expected to be a string. If this is the case, all goes well.\n- `req.body.string` is controlled by the client that sends the request.\n- If `req.body.string` is the *number* `50`, the `rawBytes` would be 50 bytes:\n  - Before Node.js 8, the content would be uninitialized\n  - After Node.js 8, the content would be `50` bytes with the value `0`\n\nBecause of the missing type check, an attacker could intentionally send a number\nas part of the request. Using this, they can either:\n\n- Read uninitialized memory. This **will** leak passwords, encryption keys and other\n  kinds of sensitive information. (Information leak)\n- Force the program to allocate a large amount of memory. For example, when specifying\n  `500000000` as the input value, each request will allocate 500MB of memory.\n  This can be used to either exhaust the memory available of a program completely\n  and make it crash, or slow it down significantly. (Denial of Service)\n\nBoth of these scenarios are considered serious security issues in a real-world\nweb server context.\n\nwhen using `Buffer.from(req.body.string)` instead, passing a number will always\nthrow an exception instead, giving a controlled behaviour that can always be\nhandled by the program.\n\n<a id=\"ecosystem-usage\"></a>\n### The `Buffer()` constructor has been deprecated for a while. Is this really an issue?\n\nSurveys of code in the `npm` ecosystem have shown that the `Buffer()` constructor is still\nwidely used. This includes new code, and overall usage of such code has actually been\n*increasing*.\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\safer-buffer\\Porting-Buffer.md",
    "RelativePath": "tools\\backend\\node_modules\\safer-buffer\\Porting-Buffer.md"
  },
  {
    "Content": "# safer-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![javascript style guide][standard-image]][standard-url] [![Security Responsible Disclosure][secuirty-image]][secuirty-url]\n\n[travis-image]: https://travis-ci.org/ChALkeR/safer-buffer.svg?branch=master\n[travis-url]: https://travis-ci.org/ChALkeR/safer-buffer\n[npm-image]: https://img.shields.io/npm/v/safer-buffer.svg\n[npm-url]: https://npmjs.org/package/safer-buffer\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n[secuirty-image]: https://img.shields.io/badge/Security-Responsible%20Disclosure-green.svg\n[secuirty-url]: https://github.com/nodejs/security-wg/blob/master/processes/responsible_disclosure_template.md\n\nModern Buffer API polyfill without footguns, working on Node.js from 0.8 to current.\n\n## How to use?\n\nFirst, port all `Buffer()` and `new Buffer()` calls to `Buffer.alloc()` and `Buffer.from()` API.\n\nThen, to achieve compatibility with outdated Node.js versions (`<4.5.0` and 5.x `<5.9.0`), use\n`const Buffer = require('safer-buffer').Buffer` in all files where you make calls to the new\nBuffer API. _Use `var` instead of `const` if you need that for your Node.js version range support._\n\nAlso, see the\n[porting Buffer](https://github.com/ChALkeR/safer-buffer/blob/master/Porting-Buffer.md) guide.\n\n## Do I need it?\n\nHopefully, not — dropping support for outdated Node.js versions should be fine nowdays, and that\nis the recommended path forward. You _do_ need to port to the `Buffer.alloc()` and `Buffer.from()`\nthough.\n\nSee the [porting guide](https://github.com/ChALkeR/safer-buffer/blob/master/Porting-Buffer.md)\nfor a better description.\n\n## Why not [safe-buffer](https://npmjs.com/safe-buffer)?\n\n_In short: while `safe-buffer` serves as a polyfill for the new API, it allows old API usage and\nitself contains footguns._\n\n`safe-buffer` could be used safely to get the new API while still keeping support for older\nNode.js versions (like this module), but while analyzing ecosystem usage of the old Buffer API\nI found out that `safe-buffer` is itself causing problems in some cases.\n\nFor example, consider the following snippet:\n\n```console\n$ cat example.unsafe.js\nconsole.log(Buffer(20))\n$ ./node-v6.13.0-linux-x64/bin/node example.unsafe.js\n<Buffer 0a 00 00 00 00 00 00 00 28 13 de 02 00 00 00 00 05 00 00 00>\n$ standard example.unsafe.js\nstandard: Use JavaScript Standard Style (https://standardjs.com)\n  /home/chalker/repo/safer-buffer/example.unsafe.js:2:13: 'Buffer()' was deprecated since v6. Use 'Buffer.alloc()' or 'Buffer.from()' (use 'https://www.npmjs.com/package/safe-buffer' for '<4.5.0') instead.\n```\n\nThis is allocates and writes to console an uninitialized chunk of memory.\n[standard](https://www.npmjs.com/package/standard) linter (among others) catch that and warn people\nto avoid using unsafe API.\n\nLet's now throw in `safe-buffer`!\n\n```console\n$ cat example.safe-buffer.js\nconst Buffer = require('safe-buffer').Buffer\nconsole.log(Buffer(20))\n$ standard example.safe-buffer.js\n$ ./node-v6.13.0-linux-x64/bin/node example.safe-buffer.js\n<Buffer 08 00 00 00 00 00 00 00 28 58 01 82 fe 7f 00 00 00 00 00 00>\n```\n\nSee the problem? Adding in `safe-buffer` _magically removes the lint warning_, but the behavior\nremains identiсal to what we had before, and when launched on Node.js 6.x LTS — this dumps out\nchunks of uninitialized memory.\n_And this code will still emit runtime warnings on Node.js 10.x and above._\n\nThat was done by design. I first considered changing `safe-buffer`, prohibiting old API usage or\nemitting warnings on it, but that significantly diverges from `safe-buffer` design. After some\ndiscussion, it was decided to move my approach into a separate package, and _this is that separate\npackage_.\n\nThis footgun is not imaginary — I observed top-downloaded packages doing that kind of thing,\n«fixing» the lint warning by blindly including `safe-buffer` without any actual changes.\n\nAlso in some cases, even if the API _was_ migrated to use of safe Buffer API — a random pull request\ncan bring unsafe Buffer API usage back to the codebase by adding new calls — and that could go\nunnoticed even if you have a linter prohibiting that (becase of the reason stated above), and even\npass CI. _I also observed that being done in popular packages._\n\nSome examples:\n * [webdriverio](https://github.com/webdriverio/webdriverio/commit/05cbd3167c12e4930f09ef7cf93b127ba4effae4#diff-124380949022817b90b622871837d56cR31)\n   (a module with 548 759 downloads/month),\n * [websocket-stream](https://github.com/maxogden/websocket-stream/commit/c9312bd24d08271687d76da0fe3c83493871cf61)\n   (218 288 d/m, fix in [maxogden/websocket-stream#142](https://github.com/maxogden/websocket-stream/pull/142)),\n * [node-serialport](https://github.com/node-serialport/node-serialport/commit/e8d9d2b16c664224920ce1c895199b1ce2def48c)\n   (113 138 d/m, fix in [node-serialport/node-serialport#1510](https://github.com/node-serialport/node-serialport/pull/1510)),\n * [karma](https://github.com/karma-runner/karma/commit/3d94b8cf18c695104ca195334dc75ff054c74eec)\n   (3 973 193 d/m, fix in [karma-runner/karma#2947](https://github.com/karma-runner/karma/pull/2947)),\n * [spdy-transport](https://github.com/spdy-http2/spdy-transport/commit/5375ac33f4a62a4f65bcfc2827447d42a5dbe8b1)\n   (5 970 727 d/m, fix in [spdy-http2/spdy-transport#53](https://github.com/spdy-http2/spdy-transport/pull/53)).\n * And there are a lot more over the ecosystem.\n\nI filed a PR at\n[mysticatea/eslint-plugin-node#110](https://github.com/mysticatea/eslint-plugin-node/pull/110) to\npartially fix that (for cases when that lint rule is used), but it is a semver-major change for\nlinter rules and presets, so it would take significant time for that to reach actual setups.\n_It also hasn't been released yet (2018-03-20)._\n\nAlso, `safer-buffer` discourages the usage of `.allocUnsafe()`, which is often done by a mistake.\nIt still supports it with an explicit concern barier, by placing it under\n`require('safer-buffer/dangereous')`.\n\n## But isn't throwing bad?\n\nNot really. It's an error that could be noticed and fixed early, instead of causing havoc later like\nunguarded `new Buffer()` calls that end up receiving user input can do.\n\nThis package affects only the files where `var Buffer = require('safer-buffer').Buffer` was done, so\nit is really simple to keep track of things and make sure that you don't mix old API usage with that.\nAlso, CI should hint anything that you might have missed.\n\nNew commits, if tested, won't land new usage of unsafe Buffer API this way.\n_Node.js 10.x also deals with that by printing a runtime depecation warning._\n\n### Would it affect third-party modules?\n\nNo, unless you explicitly do an awful thing like monkey-patching or overriding the built-in `Buffer`.\nDon't do that.\n\n### But I don't want throwing…\n\nThat is also fine!\n\nAlso, it could be better in some cases when you don't comprehensive enough test coverage.\n\nIn that case — just don't override `Buffer` and use\n`var SaferBuffer = require('safer-buffer').Buffer` instead.\n\nThat way, everything using `Buffer` natively would still work, but there would be two drawbacks:\n\n* `Buffer.from`/`Buffer.alloc` won't be polyfilled — use `SaferBuffer.from` and\n  `SaferBuffer.alloc` instead.\n* You are still open to accidentally using the insecure deprecated API — use a linter to catch that.\n\nNote that using a linter to catch accidential `Buffer` constructor usage in this case is strongly\nrecommended. `Buffer` is not overriden in this usecase, so linters won't get confused.\n\n## «Without footguns»?\n\nWell, it is still possible to do _some_ things with `Buffer` API, e.g. accessing `.buffer` property\non older versions and duping things from there. You shouldn't do that in your code, probabably.\n\nThe intention is to remove the most significant footguns that affect lots of packages in the\necosystem, and to do it in the proper way.\n\nAlso, this package doesn't protect against security issues affecting some Node.js versions, so for\nusage in your own production code, it is still recommended to update to a Node.js version\n[supported by upstream](https://github.com/nodejs/release#release-schedule).\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\safer-buffer\\Readme.md",
    "RelativePath": "tools\\backend\\node_modules\\safer-buffer\\Readme.md"
  },
  {
    "Content": "/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\safer-buffer\\safer.js",
    "RelativePath": "tools\\backend\\node_modules\\safer-buffer\\safer.js"
  },
  {
    "Content": "/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar test = require('tape')\n\nvar buffer = require('buffer')\n\nvar index = require('./')\nvar safer = require('./safer')\nvar dangerous = require('./dangerous')\n\n/* Inheritance tests */\n\ntest('Default is Safer', function (t) {\n  t.equal(index, safer)\n  t.notEqual(safer, dangerous)\n  t.notEqual(index, dangerous)\n  t.end()\n})\n\ntest('Is not a function', function (t) {\n  [index, safer, dangerous].forEach(function (impl) {\n    t.equal(typeof impl, 'object')\n    t.equal(typeof impl.Buffer, 'object')\n  });\n  [buffer].forEach(function (impl) {\n    t.equal(typeof impl, 'object')\n    t.equal(typeof impl.Buffer, 'function')\n  })\n  t.end()\n})\n\ntest('Constructor throws', function (t) {\n  [index, safer, dangerous].forEach(function (impl) {\n    t.throws(function () { impl.Buffer() })\n    t.throws(function () { impl.Buffer(0) })\n    t.throws(function () { impl.Buffer('a') })\n    t.throws(function () { impl.Buffer('a', 'utf-8') })\n    t.throws(function () { return new impl.Buffer() })\n    t.throws(function () { return new impl.Buffer(0) })\n    t.throws(function () { return new impl.Buffer('a') })\n    t.throws(function () { return new impl.Buffer('a', 'utf-8') })\n  })\n  t.end()\n})\n\ntest('Safe methods exist', function (t) {\n  [index, safer, dangerous].forEach(function (impl) {\n    t.equal(typeof impl.Buffer.alloc, 'function', 'alloc')\n    t.equal(typeof impl.Buffer.from, 'function', 'from')\n  })\n  t.end()\n})\n\ntest('Unsafe methods exist only in Dangerous', function (t) {\n  [index, safer].forEach(function (impl) {\n    t.equal(typeof impl.Buffer.allocUnsafe, 'undefined')\n    t.equal(typeof impl.Buffer.allocUnsafeSlow, 'undefined')\n  });\n  [dangerous].forEach(function (impl) {\n    t.equal(typeof impl.Buffer.allocUnsafe, 'function')\n    t.equal(typeof impl.Buffer.allocUnsafeSlow, 'function')\n  })\n  t.end()\n})\n\ntest('Generic methods/properties are defined and equal', function (t) {\n  ['poolSize', 'isBuffer', 'concat', 'byteLength'].forEach(function (method) {\n    [index, safer, dangerous].forEach(function (impl) {\n      t.equal(impl.Buffer[method], buffer.Buffer[method], method)\n      t.notEqual(typeof impl.Buffer[method], 'undefined', method)\n    })\n  })\n  t.end()\n})\n\ntest('Built-in buffer static methods/properties are inherited', function (t) {\n  Object.keys(buffer).forEach(function (method) {\n    if (method === 'SlowBuffer' || method === 'Buffer') return;\n    [index, safer, dangerous].forEach(function (impl) {\n      t.equal(impl[method], buffer[method], method)\n      t.notEqual(typeof impl[method], 'undefined', method)\n    })\n  })\n  t.end()\n})\n\ntest('Built-in Buffer static methods/properties are inherited', function (t) {\n  Object.keys(buffer.Buffer).forEach(function (method) {\n    if (method === 'allocUnsafe' || method === 'allocUnsafeSlow') return;\n    [index, safer, dangerous].forEach(function (impl) {\n      t.equal(impl.Buffer[method], buffer.Buffer[method], method)\n      t.notEqual(typeof impl.Buffer[method], 'undefined', method)\n    })\n  })\n  t.end()\n})\n\ntest('.prototype property of Buffer is inherited', function (t) {\n  [index, safer, dangerous].forEach(function (impl) {\n    t.equal(impl.Buffer.prototype, buffer.Buffer.prototype, 'prototype')\n    t.notEqual(typeof impl.Buffer.prototype, 'undefined', 'prototype')\n  })\n  t.end()\n})\n\ntest('All Safer methods are present in Dangerous', function (t) {\n  Object.keys(safer).forEach(function (method) {\n    if (method === 'Buffer') return;\n    [index, safer, dangerous].forEach(function (impl) {\n      t.equal(impl[method], safer[method], method)\n      if (method !== 'kStringMaxLength') {\n        t.notEqual(typeof impl[method], 'undefined', method)\n      }\n    })\n  })\n  Object.keys(safer.Buffer).forEach(function (method) {\n    [index, safer, dangerous].forEach(function (impl) {\n      t.equal(impl.Buffer[method], safer.Buffer[method], method)\n      t.notEqual(typeof impl.Buffer[method], 'undefined', method)\n    })\n  })\n  t.end()\n})\n\ntest('Safe methods from Dangerous methods are present in Safer', function (t) {\n  Object.keys(dangerous).forEach(function (method) {\n    if (method === 'Buffer') return;\n    [index, safer, dangerous].forEach(function (impl) {\n      t.equal(impl[method], dangerous[method], method)\n      if (method !== 'kStringMaxLength') {\n        t.notEqual(typeof impl[method], 'undefined', method)\n      }\n    })\n  })\n  Object.keys(dangerous.Buffer).forEach(function (method) {\n    if (method === 'allocUnsafe' || method === 'allocUnsafeSlow') return;\n    [index, safer, dangerous].forEach(function (impl) {\n      t.equal(impl.Buffer[method], dangerous.Buffer[method], method)\n      t.notEqual(typeof impl.Buffer[method], 'undefined', method)\n    })\n  })\n  t.end()\n})\n\n/* Behaviour tests */\n\ntest('Methods return Buffers', function (t) {\n  [index, safer, dangerous].forEach(function (impl) {\n    t.ok(buffer.Buffer.isBuffer(impl.Buffer.alloc(0)))\n    t.ok(buffer.Buffer.isBuffer(impl.Buffer.alloc(0, 10)))\n    t.ok(buffer.Buffer.isBuffer(impl.Buffer.alloc(0, 'a')))\n    t.ok(buffer.Buffer.isBuffer(impl.Buffer.alloc(10)))\n    t.ok(buffer.Buffer.isBuffer(impl.Buffer.alloc(10, 'x')))\n    t.ok(buffer.Buffer.isBuffer(impl.Buffer.alloc(9, 'ab')))\n    t.ok(buffer.Buffer.isBuffer(impl.Buffer.from('')))\n    t.ok(buffer.Buffer.isBuffer(impl.Buffer.from('string')))\n    t.ok(buffer.Buffer.isBuffer(impl.Buffer.from('string', 'utf-8')))\n    t.ok(buffer.Buffer.isBuffer(impl.Buffer.from('b25ldHdvdGhyZWU=', 'base64')))\n    t.ok(buffer.Buffer.isBuffer(impl.Buffer.from([0, 42, 3])))\n    t.ok(buffer.Buffer.isBuffer(impl.Buffer.from(new Uint8Array([0, 42, 3]))))\n    t.ok(buffer.Buffer.isBuffer(impl.Buffer.from([])))\n  });\n  ['allocUnsafe', 'allocUnsafeSlow'].forEach(function (method) {\n    t.ok(buffer.Buffer.isBuffer(dangerous.Buffer[method](0)))\n    t.ok(buffer.Buffer.isBuffer(dangerous.Buffer[method](10)))\n  })\n  t.end()\n})\n\ntest('Constructor is buffer.Buffer', function (t) {\n  [index, safer, dangerous].forEach(function (impl) {\n    t.equal(impl.Buffer.alloc(0).constructor, buffer.Buffer)\n    t.equal(impl.Buffer.alloc(0, 10).constructor, buffer.Buffer)\n    t.equal(impl.Buffer.alloc(0, 'a').constructor, buffer.Buffer)\n    t.equal(impl.Buffer.alloc(10).constructor, buffer.Buffer)\n    t.equal(impl.Buffer.alloc(10, 'x').constructor, buffer.Buffer)\n    t.equal(impl.Buffer.alloc(9, 'ab').constructor, buffer.Buffer)\n    t.equal(impl.Buffer.from('').constructor, buffer.Buffer)\n    t.equal(impl.Buffer.from('string').constructor, buffer.Buffer)\n    t.equal(impl.Buffer.from('string', 'utf-8').constructor, buffer.Buffer)\n    t.equal(impl.Buffer.from('b25ldHdvdGhyZWU=', 'base64').constructor, buffer.Buffer)\n    t.equal(impl.Buffer.from([0, 42, 3]).constructor, buffer.Buffer)\n    t.equal(impl.Buffer.from(new Uint8Array([0, 42, 3])).constructor, buffer.Buffer)\n    t.equal(impl.Buffer.from([]).constructor, buffer.Buffer)\n  });\n  [0, 10, 100].forEach(function (arg) {\n    t.equal(dangerous.Buffer.allocUnsafe(arg).constructor, buffer.Buffer)\n    t.equal(dangerous.Buffer.allocUnsafeSlow(arg).constructor, buffer.SlowBuffer(0).constructor)\n  })\n  t.end()\n})\n\ntest('Invalid calls throw', function (t) {\n  [index, safer, dangerous].forEach(function (impl) {\n    t.throws(function () { impl.Buffer.from(0) })\n    t.throws(function () { impl.Buffer.from(10) })\n    t.throws(function () { impl.Buffer.from(10, 'utf-8') })\n    t.throws(function () { impl.Buffer.from('string', 'invalid encoding') })\n    t.throws(function () { impl.Buffer.from(-10) })\n    t.throws(function () { impl.Buffer.from(1e90) })\n    t.throws(function () { impl.Buffer.from(Infinity) })\n    t.throws(function () { impl.Buffer.from(-Infinity) })\n    t.throws(function () { impl.Buffer.from(NaN) })\n    t.throws(function () { impl.Buffer.from(null) })\n    t.throws(function () { impl.Buffer.from(undefined) })\n    t.throws(function () { impl.Buffer.from() })\n    t.throws(function () { impl.Buffer.from({}) })\n    t.throws(function () { impl.Buffer.alloc('') })\n    t.throws(function () { impl.Buffer.alloc('string') })\n    t.throws(function () { impl.Buffer.alloc('string', 'utf-8') })\n    t.throws(function () { impl.Buffer.alloc('b25ldHdvdGhyZWU=', 'base64') })\n    t.throws(function () { impl.Buffer.alloc(-10) })\n    t.throws(function () { impl.Buffer.alloc(1e90) })\n    t.throws(function () { impl.Buffer.alloc(2 * (1 << 30)) })\n    t.throws(function () { impl.Buffer.alloc(Infinity) })\n    t.throws(function () { impl.Buffer.alloc(-Infinity) })\n    t.throws(function () { impl.Buffer.alloc(null) })\n    t.throws(function () { impl.Buffer.alloc(undefined) })\n    t.throws(function () { impl.Buffer.alloc() })\n    t.throws(function () { impl.Buffer.alloc([]) })\n    t.throws(function () { impl.Buffer.alloc([0, 42, 3]) })\n    t.throws(function () { impl.Buffer.alloc({}) })\n  });\n  ['allocUnsafe', 'allocUnsafeSlow'].forEach(function (method) {\n    t.throws(function () { dangerous.Buffer[method]('') })\n    t.throws(function () { dangerous.Buffer[method]('string') })\n    t.throws(function () { dangerous.Buffer[method]('string', 'utf-8') })\n    t.throws(function () { dangerous.Buffer[method](2 * (1 << 30)) })\n    t.throws(function () { dangerous.Buffer[method](Infinity) })\n    if (dangerous.Buffer[method] === buffer.Buffer.allocUnsafe) {\n      t.skip('Skipping, older impl of allocUnsafe coerced negative sizes to 0')\n    } else {\n      t.throws(function () { dangerous.Buffer[method](-10) })\n      t.throws(function () { dangerous.Buffer[method](-1e90) })\n      t.throws(function () { dangerous.Buffer[method](-Infinity) })\n    }\n    t.throws(function () { dangerous.Buffer[method](null) })\n    t.throws(function () { dangerous.Buffer[method](undefined) })\n    t.throws(function () { dangerous.Buffer[method]() })\n    t.throws(function () { dangerous.Buffer[method]([]) })\n    t.throws(function () { dangerous.Buffer[method]([0, 42, 3]) })\n    t.throws(function () { dangerous.Buffer[method]({}) })\n  })\n  t.end()\n})\n\ntest('Buffers have appropriate lengths', function (t) {\n  [index, safer, dangerous].forEach(function (impl) {\n    t.equal(impl.Buffer.alloc(0).length, 0)\n    t.equal(impl.Buffer.alloc(10).length, 10)\n    t.equal(impl.Buffer.from('').length, 0)\n    t.equal(impl.Buffer.from('string').length, 6)\n    t.equal(impl.Buffer.from('string', 'utf-8').length, 6)\n    t.equal(impl.Buffer.from('b25ldHdvdGhyZWU=', 'base64').length, 11)\n    t.equal(impl.Buffer.from([0, 42, 3]).length, 3)\n    t.equal(impl.Buffer.from(new Uint8Array([0, 42, 3])).length, 3)\n    t.equal(impl.Buffer.from([]).length, 0)\n  });\n  ['allocUnsafe', 'allocUnsafeSlow'].forEach(function (method) {\n    t.equal(dangerous.Buffer[method](0).length, 0)\n    t.equal(dangerous.Buffer[method](10).length, 10)\n  })\n  t.end()\n})\n\ntest('Buffers have appropriate lengths (2)', function (t) {\n  t.equal(index.Buffer.alloc, safer.Buffer.alloc)\n  t.equal(index.Buffer.alloc, dangerous.Buffer.alloc)\n  var ok = true;\n  [ safer.Buffer.alloc,\n    dangerous.Buffer.allocUnsafe,\n    dangerous.Buffer.allocUnsafeSlow\n  ].forEach(function (method) {\n    for (var i = 0; i < 1e2; i++) {\n      var length = Math.round(Math.random() * 1e5)\n      var buf = method(length)\n      if (!buffer.Buffer.isBuffer(buf)) ok = false\n      if (buf.length !== length) ok = false\n    }\n  })\n  t.ok(ok)\n  t.end()\n})\n\ntest('.alloc(size) is zero-filled and has correct length', function (t) {\n  t.equal(index.Buffer.alloc, safer.Buffer.alloc)\n  t.equal(index.Buffer.alloc, dangerous.Buffer.alloc)\n  var ok = true\n  for (var i = 0; i < 1e2; i++) {\n    var length = Math.round(Math.random() * 2e6)\n    var buf = index.Buffer.alloc(length)\n    if (!buffer.Buffer.isBuffer(buf)) ok = false\n    if (buf.length !== length) ok = false\n    var j\n    for (j = 0; j < length; j++) {\n      if (buf[j] !== 0) ok = false\n    }\n    buf.fill(1)\n    for (j = 0; j < length; j++) {\n      if (buf[j] !== 1) ok = false\n    }\n  }\n  t.ok(ok)\n  t.end()\n})\n\ntest('.allocUnsafe / .allocUnsafeSlow are fillable and have correct lengths', function (t) {\n  ['allocUnsafe', 'allocUnsafeSlow'].forEach(function (method) {\n    var ok = true\n    for (var i = 0; i < 1e2; i++) {\n      var length = Math.round(Math.random() * 2e6)\n      var buf = dangerous.Buffer[method](length)\n      if (!buffer.Buffer.isBuffer(buf)) ok = false\n      if (buf.length !== length) ok = false\n      buf.fill(0, 0, length)\n      var j\n      for (j = 0; j < length; j++) {\n        if (buf[j] !== 0) ok = false\n      }\n      buf.fill(1, 0, length)\n      for (j = 0; j < length; j++) {\n        if (buf[j] !== 1) ok = false\n      }\n    }\n    t.ok(ok, method)\n  })\n  t.end()\n})\n\ntest('.alloc(size, fill) is `fill`-filled', function (t) {\n  t.equal(index.Buffer.alloc, safer.Buffer.alloc)\n  t.equal(index.Buffer.alloc, dangerous.Buffer.alloc)\n  var ok = true\n  for (var i = 0; i < 1e2; i++) {\n    var length = Math.round(Math.random() * 2e6)\n    var fill = Math.round(Math.random() * 255)\n    var buf = index.Buffer.alloc(length, fill)\n    if (!buffer.Buffer.isBuffer(buf)) ok = false\n    if (buf.length !== length) ok = false\n    for (var j = 0; j < length; j++) {\n      if (buf[j] !== fill) ok = false\n    }\n  }\n  t.ok(ok)\n  t.end()\n})\n\ntest('.alloc(size, fill) is `fill`-filled', function (t) {\n  t.equal(index.Buffer.alloc, safer.Buffer.alloc)\n  t.equal(index.Buffer.alloc, dangerous.Buffer.alloc)\n  var ok = true\n  for (var i = 0; i < 1e2; i++) {\n    var length = Math.round(Math.random() * 2e6)\n    var fill = Math.round(Math.random() * 255)\n    var buf = index.Buffer.alloc(length, fill)\n    if (!buffer.Buffer.isBuffer(buf)) ok = false\n    if (buf.length !== length) ok = false\n    for (var j = 0; j < length; j++) {\n      if (buf[j] !== fill) ok = false\n    }\n  }\n  t.ok(ok)\n  t.deepEqual(index.Buffer.alloc(9, 'a'), index.Buffer.alloc(9, 97))\n  t.notDeepEqual(index.Buffer.alloc(9, 'a'), index.Buffer.alloc(9, 98))\n\n  var tmp = new buffer.Buffer(2)\n  tmp.fill('ok')\n  if (tmp[1] === tmp[0]) {\n    // Outdated Node.js\n    t.deepEqual(index.Buffer.alloc(5, 'ok'), index.Buffer.from('ooooo'))\n  } else {\n    t.deepEqual(index.Buffer.alloc(5, 'ok'), index.Buffer.from('okoko'))\n  }\n  t.notDeepEqual(index.Buffer.alloc(5, 'ok'), index.Buffer.from('kokok'))\n\n  t.end()\n})\n\ntest('safer.Buffer.from returns results same as Buffer constructor', function (t) {\n  [index, safer, dangerous].forEach(function (impl) {\n    t.deepEqual(impl.Buffer.from(''), new buffer.Buffer(''))\n    t.deepEqual(impl.Buffer.from('string'), new buffer.Buffer('string'))\n    t.deepEqual(impl.Buffer.from('string', 'utf-8'), new buffer.Buffer('string', 'utf-8'))\n    t.deepEqual(impl.Buffer.from('b25ldHdvdGhyZWU=', 'base64'), new buffer.Buffer('b25ldHdvdGhyZWU=', 'base64'))\n    t.deepEqual(impl.Buffer.from([0, 42, 3]), new buffer.Buffer([0, 42, 3]))\n    t.deepEqual(impl.Buffer.from(new Uint8Array([0, 42, 3])), new buffer.Buffer(new Uint8Array([0, 42, 3])))\n    t.deepEqual(impl.Buffer.from([]), new buffer.Buffer([]))\n  })\n  t.end()\n})\n\ntest('safer.Buffer.from returns consistent results', function (t) {\n  [index, safer, dangerous].forEach(function (impl) {\n    t.deepEqual(impl.Buffer.from(''), impl.Buffer.alloc(0))\n    t.deepEqual(impl.Buffer.from([]), impl.Buffer.alloc(0))\n    t.deepEqual(impl.Buffer.from(new Uint8Array([])), impl.Buffer.alloc(0))\n    t.deepEqual(impl.Buffer.from('string', 'utf-8'), impl.Buffer.from('string'))\n    t.deepEqual(impl.Buffer.from('string'), impl.Buffer.from([115, 116, 114, 105, 110, 103]))\n    t.deepEqual(impl.Buffer.from('string'), impl.Buffer.from(impl.Buffer.from('string')))\n    t.deepEqual(impl.Buffer.from('b25ldHdvdGhyZWU=', 'base64'), impl.Buffer.from('onetwothree'))\n    t.notDeepEqual(impl.Buffer.from('b25ldHdvdGhyZWU='), impl.Buffer.from('onetwothree'))\n  })\n  t.end()\n})\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\safer-buffer\\tests.js",
    "RelativePath": "tools\\backend\\node_modules\\safer-buffer\\tests.js"
  },
  {
    "Content": "0.19.0 / 2024-09-10\n===================\n\n* Remove link renderization in html while redirecting\n\n0.18.0 / 2022-03-23\n===================\n\n  * Fix emitted 416 error missing headers property\n  * Limit the headers removed for 304 response\n  * deps: depd@2.0.0\n    - Replace internal `eval` usage with `Function` constructor\n    - Use instance methods on `process` to check for listeners\n  * deps: destroy@1.2.0\n  * deps: http-errors@2.0.0\n    - deps: depd@2.0.0\n    - deps: statuses@2.0.1\n  * deps: on-finished@2.4.1\n  * deps: statuses@2.0.1\n\n0.17.2 / 2021-12-11\n===================\n\n  * pref: ignore empty http tokens\n  * deps: http-errors@1.8.1\n    - deps: inherits@2.0.4\n    - deps: toidentifier@1.0.1\n    - deps: setprototypeof@1.2.0\n  * deps: ms@2.1.3\n\n0.17.1 / 2019-05-10\n===================\n\n  * Set stricter CSP header in redirect & error responses\n  * deps: range-parser@~1.2.1\n\n0.17.0 / 2019-05-03\n===================\n\n  * deps: http-errors@~1.7.2\n    - Set constructor name when possible\n    - Use `toidentifier` module to make class names\n    - deps: depd@~1.1.2\n    - deps: setprototypeof@1.1.1\n    - deps: statuses@'>= 1.5.0 < 2'\n  * deps: mime@1.6.0\n    - Add extensions for JPEG-2000 images\n    - Add new `font/*` types from IANA\n    - Add WASM mapping\n    - Update `.bdoc` to `application/bdoc`\n    - Update `.bmp` to `image/bmp`\n    - Update `.m4a` to `audio/mp4`\n    - Update `.rtf` to `application/rtf`\n    - Update `.wav` to `audio/wav`\n    - Update `.xml` to `application/xml`\n    - Update generic extensions to `application/octet-stream`:\n      `.deb`, `.dll`, `.dmg`, `.exe`, `.iso`, `.msi`\n    - Use mime-score module to resolve extension conflicts\n  * deps: ms@2.1.1\n    - Add `week`/`w` support\n    - Fix negative number handling\n  * deps: statuses@~1.5.0\n  * perf: remove redundant `path.normalize` call\n\n0.16.2 / 2018-02-07\n===================\n\n  * Fix incorrect end tag in default error & redirects\n  * deps: depd@~1.1.2\n    - perf: remove argument reassignment\n  * deps: encodeurl@~1.0.2\n    - Fix encoding `%` as last character\n  * deps: statuses@~1.4.0\n\n0.16.1 / 2017-09-29\n===================\n\n  * Fix regression in edge-case behavior for empty `path`\n\n0.16.0 / 2017-09-27\n===================\n\n  * Add `immutable` option\n  * Fix missing `</html>` in default error & redirects\n  * Use instance methods on steam to check for listeners\n  * deps: mime@1.4.1\n    - Add 70 new types for file extensions\n    - Set charset as \"UTF-8\" for .js and .json\n  * perf: improve path validation speed\n\n0.15.6 / 2017-09-22\n===================\n\n  * deps: debug@2.6.9\n  * perf: improve `If-Match` token parsing\n\n0.15.5 / 2017-09-20\n===================\n\n  * deps: etag@~1.8.1\n    - perf: replace regular expression with substring\n  * deps: fresh@0.5.2\n    - Fix handling of modified headers with invalid dates\n    - perf: improve ETag match loop\n    - perf: improve `If-None-Match` token parsing\n\n0.15.4 / 2017-08-05\n===================\n\n  * deps: debug@2.6.8\n  * deps: depd@~1.1.1\n    - Remove unnecessary `Buffer` loading\n  * deps: http-errors@~1.6.2\n    - deps: depd@1.1.1\n\n0.15.3 / 2017-05-16\n===================\n\n  * deps: debug@2.6.7\n    - deps: ms@2.0.0\n  * deps: ms@2.0.0\n\n0.15.2 / 2017-04-26\n===================\n\n  * deps: debug@2.6.4\n    - Fix `DEBUG_MAX_ARRAY_LENGTH`\n    - deps: ms@0.7.3\n  * deps: ms@1.0.0\n\n0.15.1 / 2017-03-04\n===================\n\n  * Fix issue when `Date.parse` does not return `NaN` on invalid date\n  * Fix strict violation in broken environments\n\n0.15.0 / 2017-02-25\n===================\n\n  * Support `If-Match` and `If-Unmodified-Since` headers\n  * Add `res` and `path` arguments to `directory` event\n  * Remove usage of `res._headers` private field\n    - Improves compatibility with Node.js 8 nightly\n  * Send complete HTML document in redirect & error responses\n  * Set default CSP header in redirect & error responses\n  * Use `res.getHeaderNames()` when available\n  * Use `res.headersSent` when available\n  * deps: debug@2.6.1\n    - Allow colors in workers\n    - Deprecated `DEBUG_FD` environment variable set to `3` or higher\n    - Fix error when running under React Native\n    - Use same color for same namespace\n    - deps: ms@0.7.2\n  * deps: etag@~1.8.0\n  * deps: fresh@0.5.0\n    - Fix false detection of `no-cache` request directive\n    - Fix incorrect result when `If-None-Match` has both `*` and ETags\n    - Fix weak `ETag` matching to match spec\n    - perf: delay reading header values until needed\n    - perf: enable strict mode\n    - perf: hoist regular expressions\n    - perf: remove duplicate conditional\n    - perf: remove unnecessary boolean coercions\n    - perf: skip checking modified time if ETag check failed\n    - perf: skip parsing `If-None-Match` when no `ETag` header\n    - perf: use `Date.parse` instead of `new Date`\n  * deps: http-errors@~1.6.1\n    - Make `message` property enumerable for `HttpError`s\n    - deps: setprototypeof@1.0.3\n\n0.14.2 / 2017-01-23\n===================\n\n  * deps: http-errors@~1.5.1\n    - deps: inherits@2.0.3\n    - deps: setprototypeof@1.0.2\n    - deps: statuses@'>= 1.3.1 < 2'\n  * deps: ms@0.7.2\n  * deps: statuses@~1.3.1\n\n0.14.1 / 2016-06-09\n===================\n\n  * Fix redirect error when `path` contains raw non-URL characters\n  * Fix redirect when `path` starts with multiple forward slashes\n\n0.14.0 / 2016-06-06\n===================\n\n  * Add `acceptRanges` option\n  * Add `cacheControl` option\n  * Attempt to combine multiple ranges into single range\n  * Correctly inherit from `Stream` class\n  * Fix `Content-Range` header in 416 responses when using `start`/`end` options\n  * Fix `Content-Range` header missing from default 416 responses\n  * Ignore non-byte `Range` headers\n  * deps: http-errors@~1.5.0\n    - Add `HttpError` export, for `err instanceof createError.HttpError`\n    - Support new code `421 Misdirected Request`\n    - Use `setprototypeof` module to replace `__proto__` setting\n    - deps: inherits@2.0.1\n    - deps: statuses@'>= 1.3.0 < 2'\n    - perf: enable strict mode\n  * deps: range-parser@~1.2.0\n    - Fix incorrectly returning -1 when there is at least one valid range\n    - perf: remove internal function\n  * deps: statuses@~1.3.0\n    - Add `421 Misdirected Request`\n    - perf: enable strict mode\n  * perf: remove argument reassignment\n\n0.13.2 / 2016-03-05\n===================\n\n  * Fix invalid `Content-Type` header when `send.mime.default_type` unset\n\n0.13.1 / 2016-01-16\n===================\n\n  * deps: depd@~1.1.0\n    - Support web browser loading\n    - perf: enable strict mode\n  * deps: destroy@~1.0.4\n    - perf: enable strict mode\n  * deps: escape-html@~1.0.3\n    - perf: enable strict mode\n    - perf: optimize string replacement\n    - perf: use faster string coercion\n  * deps: range-parser@~1.0.3\n    - perf: enable strict mode\n\n0.13.0 / 2015-06-16\n===================\n\n  * Allow Node.js HTTP server to set `Date` response header\n  * Fix incorrectly removing `Content-Location` on 304 response\n  * Improve the default redirect response headers\n  * Send appropriate headers on default error response\n  * Use `http-errors` for standard emitted errors\n  * Use `statuses` instead of `http` module for status messages\n  * deps: escape-html@1.0.2\n  * deps: etag@~1.7.0\n    - Improve stat performance by removing hashing\n  * deps: fresh@0.3.0\n    - Add weak `ETag` matching support\n  * deps: on-finished@~2.3.0\n    - Add defined behavior for HTTP `CONNECT` requests\n    - Add defined behavior for HTTP `Upgrade` requests\n    - deps: ee-first@1.1.1\n  * perf: enable strict mode\n  * perf: remove unnecessary array allocations\n\n0.12.3 / 2015-05-13\n===================\n\n  * deps: debug@~2.2.0\n    - deps: ms@0.7.1\n  * deps: depd@~1.0.1\n  * deps: etag@~1.6.0\n   - Improve support for JXcore\n   - Support \"fake\" stats objects in environments without `fs`\n  * deps: ms@0.7.1\n    - Prevent extraordinarily long inputs\n  * deps: on-finished@~2.2.1\n\n0.12.2 / 2015-03-13\n===================\n\n  * Throw errors early for invalid `extensions` or `index` options\n  * deps: debug@~2.1.3\n    - Fix high intensity foreground color for bold\n    - deps: ms@0.7.0\n\n0.12.1 / 2015-02-17\n===================\n\n  * Fix regression sending zero-length files\n\n0.12.0 / 2015-02-16\n===================\n\n  * Always read the stat size from the file\n  * Fix mutating passed-in `options`\n  * deps: mime@1.3.4\n\n0.11.1 / 2015-01-20\n===================\n\n  * Fix `root` path disclosure\n\n0.11.0 / 2015-01-05\n===================\n\n  * deps: debug@~2.1.1\n  * deps: etag@~1.5.1\n    - deps: crc@3.2.1\n  * deps: ms@0.7.0\n    - Add `milliseconds`\n    - Add `msecs`\n    - Add `secs`\n    - Add `mins`\n    - Add `hrs`\n    - Add `yrs`\n  * deps: on-finished@~2.2.0\n\n0.10.1 / 2014-10-22\n===================\n\n  * deps: on-finished@~2.1.1\n    - Fix handling of pipelined requests\n\n0.10.0 / 2014-10-15\n===================\n\n  * deps: debug@~2.1.0\n    - Implement `DEBUG_FD` env variable support\n  * deps: depd@~1.0.0\n  * deps: etag@~1.5.0\n    - Improve string performance\n    - Slightly improve speed for weak ETags over 1KB\n\n0.9.3 / 2014-09-24\n==================\n\n  * deps: etag@~1.4.0\n    - Support \"fake\" stats objects\n\n0.9.2 / 2014-09-15\n==================\n\n  * deps: depd@0.4.5\n  * deps: etag@~1.3.1\n  * deps: range-parser@~1.0.2\n\n0.9.1 / 2014-09-07\n==================\n\n  * deps: fresh@0.2.4\n\n0.9.0 / 2014-09-07\n==================\n\n  * Add `lastModified` option\n  * Use `etag` to generate `ETag` header\n  * deps: debug@~2.0.0\n\n0.8.5 / 2014-09-04\n==================\n\n  * Fix malicious path detection for empty string path\n\n0.8.4 / 2014-09-04\n==================\n\n  * Fix a path traversal issue when using `root`\n\n0.8.3 / 2014-08-16\n==================\n\n  * deps: destroy@1.0.3\n    - renamed from dethroy\n  * deps: on-finished@2.1.0\n\n0.8.2 / 2014-08-14\n==================\n\n  * Work around `fd` leak in Node.js 0.10 for `fs.ReadStream`\n  * deps: dethroy@1.0.2\n\n0.8.1 / 2014-08-05\n==================\n\n  * Fix `extensions` behavior when file already has extension\n\n0.8.0 / 2014-08-05\n==================\n\n  * Add `extensions` option\n\n0.7.4 / 2014-08-04\n==================\n\n  * Fix serving index files without root dir\n\n0.7.3 / 2014-07-29\n==================\n\n  * Fix incorrect 403 on Windows and Node.js 0.11\n\n0.7.2 / 2014-07-27\n==================\n\n  * deps: depd@0.4.4\n    - Work-around v8 generating empty stack traces\n\n0.7.1 / 2014-07-26\n==================\n\n * deps: depd@0.4.3\n   - Fix exception when global `Error.stackTraceLimit` is too low\n\n0.7.0 / 2014-07-20\n==================\n\n * Deprecate `hidden` option; use `dotfiles` option\n * Add `dotfiles` option\n * deps: debug@1.0.4\n * deps: depd@0.4.2\n   - Add `TRACE_DEPRECATION` environment variable\n   - Remove non-standard grey color from color output\n   - Support `--no-deprecation` argument\n   - Support `--trace-deprecation` argument\n\n0.6.0 / 2014-07-11\n==================\n\n * Deprecate `from` option; use `root` option\n * Deprecate `send.etag()` -- use `etag` in `options`\n * Deprecate `send.hidden()` -- use `hidden` in `options`\n * Deprecate `send.index()` -- use `index` in `options`\n * Deprecate `send.maxage()` -- use `maxAge` in `options`\n * Deprecate `send.root()` -- use `root` in `options`\n * Cap `maxAge` value to 1 year\n * deps: debug@1.0.3\n   - Add support for multiple wildcards in namespaces\n\n0.5.0 / 2014-06-28\n==================\n\n * Accept string for `maxAge` (converted by `ms`)\n * Add `headers` event\n * Include link in default redirect response\n * Use `EventEmitter.listenerCount` to count listeners\n\n0.4.3 / 2014-06-11\n==================\n\n * Do not throw un-catchable error on file open race condition\n * Use `escape-html` for HTML escaping\n * deps: debug@1.0.2\n   - fix some debugging output colors on node.js 0.8\n * deps: finished@1.2.2\n * deps: fresh@0.2.2\n\n0.4.2 / 2014-06-09\n==================\n\n * fix \"event emitter leak\" warnings\n * deps: debug@1.0.1\n * deps: finished@1.2.1\n\n0.4.1 / 2014-06-02\n==================\n\n * Send `max-age` in `Cache-Control` in correct format\n\n0.4.0 / 2014-05-27\n==================\n\n * Calculate ETag with md5 for reduced collisions\n * Fix wrong behavior when index file matches directory\n * Ignore stream errors after request ends\n   - Goodbye `EBADF, read`\n * Skip directories in index file search\n * deps: debug@0.8.1\n\n0.3.0 / 2014-04-24\n==================\n\n * Fix sending files with dots without root set\n * Coerce option types\n * Accept API options in options object\n * Set etags to \"weak\"\n * Include file path in etag\n * Make \"Can't set headers after they are sent.\" catchable\n * Send full entity-body for multi range requests\n * Default directory access to 403 when index disabled\n * Support multiple index paths\n * Support \"If-Range\" header\n * Control whether to generate etags\n * deps: mime@1.2.11\n\n0.2.0 / 2014-01-29\n==================\n\n * update range-parser and fresh\n\n0.1.4 / 2013-08-11 \n==================\n\n * update fresh\n\n0.1.3 / 2013-07-08 \n==================\n\n * Revert \"Fix fd leak\"\n\n0.1.2 / 2013-07-03 \n==================\n\n * Fix fd leak\n\n0.1.0 / 2012-08-25 \n==================\n\n  * add options parameter to send() that is passed to fs.createReadStream() [kanongil]\n\n0.0.4 / 2012-08-16 \n==================\n\n  * allow custom \"Accept-Ranges\" definition\n\n0.0.3 / 2012-07-16 \n==================\n\n  * fix normalization of the root directory. Closes #3\n\n0.0.2 / 2012-07-09 \n==================\n\n  * add passing of req explicitly for now (YUCK)\n\n0.0.1 / 2010-01-03\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\send\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\send\\HISTORY.md"
  },
  {
    "Content": "/*!\n * send\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar debug = require('debug')('send')\nvar deprecate = require('depd')('send')\nvar destroy = require('destroy')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar etag = require('etag')\nvar fresh = require('fresh')\nvar fs = require('fs')\nvar mime = require('mime')\nvar ms = require('ms')\nvar onFinished = require('on-finished')\nvar parseRange = require('range-parser')\nvar path = require('path')\nvar statuses = require('statuses')\nvar Stream = require('stream')\nvar util = require('util')\n\n/**\n * Path function references.\n * @private\n */\n\nvar extname = path.extname\nvar join = path.join\nvar normalize = path.normalize\nvar resolve = path.resolve\nvar sep = path.sep\n\n/**\n * Regular expression for identifying a bytes Range header.\n * @private\n */\n\nvar BYTES_RANGE_REGEXP = /^ *bytes=/\n\n/**\n * Maximum value allowed for the max age.\n * @private\n */\n\nvar MAX_MAXAGE = 60 * 60 * 24 * 365 * 1000 // 1 year\n\n/**\n * Regular expression to match a path with a directory up component.\n * @private\n */\n\nvar UP_PATH_REGEXP = /(?:^|[\\\\/])\\.\\.(?:[\\\\/]|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = send\nmodule.exports.mime = mime\n\n/**\n * Return a `SendStream` for `req` and `path`.\n *\n * @param {object} req\n * @param {string} path\n * @param {object} [options]\n * @return {SendStream}\n * @public\n */\n\nfunction send (req, path, options) {\n  return new SendStream(req, path, options)\n}\n\n/**\n * Initialize a `SendStream` with the given `path`.\n *\n * @param {Request} req\n * @param {String} path\n * @param {object} [options]\n * @private\n */\n\nfunction SendStream (req, path, options) {\n  Stream.call(this)\n\n  var opts = options || {}\n\n  this.options = opts\n  this.path = path\n  this.req = req\n\n  this._acceptRanges = opts.acceptRanges !== undefined\n    ? Boolean(opts.acceptRanges)\n    : true\n\n  this._cacheControl = opts.cacheControl !== undefined\n    ? Boolean(opts.cacheControl)\n    : true\n\n  this._etag = opts.etag !== undefined\n    ? Boolean(opts.etag)\n    : true\n\n  this._dotfiles = opts.dotfiles !== undefined\n    ? opts.dotfiles\n    : 'ignore'\n\n  if (this._dotfiles !== 'ignore' && this._dotfiles !== 'allow' && this._dotfiles !== 'deny') {\n    throw new TypeError('dotfiles option must be \"allow\", \"deny\", or \"ignore\"')\n  }\n\n  this._hidden = Boolean(opts.hidden)\n\n  if (opts.hidden !== undefined) {\n    deprecate('hidden: use dotfiles: \\'' + (this._hidden ? 'allow' : 'ignore') + '\\' instead')\n  }\n\n  // legacy support\n  if (opts.dotfiles === undefined) {\n    this._dotfiles = undefined\n  }\n\n  this._extensions = opts.extensions !== undefined\n    ? normalizeList(opts.extensions, 'extensions option')\n    : []\n\n  this._immutable = opts.immutable !== undefined\n    ? Boolean(opts.immutable)\n    : false\n\n  this._index = opts.index !== undefined\n    ? normalizeList(opts.index, 'index option')\n    : ['index.html']\n\n  this._lastModified = opts.lastModified !== undefined\n    ? Boolean(opts.lastModified)\n    : true\n\n  this._maxage = opts.maxAge || opts.maxage\n  this._maxage = typeof this._maxage === 'string'\n    ? ms(this._maxage)\n    : Number(this._maxage)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\n    : 0\n\n  this._root = opts.root\n    ? resolve(opts.root)\n    : null\n\n  if (!this._root && opts.from) {\n    this.from(opts.from)\n  }\n}\n\n/**\n * Inherits from `Stream`.\n */\n\nutil.inherits(SendStream, Stream)\n\n/**\n * Enable or disable etag generation.\n *\n * @param {Boolean} val\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.etag = deprecate.function(function etag (val) {\n  this._etag = Boolean(val)\n  debug('etag %s', this._etag)\n  return this\n}, 'send.etag: pass etag as option')\n\n/**\n * Enable or disable \"hidden\" (dot) files.\n *\n * @param {Boolean} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.hidden = deprecate.function(function hidden (val) {\n  this._hidden = Boolean(val)\n  this._dotfiles = undefined\n  debug('hidden %s', this._hidden)\n  return this\n}, 'send.hidden: use dotfiles option')\n\n/**\n * Set index `paths`, set to a falsy\n * value to disable index support.\n *\n * @param {String|Boolean|Array} paths\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.index = deprecate.function(function index (paths) {\n  var index = !paths ? [] : normalizeList(paths, 'paths argument')\n  debug('index %o', paths)\n  this._index = index\n  return this\n}, 'send.index: pass index as option')\n\n/**\n * Set root `path`.\n *\n * @param {String} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.root = function root (path) {\n  this._root = resolve(String(path))\n  debug('root %s', this._root)\n  return this\n}\n\nSendStream.prototype.from = deprecate.function(SendStream.prototype.root,\n  'send.from: pass root as option')\n\nSendStream.prototype.root = deprecate.function(SendStream.prototype.root,\n  'send.root: pass root as option')\n\n/**\n * Set max-age to `maxAge`.\n *\n * @param {Number} maxAge\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.maxage = deprecate.function(function maxage (maxAge) {\n  this._maxage = typeof maxAge === 'string'\n    ? ms(maxAge)\n    : Number(maxAge)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\n    : 0\n  debug('max-age %d', this._maxage)\n  return this\n}, 'send.maxage: pass maxAge as option')\n\n/**\n * Emit error with `status`.\n *\n * @param {number} status\n * @param {Error} [err]\n * @private\n */\n\nSendStream.prototype.error = function error (status, err) {\n  // emit if listeners instead of responding\n  if (hasListeners(this, 'error')) {\n    return this.emit('error', createHttpError(status, err))\n  }\n\n  var res = this.res\n  var msg = statuses.message[status] || String(status)\n  var doc = createHtmlDocument('Error', escapeHtml(msg))\n\n  // clear existing headers\n  clearHeaders(res)\n\n  // add error headers\n  if (err && err.headers) {\n    setHeaders(res, err.headers)\n  }\n\n  // send basic response\n  res.statusCode = status\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n  res.setHeader('X-Content-Type-Options', 'nosniff')\n  res.end(doc)\n}\n\n/**\n * Check if the pathname ends with \"/\".\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.hasTrailingSlash = function hasTrailingSlash () {\n  return this.path[this.path.length - 1] === '/'\n}\n\n/**\n * Check if this is a conditional GET request.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isConditionalGET = function isConditionalGET () {\n  return this.req.headers['if-match'] ||\n    this.req.headers['if-unmodified-since'] ||\n    this.req.headers['if-none-match'] ||\n    this.req.headers['if-modified-since']\n}\n\n/**\n * Check if the request preconditions failed.\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.isPreconditionFailure = function isPreconditionFailure () {\n  var req = this.req\n  var res = this.res\n\n  // if-match\n  var match = req.headers['if-match']\n  if (match) {\n    var etag = res.getHeader('ETag')\n    return !etag || (match !== '*' && parseTokenList(match).every(function (match) {\n      return match !== etag && match !== 'W/' + etag && 'W/' + match !== etag\n    }))\n  }\n\n  // if-unmodified-since\n  var unmodifiedSince = parseHttpDate(req.headers['if-unmodified-since'])\n  if (!isNaN(unmodifiedSince)) {\n    var lastModified = parseHttpDate(res.getHeader('Last-Modified'))\n    return isNaN(lastModified) || lastModified > unmodifiedSince\n  }\n\n  return false\n}\n\n/**\n * Strip various content header fields for a change in entity.\n *\n * @private\n */\n\nSendStream.prototype.removeContentHeaderFields = function removeContentHeaderFields () {\n  var res = this.res\n\n  res.removeHeader('Content-Encoding')\n  res.removeHeader('Content-Language')\n  res.removeHeader('Content-Length')\n  res.removeHeader('Content-Range')\n  res.removeHeader('Content-Type')\n}\n\n/**\n * Respond with 304 not modified.\n *\n * @api private\n */\n\nSendStream.prototype.notModified = function notModified () {\n  var res = this.res\n  debug('not modified')\n  this.removeContentHeaderFields()\n  res.statusCode = 304\n  res.end()\n}\n\n/**\n * Raise error that headers already sent.\n *\n * @api private\n */\n\nSendStream.prototype.headersAlreadySent = function headersAlreadySent () {\n  var err = new Error('Can\\'t set headers after they are sent.')\n  debug('headers already sent')\n  this.error(500, err)\n}\n\n/**\n * Check if the request is cacheable, aka\n * responded with 2xx or 304 (see RFC 2616 section 14.2{5,6}).\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isCachable = function isCachable () {\n  var statusCode = this.res.statusCode\n  return (statusCode >= 200 && statusCode < 300) ||\n    statusCode === 304\n}\n\n/**\n * Handle stat() error.\n *\n * @param {Error} error\n * @private\n */\n\nSendStream.prototype.onStatError = function onStatError (error) {\n  switch (error.code) {\n    case 'ENAMETOOLONG':\n    case 'ENOENT':\n    case 'ENOTDIR':\n      this.error(404, error)\n      break\n    default:\n      this.error(500, error)\n      break\n  }\n}\n\n/**\n * Check if the cache is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isFresh = function isFresh () {\n  return fresh(this.req.headers, {\n    etag: this.res.getHeader('ETag'),\n    'last-modified': this.res.getHeader('Last-Modified')\n  })\n}\n\n/**\n * Check if the range is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isRangeFresh = function isRangeFresh () {\n  var ifRange = this.req.headers['if-range']\n\n  if (!ifRange) {\n    return true\n  }\n\n  // if-range as etag\n  if (ifRange.indexOf('\"') !== -1) {\n    var etag = this.res.getHeader('ETag')\n    return Boolean(etag && ifRange.indexOf(etag) !== -1)\n  }\n\n  // if-range as modified date\n  var lastModified = this.res.getHeader('Last-Modified')\n  return parseHttpDate(lastModified) <= parseHttpDate(ifRange)\n}\n\n/**\n * Redirect to path.\n *\n * @param {string} path\n * @private\n */\n\nSendStream.prototype.redirect = function redirect (path) {\n  var res = this.res\n\n  if (hasListeners(this, 'directory')) {\n    this.emit('directory', res, path)\n    return\n  }\n\n  if (this.hasTrailingSlash()) {\n    this.error(403)\n    return\n  }\n\n  var loc = encodeUrl(collapseLeadingSlashes(this.path + '/'))\n  var doc = createHtmlDocument('Redirecting', 'Redirecting to ' + escapeHtml(loc))\n\n  // redirect\n  res.statusCode = 301\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n  res.setHeader('X-Content-Type-Options', 'nosniff')\n  res.setHeader('Location', loc)\n  res.end(doc)\n}\n\n/**\n * Pipe to `res.\n *\n * @param {Stream} res\n * @return {Stream} res\n * @api public\n */\n\nSendStream.prototype.pipe = function pipe (res) {\n  // root path\n  var root = this._root\n\n  // references\n  this.res = res\n\n  // decode the path\n  var path = decode(this.path)\n  if (path === -1) {\n    this.error(400)\n    return res\n  }\n\n  // null byte(s)\n  if (~path.indexOf('\\0')) {\n    this.error(400)\n    return res\n  }\n\n  var parts\n  if (root !== null) {\n    // normalize\n    if (path) {\n      path = normalize('.' + sep + path)\n    }\n\n    // malicious path\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path \"%s\"', path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = path.split(sep)\n\n    // join / normalize from optional root dir\n    path = normalize(join(root, path))\n  } else {\n    // \"..\" is malicious without \"root\"\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path \"%s\"', path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = normalize(path).split(sep)\n\n    // resolve the path\n    path = resolve(path)\n  }\n\n  // dotfile handling\n  if (containsDotFile(parts)) {\n    var access = this._dotfiles\n\n    // legacy support\n    if (access === undefined) {\n      access = parts[parts.length - 1][0] === '.'\n        ? (this._hidden ? 'allow' : 'ignore')\n        : 'allow'\n    }\n\n    debug('%s dotfile \"%s\"', access, path)\n    switch (access) {\n      case 'allow':\n        break\n      case 'deny':\n        this.error(403)\n        return res\n      case 'ignore':\n      default:\n        this.error(404)\n        return res\n    }\n  }\n\n  // index file support\n  if (this._index.length && this.hasTrailingSlash()) {\n    this.sendIndex(path)\n    return res\n  }\n\n  this.sendFile(path)\n  return res\n}\n\n/**\n * Transfer `path`.\n *\n * @param {String} path\n * @api public\n */\n\nSendStream.prototype.send = function send (path, stat) {\n  var len = stat.size\n  var options = this.options\n  var opts = {}\n  var res = this.res\n  var req = this.req\n  var ranges = req.headers.range\n  var offset = options.start || 0\n\n  if (headersSent(res)) {\n    // impossible to send now\n    this.headersAlreadySent()\n    return\n  }\n\n  debug('pipe \"%s\"', path)\n\n  // set header fields\n  this.setHeader(path, stat)\n\n  // set content-type\n  this.type(path)\n\n  // conditional GET support\n  if (this.isConditionalGET()) {\n    if (this.isPreconditionFailure()) {\n      this.error(412)\n      return\n    }\n\n    if (this.isCachable() && this.isFresh()) {\n      this.notModified()\n      return\n    }\n  }\n\n  // adjust len to start/end options\n  len = Math.max(0, len - offset)\n  if (options.end !== undefined) {\n    var bytes = options.end - offset + 1\n    if (len > bytes) len = bytes\n  }\n\n  // Range support\n  if (this._acceptRanges && BYTES_RANGE_REGEXP.test(ranges)) {\n    // parse\n    ranges = parseRange(len, ranges, {\n      combine: true\n    })\n\n    // If-Range support\n    if (!this.isRangeFresh()) {\n      debug('range stale')\n      ranges = -2\n    }\n\n    // unsatisfiable\n    if (ranges === -1) {\n      debug('range unsatisfiable')\n\n      // Content-Range\n      res.setHeader('Content-Range', contentRange('bytes', len))\n\n      // 416 Requested Range Not Satisfiable\n      return this.error(416, {\n        headers: { 'Content-Range': res.getHeader('Content-Range') }\n      })\n    }\n\n    // valid (syntactically invalid/multiple ranges are treated as a regular response)\n    if (ranges !== -2 && ranges.length === 1) {\n      debug('range %j', ranges)\n\n      // Content-Range\n      res.statusCode = 206\n      res.setHeader('Content-Range', contentRange('bytes', len, ranges[0]))\n\n      // adjust for requested range\n      offset += ranges[0].start\n      len = ranges[0].end - ranges[0].start + 1\n    }\n  }\n\n  // clone options\n  for (var prop in options) {\n    opts[prop] = options[prop]\n  }\n\n  // set read options\n  opts.start = offset\n  opts.end = Math.max(offset, offset + len - 1)\n\n  // content-length\n  res.setHeader('Content-Length', len)\n\n  // HEAD support\n  if (req.method === 'HEAD') {\n    res.end()\n    return\n  }\n\n  this.stream(path, opts)\n}\n\n/**\n * Transfer file for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendFile = function sendFile (path) {\n  var i = 0\n  var self = this\n\n  debug('stat \"%s\"', path)\n  fs.stat(path, function onstat (err, stat) {\n    if (err && err.code === 'ENOENT' && !extname(path) && path[path.length - 1] !== sep) {\n      // not found, check extensions\n      return next(err)\n    }\n    if (err) return self.onStatError(err)\n    if (stat.isDirectory()) return self.redirect(path)\n    self.emit('file', path, stat)\n    self.send(path, stat)\n  })\n\n  function next (err) {\n    if (self._extensions.length <= i) {\n      return err\n        ? self.onStatError(err)\n        : self.error(404)\n    }\n\n    var p = path + '.' + self._extensions[i++]\n\n    debug('stat \"%s\"', p)\n    fs.stat(p, function (err, stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file', p, stat)\n      self.send(p, stat)\n    })\n  }\n}\n\n/**\n * Transfer index for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendIndex = function sendIndex (path) {\n  var i = -1\n  var self = this\n\n  function next (err) {\n    if (++i >= self._index.length) {\n      if (err) return self.onStatError(err)\n      return self.error(404)\n    }\n\n    var p = join(path, self._index[i])\n\n    debug('stat \"%s\"', p)\n    fs.stat(p, function (err, stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file', p, stat)\n      self.send(p, stat)\n    })\n  }\n\n  next()\n}\n\n/**\n * Stream `path` to the response.\n *\n * @param {String} path\n * @param {Object} options\n * @api private\n */\n\nSendStream.prototype.stream = function stream (path, options) {\n  var self = this\n  var res = this.res\n\n  // pipe\n  var stream = fs.createReadStream(path, options)\n  this.emit('stream', stream)\n  stream.pipe(res)\n\n  // cleanup\n  function cleanup () {\n    destroy(stream, true)\n  }\n\n  // response finished, cleanup\n  onFinished(res, cleanup)\n\n  // error handling\n  stream.on('error', function onerror (err) {\n    // clean up stream early\n    cleanup()\n\n    // error\n    self.onStatError(err)\n  })\n\n  // end\n  stream.on('end', function onend () {\n    self.emit('end')\n  })\n}\n\n/**\n * Set content-type based on `path`\n * if it hasn't been explicitly set.\n *\n * @param {String} path\n * @api private\n */\n\nSendStream.prototype.type = function type (path) {\n  var res = this.res\n\n  if (res.getHeader('Content-Type')) return\n\n  var type = mime.lookup(path)\n\n  if (!type) {\n    debug('no content-type')\n    return\n  }\n\n  var charset = mime.charsets.lookup(type)\n\n  debug('content-type %s', type)\n  res.setHeader('Content-Type', type + (charset ? '; charset=' + charset : ''))\n}\n\n/**\n * Set response header fields, most\n * fields may be pre-defined.\n *\n * @param {String} path\n * @param {Object} stat\n * @api private\n */\n\nSendStream.prototype.setHeader = function setHeader (path, stat) {\n  var res = this.res\n\n  this.emit('headers', res, path, stat)\n\n  if (this._acceptRanges && !res.getHeader('Accept-Ranges')) {\n    debug('accept ranges')\n    res.setHeader('Accept-Ranges', 'bytes')\n  }\n\n  if (this._cacheControl && !res.getHeader('Cache-Control')) {\n    var cacheControl = 'public, max-age=' + Math.floor(this._maxage / 1000)\n\n    if (this._immutable) {\n      cacheControl += ', immutable'\n    }\n\n    debug('cache-control %s', cacheControl)\n    res.setHeader('Cache-Control', cacheControl)\n  }\n\n  if (this._lastModified && !res.getHeader('Last-Modified')) {\n    var modified = stat.mtime.toUTCString()\n    debug('modified %s', modified)\n    res.setHeader('Last-Modified', modified)\n  }\n\n  if (this._etag && !res.getHeader('ETag')) {\n    var val = etag(stat)\n    debug('etag %s', val)\n    res.setHeader('ETag', val)\n  }\n}\n\n/**\n * Clear all headers from a response.\n *\n * @param {object} res\n * @private\n */\n\nfunction clearHeaders (res) {\n  var headers = getHeaderNames(res)\n\n  for (var i = 0; i < headers.length; i++) {\n    res.removeHeader(headers[i])\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n *\n * @param {string} str\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] !== '/') {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Determine if path parts contain a dotfile.\n *\n * @api private\n */\n\nfunction containsDotFile (parts) {\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i]\n    if (part.length > 1 && part[0] === '.') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Create a Content-Range header.\n *\n * @param {string} type\n * @param {number} size\n * @param {array} [range]\n */\n\nfunction contentRange (type, size, range) {\n  return type + ' ' + (range ? range.start + '-' + range.end : '*') + '/' + size\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title, body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Create a HttpError object from simple arguments.\n *\n * @param {number} status\n * @param {Error|object} err\n * @private\n */\n\nfunction createHttpError (status, err) {\n  if (!err) {\n    return createError(status)\n  }\n\n  return err instanceof Error\n    ? createError(status, err, { expose: false })\n    : createError(status, err)\n}\n\n/**\n * decodeURIComponent.\n *\n * Allows V8 to only deoptimize this fn instead of all\n * of send().\n *\n * @param {String} path\n * @api private\n */\n\nfunction decode (path) {\n  try {\n    return decodeURIComponent(path)\n  } catch (err) {\n    return -1\n  }\n}\n\n/**\n * Get the header names on a respnse.\n *\n * @param {object} res\n * @returns {array[string]}\n * @private\n */\n\nfunction getHeaderNames (res) {\n  return typeof res.getHeaderNames !== 'function'\n    ? Object.keys(res._headers || {})\n    : res.getHeaderNames()\n}\n\n/**\n * Determine if emitter has listeners of a given type.\n *\n * The way to do this check is done three different ways in Node.js >= 0.8\n * so this consolidates them into a minimal set using instance methods.\n *\n * @param {EventEmitter} emitter\n * @param {string} type\n * @returns {boolean}\n * @private\n */\n\nfunction hasListeners (emitter, type) {\n  var count = typeof emitter.listenerCount !== 'function'\n    ? emitter.listeners(type).length\n    : emitter.listenerCount(type)\n\n  return count > 0\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Normalize the index option into an array.\n *\n * @param {boolean|string|array} val\n * @param {string} name\n * @private\n */\n\nfunction normalizeList (val, name) {\n  var list = [].concat(val || [])\n\n  for (var i = 0; i < list.length; i++) {\n    if (typeof list[i] !== 'string') {\n      throw new TypeError(name + ' must be array of strings or false')\n    }\n  }\n\n  return list\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        if (start !== end) {\n          list.push(str.substring(start, end))\n        }\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  if (start !== end) {\n    list.push(str.substring(start, end))\n  }\n\n  return list\n}\n\n/**\n * Set an object of headers on a response.\n *\n * @param {object} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res, headers) {\n  var keys = Object.keys(headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key, headers[key])\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\send\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\send\\index.js"
  },
  {
    "Content": "# send\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Linux Build][github-actions-ci-image]][github-actions-ci-url]\n[![Windows Build][appveyor-image]][appveyor-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nSend is a library for streaming files from the file system as a http response\nsupporting partial responses (Ranges), conditional-GET negotiation (If-Match,\nIf-Unmodified-Since, If-None-Match, If-Modified-Since), high test coverage,\nand granular events which may be leveraged to take appropriate actions in your\napplication or framework.\n\nLooking to serve up entire folders mapped to URLs? Try [serve-static](https://www.npmjs.org/package/serve-static).\n\n## Installation\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```bash\n$ npm install send\n```\n\n## API\n\n```js\nvar send = require('send')\n```\n\n### send(req, path, [options])\n\nCreate a new `SendStream` for the given path to send to a `res`. The `req` is\nthe Node.js HTTP request and the `path` is a urlencoded path to send (urlencoded,\nnot the actual file-system path).\n\n#### Options\n\n##### acceptRanges\n\nEnable or disable accepting ranged requests, defaults to true.\nDisabling this will not send `Accept-Ranges` and ignore the contents\nof the `Range` request header.\n\n##### cacheControl\n\nEnable or disable setting `Cache-Control` response header, defaults to\ntrue. Disabling this will ignore the `immutable` and `maxAge` options.\n\n##### dotfiles\n\nSet how \"dotfiles\" are treated when encountered. A dotfile is a file\nor directory that begins with a dot (\".\"). Note this check is done on\nthe path itself without checking if the path actually exists on the\ndisk. If `root` is specified, only the dotfiles above the root are\nchecked (i.e. the root itself can be within a dotfile when when set\nto \"deny\").\n\n  - `'allow'` No special treatment for dotfiles.\n  - `'deny'` Send a 403 for any request for a dotfile.\n  - `'ignore'` Pretend like the dotfile does not exist and 404.\n\nThe default value is _similar_ to `'ignore'`, with the exception that\nthis default will not ignore the files within a directory that begins\nwith a dot, for backward-compatibility.\n\n##### end\n\nByte offset at which the stream ends, defaults to the length of the file\nminus 1. The end is inclusive in the stream, meaning `end: 3` will include\nthe 4th byte in the stream.\n\n##### etag\n\nEnable or disable etag generation, defaults to true.\n\n##### extensions\n\nIf a given file doesn't exist, try appending one of the given extensions,\nin the given order. By default, this is disabled (set to `false`). An\nexample value that will serve extension-less HTML files: `['html', 'htm']`.\nThis is skipped if the requested file already has an extension.\n\n##### immutable\n\nEnable or disable the `immutable` directive in the `Cache-Control` response\nheader, defaults to `false`. If set to `true`, the `maxAge` option should\nalso be specified to enable caching. The `immutable` directive will prevent\nsupported clients from making conditional requests during the life of the\n`maxAge` option to check if the file has changed.\n\n##### index\n\nBy default send supports \"index.html\" files, to disable this\nset `false` or to supply a new index pass a string or an array\nin preferred order.\n\n##### lastModified\n\nEnable or disable `Last-Modified` header, defaults to true. Uses the file\nsystem's last modified value.\n\n##### maxAge\n\nProvide a max-age in milliseconds for http caching, defaults to 0.\nThis can also be a string accepted by the\n[ms](https://www.npmjs.org/package/ms#readme) module.\n\n##### root\n\nServe files relative to `path`.\n\n##### start\n\nByte offset at which the stream starts, defaults to 0. The start is inclusive,\nmeaning `start: 2` will include the 3rd byte in the stream.\n\n#### Events\n\nThe `SendStream` is an event emitter and will emit the following events:\n\n  - `error` an error occurred `(err)`\n  - `directory` a directory was requested `(res, path)`\n  - `file` a file was requested `(path, stat)`\n  - `headers` the headers are about to be set on a file `(res, path, stat)`\n  - `stream` file streaming has started `(stream)`\n  - `end` streaming has completed\n\n#### .pipe\n\nThe `pipe` method is used to pipe the response into the Node.js HTTP response\nobject, typically `send(req, path, options).pipe(res)`.\n\n### .mime\n\nThe `mime` export is the global instance of of the\n[`mime` npm module](https://www.npmjs.com/package/mime).\n\nThis is used to configure the MIME types that are associated with file extensions\nas well as other options for how to resolve the MIME type of a file (like the\ndefault type to use for an unknown file extension).\n\n## Error-handling\n\nBy default when no `error` listeners are present an automatic response will be\nmade, otherwise you have full control over the response, aka you may show a 5xx\npage etc.\n\n## Caching\n\nIt does _not_ perform internal caching, you should use a reverse proxy cache\nsuch as Varnish for this, or those fancy things called CDNs. If your\napplication is small enough that it would benefit from single-node memory\ncaching, it's small enough that it does not need caching at all ;).\n\n## Debugging\n\nTo enable `debug()` instrumentation output export __DEBUG__:\n\n```\n$ DEBUG=send node app\n```\n\n## Running tests\n\n```\n$ npm install\n$ npm test\n```\n\n## Examples\n\n### Serve a specific file\n\nThis simple example will send a specific file to all requests.\n\n```js\nvar http = require('http')\nvar send = require('send')\n\nvar server = http.createServer(function onRequest (req, res) {\n  send(req, '/path/to/index.html')\n    .pipe(res)\n})\n\nserver.listen(3000)\n```\n\n### Serve all files from a directory\n\nThis simple example will just serve up all the files in a\ngiven directory as the top-level. For example, a request\n`GET /foo.txt` will send back `/www/public/foo.txt`.\n\n```js\nvar http = require('http')\nvar parseUrl = require('parseurl')\nvar send = require('send')\n\nvar server = http.createServer(function onRequest (req, res) {\n  send(req, parseUrl(req).pathname, { root: '/www/public' })\n    .pipe(res)\n})\n\nserver.listen(3000)\n```\n\n### Custom file types\n\n```js\nvar http = require('http')\nvar parseUrl = require('parseurl')\nvar send = require('send')\n\n// Default unknown types to text/plain\nsend.mime.default_type = 'text/plain'\n\n// Add a custom type\nsend.mime.define({\n  'application/x-my-type': ['x-mt', 'x-mtt']\n})\n\nvar server = http.createServer(function onRequest (req, res) {\n  send(req, parseUrl(req).pathname, { root: '/www/public' })\n    .pipe(res)\n})\n\nserver.listen(3000)\n```\n\n### Custom directory index view\n\nThis is a example of serving up a structure of directories with a\ncustom function to render a listing of a directory.\n\n```js\nvar http = require('http')\nvar fs = require('fs')\nvar parseUrl = require('parseurl')\nvar send = require('send')\n\n// Transfer arbitrary files from within /www/example.com/public/*\n// with a custom handler for directory listing\nvar server = http.createServer(function onRequest (req, res) {\n  send(req, parseUrl(req).pathname, { index: false, root: '/www/public' })\n    .once('directory', directory)\n    .pipe(res)\n})\n\nserver.listen(3000)\n\n// Custom directory handler\nfunction directory (res, path) {\n  var stream = this\n\n  // redirect to trailing slash for consistent url\n  if (!stream.hasTrailingSlash()) {\n    return stream.redirect(path)\n  }\n\n  // get directory list\n  fs.readdir(path, function onReaddir (err, list) {\n    if (err) return stream.error(err)\n\n    // render an index for the directory\n    res.setHeader('Content-Type', 'text/plain; charset=UTF-8')\n    res.end(list.join('\\n') + '\\n')\n  })\n}\n```\n\n### Serving from a root directory with custom error-handling\n\n```js\nvar http = require('http')\nvar parseUrl = require('parseurl')\nvar send = require('send')\n\nvar server = http.createServer(function onRequest (req, res) {\n  // your custom error-handling logic:\n  function error (err) {\n    res.statusCode = err.status || 500\n    res.end(err.message)\n  }\n\n  // your custom headers\n  function headers (res, path, stat) {\n    // serve all files for download\n    res.setHeader('Content-Disposition', 'attachment')\n  }\n\n  // your custom directory handling logic:\n  function redirect () {\n    res.statusCode = 301\n    res.setHeader('Location', req.url + '/')\n    res.end('Redirecting to ' + req.url + '/')\n  }\n\n  // transfer arbitrary files from within\n  // /www/example.com/public/*\n  send(req, parseUrl(req).pathname, { root: '/www/public' })\n    .on('error', error)\n    .on('directory', redirect)\n    .on('headers', headers)\n    .pipe(res)\n})\n\nserver.listen(3000)\n```\n\n## License\n\n[MIT](LICENSE)\n\n[appveyor-image]: https://badgen.net/appveyor/ci/dougwilson/send/master?label=windows\n[appveyor-url]: https://ci.appveyor.com/project/dougwilson/send\n[coveralls-image]: https://badgen.net/coveralls/c/github/pillarjs/send/master\n[coveralls-url]: https://coveralls.io/r/pillarjs/send?branch=master\n[github-actions-ci-image]: https://badgen.net/github/checks/pillarjs/send/master?label=linux\n[github-actions-ci-url]: https://github.com/pillarjs/send/actions/workflows/ci.yml\n[node-image]: https://badgen.net/npm/node/send\n[node-url]: https://nodejs.org/en/download/\n[npm-downloads-image]: https://badgen.net/npm/dm/send\n[npm-url]: https://npmjs.org/package/send\n[npm-version-image]: https://badgen.net/npm/v/send\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\send\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\send\\README.md"
  },
  {
    "Content": "# Security Policies and Procedures\n\n## Reporting a Bug\n\nThe `send` team and community take all security bugs seriously. Thank you\nfor improving the security of Express. We appreciate your efforts and\nresponsible disclosure and will make every effort to acknowledge your\ncontributions.\n\nReport security bugs by emailing the current owner(s) of `send`. This information\ncan be found in the npm registry using the command `npm owner ls send`.\nIf unsure or unable to get the information from the above, open an issue\nin the [project issue tracker](https://github.com/pillarjs/send/issues)\nasking for the current contact information.\n\nTo ensure the timely response to your report, please ensure that the entirety\nof the report is contained within the email body and not solely behind a web\nlink or an attachment.\n\nAt least one owner will acknowledge your email within 48 hours, and will send a\nmore detailed response within 48 hours indicating the next steps in handling\nyour report. After the initial reply to your report, the owners will\nendeavor to keep you informed of the progress towards a fix and full\nannouncement, and may ask for additional information or guidance.\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\send\\SECURITY.md",
    "RelativePath": "tools\\backend\\node_modules\\send\\SECURITY.md"
  },
  {
    "Content": "1.0.2 / 2018-01-21\n==================\n\n  * Fix encoding `%` as last character\n\n1.0.1 / 2016-06-09\n==================\n\n  * Fix encoding unpaired surrogates at start/end of string\n\n1.0.0 / 2016-06-08\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\send\\node_modules\\encodeurl\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\send\\node_modules\\encodeurl\\HISTORY.md"
  },
  {
    "Content": "/*!\n * encodeurl\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = encodeUrl\n\n/**\n * RegExp to match non-URL code points, *after* encoding (i.e. not including \"%\")\n * and including invalid escape sequences.\n * @private\n */\n\nvar ENCODE_CHARS_REGEXP = /(?:[^\\x21\\x25\\x26-\\x3B\\x3D\\x3F-\\x5B\\x5D\\x5F\\x61-\\x7A\\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g\n\n/**\n * RegExp to match unmatched surrogate pair.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\\uD800-\\uDBFF])[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF]([^\\uDC00-\\uDFFF]|$)/g\n\n/**\n * String to replace unmatched surrogate pair with.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\\uFFFD$2'\n\n/**\n * Encode a URL to a percent-encoded form, excluding already-encoded sequences.\n *\n * This function will take an already-encoded URL and encode all the non-URL\n * code points. This function will not encode the \"%\" character unless it is\n * not part of a valid sequence (`%20` will be left as-is, but `%foo` will\n * be encoded as `%25foo`).\n *\n * This encode is meant to be \"safe\" and does not throw errors. It will try as\n * hard as it can to properly encode the given URL, including replacing any raw,\n * unpaired surrogate pairs with the Unicode replacement character prior to\n * encoding.\n *\n * @param {string} url\n * @return {string}\n * @public\n */\n\nfunction encodeUrl (url) {\n  return String(url)\n    .replace(UNMATCHED_SURROGATE_PAIR_REGEXP, UNMATCHED_SURROGATE_PAIR_REPLACE)\n    .replace(ENCODE_CHARS_REGEXP, encodeURI)\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\send\\node_modules\\encodeurl\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\send\\node_modules\\encodeurl\\index.js"
  },
  {
    "Content": "# encodeurl\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nEncode a URL to a percent-encoded form, excluding already-encoded sequences\n\n## Installation\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install encodeurl\n```\n\n## API\n\n```js\nvar encodeUrl = require('encodeurl')\n```\n\n### encodeUrl(url)\n\nEncode a URL to a percent-encoded form, excluding already-encoded sequences.\n\nThis function will take an already-encoded URL and encode all the non-URL\ncode points (as UTF-8 byte sequences). This function will not encode the\n\"%\" character unless it is not part of a valid sequence (`%20` will be\nleft as-is, but `%foo` will be encoded as `%25foo`).\n\nThis encode is meant to be \"safe\" and does not throw errors. It will try as\nhard as it can to properly encode the given URL, including replacing any raw,\nunpaired surrogate pairs with the Unicode replacement character prior to\nencoding.\n\nThis function is _similar_ to the intrinsic function `encodeURI`, except it\nwill not encode the `%` character if that is part of a valid sequence, will\nnot encode `[` and `]` (for IPv6 hostnames) and will replace raw, unpaired\nsurrogate pairs with the Unicode replacement character (instead of throwing).\n\n## Examples\n\n### Encode a URL containing user-controled data\n\n```js\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\n\nhttp.createServer(function onRequest (req, res) {\n  // get encoded form of inbound url\n  var url = encodeUrl(req.url)\n\n  // create html message\n  var body = '<p>Location ' + escapeHtml(url) + ' not found</p>'\n\n  // send a 404\n  res.statusCode = 404\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', String(Buffer.byteLength(body, 'utf-8')))\n  res.end(body, 'utf-8')\n})\n```\n\n### Encode a URL for use in a header field\n\n```js\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar url = require('url')\n\nhttp.createServer(function onRequest (req, res) {\n  // parse inbound url\n  var href = url.parse(req)\n\n  // set new host for redirect\n  href.host = 'localhost'\n  href.protocol = 'https:'\n  href.slashes = true\n\n  // create location header\n  var location = encodeUrl(url.format(href))\n\n  // create html message\n  var body = '<p>Redirecting to new site: ' + escapeHtml(location) + '</p>'\n\n  // send a 301\n  res.statusCode = 301\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', String(Buffer.byteLength(body, 'utf-8')))\n  res.setHeader('Location', location)\n  res.end(body, 'utf-8')\n})\n```\n\n## Testing\n\n```sh\n$ npm test\n$ npm run lint\n```\n\n## References\n\n- [RFC 3986: Uniform Resource Identifier (URI): Generic Syntax][rfc-3986]\n- [WHATWG URL Living Standard][whatwg-url]\n\n[rfc-3986]: https://tools.ietf.org/html/rfc3986\n[whatwg-url]: https://url.spec.whatwg.org/\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/encodeurl.svg\n[npm-url]: https://npmjs.org/package/encodeurl\n[node-version-image]: https://img.shields.io/node/v/encodeurl.svg\n[node-version-url]: https://nodejs.org/en/download\n[travis-image]: https://img.shields.io/travis/pillarjs/encodeurl.svg\n[travis-url]: https://travis-ci.org/pillarjs/encodeurl\n[coveralls-image]: https://img.shields.io/coveralls/pillarjs/encodeurl.svg\n[coveralls-url]: https://coveralls.io/r/pillarjs/encodeurl?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/encodeurl.svg\n[downloads-url]: https://npmjs.org/package/encodeurl\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\send\\node_modules\\encodeurl\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\send\\node_modules\\encodeurl\\README.md"
  },
  {
    "Content": "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\send\\node_modules\\ms\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\send\\node_modules\\ms\\index.js"
  },
  {
    "Content": "The MIT License (MIT)\n\nCopyright (c) 2020 Vercel, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\send\\node_modules\\ms\\license.md",
    "RelativePath": "tools\\backend\\node_modules\\send\\node_modules\\ms\\license.md"
  },
  {
    "Content": "# ms\n\n![CI](https://github.com/vercel/ms/workflows/CI/badge.svg)\n\nUse this package to easily convert various time formats to milliseconds.\n\n## Examples\n\n```js\nms('2 days')  // 172800000\nms('1d')      // 86400000\nms('10h')     // 36000000\nms('2.5 hrs') // 9000000\nms('2h')      // 7200000\nms('1m')      // 60000\nms('5s')      // 5000\nms('1y')      // 31557600000\nms('100')     // 100\nms('-3 days') // -259200000\nms('-1h')     // -3600000\nms('-200')    // -200\n```\n\n### Convert from Milliseconds\n\n```js\nms(60000)             // \"1m\"\nms(2 * 60000)         // \"2m\"\nms(-3 * 60000)        // \"-3m\"\nms(ms('10 hours'))    // \"10h\"\n```\n\n### Time Format Written-Out\n\n```js\nms(60000, { long: true })             // \"1 minute\"\nms(2 * 60000, { long: true })         // \"2 minutes\"\nms(-3 * 60000, { long: true })        // \"-3 minutes\"\nms(ms('10 hours'), { long: true })    // \"10 hours\"\n```\n\n## Features\n\n- Works both in [Node.js](https://nodejs.org) and in the browser\n- If a number is supplied to `ms`, a string with a unit is returned\n- If a string that contains the number is supplied, it returns it as a number (e.g.: it returns `100` for `'100'`)\n- If you pass a string with a number and a valid unit, the number of equivalent milliseconds is returned\n\n## Related Packages\n\n- [ms.macro](https://github.com/knpwrs/ms.macro) - Run `ms` as a macro at build-time.\n\n## Caught a Bug?\n\n1. [Fork](https://help.github.com/articles/fork-a-repo/) this repository to your own GitHub account and then [clone](https://help.github.com/articles/cloning-a-repository/) it to your local device\n2. Link the package to the global module directory: `npm link`\n3. Within the module you want to test your local development instance of ms, just link it to the dependencies: `npm link ms`. Instead of the default one from npm, Node.js will now use your clone of ms!\n\nAs always, you can run the tests using: `npm test`\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\send\\node_modules\\ms\\readme.md",
    "RelativePath": "tools\\backend\\node_modules\\send\\node_modules\\ms\\readme.md"
  },
  {
    "Content": "1.16.2 / 2024-09-11\n===================\n\n* deps: encodeurl@~2.0.0\n\n1.16.1 / 2024-09-11\n===================\n\n* deps: send@0.19.0\n\n1.16.0 / 2024-09-10\n===================\n\n* Remove link renderization in html while redirecting\n\n\n1.15.0 / 2022-03-24\n===================\n\n  * deps: send@0.18.0\n    - Fix emitted 416 error missing headers property\n    - Limit the headers removed for 304 response\n    - deps: depd@2.0.0\n    - deps: destroy@1.2.0\n    - deps: http-errors@2.0.0\n    - deps: on-finished@2.4.1\n    - deps: statuses@2.0.1\n\n1.14.2 / 2021-12-15\n===================\n\n  * deps: send@0.17.2\n    - deps: http-errors@1.8.1\n    - deps: ms@2.1.3\n    - pref: ignore empty http tokens\n\n1.14.1 / 2019-05-10\n===================\n\n  * Set stricter CSP header in redirect response\n  * deps: send@0.17.1\n    - deps: range-parser@~1.2.1\n\n1.14.0 / 2019-05-07\n===================\n\n  * deps: parseurl@~1.3.3\n  * deps: send@0.17.0\n    - deps: http-errors@~1.7.2\n    - deps: mime@1.6.0\n    - deps: ms@2.1.1\n    - deps: statuses@~1.5.0\n    - perf: remove redundant `path.normalize` call\n\n1.13.2 / 2018-02-07\n===================\n\n  * Fix incorrect end tag in redirects\n  * deps: encodeurl@~1.0.2\n    - Fix encoding `%` as last character\n  * deps: send@0.16.2\n    - deps: depd@~1.1.2\n    - deps: encodeurl@~1.0.2\n    - deps: statuses@~1.4.0\n\n1.13.1 / 2017-09-29\n===================\n\n  * Fix regression when `root` is incorrectly set to a file\n  * deps: send@0.16.1\n\n1.13.0 / 2017-09-27\n===================\n\n  * deps: send@0.16.0\n    - Add 70 new types for file extensions\n    - Add `immutable` option\n    - Fix missing `</html>` in default error & redirects\n    - Set charset as \"UTF-8\" for .js and .json\n    - Use instance methods on steam to check for listeners\n    - deps: mime@1.4.1\n    - perf: improve path validation speed\n\n1.12.6 / 2017-09-22\n===================\n\n  * deps: send@0.15.6\n    - deps: debug@2.6.9\n    - perf: improve `If-Match` token parsing\n  * perf: improve slash collapsing\n\n1.12.5 / 2017-09-21\n===================\n\n  * deps: parseurl@~1.3.2\n    - perf: reduce overhead for full URLs\n    - perf: unroll the \"fast-path\" `RegExp`\n  * deps: send@0.15.5\n    - Fix handling of modified headers with invalid dates\n    - deps: etag@~1.8.1\n    - deps: fresh@0.5.2\n\n1.12.4 / 2017-08-05\n===================\n\n  * deps: send@0.15.4\n    - deps: debug@2.6.8\n    - deps: depd@~1.1.1\n    - deps: http-errors@~1.6.2\n\n1.12.3 / 2017-05-16\n===================\n\n  * deps: send@0.15.3\n    - deps: debug@2.6.7\n\n1.12.2 / 2017-04-26\n===================\n\n  * deps: send@0.15.2\n    - deps: debug@2.6.4\n\n1.12.1 / 2017-03-04\n===================\n\n  * deps: send@0.15.1\n    - Fix issue when `Date.parse` does not return `NaN` on invalid date\n    - Fix strict violation in broken environments\n\n1.12.0 / 2017-02-25\n===================\n\n  * Send complete HTML document in redirect response\n  * Set default CSP header in redirect response\n  * deps: send@0.15.0\n    - Fix false detection of `no-cache` request directive\n    - Fix incorrect result when `If-None-Match` has both `*` and ETags\n    - Fix weak `ETag` matching to match spec\n    - Remove usage of `res._headers` private field\n    - Support `If-Match` and `If-Unmodified-Since` headers\n    - Use `res.getHeaderNames()` when available\n    - Use `res.headersSent` when available\n    - deps: debug@2.6.1\n    - deps: etag@~1.8.0\n    - deps: fresh@0.5.0\n    - deps: http-errors@~1.6.1\n\n1.11.2 / 2017-01-23\n===================\n\n  * deps: send@0.14.2\n    - deps: http-errors@~1.5.1\n    - deps: ms@0.7.2\n    - deps: statuses@~1.3.1\n\n1.11.1 / 2016-06-10\n===================\n\n  * Fix redirect error when `req.url` contains raw non-URL characters\n  * deps: send@0.14.1\n\n1.11.0 / 2016-06-07\n===================\n\n  * Use status code 301 for redirects\n  * deps: send@0.14.0\n    - Add `acceptRanges` option\n    - Add `cacheControl` option\n    - Attempt to combine multiple ranges into single range\n    - Correctly inherit from `Stream` class\n    - Fix `Content-Range` header in 416 responses when using `start`/`end` options\n    - Fix `Content-Range` header missing from default 416 responses\n    - Ignore non-byte `Range` headers\n    - deps: http-errors@~1.5.0\n    - deps: range-parser@~1.2.0\n    - deps: statuses@~1.3.0\n    - perf: remove argument reassignment\n\n1.10.3 / 2016-05-30\n===================\n\n  * deps: send@0.13.2\n    - Fix invalid `Content-Type` header when `send.mime.default_type` unset\n\n1.10.2 / 2016-01-19\n===================\n\n  * deps: parseurl@~1.3.1\n    - perf: enable strict mode\n\n1.10.1 / 2016-01-16\n===================\n\n  * deps: escape-html@~1.0.3\n    - perf: enable strict mode\n    - perf: optimize string replacement\n    - perf: use faster string coercion\n  * deps: send@0.13.1\n    - deps: depd@~1.1.0\n    - deps: destroy@~1.0.4\n    - deps: escape-html@~1.0.3\n    - deps: range-parser@~1.0.3\n\n1.10.0 / 2015-06-17\n===================\n\n  * Add `fallthrough` option\n    - Allows declaring this middleware is the final destination\n    - Provides better integration with Express patterns\n  * Fix reading options from options prototype\n  * Improve the default redirect response headers\n  * deps: escape-html@1.0.2\n  * deps: send@0.13.0\n    - Allow Node.js HTTP server to set `Date` response header\n    - Fix incorrectly removing `Content-Location` on 304 response\n    - Improve the default redirect response headers\n    - Send appropriate headers on default error response\n    - Use `http-errors` for standard emitted errors\n    - Use `statuses` instead of `http` module for status messages\n    - deps: escape-html@1.0.2\n    - deps: etag@~1.7.0\n    - deps: fresh@0.3.0\n    - deps: on-finished@~2.3.0\n    - perf: enable strict mode\n    - perf: remove unnecessary array allocations\n  * perf: enable strict mode\n  * perf: remove argument reassignment\n\n1.9.3 / 2015-05-14\n==================\n\n  * deps: send@0.12.3\n    - deps: debug@~2.2.0\n    - deps: depd@~1.0.1\n    - deps: etag@~1.6.0\n    - deps: ms@0.7.1\n    - deps: on-finished@~2.2.1\n\n1.9.2 / 2015-03-14\n==================\n\n  * deps: send@0.12.2\n    - Throw errors early for invalid `extensions` or `index` options\n    - deps: debug@~2.1.3\n\n1.9.1 / 2015-02-17\n==================\n\n  * deps: send@0.12.1\n    - Fix regression sending zero-length files\n\n1.9.0 / 2015-02-16\n==================\n\n  * deps: send@0.12.0\n    - Always read the stat size from the file\n    - Fix mutating passed-in `options`\n    - deps: mime@1.3.4\n\n1.8.1 / 2015-01-20\n==================\n\n  * Fix redirect loop in Node.js 0.11.14\n  * deps: send@0.11.1\n    - Fix root path disclosure\n\n1.8.0 / 2015-01-05\n==================\n\n  * deps: send@0.11.0\n    - deps: debug@~2.1.1\n    - deps: etag@~1.5.1\n    - deps: ms@0.7.0\n    - deps: on-finished@~2.2.0\n\n1.7.2 / 2015-01-02\n==================\n\n  * Fix potential open redirect when mounted at root\n\n1.7.1 / 2014-10-22\n==================\n\n  * deps: send@0.10.1\n    - deps: on-finished@~2.1.1\n\n1.7.0 / 2014-10-15\n==================\n\n  * deps: send@0.10.0\n    - deps: debug@~2.1.0\n    - deps: depd@~1.0.0\n    - deps: etag@~1.5.0\n\n1.6.5 / 2015-02-04\n==================\n\n  * Fix potential open redirect when mounted at root\n    - Back-ported from v1.7.2\n\n1.6.4 / 2014-10-08\n==================\n\n  * Fix redirect loop when index file serving disabled\n\n1.6.3 / 2014-09-24\n==================\n\n  * deps: send@0.9.3\n    - deps: etag@~1.4.0\n\n1.6.2 / 2014-09-15\n==================\n\n  * deps: send@0.9.2\n    - deps: depd@0.4.5\n    - deps: etag@~1.3.1\n    - deps: range-parser@~1.0.2\n\n1.6.1 / 2014-09-07\n==================\n\n  * deps: send@0.9.1\n    - deps: fresh@0.2.4\n\n1.6.0 / 2014-09-07\n==================\n\n  * deps: send@0.9.0\n    - Add `lastModified` option\n    - Use `etag` to generate `ETag` header\n    - deps: debug@~2.0.0\n\n1.5.4 / 2014-09-04\n==================\n\n  * deps: send@0.8.5\n    - Fix a path traversal issue when using `root`\n    - Fix malicious path detection for empty string path\n\n1.5.3 / 2014-08-17\n==================\n\n  * deps: send@0.8.3\n\n1.5.2 / 2014-08-14\n==================\n\n  * deps: send@0.8.2\n    - Work around `fd` leak in Node.js 0.10 for `fs.ReadStream`\n\n1.5.1 / 2014-08-09\n==================\n\n  * Fix parsing of weird `req.originalUrl` values\n  * deps: parseurl@~1.3.0\n  * deps: utils-merge@1.0.0\n\n1.5.0 / 2014-08-05\n==================\n\n  * deps: send@0.8.1\n    - Add `extensions` option\n\n1.4.4 / 2014-08-04\n==================\n\n  * deps: send@0.7.4\n    - Fix serving index files without root dir\n\n1.4.3 / 2014-07-29\n==================\n\n  * deps: send@0.7.3\n    - Fix incorrect 403 on Windows and Node.js 0.11\n\n1.4.2 / 2014-07-27\n==================\n\n  * deps: send@0.7.2\n    - deps: depd@0.4.4\n\n1.4.1 / 2014-07-26\n==================\n\n  * deps: send@0.7.1\n    - deps: depd@0.4.3\n\n1.4.0 / 2014-07-21\n==================\n\n  * deps: parseurl@~1.2.0\n    - Cache URLs based on original value\n    - Remove no-longer-needed URL mis-parse work-around\n    - Simplify the \"fast-path\" `RegExp`\n  * deps: send@0.7.0\n    - Add `dotfiles` option\n    - deps: debug@1.0.4\n    - deps: depd@0.4.2\n\n1.3.2 / 2014-07-11\n==================\n\n  * deps: send@0.6.0\n    - Cap `maxAge` value to 1 year\n    - deps: debug@1.0.3\n\n1.3.1 / 2014-07-09\n==================\n\n  * deps: parseurl@~1.1.3\n    - faster parsing of href-only URLs\n\n1.3.0 / 2014-06-28\n==================\n\n  * Add `setHeaders` option\n  * Include HTML link in redirect response\n  * deps: send@0.5.0\n    - Accept string for `maxAge` (converted by `ms`)\n\n1.2.3 / 2014-06-11\n==================\n\n  * deps: send@0.4.3\n    - Do not throw un-catchable error on file open race condition\n    - Use `escape-html` for HTML escaping\n    - deps: debug@1.0.2\n    - deps: finished@1.2.2\n    - deps: fresh@0.2.2\n\n1.2.2 / 2014-06-09\n==================\n\n  * deps: send@0.4.2\n    - fix \"event emitter leak\" warnings\n    - deps: debug@1.0.1\n    - deps: finished@1.2.1\n\n1.2.1 / 2014-06-02\n==================\n\n  * use `escape-html` for escaping\n  * deps: send@0.4.1\n    - Send `max-age` in `Cache-Control` in correct format\n\n1.2.0 / 2014-05-29\n==================\n\n  * deps: send@0.4.0\n    - Calculate ETag with md5 for reduced collisions\n    - Fix wrong behavior when index file matches directory\n    - Ignore stream errors after request ends\n    - Skip directories in index file search\n    - deps: debug@0.8.1\n\n1.1.0 / 2014-04-24\n==================\n\n  * Accept options directly to `send` module\n  * deps: send@0.3.0\n\n1.0.4 / 2014-04-07\n==================\n\n  * Resolve relative paths at middleware setup\n  * Use parseurl to parse the URL from request\n\n1.0.3 / 2014-03-20\n==================\n\n  * Do not rely on connect-like environments\n\n1.0.2 / 2014-03-06\n==================\n\n  * deps: send@0.2.0\n\n1.0.1 / 2014-03-05\n==================\n\n  * Add mime export for back-compat\n\n1.0.0 / 2014-03-05\n==================\n\n  * Genesis from `connect`\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\serve-static\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\serve-static\\HISTORY.md"
  },
  {
    "Content": "/*!\n * serve-static\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar parseUrl = require('parseurl')\nvar resolve = require('path').resolve\nvar send = require('send')\nvar url = require('url')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = serveStatic\nmodule.exports.mime = send.mime\n\n/**\n * @param {string} root\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction serveStatic (root, options) {\n  if (!root) {\n    throw new TypeError('root path required')\n  }\n\n  if (typeof root !== 'string') {\n    throw new TypeError('root path must be a string')\n  }\n\n  // copy options object\n  var opts = Object.create(options || null)\n\n  // fall-though\n  var fallthrough = opts.fallthrough !== false\n\n  // default redirect\n  var redirect = opts.redirect !== false\n\n  // headers listener\n  var setHeaders = opts.setHeaders\n\n  if (setHeaders && typeof setHeaders !== 'function') {\n    throw new TypeError('option setHeaders must be function')\n  }\n\n  // setup options for send\n  opts.maxage = opts.maxage || opts.maxAge || 0\n  opts.root = resolve(root)\n\n  // construct directory listener\n  var onDirectory = redirect\n    ? createRedirectDirectoryListener()\n    : createNotFoundDirectoryListener()\n\n  return function serveStatic (req, res, next) {\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      if (fallthrough) {\n        return next()\n      }\n\n      // method not allowed\n      res.statusCode = 405\n      res.setHeader('Allow', 'GET, HEAD')\n      res.setHeader('Content-Length', '0')\n      res.end()\n      return\n    }\n\n    var forwardError = !fallthrough\n    var originalUrl = parseUrl.original(req)\n    var path = parseUrl(req).pathname\n\n    // make sure redirect occurs at mount\n    if (path === '/' && originalUrl.pathname.substr(-1) !== '/') {\n      path = ''\n    }\n\n    // create send stream\n    var stream = send(req, path, opts)\n\n    // add directory handler\n    stream.on('directory', onDirectory)\n\n    // add headers listener\n    if (setHeaders) {\n      stream.on('headers', setHeaders)\n    }\n\n    // add file listener for fallthrough\n    if (fallthrough) {\n      stream.on('file', function onFile () {\n        // once file is determined, always forward error\n        forwardError = true\n      })\n    }\n\n    // forward errors\n    stream.on('error', function error (err) {\n      if (forwardError || !(err.statusCode < 500)) {\n        next(err)\n        return\n      }\n\n      next()\n    })\n\n    // pipe\n    stream.pipe(res)\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) !== 0x2f /* / */) {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title, body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Create a directory listener that just 404s.\n * @private\n */\n\nfunction createNotFoundDirectoryListener () {\n  return function notFound () {\n    this.error(404)\n  }\n}\n\n/**\n * Create a directory listener that performs a redirect.\n * @private\n */\n\nfunction createRedirectDirectoryListener () {\n  return function redirect (res) {\n    if (this.hasTrailingSlash()) {\n      this.error(404)\n      return\n    }\n\n    // get original URL\n    var originalUrl = parseUrl.original(this.req)\n\n    // append trailing slash\n    originalUrl.path = null\n    originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + '/')\n\n    // reformat the URL\n    var loc = encodeUrl(url.format(originalUrl))\n    var doc = createHtmlDocument('Redirecting', 'Redirecting to ' + escapeHtml(loc))\n\n    // send redirect response\n    res.statusCode = 301\n    res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n    res.setHeader('Content-Length', Buffer.byteLength(doc))\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n    res.setHeader('Location', loc)\n    res.end(doc)\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\serve-static\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\serve-static\\index.js"
  },
  {
    "Content": "# serve-static\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Linux Build][github-actions-ci-image]][github-actions-ci-url]\n[![Windows Build][appveyor-image]][appveyor-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\n## Install\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install serve-static\n```\n\n## API\n\n```js\nvar serveStatic = require('serve-static')\n```\n\n### serveStatic(root, options)\n\nCreate a new middleware function to serve files from within a given root\ndirectory. The file to serve will be determined by combining `req.url`\nwith the provided root directory. When a file is not found, instead of\nsending a 404 response, this module will instead call `next()` to move on\nto the next middleware, allowing for stacking and fall-backs.\n\n#### Options\n\n##### acceptRanges\n\nEnable or disable accepting ranged requests, defaults to true.\nDisabling this will not send `Accept-Ranges` and ignore the contents\nof the `Range` request header.\n\n##### cacheControl\n\nEnable or disable setting `Cache-Control` response header, defaults to\ntrue. Disabling this will ignore the `immutable` and `maxAge` options.\n\n##### dotfiles\n\n Set how \"dotfiles\" are treated when encountered. A dotfile is a file\nor directory that begins with a dot (\".\"). Note this check is done on\nthe path itself without checking if the path actually exists on the\ndisk. If `root` is specified, only the dotfiles above the root are\nchecked (i.e. the root itself can be within a dotfile when set\nto \"deny\").\n\n  - `'allow'` No special treatment for dotfiles.\n  - `'deny'` Deny a request for a dotfile and 403/`next()`.\n  - `'ignore'` Pretend like the dotfile does not exist and 404/`next()`.\n\nThe default value is similar to `'ignore'`, with the exception that this\ndefault will not ignore the files within a directory that begins with a dot.\n\n##### etag\n\nEnable or disable etag generation, defaults to true.\n\n##### extensions\n\nSet file extension fallbacks. When set, if a file is not found, the given\nextensions will be added to the file name and search for. The first that\nexists will be served. Example: `['html', 'htm']`.\n\nThe default value is `false`.\n\n##### fallthrough\n\nSet the middleware to have client errors fall-through as just unhandled\nrequests, otherwise forward a client error. The difference is that client\nerrors like a bad request or a request to a non-existent file will cause\nthis middleware to simply `next()` to your next middleware when this value\nis `true`. When this value is `false`, these errors (even 404s), will invoke\n`next(err)`.\n\nTypically `true` is desired such that multiple physical directories can be\nmapped to the same web address or for routes to fill in non-existent files.\n\nThe value `false` can be used if this middleware is mounted at a path that\nis designed to be strictly a single file system directory, which allows for\nshort-circuiting 404s for less overhead. This middleware will also reply to\nall methods.\n\nThe default value is `true`.\n\n##### immutable\n\nEnable or disable the `immutable` directive in the `Cache-Control` response\nheader, defaults to `false`. If set to `true`, the `maxAge` option should\nalso be specified to enable caching. The `immutable` directive will prevent\nsupported clients from making conditional requests during the life of the\n`maxAge` option to check if the file has changed.\n\n##### index\n\nBy default this module will send \"index.html\" files in response to a request\non a directory. To disable this set `false` or to supply a new index pass a\nstring or an array in preferred order.\n\n##### lastModified\n\nEnable or disable `Last-Modified` header, defaults to true. Uses the file\nsystem's last modified value.\n\n##### maxAge\n\nProvide a max-age in milliseconds for http caching, defaults to 0. This\ncan also be a string accepted by the [ms](https://www.npmjs.org/package/ms#readme)\nmodule.\n\n##### redirect\n\nRedirect to trailing \"/\" when the pathname is a dir. Defaults to `true`.\n\n##### setHeaders\n\nFunction to set custom headers on response. Alterations to the headers need to\noccur synchronously. The function is called as `fn(res, path, stat)`, where\nthe arguments are:\n\n  - `res` the response object\n  - `path` the file path that is being sent\n  - `stat` the stat object of the file that is being sent\n\n## Examples\n\n### Serve files with vanilla node.js http server\n\n```js\nvar finalhandler = require('finalhandler')\nvar http = require('http')\nvar serveStatic = require('serve-static')\n\n// Serve up public/ftp folder\nvar serve = serveStatic('public/ftp', { index: ['index.html', 'index.htm'] })\n\n// Create server\nvar server = http.createServer(function onRequest (req, res) {\n  serve(req, res, finalhandler(req, res))\n})\n\n// Listen\nserver.listen(3000)\n```\n\n### Serve all files as downloads\n\n```js\nvar contentDisposition = require('content-disposition')\nvar finalhandler = require('finalhandler')\nvar http = require('http')\nvar serveStatic = require('serve-static')\n\n// Serve up public/ftp folder\nvar serve = serveStatic('public/ftp', {\n  index: false,\n  setHeaders: setHeaders\n})\n\n// Set header to force download\nfunction setHeaders (res, path) {\n  res.setHeader('Content-Disposition', contentDisposition(path))\n}\n\n// Create server\nvar server = http.createServer(function onRequest (req, res) {\n  serve(req, res, finalhandler(req, res))\n})\n\n// Listen\nserver.listen(3000)\n```\n\n### Serving using express\n\n#### Simple\n\nThis is a simple example of using Express.\n\n```js\nvar express = require('express')\nvar serveStatic = require('serve-static')\n\nvar app = express()\n\napp.use(serveStatic('public/ftp', { index: ['default.html', 'default.htm'] }))\napp.listen(3000)\n```\n\n#### Multiple roots\n\nThis example shows a simple way to search through multiple directories.\nFiles are searched for in `public-optimized/` first, then `public/` second\nas a fallback.\n\n```js\nvar express = require('express')\nvar path = require('path')\nvar serveStatic = require('serve-static')\n\nvar app = express()\n\napp.use(serveStatic(path.join(__dirname, 'public-optimized')))\napp.use(serveStatic(path.join(__dirname, 'public')))\napp.listen(3000)\n```\n\n#### Different settings for paths\n\nThis example shows how to set a different max age depending on the served\nfile type. In this example, HTML files are not cached, while everything else\nis for 1 day.\n\n```js\nvar express = require('express')\nvar path = require('path')\nvar serveStatic = require('serve-static')\n\nvar app = express()\n\napp.use(serveStatic(path.join(__dirname, 'public'), {\n  maxAge: '1d',\n  setHeaders: setCustomCacheControl\n}))\n\napp.listen(3000)\n\nfunction setCustomCacheControl (res, path) {\n  if (serveStatic.mime.lookup(path) === 'text/html') {\n    // Custom Cache-Control for HTML files\n    res.setHeader('Cache-Control', 'public, max-age=0')\n  }\n}\n```\n\n## License\n\n[MIT](LICENSE)\n\n[appveyor-image]: https://badgen.net/appveyor/ci/dougwilson/serve-static/master?label=windows\n[appveyor-url]: https://ci.appveyor.com/project/dougwilson/serve-static\n[coveralls-image]: https://badgen.net/coveralls/c/github/expressjs/serve-static/master\n[coveralls-url]: https://coveralls.io/r/expressjs/serve-static?branch=master\n[github-actions-ci-image]: https://badgen.net/github/checks/expressjs/serve-static/master?label=linux\n[github-actions-ci-url]: https://github.com/expressjs/serve-static/actions/workflows/ci.yml\n[node-image]: https://badgen.net/npm/node/serve-static\n[node-url]: https://nodejs.org/en/download/\n[npm-downloads-image]: https://badgen.net/npm/dm/serve-static\n[npm-url]: https://npmjs.org/package/serve-static\n[npm-version-image]: https://badgen.net/npm/v/serve-static\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\serve-static\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\serve-static\\README.md"
  },
  {
    "Content": "'use strict'\n/* eslint no-proto: 0 */\nmodule.exports = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties)\n\nfunction setProtoOf (obj, proto) {\n  obj.__proto__ = proto\n  return obj\n}\n\nfunction mixinProperties (obj, proto) {\n  for (var prop in proto) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      obj[prop] = proto[prop]\n    }\n  }\n  return obj\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\setprototypeof\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\setprototypeof\\index.js"
  },
  {
    "Content": "# Polyfill for `Object.setPrototypeOf`\n\n[![NPM Version](https://img.shields.io/npm/v/setprototypeof.svg)](https://npmjs.org/package/setprototypeof)\n[![NPM Downloads](https://img.shields.io/npm/dm/setprototypeof.svg)](https://npmjs.org/package/setprototypeof)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](https://github.com/standard/standard)\n\nA simple cross platform implementation to set the prototype of an instianted object.  Supports all modern browsers and at least back to IE8.\n\n## Usage:\n\n```\n$ npm install --save setprototypeof\n```\n\n```javascript\nvar setPrototypeOf = require('setprototypeof')\n\nvar obj = {}\nsetPrototypeOf(obj, {\n  foo: function () {\n    return 'bar'\n  }\n})\nobj.foo() // bar\n```\n\nTypeScript is also supported:\n\n```typescript\nimport setPrototypeOf from 'setprototypeof'\n```\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\setprototypeof\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\setprototypeof\\README.md"
  },
  {
    "Content": "'use strict'\n/* eslint-env mocha */\n/* eslint no-proto: 0 */\nvar assert = require('assert')\nvar setPrototypeOf = require('..')\n\ndescribe('setProtoOf(obj, proto)', function () {\n  it('should merge objects', function () {\n    var obj = { a: 1, b: 2 }\n    var proto = { b: 3, c: 4 }\n    var mergeObj = setPrototypeOf(obj, proto)\n\n    if (Object.getPrototypeOf) {\n      assert.strictEqual(Object.getPrototypeOf(obj), proto)\n    } else if ({ __proto__: [] } instanceof Array) {\n      assert.strictEqual(obj.__proto__, proto)\n    } else {\n      assert.strictEqual(obj.a, 1)\n      assert.strictEqual(obj.b, 2)\n      assert.strictEqual(obj.c, 4)\n    }\n    assert.strictEqual(mergeObj, obj)\n  })\n})\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\setprototypeof\\test\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\setprototypeof\\test\\index.js"
  },
  {
    "Content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v1.1.0](https://github.com/ljharb/side-channel/compare/v1.0.6...v1.1.0) - 2024-12-11\n\n### Commits\n\n- [Refactor] extract implementations to `side-channel-weakmap`, `side-channel-map`, `side-channel-list` [`ada5955`](https://github.com/ljharb/side-channel/commit/ada595549a5c4c6c853756d598846b180941c6da)\n- [New] add `channel.delete` [`c01d2d3`](https://github.com/ljharb/side-channel/commit/c01d2d3fd51dbb1ce6da72ad7916e61bd6172aad)\n- [types] improve types [`0c54356`](https://github.com/ljharb/side-channel/commit/0c5435651417df41b8cc1a5f7cdce8bffae68cde)\n- [readme] add content [`be24868`](https://github.com/ljharb/side-channel/commit/be248682ac294b0e22c883092c45985aa91c490a)\n- [actions] split out node 10-20, and 20+ [`c4488e2`](https://github.com/ljharb/side-channel/commit/c4488e241ef3d49a19fe266ac830a2e644305911)\n- [types] use shared tsconfig [`0e0d57c`](https://github.com/ljharb/side-channel/commit/0e0d57c2ff17c7b45c6cbd43ebcf553edc9e3adc)\n- [Dev Deps] update `@ljharb/eslint-config`, `@ljharb/tsconfig`, `@types/get-intrinsic`, `@types/object-inspect`, `@types/tape`, `auto-changelog`, `tape` [`fb4f622`](https://github.com/ljharb/side-channel/commit/fb4f622e64a99a1e40b6e5cd7691674a9dc429e4)\n- [Deps] update `call-bind`, `get-intrinsic`, `object-inspect` [`b78336b`](https://github.com/ljharb/side-channel/commit/b78336b886172d1b457d414ac9e28de8c5fecc78)\n- [Tests] replace `aud` with `npm audit` [`ee3ab46`](https://github.com/ljharb/side-channel/commit/ee3ab4690d954311c35115651bcfd45edd205aa1)\n- [Dev Deps] add missing peer dep [`c03e21a`](https://github.com/ljharb/side-channel/commit/c03e21a7def3b67cdc15ae22316884fefcb2f6a8)\n\n## [v1.0.6](https://github.com/ljharb/side-channel/compare/v1.0.5...v1.0.6) - 2024-02-29\n\n### Commits\n\n- add types [`9beef66`](https://github.com/ljharb/side-channel/commit/9beef6643e6d717ea57bedabf86448123a7dd9e9)\n- [meta] simplify `exports` [`4334cf9`](https://github.com/ljharb/side-channel/commit/4334cf9df654151504c383b62a2f9ebdc8d9d5ac)\n- [Deps] update `call-bind` [`d6043c4`](https://github.com/ljharb/side-channel/commit/d6043c4d8f4d7be9037dd0f0419c7a2e0e39ec6a)\n- [Dev Deps] update `tape` [`6aca376`](https://github.com/ljharb/side-channel/commit/6aca3761868dc8cd5ff7fd9799bf6b95e09a6eb0)\n\n## [v1.0.5](https://github.com/ljharb/side-channel/compare/v1.0.4...v1.0.5) - 2024-02-06\n\n### Commits\n\n- [actions] reuse common workflows [`3d2e1ff`](https://github.com/ljharb/side-channel/commit/3d2e1ffd16dd6eaaf3e40ff57951f840d2d63c04)\n- [meta] use `npmignore` to autogenerate an npmignore file [`04296ea`](https://github.com/ljharb/side-channel/commit/04296ea17d1544b0a5d20fd5bfb31aa4f6513eb9)\n- [meta] add `.editorconfig`; add `eclint` [`130f0a6`](https://github.com/ljharb/side-channel/commit/130f0a6adbc04d385c7456a601d38344dce3d6a9)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `safe-publish-latest`, `tape` [`d480c2f`](https://github.com/ljharb/side-channel/commit/d480c2fbe757489ae9b4275491ffbcc3ac4725e9)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `tape` [`ecbe70e`](https://github.com/ljharb/side-channel/commit/ecbe70e53a418234081a77971fec1fdfae20c841)\n- [actions] update rebase action [`75240b9`](https://github.com/ljharb/side-channel/commit/75240b9963b816e8846400d2287cb68f88c7fba7)\n- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `npmignore`, `tape` [`ae8d281`](https://github.com/ljharb/side-channel/commit/ae8d281572430099109870fd9430d2ca3f320b8d)\n- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `tape` [`7125b88`](https://github.com/ljharb/side-channel/commit/7125b885fd0eacad4fee9b073b72d14065ece278)\n- [Deps] update `call-bind`, `get-intrinsic`, `object-inspect` [`82577c9`](https://github.com/ljharb/side-channel/commit/82577c9796304519139a570f82a317211b5f3b86)\n- [Deps] update `call-bind`, `get-intrinsic`, `object-inspect` [`550aadf`](https://github.com/ljharb/side-channel/commit/550aadf20475a6081fd70304cc54f77259a5c8a8)\n- [Tests] increase coverage [`5130877`](https://github.com/ljharb/side-channel/commit/5130877a7b27c862e64e6d1c12a178b28808859d)\n- [Deps] update `get-intrinsic`, `object-inspect` [`ba0194c`](https://github.com/ljharb/side-channel/commit/ba0194c505b1a8a0427be14cadd5b8a46d4d01b8)\n- [meta] add missing `engines.node` [`985fd24`](https://github.com/ljharb/side-channel/commit/985fd249663cb06617a693a94fe08cad12f5cb70)\n- [Refactor] use `es-errors`, so things that only need those do not need `get-intrinsic` [`40227a8`](https://github.com/ljharb/side-channel/commit/40227a87b01709ad2c0eebf87eb4223a800099b9)\n- [Deps] update `get-intrinsic` [`a989b40`](https://github.com/ljharb/side-channel/commit/a989b4024958737ae7be9fbffdeff2078f33a0fd)\n- [Deps] update `object-inspect` [`aec42d2`](https://github.com/ljharb/side-channel/commit/aec42d2ec541a31aaa02475692c87d489237d9a3)\n\n## [v1.0.4](https://github.com/ljharb/side-channel/compare/v1.0.3...v1.0.4) - 2020-12-29\n\n### Commits\n\n- [Tests] migrate tests to Github Actions [`10909cb`](https://github.com/ljharb/side-channel/commit/10909cbf8ce9c0bf96f604cf13d7ffd5a22c2d40)\n- [Refactor] Use a linked list rather than an array, and move accessed nodes to the beginning [`195613f`](https://github.com/ljharb/side-channel/commit/195613f28b5c1e6072ef0b61b5beebaf2b6a304e)\n- [meta] do not publish github action workflow files [`290ec29`](https://github.com/ljharb/side-channel/commit/290ec29cd21a60585145b4a7237ec55228c52c27)\n- [Tests] run `nyc` on all tests; use `tape` runner [`ea6d030`](https://github.com/ljharb/side-channel/commit/ea6d030ff3fe6be2eca39e859d644c51ecd88869)\n- [actions] add \"Allow Edits\" workflow [`d464d8f`](https://github.com/ljharb/side-channel/commit/d464d8fe52b5eddf1504a0ed97f0941a90f32c15)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog` [`02daca8`](https://github.com/ljharb/side-channel/commit/02daca87c6809821c97be468d1afa2f5ef447383)\n- [Refactor] use `call-bind` and `get-intrinsic` instead of `es-abstract` [`e09d481`](https://github.com/ljharb/side-channel/commit/e09d481528452ebafa5cdeae1af665c35aa2deee)\n- [Deps] update `object.assign` [`ee83aa8`](https://github.com/ljharb/side-channel/commit/ee83aa81df313b5e46319a63adb05cf0c179079a)\n- [actions] update rebase action to use checkout v2 [`7726b0b`](https://github.com/ljharb/side-channel/commit/7726b0b058b632fccea709f58960871defaaa9d7)\n\n## [v1.0.3](https://github.com/ljharb/side-channel/compare/v1.0.2...v1.0.3) - 2020-08-23\n\n### Commits\n\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `tape` [`1f10561`](https://github.com/ljharb/side-channel/commit/1f105611ef3acf32dec8032ae5c0baa5e56bb868)\n- [Deps] update `es-abstract`, `object-inspect` [`bc20159`](https://github.com/ljharb/side-channel/commit/bc201597949a505e37cef9eaf24c7010831e6f03)\n- [Dev Deps] update `@ljharb/eslint-config`, `tape` [`b9b2b22`](https://github.com/ljharb/side-channel/commit/b9b2b225f9e0ea72a6ec2b89348f0bd690bc9ed1)\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `tape` [`7055ab4`](https://github.com/ljharb/side-channel/commit/7055ab4de0860606efd2003674a74f1fe6ebc07e)\n- [Dev Deps] update `auto-changelog`; add `aud` [`d278c37`](https://github.com/ljharb/side-channel/commit/d278c37d08227be4f84aa769fcd919e73feeba40)\n- [actions] switch Automatic Rebase workflow to `pull_request_target` event [`3bcf982`](https://github.com/ljharb/side-channel/commit/3bcf982faa122745b39c33ce83d32fdf003741c6)\n- [Tests] only audit prod deps [`18d01c4`](https://github.com/ljharb/side-channel/commit/18d01c4015b82a3d75044c4d5ba7917b2eac01ec)\n- [Deps] update `es-abstract` [`6ab096d`](https://github.com/ljharb/side-channel/commit/6ab096d9de2b482cf5e0717e34e212f5b2b9bc9a)\n- [Dev Deps] update `tape` [`9dc174c`](https://github.com/ljharb/side-channel/commit/9dc174cc651dfd300b4b72da936a0a7eda5f9452)\n- [Deps] update `es-abstract` [`431d0f0`](https://github.com/ljharb/side-channel/commit/431d0f0ff11fbd2ae6f3115582a356d3a1cfce82)\n- [Deps] update `es-abstract` [`49869fd`](https://github.com/ljharb/side-channel/commit/49869fd323bf4453f0ba515c0fb265cf5ab7b932)\n- [meta] Add package.json to package's exports [`77d9cdc`](https://github.com/ljharb/side-channel/commit/77d9cdceb2a9e47700074f2ae0c0a202e7dac0d4)\n\n## [v1.0.2](https://github.com/ljharb/side-channel/compare/v1.0.1...v1.0.2) - 2019-12-20\n\n### Commits\n\n- [Dev Deps] update `@ljharb/eslint-config`, `tape` [`4a526df`](https://github.com/ljharb/side-channel/commit/4a526df44e4701566ed001ec78546193f818b082)\n- [Deps] update `es-abstract` [`d4f6e62`](https://github.com/ljharb/side-channel/commit/d4f6e629b6fb93a07415db7f30d3c90fd7f264fe)\n\n## [v1.0.1](https://github.com/ljharb/side-channel/compare/v1.0.0...v1.0.1) - 2019-12-01\n\n### Commits\n\n- [Fix] add missing \"exports\" [`d212907`](https://github.com/ljharb/side-channel/commit/d2129073abf0701a5343bf28aa2145617604dc2e)\n\n## v1.0.0 - 2019-12-01\n\n### Commits\n\n- Initial implementation [`dbebd3a`](https://github.com/ljharb/side-channel/commit/dbebd3a4b5ed64242f9a6810efe7c4214cd8cde4)\n- Initial tests [`73bdefe`](https://github.com/ljharb/side-channel/commit/73bdefe568c9076cf8c0b8719bc2141aec0e19b8)\n- Initial commit [`43c03e1`](https://github.com/ljharb/side-channel/commit/43c03e1c2849ec50a87b7a5cd76238a62b0b8770)\n- npm init [`5c090a7`](https://github.com/ljharb/side-channel/commit/5c090a765d66a5527d9889b89aeff78dee91348c)\n- [meta] add `auto-changelog` [`a5c4e56`](https://github.com/ljharb/side-channel/commit/a5c4e5675ec02d5eb4d84b4243aeea2a1d38fbec)\n- [actions] add automatic rebasing / merge commit blocking [`bab1683`](https://github.com/ljharb/side-channel/commit/bab1683d8f9754b086e94397699fdc645e0d7077)\n- [meta] add `funding` field; create FUNDING.yml [`63d7aea`](https://github.com/ljharb/side-channel/commit/63d7aeaf34f5650650ae97ca4b9fae685bd0937c)\n- [Tests] add `npm run lint` [`46a5a81`](https://github.com/ljharb/side-channel/commit/46a5a81705cd2664f83df232c01dbbf2ee952885)\n- Only apps should have lockfiles [`8b16b03`](https://github.com/ljharb/side-channel/commit/8b16b0305f00895d90c4e2e5773c854cfea0e448)\n- [meta] add `safe-publish-latest` [`2f098ef`](https://github.com/ljharb/side-channel/commit/2f098ef092a39399cfe548b19a1fc03c2fd2f490)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\side-channel\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\side-channel\\CHANGELOG.md"
  },
  {
    "Content": "'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar inspect = require('object-inspect');\nvar getSideChannelList = require('side-channel-list');\nvar getSideChannelMap = require('side-channel-map');\nvar getSideChannelWeakMap = require('side-channel-weakmap');\n\nvar makeChannel = getSideChannelWeakMap || getSideChannelMap || getSideChannelList;\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannel() {\n\t/** @typedef {ReturnType<typeof getSideChannel>} Channel */\n\n\t/** @type {Channel | undefined} */ var $channelData;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\treturn !!$channelData && $channelData['delete'](key);\n\t\t},\n\t\tget: function (key) {\n\t\t\treturn $channelData && $channelData.get(key);\n\t\t},\n\t\thas: function (key) {\n\t\t\treturn !!$channelData && $channelData.has(key);\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$channelData) {\n\t\t\t\t$channelData = makeChannel();\n\t\t\t}\n\n\t\t\t$channelData.set(key, value);\n\t\t}\n\t};\n\t// @ts-expect-error TODO: figure out why this is erroring\n\treturn channel;\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\side-channel\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\side-channel\\index.js"
  },
  {
    "Content": "# side-channel <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\nStore information about any JS value in a side channel. Uses WeakMap if available.\n\nWarning: in an environment that lacks `WeakMap`, this implementation will leak memory until you `delete` the `key`.\n\n## Getting started\n\n```sh\nnpm install --save side-channel\n```\n\n## Usage/Examples\n\n```js\nconst assert = require('assert');\nconst getSideChannel = require('side-channel');\n\nconst channel = getSideChannel();\n\nconst key = {};\nassert.equal(channel.has(key), false);\nassert.throws(() => channel.assert(key), TypeError);\n\nchannel.set(key, 42);\n\nchannel.assert(key); // does not throw\nassert.equal(channel.has(key), true);\nassert.equal(channel.get(key), 42);\n\nchannel.delete(key);\nassert.equal(channel.has(key), false);\nassert.throws(() => channel.assert(key), TypeError);\n```\n\n## Tests\n\nClone the repo, `npm install`, and run `npm test`\n\n[package-url]: https://npmjs.org/package/side-channel\n[npm-version-svg]: https://versionbadg.es/ljharb/side-channel.svg\n[deps-svg]: https://david-dm.org/ljharb/side-channel.svg\n[deps-url]: https://david-dm.org/ljharb/side-channel\n[dev-deps-svg]: https://david-dm.org/ljharb/side-channel/dev-status.svg\n[dev-deps-url]: https://david-dm.org/ljharb/side-channel#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/side-channel.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/side-channel.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/side-channel.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=side-channel\n[codecov-image]: https://codecov.io/gh/ljharb/side-channel/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/ljharb/side-channel/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/side-channel\n[actions-url]: https://github.com/ljharb/side-channel/actions\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\side-channel\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\side-channel\\README.md"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\n\nvar getSideChannel = require('../');\n\ntest('getSideChannel', function (t) {\n\tt.test('export', function (st) {\n\t\tst.equal(typeof getSideChannel, 'function', 'is a function');\n\n\t\tst.equal(getSideChannel.length, 0, 'takes no arguments');\n\n\t\tvar channel = getSideChannel();\n\t\tst.ok(channel, 'is truthy');\n\t\tst.equal(typeof channel, 'object', 'is an object');\n\t\tst.end();\n\t});\n\n\tt.test('assert', function (st) {\n\t\tvar channel = getSideChannel();\n\t\tst['throws'](\n\t\t\tfunction () { channel.assert({}); },\n\t\t\tTypeError,\n\t\t\t'nonexistent value throws'\n\t\t);\n\n\t\tvar o = {};\n\t\tchannel.set(o, 'data');\n\t\tst.doesNotThrow(function () { channel.assert(o); }, 'existent value noops');\n\n\t\tst.end();\n\t});\n\n\tt.test('has', function (st) {\n\t\tvar channel = getSideChannel();\n\t\t/** @type {unknown[]} */ var o = [];\n\n\t\tst.equal(channel.has(o), false, 'nonexistent value yields false');\n\n\t\tchannel.set(o, 'foo');\n\t\tst.equal(channel.has(o), true, 'existent value yields true');\n\n\t\tst.equal(channel.has('abc'), false, 'non object value non existent yields false');\n\n\t\tchannel.set('abc', 'foo');\n\t\tst.equal(channel.has('abc'), true, 'non object value that exists yields true');\n\n\t\tst.end();\n\t});\n\n\tt.test('get', function (st) {\n\t\tvar channel = getSideChannel();\n\t\tvar o = {};\n\t\tst.equal(channel.get(o), undefined, 'nonexistent value yields undefined');\n\n\t\tvar data = {};\n\t\tchannel.set(o, data);\n\t\tst.equal(channel.get(o), data, '\"get\" yields data set by \"set\"');\n\n\t\tst.end();\n\t});\n\n\tt.test('set', function (st) {\n\t\tvar channel = getSideChannel();\n\t\tvar o = function () {};\n\t\tst.equal(channel.get(o), undefined, 'value not set');\n\n\t\tchannel.set(o, 42);\n\t\tst.equal(channel.get(o), 42, 'value was set');\n\n\t\tchannel.set(o, Infinity);\n\t\tst.equal(channel.get(o), Infinity, 'value was set again');\n\n\t\tvar o2 = {};\n\t\tchannel.set(o2, 17);\n\t\tst.equal(channel.get(o), Infinity, 'o is not modified');\n\t\tst.equal(channel.get(o2), 17, 'o2 is set');\n\n\t\tchannel.set(o, 14);\n\t\tst.equal(channel.get(o), 14, 'o is modified');\n\t\tst.equal(channel.get(o2), 17, 'o2 is not modified');\n\n\t\tst.end();\n\t});\n\n\tt.test('delete', function (st) {\n\t\tvar channel = getSideChannel();\n\t\tvar o = {};\n\t\tst.equal(channel['delete']({}), false, 'nonexistent value yields false');\n\n\t\tchannel.set(o, 42);\n\t\tst.equal(channel.has(o), true, 'value is set');\n\n\t\tst.equal(channel['delete']({}), false, 'nonexistent value still yields false');\n\n\t\tst.equal(channel['delete'](o), true, 'deleted value yields true');\n\n\t\tst.equal(channel.has(o), false, 'value is no longer set');\n\n\t\tst.end();\n\t});\n\n\tt.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\side-channel\\test\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\side-channel\\test\\index.js"
  },
  {
    "Content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## v1.0.0 - 2024-12-10\n\n### Commits\n\n- Initial implementation, tests, readme, types [`5d6baee`](https://github.com/ljharb/side-channel-list/commit/5d6baee5c9054a1238007f5a1dfc109a7a816251)\n- Initial commit [`3ae784c`](https://github.com/ljharb/side-channel-list/commit/3ae784c63a47895fbaeed2a91ab54a8029a7a100)\n- npm init [`07055a4`](https://github.com/ljharb/side-channel-list/commit/07055a4d139895565b199dba5fe2479c1a1b9e28)\n- Only apps should have lockfiles [`9573058`](https://github.com/ljharb/side-channel-list/commit/9573058a47494e2d68f8c6c77b5d7fbe441949c1)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\side-channel-list\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\side-channel-list\\CHANGELOG.md"
  },
  {
    "Content": "'use strict';\n\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\n\n/*\n* This function traverses the list returning the node corresponding to the given key.\n*\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list.\n* By doing so, all the recently used nodes can be accessed relatively quickly.\n*/\n/** @type {import('./list.d.ts').listGetNode} */\n// eslint-disable-next-line consistent-return\nvar listGetNode = function (list, key, isDelete) {\n\t/** @type {typeof list | NonNullable<(typeof list)['next']>} */\n\tvar prev = list;\n\t/** @type {(typeof list)['next']} */\n\tvar curr;\n\t// eslint-disable-next-line eqeqeq\n\tfor (; (curr = prev.next) != null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tif (!isDelete) {\n\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\tcurr.next = /** @type {NonNullable<typeof list.next>} */ (list.next);\n\t\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\t}\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\n/** @type {import('./list.d.ts').listGet} */\nvar listGet = function (objects, key) {\n\tif (!objects) {\n\t\treturn void undefined;\n\t}\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\n/** @type {import('./list.d.ts').listSet} */\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = /** @type {import('./list.d.ts').ListNode<typeof value, typeof key>} */ ({ // eslint-disable-line no-param-reassign, no-extra-parens\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t});\n\t}\n};\n/** @type {import('./list.d.ts').listHas} */\nvar listHas = function (objects, key) {\n\tif (!objects) {\n\t\treturn false;\n\t}\n\treturn !!listGetNode(objects, key);\n};\n/** @type {import('./list.d.ts').listDelete} */\n// eslint-disable-next-line consistent-return\nvar listDelete = function (objects, key) {\n\tif (objects) {\n\t\treturn listGetNode(objects, key, true);\n\t}\n};\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannelList() {\n\t/** @typedef {ReturnType<typeof getSideChannelList>} Channel */\n\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t/** @type {import('./list.d.ts').RootNode<V, K> | undefined} */ var $o;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\tvar root = $o && $o.next;\n\t\t\tvar deletedNode = listDelete($o, key);\n\t\t\tif (deletedNode && root && root === deletedNode) {\n\t\t\t\t$o = void undefined;\n\t\t\t}\n\t\t\treturn !!deletedNode;\n\t\t},\n\t\tget: function (key) {\n\t\t\treturn listGet($o, key);\n\t\t},\n\t\thas: function (key) {\n\t\t\treturn listHas($o, key);\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$o) {\n\t\t\t\t// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head\n\t\t\t\t$o = {\n\t\t\t\t\tnext: void undefined\n\t\t\t\t};\n\t\t\t}\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\tlistSet(/** @type {NonNullable<typeof $o>} */ ($o), key, value);\n\t\t}\n\t};\n\t// @ts-expect-error TODO: figure out why this is erroring\n\treturn channel;\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\side-channel-list\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\side-channel-list\\index.js"
  },
  {
    "Content": "# side-channel-list <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\nStore information about any JS value in a side channel, using a linked list.\n\nWarning: this implementation will leak memory until you `delete` the `key`.\nUse [`side-channel`](https://npmjs.com/side-channel) for the best available strategy.\n\n## Getting started\n\n```sh\nnpm install --save side-channel-list\n```\n\n## Usage/Examples\n\n```js\nconst assert = require('assert');\nconst getSideChannelList = require('side-channel-list');\n\nconst channel = getSideChannelList();\n\nconst key = {};\nassert.equal(channel.has(key), false);\nassert.throws(() => channel.assert(key), TypeError);\n\nchannel.set(key, 42);\n\nchannel.assert(key); // does not throw\nassert.equal(channel.has(key), true);\nassert.equal(channel.get(key), 42);\n\nchannel.delete(key);\nassert.equal(channel.has(key), false);\nassert.throws(() => channel.assert(key), TypeError);\n```\n\n## Tests\n\nClone the repo, `npm install`, and run `npm test`\n\n[package-url]: https://npmjs.org/package/side-channel-list\n[npm-version-svg]: https://versionbadg.es/ljharb/side-channel-list.svg\n[deps-svg]: https://david-dm.org/ljharb/side-channel-list.svg\n[deps-url]: https://david-dm.org/ljharb/side-channel-list\n[dev-deps-svg]: https://david-dm.org/ljharb/side-channel-list/dev-status.svg\n[dev-deps-url]: https://david-dm.org/ljharb/side-channel-list#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/side-channel-list.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/side-channel-list.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/side-channel-list.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=side-channel-list\n[codecov-image]: https://codecov.io/gh/ljharb/side-channel-list/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/ljharb/side-channel-list/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/side-channel-list\n[actions-url]: https://github.com/ljharb/side-channel-list/actions\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\side-channel-list\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\side-channel-list\\README.md"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\n\nvar getSideChannelList = require('../');\n\ntest('getSideChannelList', function (t) {\n\tt.test('export', function (st) {\n\t\tst.equal(typeof getSideChannelList, 'function', 'is a function');\n\n\t\tst.equal(getSideChannelList.length, 0, 'takes no arguments');\n\n\t\tvar channel = getSideChannelList();\n\t\tst.ok(channel, 'is truthy');\n\t\tst.equal(typeof channel, 'object', 'is an object');\n\t\tst.end();\n\t});\n\n\tt.test('assert', function (st) {\n\t\tvar channel = getSideChannelList();\n\t\tst['throws'](\n\t\t\tfunction () { channel.assert({}); },\n\t\t\tTypeError,\n\t\t\t'nonexistent value throws'\n\t\t);\n\n\t\tvar o = {};\n\t\tchannel.set(o, 'data');\n\t\tst.doesNotThrow(function () { channel.assert(o); }, 'existent value noops');\n\n\t\tst.end();\n\t});\n\n\tt.test('has', function (st) {\n\t\tvar channel = getSideChannelList();\n\t\t/** @type {unknown[]} */ var o = [];\n\n\t\tst.equal(channel.has(o), false, 'nonexistent value yields false');\n\n\t\tchannel.set(o, 'foo');\n\t\tst.equal(channel.has(o), true, 'existent value yields true');\n\n\t\tst.equal(channel.has('abc'), false, 'non object value non existent yields false');\n\n\t\tchannel.set('abc', 'foo');\n\t\tst.equal(channel.has('abc'), true, 'non object value that exists yields true');\n\n\t\tst.end();\n\t});\n\n\tt.test('get', function (st) {\n\t\tvar channel = getSideChannelList();\n\t\tvar o = {};\n\t\tst.equal(channel.get(o), undefined, 'nonexistent value yields undefined');\n\n\t\tvar data = {};\n\t\tchannel.set(o, data);\n\t\tst.equal(channel.get(o), data, '\"get\" yields data set by \"set\"');\n\n\t\tst.end();\n\t});\n\n\tt.test('set', function (st) {\n\t\tvar channel = getSideChannelList();\n\t\tvar o = function () {};\n\t\tst.equal(channel.get(o), undefined, 'value not set');\n\n\t\tchannel.set(o, 42);\n\t\tst.equal(channel.get(o), 42, 'value was set');\n\n\t\tchannel.set(o, Infinity);\n\t\tst.equal(channel.get(o), Infinity, 'value was set again');\n\n\t\tvar o2 = {};\n\t\tchannel.set(o2, 17);\n\t\tst.equal(channel.get(o), Infinity, 'o is not modified');\n\t\tst.equal(channel.get(o2), 17, 'o2 is set');\n\n\t\tchannel.set(o, 14);\n\t\tst.equal(channel.get(o), 14, 'o is modified');\n\t\tst.equal(channel.get(o2), 17, 'o2 is not modified');\n\n\t\tst.end();\n\t});\n\n\tt.test('delete', function (st) {\n\t\tvar channel = getSideChannelList();\n\t\tvar o = {};\n\t\tst.equal(channel['delete']({}), false, 'nonexistent value yields false');\n\n\t\tchannel.set(o, 42);\n\t\tst.equal(channel.has(o), true, 'value is set');\n\n\t\tst.equal(channel['delete']({}), false, 'nonexistent value still yields false');\n\n\t\tst.equal(channel['delete'](o), true, 'deleted value yields true');\n\n\t\tst.equal(channel.has(o), false, 'value is no longer set');\n\n\t\tst.end();\n\t});\n\n\tt.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\side-channel-list\\test\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\side-channel-list\\test\\index.js"
  },
  {
    "Content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v1.0.1](https://github.com/ljharb/side-channel-map/compare/v1.0.0...v1.0.1) - 2024-12-10\n\n### Commits\n\n- [Deps] update `call-bound` [`6d05aaa`](https://github.com/ljharb/side-channel-map/commit/6d05aaa4ce5f2be4e7825df433d650696f0ba40f)\n- [types] fix generics ordering [`11c0184`](https://github.com/ljharb/side-channel-map/commit/11c0184132ac11fdc16857e12682e148e5e9ee74)\n\n## v1.0.0 - 2024-12-10\n\n### Commits\n\n- Initial implementation, tests, readme, types [`ad877b4`](https://github.com/ljharb/side-channel-map/commit/ad877b42926d46d63fff76a2bd01d2b4a01959a9)\n- Initial commit [`28f8879`](https://github.com/ljharb/side-channel-map/commit/28f8879c512abe8fcf9b6a4dc7754a0287e5eba4)\n- npm init [`2c9604e`](https://github.com/ljharb/side-channel-map/commit/2c9604e5aa40223e425ea7cea78f8a07697504bd)\n- Only apps should have lockfiles [`5e7ba9c`](https://github.com/ljharb/side-channel-map/commit/5e7ba9cffe3ef42095815adc8ac1255b49bbadf5)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\side-channel-map\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\side-channel-map\\CHANGELOG.md"
  },
  {
    "Content": "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\nvar $Map = GetIntrinsic('%Map%', true);\n\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => V} */\nvar $mapGet = callBound('Map.prototype.get', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K, value: V) => void} */\nvar $mapSet = callBound('Map.prototype.set', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */\nvar $mapHas = callBound('Map.prototype.has', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */\nvar $mapDelete = callBound('Map.prototype.delete', true);\n/** @type {<K, V>(thisArg: Map<K, V>) => number} */\nvar $mapSize = callBound('Map.prototype.size', true);\n\n/** @type {import('.')} */\nmodule.exports = !!$Map && /** @type {Exclude<import('.'), false>} */ function getSideChannelMap() {\n\t/** @typedef {ReturnType<typeof getSideChannelMap>} Channel */\n\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t/** @type {Map<K, V> | undefined} */ var $m;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\tif ($m) {\n\t\t\t\tvar result = $mapDelete($m, key);\n\t\t\t\tif ($mapSize($m) === 0) {\n\t\t\t\t\t$m = void undefined;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($m) {\n\t\t\t\treturn $mapGet($m, key);\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($m) {\n\t\t\t\treturn $mapHas($m, key);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$m) {\n\t\t\t\t// @ts-expect-error TS can't handle narrowing a variable inside a closure\n\t\t\t\t$m = new $Map();\n\t\t\t}\n\t\t\t$mapSet($m, key, value);\n\t\t}\n\t};\n\n\t// @ts-expect-error TODO: figure out why TS is erroring here\n\treturn channel;\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\side-channel-map\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\side-channel-map\\index.js"
  },
  {
    "Content": "# side-channel-map <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\nStore information about any JS value in a side channel, using a Map.\n\nWarning: if the `key` is an object, this implementation will leak memory until you `delete` it.\nUse [`side-channel`](https://npmjs.com/side-channel) for the best available strategy.\n\n## Getting started\n\n```sh\nnpm install --save side-channel-map\n```\n\n## Usage/Examples\n\n```js\nconst assert = require('assert');\nconst getSideChannelMap = require('side-channel-map');\n\nconst channel = getSideChannelMap();\n\nconst key = {};\nassert.equal(channel.has(key), false);\nassert.throws(() => channel.assert(key), TypeError);\n\nchannel.set(key, 42);\n\nchannel.assert(key); // does not throw\nassert.equal(channel.has(key), true);\nassert.equal(channel.get(key), 42);\n\nchannel.delete(key);\nassert.equal(channel.has(key), false);\nassert.throws(() => channel.assert(key), TypeError);\n```\n\n## Tests\n\nClone the repo, `npm install`, and run `npm test`\n\n[package-url]: https://npmjs.org/package/side-channel-map\n[npm-version-svg]: https://versionbadg.es/ljharb/side-channel-map.svg\n[deps-svg]: https://david-dm.org/ljharb/side-channel-map.svg\n[deps-url]: https://david-dm.org/ljharb/side-channel-map\n[dev-deps-svg]: https://david-dm.org/ljharb/side-channel-map/dev-status.svg\n[dev-deps-url]: https://david-dm.org/ljharb/side-channel-map#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/side-channel-map.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/side-channel-map.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/side-channel-map.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=side-channel-map\n[codecov-image]: https://codecov.io/gh/ljharb/side-channel-map/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/ljharb/side-channel-map/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/side-channel-map\n[actions-url]: https://github.com/ljharb/side-channel-map/actions\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\side-channel-map\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\side-channel-map\\README.md"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\n\nvar getSideChannelMap = require('../');\n\ntest('getSideChannelMap', { skip: typeof Map !== 'function' }, function (t) {\n\tvar getSideChannel = getSideChannelMap || function () {\n\t\tthrow new EvalError('should never happen');\n\t};\n\n\tt.test('export', function (st) {\n\t\tst.equal(typeof getSideChannel, 'function', 'is a function');\n\n\t\tst.equal(getSideChannel.length, 0, 'takes no arguments');\n\n\t\tvar channel = getSideChannel();\n\t\tst.ok(channel, 'is truthy');\n\t\tst.equal(typeof channel, 'object', 'is an object');\n\t\tst.end();\n\t});\n\n\tt.test('assert', function (st) {\n\t\tvar channel = getSideChannel();\n\t\tst['throws'](\n\t\t\tfunction () { channel.assert({}); },\n\t\t\tTypeError,\n\t\t\t'nonexistent value throws'\n\t\t);\n\n\t\tvar o = {};\n\t\tchannel.set(o, 'data');\n\t\tst.doesNotThrow(function () { channel.assert(o); }, 'existent value noops');\n\n\t\tst.end();\n\t});\n\n\tt.test('has', function (st) {\n\t\tvar channel = getSideChannel();\n\t\t/** @type {unknown[]} */ var o = [];\n\n\t\tst.equal(channel.has(o), false, 'nonexistent value yields false');\n\n\t\tchannel.set(o, 'foo');\n\t\tst.equal(channel.has(o), true, 'existent value yields true');\n\n\t\tst.equal(channel.has('abc'), false, 'non object value non existent yields false');\n\n\t\tchannel.set('abc', 'foo');\n\t\tst.equal(channel.has('abc'), true, 'non object value that exists yields true');\n\n\t\tst.end();\n\t});\n\n\tt.test('get', function (st) {\n\t\tvar channel = getSideChannel();\n\t\tvar o = {};\n\t\tst.equal(channel.get(o), undefined, 'nonexistent value yields undefined');\n\n\t\tvar data = {};\n\t\tchannel.set(o, data);\n\t\tst.equal(channel.get(o), data, '\"get\" yields data set by \"set\"');\n\n\t\tst.end();\n\t});\n\n\tt.test('set', function (st) {\n\t\tvar channel = getSideChannel();\n\t\tvar o = function () {};\n\t\tst.equal(channel.get(o), undefined, 'value not set');\n\n\t\tchannel.set(o, 42);\n\t\tst.equal(channel.get(o), 42, 'value was set');\n\n\t\tchannel.set(o, Infinity);\n\t\tst.equal(channel.get(o), Infinity, 'value was set again');\n\n\t\tvar o2 = {};\n\t\tchannel.set(o2, 17);\n\t\tst.equal(channel.get(o), Infinity, 'o is not modified');\n\t\tst.equal(channel.get(o2), 17, 'o2 is set');\n\n\t\tchannel.set(o, 14);\n\t\tst.equal(channel.get(o), 14, 'o is modified');\n\t\tst.equal(channel.get(o2), 17, 'o2 is not modified');\n\n\t\tst.end();\n\t});\n\n\tt.test('delete', function (st) {\n\t\tvar channel = getSideChannel();\n\t\tvar o = {};\n\t\tst.equal(channel['delete']({}), false, 'nonexistent value yields false');\n\n\t\tchannel.set(o, 42);\n\t\tst.equal(channel.has(o), true, 'value is set');\n\n\t\tst.equal(channel['delete']({}), false, 'nonexistent value still yields false');\n\n\t\tst.equal(channel['delete'](o), true, 'deleted value yields true');\n\n\t\tst.equal(channel.has(o), false, 'value is no longer set');\n\n\t\tst.end();\n\t});\n\n\tt.end();\n});\n\ntest('getSideChannelMap, no Maps', { skip: typeof Map === 'function' }, function (t) {\n\tt.equal(getSideChannelMap, false, 'is false');\n\n\tt.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\side-channel-map\\test\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\side-channel-map\\test\\index.js"
  },
  {
    "Content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v1.0.2](https://github.com/ljharb/side-channel-weakmap/compare/v1.0.1...v1.0.2) - 2024-12-10\n\n### Commits\n\n- [types] fix generics ordering [`1b62e94`](https://github.com/ljharb/side-channel-weakmap/commit/1b62e94a2ad6ed30b640ba73c4a2535836c67289)\n\n## [v1.0.1](https://github.com/ljharb/side-channel-weakmap/compare/v1.0.0...v1.0.1) - 2024-12-10\n\n### Commits\n\n- [types] fix generics ordering [`08a4a5d`](https://github.com/ljharb/side-channel-weakmap/commit/08a4a5dbffedc3ebc79f1aaaf5a3dd6d2196dc1b)\n- [Deps] update `side-channel-map` [`b53fe44`](https://github.com/ljharb/side-channel-weakmap/commit/b53fe447dfdd3a9aebedfd015b384eac17fce916)\n\n## v1.0.0 - 2024-12-10\n\n### Commits\n\n- Initial implementation, tests, readme, types [`53c0fa4`](https://github.com/ljharb/side-channel-weakmap/commit/53c0fa4788435a006f58b9d7b43cb65989ecee49)\n- Initial commit [`a157947`](https://github.com/ljharb/side-channel-weakmap/commit/a157947f26fcaf2c4a941d3a044e76bf67343532)\n- npm init [`54dfc55`](https://github.com/ljharb/side-channel-weakmap/commit/54dfc55bafb16265910d5aad4e743c43aee5bbbb)\n- Only apps should have lockfiles [`0ddd6c7`](https://github.com/ljharb/side-channel-weakmap/commit/0ddd6c7b07fe8ee04d67b2e9f7255af7ce62c07d)\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\side-channel-weakmap\\CHANGELOG.md",
    "RelativePath": "tools\\backend\\node_modules\\side-channel-weakmap\\CHANGELOG.md"
  },
  {
    "Content": "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bound');\nvar inspect = require('object-inspect');\nvar getSideChannelMap = require('side-channel-map');\n\nvar $TypeError = require('es-errors/type');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\n\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => V} */\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K, value: V) => void} */\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */\nvar $weakMapDelete = callBound('WeakMap.prototype.delete', true);\n\n/** @type {import('.')} */\nmodule.exports = $WeakMap\n\t? /** @type {Exclude<import('.'), false>} */ function getSideChannelWeakMap() {\n\t\t/** @typedef {ReturnType<typeof getSideChannelWeakMap>} Channel */\n\t\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t\t/** @type {WeakMap<K & object, V> | undefined} */ var $wm;\n\t\t/** @type {Channel | undefined} */ var $m;\n\n\t\t/** @type {Channel} */\n\t\tvar channel = {\n\t\t\tassert: function (key) {\n\t\t\t\tif (!channel.has(key)) {\n\t\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t\t}\n\t\t\t},\n\t\t\t'delete': function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapDelete($wm, key);\n\t\t\t\t\t}\n\t\t\t\t} else if (getSideChannelMap) {\n\t\t\t\t\tif ($m) {\n\t\t\t\t\t\treturn $m['delete'](key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tget: function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn $m && $m.get(key);\n\t\t\t},\n\t\t\thas: function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!$m && $m.has(key);\n\t\t\t},\n\t\t\tset: function (key, value) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif (!$wm) {\n\t\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t\t}\n\t\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t\t} else if (getSideChannelMap) {\n\t\t\t\t\tif (!$m) {\n\t\t\t\t\t\t$m = getSideChannelMap();\n\t\t\t\t\t}\n\t\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\t\t/** @type {NonNullable<typeof $m>} */ ($m).set(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// @ts-expect-error TODO: figure out why this is erroring\n\t\treturn channel;\n\t}\n\t: getSideChannelMap;\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\side-channel-weakmap\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\side-channel-weakmap\\index.js"
  },
  {
    "Content": "# side-channel-weakmap <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\nStore information about any JS value in a side channel. Uses WeakMap if available.\n\nWarning: this implementation will leak memory until you `delete` the `key`.\nUse [`side-channel`](https://npmjs.com/side-channel) for the best available strategy.\n\n## Getting started\n\n```sh\nnpm install --save side-channel-weakmap\n```\n\n## Usage/Examples\n\n```js\nconst assert = require('assert');\nconst getSideChannelList = require('side-channel-weakmap');\n\nconst channel = getSideChannelList();\n\nconst key = {};\nassert.equal(channel.has(key), false);\nassert.throws(() => channel.assert(key), TypeError);\n\nchannel.set(key, 42);\n\nchannel.assert(key); // does not throw\nassert.equal(channel.has(key), true);\nassert.equal(channel.get(key), 42);\n\nchannel.delete(key);\nassert.equal(channel.has(key), false);\nassert.throws(() => channel.assert(key), TypeError);\n```\n\n## Tests\n\nClone the repo, `npm install`, and run `npm test`\n\n[package-url]: https://npmjs.org/package/side-channel-weakmap\n[npm-version-svg]: https://versionbadg.es/ljharb/side-channel-weakmap.svg\n[deps-svg]: https://david-dm.org/ljharb/side-channel-weakmap.svg\n[deps-url]: https://david-dm.org/ljharb/side-channel-weakmap\n[dev-deps-svg]: https://david-dm.org/ljharb/side-channel-weakmap/dev-status.svg\n[dev-deps-url]: https://david-dm.org/ljharb/side-channel-weakmap#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/side-channel-weakmap.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/side-channel-weakmap.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/side-channel-weakmap.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=side-channel-weakmap\n[codecov-image]: https://codecov.io/gh/ljharb/side-channel-weakmap/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/ljharb/side-channel-weakmap/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/side-channel-weakmap\n[actions-url]: https://github.com/ljharb/side-channel-weakmap/actions\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\side-channel-weakmap\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\side-channel-weakmap\\README.md"
  },
  {
    "Content": "'use strict';\n\nvar test = require('tape');\n\nvar getSideChannelWeakMap = require('../');\n\ntest('getSideChannelMap', { skip: typeof WeakMap !== 'function' && typeof Map !== 'function' }, function (t) {\n\tvar getSideChannel = getSideChannelWeakMap || function () {\n\t\tthrow new EvalError('should never happen');\n\t};\n\n\tt.test('export', function (st) {\n\t\tst.equal(typeof getSideChannel, 'function', 'is a function');\n\n\t\tst.equal(getSideChannel.length, 0, 'takes no arguments');\n\n\t\tvar channel = getSideChannel();\n\t\tst.ok(channel, 'is truthy');\n\t\tst.equal(typeof channel, 'object', 'is an object');\n\t\tst.end();\n\t});\n\n\tt.test('assert', function (st) {\n\t\tvar channel = getSideChannel();\n\t\tst['throws'](\n\t\t\tfunction () { channel.assert({}); },\n\t\t\tTypeError,\n\t\t\t'nonexistent value throws'\n\t\t);\n\n\t\tvar o = {};\n\t\tchannel.set(o, 'data');\n\t\tst.doesNotThrow(function () { channel.assert(o); }, 'existent value noops');\n\n\t\tst.end();\n\t});\n\n\tt.test('has', function (st) {\n\t\tvar channel = getSideChannel();\n\t\t/** @type {unknown[]} */ var o = [];\n\n\t\tst.equal(channel.has(o), false, 'nonexistent value yields false');\n\n\t\tchannel.set(o, 'foo');\n\t\tst.equal(channel.has(o), true, 'existent value yields true');\n\n\t\tst.equal(channel.has('abc'), false, 'non object value non existent yields false');\n\n\t\tchannel.set('abc', 'foo');\n\t\tst.equal(channel.has('abc'), true, 'non object value that exists yields true');\n\n\t\tst.end();\n\t});\n\n\tt.test('get', function (st) {\n\t\tvar channel = getSideChannel();\n\t\tvar o = {};\n\t\tst.equal(channel.get(o), undefined, 'nonexistent value yields undefined');\n\n\t\tvar data = {};\n\t\tchannel.set(o, data);\n\t\tst.equal(channel.get(o), data, '\"get\" yields data set by \"set\"');\n\n\t\tst.end();\n\t});\n\n\tt.test('set', function (st) {\n\t\tvar channel = getSideChannel();\n\t\tvar o = function () {};\n\t\tst.equal(channel.get(o), undefined, 'value not set');\n\n\t\tchannel.set(o, 42);\n\t\tst.equal(channel.get(o), 42, 'value was set');\n\n\t\tchannel.set(o, Infinity);\n\t\tst.equal(channel.get(o), Infinity, 'value was set again');\n\n\t\tvar o2 = {};\n\t\tchannel.set(o2, 17);\n\t\tst.equal(channel.get(o), Infinity, 'o is not modified');\n\t\tst.equal(channel.get(o2), 17, 'o2 is set');\n\n\t\tchannel.set(o, 14);\n\t\tst.equal(channel.get(o), 14, 'o is modified');\n\t\tst.equal(channel.get(o2), 17, 'o2 is not modified');\n\n\t\tst.end();\n\t});\n\n\tt.test('delete', function (st) {\n\t\tvar channel = getSideChannel();\n\t\tvar o = {};\n\t\tst.equal(channel['delete']({}), false, 'nonexistent value yields false');\n\n\t\tchannel.set(o, 42);\n\t\tst.equal(channel.has(o), true, 'value is set');\n\n\t\tst.equal(channel['delete']({}), false, 'nonexistent value still yields false');\n\n\t\tst.equal(channel['delete'](o), true, 'deleted value yields true');\n\n\t\tst.equal(channel.has(o), false, 'value is no longer set');\n\n\t\tst.end();\n\t});\n\n\tt.end();\n});\n\ntest('getSideChannelMap, no WeakMaps and/or Maps', { skip: typeof WeakMap === 'function' || typeof Map === 'function' }, function (t) {\n\tt.equal(getSideChannelWeakMap, false, 'is false');\n\n\tt.end();\n});\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\side-channel-weakmap\\test\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\side-channel-weakmap\\test\\index.js"
  },
  {
    "Content": "2.0.1 / 2021-01-03\n==================\n\n  * Fix returning values from `Object.prototype`\n\n2.0.0 / 2020-04-19\n==================\n\n  * Drop support for Node.js 0.6\n  * Fix messaging casing of `418 I'm a Teapot`\n  * Remove code 306\n  * Remove `status[code]` exports; use `status.message[code]`\n  * Remove `status[msg]` exports; use `status.code[msg]`\n  * Rename `425 Unordered Collection` to standard `425 Too Early`\n  * Rename `STATUS_CODES` export to `message`\n  * Return status message for `statuses(code)` when given code\n\n1.5.0 / 2018-03-27\n==================\n\n  * Add `103 Early Hints`\n\n1.4.0 / 2017-10-20\n==================\n\n  * Add `STATUS_CODES` export\n\n1.3.1 / 2016-11-11\n==================\n\n  * Fix return type in JSDoc\n\n1.3.0 / 2016-05-17\n==================\n\n  * Add `421 Misdirected Request`\n  * perf: enable strict mode\n\n1.2.1 / 2015-02-01\n==================\n\n  * Fix message for status 451\n    - `451 Unavailable For Legal Reasons`\n\n1.2.0 / 2014-09-28\n==================\n\n  * Add `208 Already Repored`\n  * Add `226 IM Used`\n  * Add `306 (Unused)`\n  * Add `415 Unable For Legal Reasons`\n  * Add `508 Loop Detected`\n\n1.1.1 / 2014-09-24\n==================\n\n  * Add missing 308 to `codes.json`\n\n1.1.0 / 2014-09-21\n==================\n\n  * Add `codes.json` for universal support\n\n1.0.4 / 2014-08-20\n==================\n\n  * Package cleanup\n\n1.0.3 / 2014-06-08\n==================\n\n  * Add 308 to `.redirect` category\n\n1.0.2 / 2014-03-13\n==================\n\n  * Add `.retry` category\n\n1.0.1 / 2014-03-12\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\statuses\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\statuses\\HISTORY.md"
  },
  {
    "Content": "/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.message = codes\n\n// status message (lower-case) to code map\nstatus.code = createMessageToStatusCodeMap(codes)\n\n// array of status codes\nstatus.codes = createStatusCodeList(codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Create a map of message to status code.\n * @private\n */\n\nfunction createMessageToStatusCodeMap (codes) {\n  var map = {}\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // populate map\n    map[message.toLowerCase()] = status\n  })\n\n  return map\n}\n\n/**\n * Create a list of all status codes.\n * @private\n */\n\nfunction createStatusCodeList (codes) {\n  return Object.keys(codes).map(function mapCode (code) {\n    return Number(code)\n  })\n}\n\n/**\n * Get the status code for given message.\n * @private\n */\n\nfunction getStatusCode (message) {\n  var msg = message.toLowerCase()\n\n  if (!Object.prototype.hasOwnProperty.call(status.code, msg)) {\n    throw new Error('invalid status message: \"' + message + '\"')\n  }\n\n  return status.code[msg]\n}\n\n/**\n * Get the status message for given code.\n * @private\n */\n\nfunction getStatusMessage (code) {\n  if (!Object.prototype.hasOwnProperty.call(status.message, code)) {\n    throw new Error('invalid status code: ' + code)\n  }\n\n  return status.message[code]\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    return getStatusMessage(code)\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    return getStatusMessage(n)\n  }\n\n  return getStatusCode(code)\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\statuses\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\statuses\\index.js"
  },
  {
    "Content": "# statuses\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][ci-image]][ci-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nHTTP status utility for node.\n\nThis module provides a list of status codes and messages sourced from\na few different projects:\n\n  * The [IANA Status Code Registry](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml)\n  * The [Node.js project](https://nodejs.org/)\n  * The [NGINX project](https://www.nginx.com/)\n  * The [Apache HTTP Server project](https://httpd.apache.org/)\n\n## Installation\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install statuses\n```\n\n## API\n\n<!-- eslint-disable no-unused-vars -->\n\n```js\nvar status = require('statuses')\n```\n\n### status(code)\n\nReturns the status message string for a known HTTP status code. The code\nmay be a number or a string. An error is thrown for an unknown status code.\n\n<!-- eslint-disable no-undef -->\n\n```js\nstatus(403) // => 'Forbidden'\nstatus('403') // => 'Forbidden'\nstatus(306) // throws\n```\n\n### status(msg)\n\nReturns the numeric status code for a known HTTP status message. The message\nis case-insensitive. An error is thrown for an unknown status message.\n\n<!-- eslint-disable no-undef -->\n\n```js\nstatus('forbidden') // => 403\nstatus('Forbidden') // => 403\nstatus('foo') // throws\n```\n\n### status.codes\n\nReturns an array of all the status codes as `Integer`s.\n\n### status.code[msg]\n\nReturns the numeric status code for a known status message (in lower-case),\notherwise `undefined`.\n\n<!-- eslint-disable no-undef, no-unused-expressions -->\n\n```js\nstatus['not found'] // => 404\n```\n\n### status.empty[code]\n\nReturns `true` if a status code expects an empty body.\n\n<!-- eslint-disable no-undef, no-unused-expressions -->\n\n```js\nstatus.empty[200] // => undefined\nstatus.empty[204] // => true\nstatus.empty[304] // => true\n```\n\n### status.message[code]\n\nReturns the string message for a known numeric status code, otherwise\n`undefined`. This object is the same format as the\n[Node.js http module `http.STATUS_CODES`](https://nodejs.org/dist/latest/docs/api/http.html#http_http_status_codes).\n\n<!-- eslint-disable no-undef, no-unused-expressions -->\n\n```js\nstatus.message[404] // => 'Not Found'\n```\n\n### status.redirect[code]\n\nReturns `true` if a status code is a valid redirect status.\n\n<!-- eslint-disable no-undef, no-unused-expressions -->\n\n```js\nstatus.redirect[200] // => undefined\nstatus.redirect[301] // => true\n```\n\n### status.retry[code]\n\nReturns `true` if you should retry the rest.\n\n<!-- eslint-disable no-undef, no-unused-expressions -->\n\n```js\nstatus.retry[501] // => undefined\nstatus.retry[503] // => true\n```\n\n## License\n\n[MIT](LICENSE)\n\n[ci-image]: https://badgen.net/github/checks/jshttp/statuses/master?label=ci\n[ci-url]: https://github.com/jshttp/statuses/actions?query=workflow%3Aci\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/statuses/master\n[coveralls-url]: https://coveralls.io/r/jshttp/statuses?branch=master\n[node-version-image]: https://badgen.net/npm/node/statuses\n[node-version-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/statuses\n[npm-url]: https://npmjs.org/package/statuses\n[npm-version-image]: https://badgen.net/npm/v/statuses\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\statuses\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\statuses\\README.md"
  },
  {
    "Content": "1.0.1 / 2021-11-14\n==================\n\n  * pref: enable strict mode\n\n1.0.0 / 2018-07-09\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\toidentifier\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\toidentifier\\HISTORY.md"
  },
  {
    "Content": "/*!\n * toidentifier\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = toIdentifier\n\n/**\n * Trasform the given string into a JavaScript identifier\n *\n * @param {string} str\n * @returns {string}\n * @public\n */\n\nfunction toIdentifier (str) {\n  return str\n    .split(' ')\n    .map(function (token) {\n      return token.slice(0, 1).toUpperCase() + token.slice(1)\n    })\n    .join('')\n    .replace(/[^ _0-9a-z]/gi, '')\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\toidentifier\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\toidentifier\\index.js"
  },
  {
    "Content": "# toidentifier\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Build Status][github-actions-ci-image]][github-actions-ci-url]\n[![Test Coverage][codecov-image]][codecov-url]\n\n> Convert a string of words to a JavaScript identifier\n\n## Install\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```bash\n$ npm install toidentifier\n```\n\n## Example\n\n```js\nvar toIdentifier = require('toidentifier')\n\nconsole.log(toIdentifier('Bad Request'))\n// => \"BadRequest\"\n```\n\n## API\n\nThis CommonJS module exports a single default function: `toIdentifier`.\n\n### toIdentifier(string)\n\nGiven a string as the argument, it will be transformed according to\nthe following rules and the new string will be returned:\n\n1. Split into words separated by space characters (`0x20`).\n2. Upper case the first character of each word.\n3. Join the words together with no separator.\n4. Remove all non-word (`[0-9a-z_]`) characters.\n\n## License\n\n[MIT](LICENSE)\n\n[codecov-image]: https://img.shields.io/codecov/c/github/component/toidentifier.svg\n[codecov-url]: https://codecov.io/gh/component/toidentifier\n[downloads-image]: https://img.shields.io/npm/dm/toidentifier.svg\n[downloads-url]: https://npmjs.org/package/toidentifier\n[github-actions-ci-image]: https://img.shields.io/github/workflow/status/component/toidentifier/ci/master?label=ci\n[github-actions-ci-url]: https://github.com/component/toidentifier?query=workflow%3Aci\n[npm-image]: https://img.shields.io/npm/v/toidentifier.svg\n[npm-url]: https://npmjs.org/package/toidentifier\n\n\n##\n\n[npm]: https://www.npmjs.com/\n\n[yarn]: https://yarnpkg.com/\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\toidentifier\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\toidentifier\\README.md"
  },
  {
    "Content": "1.6.18 / 2019-04-26\n===================\n\n  * Fix regression passing request object to `typeis.is`\n\n1.6.17 / 2019-04-25\n===================\n\n  * deps: mime-types@~2.1.24\n    - Add Apple file extensions from IANA\n    - Add extension `.csl` to `application/vnd.citationstyles.style+xml`\n    - Add extension `.es` to `application/ecmascript`\n    - Add extension `.nq` to `application/n-quads`\n    - Add extension `.nt` to `application/n-triples`\n    - Add extension `.owl` to `application/rdf+xml`\n    - Add extensions `.siv` and `.sieve` to `application/sieve`\n    - Add extensions from IANA for `image/*` types\n    - Add extensions from IANA for `model/*` types\n    - Add extensions to HEIC image types\n    - Add new mime types\n    - Add `text/mdx` with extension `.mdx`\n  * perf: prevent internal `throw` on invalid type\n\n1.6.16 / 2018-02-16\n===================\n\n  * deps: mime-types@~2.1.18\n    - Add `application/raml+yaml` with extension `.raml`\n    - Add `application/wasm` with extension `.wasm`\n    - Add `text/shex` with extension `.shex`\n    - Add extensions for JPEG-2000 images\n    - Add extensions from IANA for `message/*` types\n    - Add extension `.mjs` to `application/javascript`\n    - Add extension `.wadl` to `application/vnd.sun.wadl+xml`\n    - Add extension `.gz` to `application/gzip`\n    - Add glTF types and extensions\n    - Add new mime types\n    - Update extensions `.md` and `.markdown` to be `text/markdown`\n    - Update font MIME types\n    - Update `text/hjson` to registered `application/hjson`\n\n1.6.15 / 2017-03-31\n===================\n\n  * deps: mime-types@~2.1.15\n    - Add new mime types\n\n1.6.14 / 2016-11-18\n===================\n\n  * deps: mime-types@~2.1.13\n    - Add new mime types\n\n1.6.13 / 2016-05-18\n===================\n\n  * deps: mime-types@~2.1.11\n    - Add new mime types\n\n1.6.12 / 2016-02-28\n===================\n\n  * deps: mime-types@~2.1.10\n    - Add new mime types\n    - Fix extension of `application/dash+xml`\n    - Update primary extension for `audio/mp4`\n\n1.6.11 / 2016-01-29\n===================\n\n  * deps: mime-types@~2.1.9\n    - Add new mime types\n\n1.6.10 / 2015-12-01\n===================\n\n  * deps: mime-types@~2.1.8\n    - Add new mime types\n\n1.6.9 / 2015-09-27\n==================\n\n  * deps: mime-types@~2.1.7\n    - Add new mime types\n\n1.6.8 / 2015-09-04\n==================\n\n  * deps: mime-types@~2.1.6\n    - Add new mime types\n\n1.6.7 / 2015-08-20\n==================\n\n  * Fix type error when given invalid type to match against\n  * deps: mime-types@~2.1.5\n    - Add new mime types\n\n1.6.6 / 2015-07-31\n==================\n\n  * deps: mime-types@~2.1.4\n    - Add new mime types\n\n1.6.5 / 2015-07-16\n==================\n\n  * deps: mime-types@~2.1.3\n    - Add new mime types\n\n1.6.4 / 2015-07-01\n==================\n\n  * deps: mime-types@~2.1.2\n    - Add new mime types\n  * perf: enable strict mode\n  * perf: remove argument reassignment\n\n1.6.3 / 2015-06-08\n==================\n\n  * deps: mime-types@~2.1.1\n    - Add new mime types\n  * perf: reduce try block size\n  * perf: remove bitwise operations\n\n1.6.2 / 2015-05-10\n==================\n\n  * deps: mime-types@~2.0.11\n    - Add new mime types\n\n1.6.1 / 2015-03-13\n==================\n\n  * deps: mime-types@~2.0.10\n    - Add new mime types\n\n1.6.0 / 2015-02-12\n==================\n\n  * fix false-positives in `hasBody` `Transfer-Encoding` check\n  * support wildcard for both type and subtype (`*/*`)\n\n1.5.7 / 2015-02-09\n==================\n\n  * fix argument reassignment\n  * deps: mime-types@~2.0.9\n    - Add new mime types\n\n1.5.6 / 2015-01-29\n==================\n\n  * deps: mime-types@~2.0.8\n    - Add new mime types\n\n1.5.5 / 2014-12-30\n==================\n\n  * deps: mime-types@~2.0.7\n    - Add new mime types\n    - Fix missing extensions\n    - Fix various invalid MIME type entries\n    - Remove example template MIME types\n    - deps: mime-db@~1.5.0\n\n1.5.4 / 2014-12-10\n==================\n\n  * deps: mime-types@~2.0.4\n    - Add new mime types\n    - deps: mime-db@~1.3.0\n\n1.5.3 / 2014-11-09\n==================\n\n  * deps: mime-types@~2.0.3\n    - Add new mime types\n    - deps: mime-db@~1.2.0\n\n1.5.2 / 2014-09-28\n==================\n\n  * deps: mime-types@~2.0.2\n    - Add new mime types\n    - deps: mime-db@~1.1.0\n\n1.5.1 / 2014-09-07\n==================\n\n  * Support Node.js 0.6\n  * deps: media-typer@0.3.0\n  * deps: mime-types@~2.0.1\n    - Support Node.js 0.6\n\n1.5.0 / 2014-09-05\n==================\n\n * fix `hasbody` to be true for `content-length: 0`\n\n1.4.0 / 2014-09-02\n==================\n\n * update mime-types\n\n1.3.2 / 2014-06-24\n==================\n\n * use `~` range on mime-types\n\n1.3.1 / 2014-06-19\n==================\n\n * fix global variable leak\n\n1.3.0 / 2014-06-19\n==================\n\n * improve type parsing\n\n   - invalid media type never matches\n   - media type not case-sensitive\n   - extra LWS does not affect results\n\n1.2.2 / 2014-06-19\n==================\n\n * fix behavior on unknown type argument\n\n1.2.1 / 2014-06-03\n==================\n\n * switch dependency from `mime` to `mime-types@1.0.0`\n\n1.2.0 / 2014-05-11\n==================\n\n * support suffix matching:\n\n   - `+json` matches `application/vnd+json`\n   - `*/vnd+json` matches `application/vnd+json`\n   - `application/*+json` matches `application/vnd+json`\n\n1.1.0 / 2014-04-12\n==================\n\n * add non-array values support\n * expose internal utilities:\n\n   - `.is()`\n   - `.hasBody()`\n   - `.normalize()`\n   - `.match()`\n\n1.0.1 / 2014-03-30\n==================\n\n * add `multipart` as a shorthand\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\type-is\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\type-is\\HISTORY.md"
  },
  {
    "Content": "/*!\n * type-is\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar typer = require('media-typer')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = typeofrequest\nmodule.exports.is = typeis\nmodule.exports.hasBody = hasbody\nmodule.exports.normalize = normalize\nmodule.exports.match = mimeMatch\n\n/**\n * Compare a `value` content-type with `types`.\n * Each `type` can be an extension like `html`,\n * a special shortcut like `multipart` or `urlencoded`,\n * or a mime type.\n *\n * If no types match, `false` is returned.\n * Otherwise, the first `type` that matches is returned.\n *\n * @param {String} value\n * @param {Array} types\n * @public\n */\n\nfunction typeis (value, types_) {\n  var i\n  var types = types_\n\n  // remove parameters and normalize\n  var val = tryNormalizeType(value)\n\n  // no type or invalid\n  if (!val) {\n    return false\n  }\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length - 1)\n    for (i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // no types, return the content type\n  if (!types || !types.length) {\n    return val\n  }\n\n  var type\n  for (i = 0; i < types.length; i++) {\n    if (mimeMatch(normalize(type = types[i]), val)) {\n      return type[0] === '+' || type.indexOf('*') !== -1\n        ? val\n        : type\n    }\n  }\n\n  // no matches\n  return false\n}\n\n/**\n * Check if a request has a request body.\n * A request with a body __must__ either have `transfer-encoding`\n * or `content-length` headers set.\n * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\n *\n * @param {Object} request\n * @return {Boolean}\n * @public\n */\n\nfunction hasbody (req) {\n  return req.headers['transfer-encoding'] !== undefined ||\n    !isNaN(req.headers['content-length'])\n}\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains any of the give mime `type`s.\n * If there is no request body, `null` is returned.\n * If there is no content type, `false` is returned.\n * Otherwise, it returns the first `type` that matches.\n *\n * Examples:\n *\n *     // With Content-Type: text/html; charset=utf-8\n *     this.is('html'); // => 'html'\n *     this.is('text/html'); // => 'text/html'\n *     this.is('text/*', 'application/json'); // => 'text/html'\n *\n *     // When Content-Type is application/json\n *     this.is('json', 'urlencoded'); // => 'json'\n *     this.is('application/json'); // => 'application/json'\n *     this.is('html', 'application/*'); // => 'application/json'\n *\n *     this.is('html'); // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nfunction typeofrequest (req, types_) {\n  var types = types_\n\n  // no body\n  if (!hasbody(req)) {\n    return null\n  }\n\n  // support flattened arguments\n  if (arguments.length > 2) {\n    types = new Array(arguments.length - 1)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // request content type\n  var value = req.headers['content-type']\n\n  return typeis(value, types)\n}\n\n/**\n * Normalize a mime type.\n * If it's a shorthand, expand it to a valid mime type.\n *\n * In general, you probably want:\n *\n *   var type = is(req, ['urlencoded', 'json', 'multipart']);\n *\n * Then use the appropriate body parsers.\n * These three are the most common request body types\n * and are thus ensured to work.\n *\n * @param {String} type\n * @private\n */\n\nfunction normalize (type) {\n  if (typeof type !== 'string') {\n    // invalid type\n    return false\n  }\n\n  switch (type) {\n    case 'urlencoded':\n      return 'application/x-www-form-urlencoded'\n    case 'multipart':\n      return 'multipart/*'\n  }\n\n  if (type[0] === '+') {\n    // \"+json\" -> \"*/*+json\" expando\n    return '*/*' + type\n  }\n\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if `expected` mime type\n * matches `actual` mime type with\n * wildcard and +suffix support.\n *\n * @param {String} expected\n * @param {String} actual\n * @return {Boolean}\n * @private\n */\n\nfunction mimeMatch (expected, actual) {\n  // invalid type\n  if (expected === false) {\n    return false\n  }\n\n  // split types\n  var actualParts = actual.split('/')\n  var expectedParts = expected.split('/')\n\n  // invalid format\n  if (actualParts.length !== 2 || expectedParts.length !== 2) {\n    return false\n  }\n\n  // validate type\n  if (expectedParts[0] !== '*' && expectedParts[0] !== actualParts[0]) {\n    return false\n  }\n\n  // validate suffix wildcard\n  if (expectedParts[1].substr(0, 2) === '*+') {\n    return expectedParts[1].length <= actualParts[1].length + 1 &&\n      expectedParts[1].substr(1) === actualParts[1].substr(1 - expectedParts[1].length)\n  }\n\n  // validate subtype\n  if (expectedParts[1] !== '*' && expectedParts[1] !== actualParts[1]) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction normalizeType (value) {\n  // parse the type\n  var type = typer.parse(value)\n\n  // remove the parameters\n  type.parameters = undefined\n\n  // reformat it\n  return typer.format(type)\n}\n\n/**\n * Try to normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction tryNormalizeType (value) {\n  if (!value) {\n    return null\n  }\n\n  try {\n    return normalizeType(value)\n  } catch (err) {\n    return null\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\type-is\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\type-is\\index.js"
  },
  {
    "Content": "# type-is\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nInfer the content-type of a request.\n\n### Install\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install type-is\n```\n\n## API\n\n```js\nvar http = require('http')\nvar typeis = require('type-is')\n\nhttp.createServer(function (req, res) {\n  var istext = typeis(req, ['text/*'])\n  res.end('you ' + (istext ? 'sent' : 'did not send') + ' me text')\n})\n```\n\n### typeis(request, types)\n\nChecks if the `request` is one of the `types`. If the request has no body,\neven if there is a `Content-Type` header, then `null` is returned. If the\n`Content-Type` header is invalid or does not matches any of the `types`, then\n`false` is returned. Otherwise, a string of the type that matched is returned.\n\nThe `request` argument is expected to be a Node.js HTTP request. The `types`\nargument is an array of type strings.\n\nEach type in the `types` array can be one of the following:\n\n- A file extension name such as `json`. This name will be returned if matched.\n- A mime type such as `application/json`.\n- A mime type with a wildcard such as `*/*` or `*/json` or `application/*`.\n  The full mime type will be returned if matched.\n- A suffix such as `+json`. This can be combined with a wildcard such as\n  `*/vnd+json` or `application/*+json`. The full mime type will be returned\n  if matched.\n\nSome examples to illustrate the inputs and returned value:\n\n<!-- eslint-disable no-undef -->\n\n```js\n// req.headers.content-type = 'application/json'\n\ntypeis(req, ['json']) // => 'json'\ntypeis(req, ['html', 'json']) // => 'json'\ntypeis(req, ['application/*']) // => 'application/json'\ntypeis(req, ['application/json']) // => 'application/json'\n\ntypeis(req, ['html']) // => false\n```\n\n### typeis.hasBody(request)\n\nReturns a Boolean if the given `request` has a body, regardless of the\n`Content-Type` header.\n\nHaving a body has no relation to how large the body is (it may be 0 bytes).\nThis is similar to how file existence works. If a body does exist, then this\nindicates that there is data to read from the Node.js request stream.\n\n<!-- eslint-disable no-undef -->\n\n```js\nif (typeis.hasBody(req)) {\n  // read the body, since there is one\n\n  req.on('data', function (chunk) {\n    // ...\n  })\n}\n```\n\n### typeis.is(mediaType, types)\n\nChecks if the `mediaType` is one of the `types`. If the `mediaType` is invalid\nor does not matches any of the `types`, then `false` is returned. Otherwise, a\nstring of the type that matched is returned.\n\nThe `mediaType` argument is expected to be a\n[media type](https://tools.ietf.org/html/rfc6838) string. The `types` argument\nis an array of type strings.\n\nEach type in the `types` array can be one of the following:\n\n- A file extension name such as `json`. This name will be returned if matched.\n- A mime type such as `application/json`.\n- A mime type with a wildcard such as `*/*` or `*/json` or `application/*`.\n  The full mime type will be returned if matched.\n- A suffix such as `+json`. This can be combined with a wildcard such as\n  `*/vnd+json` or `application/*+json`. The full mime type will be returned\n  if matched.\n\nSome examples to illustrate the inputs and returned value:\n\n<!-- eslint-disable no-undef -->\n\n```js\nvar mediaType = 'application/json'\n\ntypeis.is(mediaType, ['json']) // => 'json'\ntypeis.is(mediaType, ['html', 'json']) // => 'json'\ntypeis.is(mediaType, ['application/*']) // => 'application/json'\ntypeis.is(mediaType, ['application/json']) // => 'application/json'\n\ntypeis.is(mediaType, ['html']) // => false\n```\n\n## Examples\n\n### Example body parser\n\n```js\nvar express = require('express')\nvar typeis = require('type-is')\n\nvar app = express()\n\napp.use(function bodyParser (req, res, next) {\n  if (!typeis.hasBody(req)) {\n    return next()\n  }\n\n  switch (typeis(req, ['urlencoded', 'json', 'multipart'])) {\n    case 'urlencoded':\n      // parse urlencoded body\n      throw new Error('implement urlencoded body parsing')\n    case 'json':\n      // parse json body\n      throw new Error('implement json body parsing')\n    case 'multipart':\n      // parse multipart body\n      throw new Error('implement multipart body parsing')\n    default:\n      // 415 error code\n      res.statusCode = 415\n      res.end()\n      break\n  }\n})\n```\n\n## License\n\n[MIT](LICENSE)\n\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/type-is/master\n[coveralls-url]: https://coveralls.io/r/jshttp/type-is?branch=master\n[node-version-image]: https://badgen.net/npm/node/type-is\n[node-version-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/type-is\n[npm-url]: https://npmjs.org/package/type-is\n[npm-version-image]: https://badgen.net/npm/v/type-is\n[travis-image]: https://badgen.net/travis/jshttp/type-is/master\n[travis-url]: https://travis-ci.org/jshttp/type-is\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\type-is\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\type-is\\README.md"
  },
  {
    "Content": "1.0.0 / 2015-06-14\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\unpipe\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\unpipe\\HISTORY.md"
  },
  {
    "Content": "/*!\n * unpipe\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = unpipe\n\n/**\n * Determine if there are Node.js pipe-like data listeners.\n * @private\n */\n\nfunction hasPipeDataListeners(stream) {\n  var listeners = stream.listeners('data')\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].name === 'ondata') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Unpipe a stream from all destinations.\n *\n * @param {object} stream\n * @public\n */\n\nfunction unpipe(stream) {\n  if (!stream) {\n    throw new TypeError('argument stream is required')\n  }\n\n  if (typeof stream.unpipe === 'function') {\n    // new-style\n    stream.unpipe()\n    return\n  }\n\n  // Node.js 0.8 hack\n  if (!hasPipeDataListeners(stream)) {\n    return\n  }\n\n  var listener\n  var listeners = stream.listeners('close')\n\n  for (var i = 0; i < listeners.length; i++) {\n    listener = listeners[i]\n\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\n      continue\n    }\n\n    // invoke the listener\n    listener.call(stream)\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\unpipe\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\unpipe\\index.js"
  },
  {
    "Content": "# unpipe\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-image]][node-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nUnpipe a stream from all destinations.\n\n## Installation\n\n```sh\n$ npm install unpipe\n```\n\n## API\n\n```js\nvar unpipe = require('unpipe')\n```\n\n### unpipe(stream)\n\nUnpipes all destinations from a given stream. With stream 2+, this is\nequivalent to `stream.unpipe()`. When used with streams 1 style streams\n(typically Node.js 0.8 and below), this module attempts to undo the\nactions done in `stream.pipe(dest)`.\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/unpipe.svg\n[npm-url]: https://npmjs.org/package/unpipe\n[node-image]: https://img.shields.io/node/v/unpipe.svg\n[node-url]: http://nodejs.org/download/\n[travis-image]: https://img.shields.io/travis/stream-utils/unpipe.svg\n[travis-url]: https://travis-ci.org/stream-utils/unpipe\n[coveralls-image]: https://img.shields.io/coveralls/stream-utils/unpipe.svg\n[coveralls-url]: https://coveralls.io/r/stream-utils/unpipe?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/unpipe.svg\n[downloads-url]: https://npmjs.org/package/unpipe\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\unpipe\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\unpipe\\README.md"
  },
  {
    "Content": "/**\n * Merge object b with object a.\n *\n *     var a = { foo: 'bar' }\n *       , b = { bar: 'baz' };\n *\n *     merge(a, b);\n *     // => { foo: 'bar', bar: 'baz' }\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object}\n * @api public\n */\n\nexports = module.exports = function(a, b){\n  if (a && b) {\n    for (var key in b) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\utils-merge\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\utils-merge\\index.js"
  },
  {
    "Content": "# utils-merge\n\n[![Version](https://img.shields.io/npm/v/utils-merge.svg?label=version)](https://www.npmjs.com/package/utils-merge)\n[![Build](https://img.shields.io/travis/jaredhanson/utils-merge.svg)](https://travis-ci.org/jaredhanson/utils-merge)\n[![Quality](https://img.shields.io/codeclimate/github/jaredhanson/utils-merge.svg?label=quality)](https://codeclimate.com/github/jaredhanson/utils-merge)\n[![Coverage](https://img.shields.io/coveralls/jaredhanson/utils-merge.svg)](https://coveralls.io/r/jaredhanson/utils-merge)\n[![Dependencies](https://img.shields.io/david/jaredhanson/utils-merge.svg)](https://david-dm.org/jaredhanson/utils-merge)\n\n\nMerges the properties from a source object into a destination object.\n\n## Install\n\n```bash\n$ npm install utils-merge\n```\n\n## Usage\n\n```javascript\nvar a = { foo: 'bar' }\n  , b = { bar: 'baz' };\n\nmerge(a, b);\n// => { foo: 'bar', bar: 'baz' }\n```\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2013-2017 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n\n<a target='_blank' rel='nofollow' href='https://app.codesponsor.io/link/vK9dyjRnnWsMzzJTQ57fRJpH/jaredhanson/utils-merge'>  <img alt='Sponsor' width='888' height='68' src='https://app.codesponsor.io/embed/vK9dyjRnnWsMzzJTQ57fRJpH/jaredhanson/utils-merge.svg' /></a>\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\utils-merge\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\utils-merge\\README.md"
  },
  {
    "Content": "1.1.2 / 2017-09-23\n==================\n\n  * perf: improve header token parsing speed\n\n1.1.1 / 2017-03-20\n==================\n\n  * perf: hoist regular expression\n\n1.1.0 / 2015-09-29\n==================\n\n  * Only accept valid field names in the `field` argument\n    - Ensures the resulting string is a valid HTTP header value\n\n1.0.1 / 2015-07-08\n==================\n\n  * Fix setting empty header from empty `field`\n  * perf: enable strict mode\n  * perf: remove argument reassignments\n\n1.0.0 / 2014-08-10\n==================\n\n  * Accept valid `Vary` header string as `field`\n  * Add `vary.append` for low-level string manipulation\n  * Move to `jshttp` orgainzation\n\n0.1.0 / 2014-06-05\n==================\n\n  * Support array of fields to set\n\n0.0.0 / 2014-06-04\n==================\n\n  * Initial release\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\vary\\HISTORY.md",
    "RelativePath": "tools\\backend\\node_modules\\vary\\HISTORY.md"
  },
  {
    "Content": "/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = vary\nmodule.exports.append = append\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n */\n\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n *\n * @param {String} header\n * @param {String|Array} field\n * @return {String}\n * @public\n */\n\nfunction append (header, field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required')\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required')\n  }\n\n  // get fields array\n  var fields = !Array.isArray(field)\n    ? parse(String(field))\n    : field\n\n  // assert on invalid field names\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing, unspecified vary\n  if (header === '*') {\n    return header\n  }\n\n  // enumerate current values\n  var val = header\n  var vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*'\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld)\n      val = val\n        ? val + ', ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n *\n * @param {String} header\n * @return {Array}\n * @private\n */\n\nfunction parse (header) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(header.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(header.substring(start, end))\n\n  return list\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {Object} res\n * @param {String|Array} field\n * @public\n */\n\nfunction vary (res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  var val = res.getHeader('Vary') || ''\n  var header = Array.isArray(val)\n    ? val.join(', ')\n    : String(val)\n\n  // set new header\n  if ((val = append(header, field))) {\n    res.setHeader('Vary', val)\n  }\n}\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\vary\\index.js",
    "RelativePath": "tools\\backend\\node_modules\\vary\\index.js"
  },
  {
    "Content": "# vary\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nManipulate the HTTP Vary header\n\n## Installation\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally): \n\n```sh\n$ npm install vary\n```\n\n## API\n\n<!-- eslint-disable no-unused-vars -->\n\n```js\nvar vary = require('vary')\n```\n\n### vary(res, field)\n\nAdds the given header `field` to the `Vary` response header of `res`.\nThis can be a string of a single field, a string of a valid `Vary`\nheader, or an array of multiple fields.\n\nThis will append the header if not already listed, otherwise leaves\nit listed in the current location.\n\n<!-- eslint-disable no-undef -->\n\n```js\n// Append \"Origin\" to the Vary header of the response\nvary(res, 'Origin')\n```\n\n### vary.append(header, field)\n\nAdds the given header `field` to the `Vary` response header string `header`.\nThis can be a string of a single field, a string of a valid `Vary` header,\nor an array of multiple fields.\n\nThis will append the header if not already listed, otherwise leaves\nit listed in the current location. The new header string is returned.\n\n<!-- eslint-disable no-undef -->\n\n```js\n// Get header string appending \"Origin\" to \"Accept, User-Agent\"\nvary.append('Accept, User-Agent', 'Origin')\n```\n\n## Examples\n\n### Updating the Vary header when content is based on it\n\n```js\nvar http = require('http')\nvar vary = require('vary')\n\nhttp.createServer(function onRequest (req, res) {\n  // about to user-agent sniff\n  vary(res, 'User-Agent')\n\n  var ua = req.headers['user-agent'] || ''\n  var isMobile = /mobi|android|touch|mini/i.test(ua)\n\n  // serve site, depending on isMobile\n  res.setHeader('Content-Type', 'text/html')\n  res.end('You are (probably) ' + (isMobile ? '' : 'not ') + 'a mobile user')\n})\n```\n\n## Testing\n\n```sh\n$ npm test\n```\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/vary.svg\n[npm-url]: https://npmjs.org/package/vary\n[node-version-image]: https://img.shields.io/node/v/vary.svg\n[node-version-url]: https://nodejs.org/en/download\n[travis-image]: https://img.shields.io/travis/jshttp/vary/master.svg\n[travis-url]: https://travis-ci.org/jshttp/vary\n[coveralls-image]: https://img.shields.io/coveralls/jshttp/vary/master.svg\n[coveralls-url]: https://coveralls.io/r/jshttp/vary\n[downloads-image]: https://img.shields.io/npm/dm/vary.svg\n[downloads-url]: https://npmjs.org/package/vary\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\backend\\node_modules\\vary\\README.md",
    "RelativePath": "tools\\backend\\node_modules\\vary\\README.md"
  },
  {
    "Content": "// tools/monitor/performance.js\r\nconst puppeteer = require('puppeteer');\r\nconst fs = require('fs').promises;\r\n\r\nasync function monitorPerformance() {\r\n    const browser = await puppeteer.launch();\r\n    const page = await browser.newPage();\r\n    \r\n    // Enable performance monitoring\r\n    await page.evaluateOnNewDocument(() => {\r\n        window.performanceMetrics = [];\r\n        \r\n        // Monitor all performance metrics\r\n        new PerformanceObserver((list) => {\r\n            for (const entry of list.getEntries()) {\r\n                window.performanceMetrics.push({\r\n                    name: entry.name,\r\n                    type: entry.entryType,\r\n                    duration: entry.duration,\r\n                    timestamp: entry.startTime\r\n                });\r\n            }\r\n        }).observe({ entryTypes: ['navigation', 'resource', 'paint', 'measure'] });\r\n    });\r\n    \r\n    await page.goto('http://localhost:1313');\r\n    \r\n    // Get metrics\r\n    const metrics = await page.evaluate(() => window.performanceMetrics);\r\n    const performanceData = await page.metrics();\r\n    \r\n    // Save report\r\n    await fs.writeFile('performance-report.json', JSON.stringify({\r\n        timestamp: new Date().toISOString(),\r\n        metrics,\r\n        performance: performanceData\r\n    }, null, 2));\r\n    \r\n    await browser.close();\r\n    console.log('✅ Performance report saved');\r\n}\r\n\r\nif (require.main === module) {\r\n    monitorPerformance();\r\n}\r\n\r\nmodule.exports = { monitorPerformance };\r\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\monitor\\performance.js",
    "RelativePath": "tools\\monitor\\performance.js"
  },
  {
    "Content": "// Image optimization tool\nconst sharp = require('sharp');\nconst fs = require('fs').promises;\nconst path = require('path');\nconst glob = require('glob').sync;\n\nasync function optimizeImages() {\n    const images = glob('static/media/**/*.{jpg,png}');\n    for (const img of images) {\n        console.log(`Optimizing ${img}...`);\n    }\n}\n\nif (require.main === module) {\n    optimizeImages();\n}\n\nmodule.exports = { optimizeImages };\r\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\optimizer\\images.js",
    "RelativePath": "tools\\optimizer\\images.js"
  },
  {
    "Content": "// tools/performance/budget.js\n\nconst { exec } = require('child_process');\nconst { promisify } = require('util');\nconst fs = require('fs').promises;\nconst path = require('path');\nconst chalk = require('chalk');\nconst ora = require('ora');\n\nconst execAsync = promisify(exec);\n\nclass PerformanceBudget {\n  constructor() {\n    this.budget = {\n      // File size budgets (in bytes)\n      sizes: {\n        html: {\n          max: 15000,        // 15KB per HTML file\n          warning: 12000     // Warning at 12KB\n        },\n        css: {\n          max: 50000,        // 50KB total CSS\n          warning: 40000     // Warning at 40KB\n        },\n        js: {\n          max: 100000,       // 100KB total JS\n          warning: 80000     // Warning at 80KB\n        },\n        images: {\n          max: 200000,       // 200KB per image\n          warning: 150000    // Warning at 150KB\n        },\n        fonts: {\n          max: 300000,       // 300KB total fonts\n          warning: 250000    // Warning at 250KB\n        },\n        total: {\n          max: 500000,       // 500KB total page weight\n          warning: 400000    // Warning at 400KB\n        }\n      },\n      \n      // Performance metrics (in milliseconds)\n      metrics: {\n        fcp: {              // First Contentful Paint\n          max: 1800,\n          warning: 1500\n        },\n        lcp: {              // Largest Contentful Paint\n          max: 2500,\n          warning: 2000\n        },\n        fid: {              // First Input Delay\n          max: 100,\n          warning: 50\n        },\n        cls: {              // Cumulative Layout Shift\n          max: 0.1,\n          warning: 0.05\n        },\n        ttfb: {             // Time to First Byte\n          max: 600,\n          warning: 400\n        },\n        tti: {              // Time to Interactive\n          max: 3800,\n          warning: 3000\n        },\n        tbt: {              // Total Blocking Time\n          max: 300,\n          warning: 200\n        }\n      },\n      \n      // Lighthouse scores (0-100)\n      lighthouse: {\n        performance: {\n          min: 90,\n          warning: 95\n        },\n        accessibility: {\n          min: 95,\n          warning: 98\n        },\n        bestPractices: {\n          min: 90,\n          warning: 95\n        },\n        seo: {\n          min: 90,\n          warning: 95\n        },\n        pwa: {\n          min: 80,\n          warning: 90\n        }\n      },\n      \n      // Resource counts\n      requests: {\n        total: {\n          max: 50,\n          warning: 40\n        },\n        css: {\n          max: 5,\n          warning: 3\n        },\n        js: {\n          max: 10,\n          warning: 8\n        },\n        images: {\n          max: 30,\n          warning: 25\n        },\n        fonts: {\n          max: 5,\n          warning: 3\n        }\n      }\n    };\n  }\n\n  async checkBudget(buildDir = 'public') {\n    const spinner = ora('Checking performance budget...').start();\n    const results = {\n      passed: true,\n      warnings: [],\n      failures: [],\n      details: {}\n    };\n\n    try {\n      // Check file sizes\n      const sizeResults = await this.checkFileSizes(buildDir);\n      results.details.sizes = sizeResults;\n      \n      // Check Lighthouse metrics (if server is running)\n      const lighthouseResults = await this.checkLighthouse();\n      if (lighthouseResults) {\n        results.details.lighthouse = lighthouseResults;\n      }\n      \n      // Check resource counts\n      const resourceResults = await this.checkResourceCounts(buildDir);\n      results.details.resources = resourceResults;\n      \n      // Check critical CSS\n      const criticalCssResults = await this.checkCriticalCSS(buildDir);\n      results.details.criticalCss = criticalCssResults;\n      \n      // Check image optimization\n      const imageResults = await this.checkImageOptimization(buildDir);\n      results.details.images = imageResults;\n      \n      // Compile results\n      this.compileResults(results);\n      \n      // Generate report\n      await this.generateReport(results);\n      \n      // Print report\n      this.printReport(results);\n      \n      spinner.succeed(\n        results.passed \n          ? chalk.green('✓ Performance budget check passed')\n          : chalk.red('✗ Performance budget check failed')\n      );\n      \n      return results;\n      \n    } catch (error) {\n      spinner.fail(chalk.red(`✗ Performance budget check failed: ${error.message}`));\n      throw error;\n    }\n  }\n\n  async checkFileSizes(buildDir) {\n    const results = {\n      html: { current: 0, files: [] },\n      css: { current: 0, files: [] },\n      js: { current: 0, files: [] },\n      images: { current: 0, files: [] },\n      fonts: { current: 0, files: [] },\n      total: { current: 0 }\n    };\n\n    // Scan build directory\n    const files = await this.getAllFiles(buildDir);\n    \n    for (const file of files) {\n      const stats = await fs.stat(file);\n      const size = stats.size;\n      const ext = path.extname(file).toLowerCase();\n      const relativePath = path.relative(buildDir, file);\n      \n      results.total.current += size;\n      \n      if (ext === '.html') {\n        results.html.current += size;\n        results.html.files.push({ path: relativePath, size });\n      } else if (ext === '.css') {\n        results.css.current += size;\n        results.css.files.push({ path: relativePath, size });\n      } else if (['.js', '.mjs'].includes(ext)) {\n        results.js.current += size;\n        results.js.files.push({ path: relativePath, size });\n      } else if (['.jpg', '.jpeg', '.png', '.gif', '.webp', '.avif', '.svg'].includes(ext)) {\n        results.images.current += size;\n        results.images.files.push({ path: relativePath, size });\n      } else if (['.woff', '.woff2', '.ttf', '.otf', '.eot'].includes(ext)) {\n        results.fonts.current += size;\n        results.fonts.files.push({ path: relativePath, size });\n      }\n    }\n\n    // Sort files by size for reporting\n    Object.keys(results).forEach(key => {\n      if (results[key].files) {\n        results[key].files.sort((a, b) => b.size - a.size);\n      }\n    });\n\n    return results;\n  }\n\n  async checkLighthouse() {\n    try {\n      // Check if lighthouse is installed\n      try {\n        await execAsync('lighthouse --version');\n      } catch {\n        console.warn(chalk.yellow('⚠ Lighthouse not installed. Run: npm install -g lighthouse'));\n        return null;\n      }\n      \n      // Check if server is running\n      const http = require('http');\n      const serverRunning = await new Promise(resolve => {\n        http.get('http://localhost:1313', res => {\n          resolve(res.statusCode === 200);\n        }).on('error', () => {\n          resolve(false);\n        });\n      });\n      \n      if (!serverRunning) {\n        console.warn(chalk.yellow('⚠ Hugo server not running. Start with: hugo server'));\n        return null;\n      }\n      \n      // Run Lighthouse\n      console.log(chalk.cyan('  Running Lighthouse audit...'));\n      const { stdout } = await execAsync(\n        'lighthouse http://localhost:1313 --output=json --quiet --chrome-flags=\"--headless\" --only-categories=performance,accessibility,best-practices,seo'\n      );\n      \n      const report = JSON.parse(stdout);\n      \n      return {\n        scores: {\n          performance: Math.round(report.categories.performance.score * 100),\n          accessibility: Math.round(report.categories.accessibility.score * 100),\n          bestPractices: Math.round(report.categories['best-practices'].score * 100),\n          seo: Math.round(report.categories.seo.score * 100)\n        },\n        metrics: {\n          fcp: report.audits['first-contentful-paint'].numericValue,\n          lcp: report.audits['largest-contentful-paint'].numericValue,\n          cls: report.audits['cumulative-layout-shift'].numericValue,\n          tbt: report.audits['total-blocking-time'].numericValue,\n          tti: report.audits['interactive'].numericValue\n        },\n        opportunities: this.extractOpportunities(report)\n      };\n    } catch (error) {\n      console.warn(chalk.yellow('⚠ Could not run Lighthouse checks: ' + error.message));\n      return null;\n    }\n  }\n\n  extractOpportunities(report) {\n    const opportunities = [];\n    const audits = report.audits;\n    \n    // Check for optimization opportunities\n    const opportunityAudits = [\n      'render-blocking-resources',\n      'unused-css-rules',\n      'unused-javascript',\n      'modern-image-formats',\n      'uses-responsive-images',\n      'unminified-css',\n      'unminified-javascript',\n      'efficiently-encode-images',\n      'uses-text-compression'\n    ];\n    \n    opportunityAudits.forEach(auditName => {\n      if (audits[auditName] && audits[auditName].score < 0.9) {\n        opportunities.push({\n          title: audits[auditName].title,\n          description: audits[auditName].description,\n          savings: audits[auditName].details?.overallSavingsMs || 0\n        });\n      }\n    });\n    \n    return opportunities.sort((a, b) => b.savings - a.savings);\n  }\n\n  async checkResourceCounts(buildDir) {\n    const results = {\n      total: 0,\n      css: 0,\n      js: 0,\n      images: 0,\n      fonts: 0\n    };\n\n    const files = await this.getAllFiles(buildDir);\n    \n    for (const file of files) {\n      const ext = path.extname(file).toLowerCase();\n      \n      results.total++;\n      \n      if (ext === '.css') {\n        results.css++;\n      } else if (['.js', '.mjs'].includes(ext)) {\n        results.js++;\n      } else if (['.jpg', '.jpeg', '.png', '.gif', '.webp', '.avif', '.svg'].includes(ext)) {\n        results.images++;\n      } else if (['.woff', '.woff2', '.ttf', '.otf', '.eot'].includes(ext)) {\n        results.fonts++;\n      }\n    }\n\n    return results;\n  }\n\n  async checkCriticalCSS(buildDir) {\n    const results = {\n      hasCriticalCSS: false,\n      inlineStyles: [],\n      externalStyles: []\n    };\n    \n    try {\n      // Check index.html for critical CSS\n      const indexPath = path.join(buildDir, 'index.html');\n      const html = await fs.readFile(indexPath, 'utf-8');\n      \n      // Check for inline styles\n      const inlineStyleMatches = html.match(/<style[^>]*>([\\s\\S]*?)<\\/style>/gi) || [];\n      results.hasCriticalCSS = inlineStyleMatches.length > 0;\n      results.inlineStyles = inlineStyleMatches.map(style => ({\n        size: style.length,\n        content: style.substring(0, 100) + '...'\n      }));\n      \n      // Check for external stylesheets\n      const linkMatches = html.match(/<link[^>]*rel=\"stylesheet\"[^>]*>/gi) || [];\n      results.externalStyles = linkMatches.map(link => {\n        const hrefMatch = link.match(/href=\"([^\"]+)\"/);\n        return hrefMatch ? hrefMatch[1] : 'unknown';\n      });\n      \n    } catch (error) {\n      console.warn(chalk.yellow('⚠ Could not check critical CSS'));\n    }\n    \n    return results;\n  }\n\n  async checkImageOptimization(buildDir) {\n    const results = {\n      totalImages: 0,\n      optimized: 0,\n      needsOptimization: [],\n      formats: {}\n    };\n    \n    const imageExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.webp', '.avif', '.svg'];\n    const files = await this.getAllFiles(buildDir);\n    \n    for (const file of files) {\n      const ext = path.extname(file).toLowerCase();\n      \n      if (imageExtensions.includes(ext)) {\n        results.totalImages++;\n        \n        // Count formats\n        results.formats[ext] = (results.formats[ext] || 0) + 1;\n        \n        // Check size\n        const stats = await fs.stat(file);\n        const sizeKB = stats.size / 1024;\n        \n        // Flag large images\n        if (sizeKB > 200) {\n          results.needsOptimization.push({\n            path: path.relative(buildDir, file),\n            size: stats.size,\n            format: ext\n          });\n        }\n        \n        // Check if WebP/AVIF versions exist\n        if (['.jpg', '.jpeg', '.png'].includes(ext)) {\n          const webpPath = file.replace(ext, '.webp');\n          const avifPath = file.replace(ext, '.avif');\n          \n          if (require('fs').existsSync(webpPath) || require('fs').existsSync(avifPath)) {\n            results.optimized++;\n          }\n        }\n      }\n    }\n    \n    return results;\n  }\n\n  async getAllFiles(dir, files = []) {\n    const items = await fs.readdir(dir, { withFileTypes: true });\n    \n    for (const item of items) {\n      const fullPath = path.join(dir, item.name);\n      \n      if (item.isDirectory()) {\n        await this.getAllFiles(fullPath, files);\n      } else {\n        files.push(fullPath);\n      }\n    }\n    \n    return files;\n  }\n\n  compileResults(results) {\n    // Check file sizes\n    if (results.details.sizes) {\n      for (const [type, data] of Object.entries(results.details.sizes)) {\n        const budget = this.budget.sizes[type];\n        if (budget) {\n          if (data.current > budget.max) {\n            results.failures.push(`${type}: ${this.formatBytes(data.current)} exceeds ${this.formatBytes(budget.max)}`);\n            results.passed = false;\n          } else if (data.current > budget.warning) {\n            results.warnings.push(`${type}: ${this.formatBytes(data.current)} approaching limit of ${this.formatBytes(budget.max)}`);\n          }\n        }\n      }\n    }\n\n    // Check Lighthouse scores\n    if (results.details.lighthouse) {\n      for (const [metric, value] of Object.entries(results.details.lighthouse.scores)) {\n        if (value !== null) {\n          const budget = this.budget.lighthouse[metric];\n          if (budget) {\n            if (value < budget.min) {\n              results.failures.push(`Lighthouse ${metric}: ${value} below minimum ${budget.min}`);\n              results.passed = false;\n            } else if (value < budget.warning) {\n              results.warnings.push(`Lighthouse ${metric}: ${value} could be improved (target: ${budget.warning}+)`);\n            }\n          }\n        }\n      }\n\n      // Check performance metrics\n      for (const [metric, value] of Object.entries(results.details.lighthouse.metrics)) {\n        const budget = this.budget.metrics[metric];\n        if (budget) {\n          if (value > budget.max) {\n            results.failures.push(`${metric.toUpperCase()}: ${value}ms exceeds ${budget.max}ms`);\n            results.passed = false;\n          } else if (value > budget.warning) {\n            results.warnings.push(`${metric.toUpperCase()}: ${value}ms approaching limit of ${budget.max}ms`);\n          }\n        }\n      }\n    }\n\n    // Check resource counts\n    if (results.details.resources) {\n      for (const [type, count] of Object.entries(results.details.resources)) {\n        const budget = this.budget.requests[type];\n        if (budget) {\n          if (count > budget.max) {\n            results.failures.push(`${type} requests: ${count} exceeds ${budget.max}`);\n            results.passed = false;\n          } else if (count > budget.warning) {\n            results.warnings.push(`${type} requests: ${count} approaching limit of ${budget.max}`);\n          }\n        }\n      }\n    }\n\n    // Check critical CSS\n    if (results.details.criticalCss && !results.details.criticalCss.hasCriticalCSS) {\n      results.warnings.push('No critical CSS found - consider inlining critical styles');\n    }\n\n    // Check image optimization\n    if (results.details.images) {\n      const { totalImages, optimized, needsOptimization } = results.details.images;\n      if (needsOptimization.length > 0) {\n        results.warnings.push(`${needsOptimization.length} images need optimization (>200KB)`);\n      }\n      if (optimized < totalImages * 0.5) {\n        results.warnings.push(`Only ${optimized}/${totalImages} images have WebP/AVIF versions`);\n      }\n    }\n  }\n\n  async generateReport(results) {\n    const reportPath = path.join('test-results', 'performance-budget.json');\n    \n    // Ensure directory exists\n    await fs.mkdir(path.dirname(reportPath), { recursive: true });\n    \n    // Write detailed report\n    const report = {\n      timestamp: new Date().toISOString(),\n      passed: results.passed,\n      summary: {\n        failures: results.failures.length,\n        warnings: results.warnings.length\n      },\n      details: results.details,\n      failures: results.failures,\n      warnings: results.warnings\n    };\n    \n    await fs.writeFile(reportPath, JSON.stringify(report, null, 2), 'utf-8');\n    \n    // Generate HTML report\n    await this.generateHTMLReport(results);\n  }\n\n  async generateHTMLReport(results) {\n    const html = `\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Performance Budget Report</title>\n  <style>\n    body { font-family: system-ui; margin: 40px; background: #f5f5f5; }\n    .container { max-width: 1200px; margin: 0 auto; background: white; padding: 30px; border-radius: 8px; }\n    h1 { color: #333; border-bottom: 2px solid #0066ff; padding-bottom: 10px; }\n    .status { padding: 10px; border-radius: 4px; margin: 20px 0; font-weight: bold; }\n    .passed { background: #d4edda; color: #155724; }\n    .failed { background: #f8d7da; color: #721c24; }\n    .warning { background: #fff3cd; color: #856404; }\n    .metric { display: flex; justify-content: space-between; padding: 10px; border-bottom: 1px solid #eee; }\n    .metric-name { font-weight: 600; }\n    .metric-value { font-family: monospace; }\n    .progress { height: 20px; background: #e9ecef; border-radius: 4px; overflow: hidden; margin: 5px 0; }\n    .progress-bar { height: 100%; transition: width 0.3s; }\n    .good { background: #28a745; }\n    .warning { background: #ffc107; }\n    .bad { background: #dc3545; }\n    table { width: 100%; border-collapse: collapse; margin: 20px 0; }\n    th, td { padding: 10px; text-align: left; border-bottom: 1px solid #dee2e6; }\n    th { background: #f8f9fa; font-weight: 600; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Performance Budget Report</h1>\n    <div class=\"status ${results.passed ? 'passed' : 'failed'}\">\n      Status: ${results.passed ? '✓ PASSED' : '✗ FAILED'}\n    </div>\n    \n    <h2>File Sizes</h2>\n    <table>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Current</th>\n          <th>Budget</th>\n          <th>Usage</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${Object.entries(results.details.sizes || {}).map(([type, data]) => {\n          const budget = this.budget.sizes[type];\n          if (!budget) return '';\n          const percentage = Math.round((data.current / budget.max) * 100);\n          const status = percentage > 100 ? 'bad' : percentage > 80 ? 'warning' : 'good';\n          return `\n            <tr>\n              <td>${type.toUpperCase()}</td>\n              <td>${this.formatBytes(data.current)}</td>\n              <td>${this.formatBytes(budget.max)}</td>\n              <td>\n                <div class=\"progress\">\n                  <div class=\"progress-bar ${status}\" style=\"width: ${Math.min(percentage, 100)}%\"></div>\n                </div>\n                ${percentage}%\n              </td>\n            </tr>\n          `;\n        }).join('')}\n      </tbody>\n    </table>\n    \n    ${results.details.lighthouse ? `\n      <h2>Lighthouse Scores</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Metric</th>\n            <th>Score</th>\n            <th>Target</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${Object.entries(results.details.lighthouse.scores).map(([metric, value]) => `\n            <tr>\n              <td>${metric}</td>\n              <td class=\"${value >= 90 ? 'good' : value >= 50 ? 'warning' : 'bad'}\">${value}/100</td>\n              <td>${this.budget.lighthouse[metric]?.min || 'N/A'}</td>\n            </tr>\n          `).join('')}\n        </tbody>\n      </table>\n    ` : ''}\n    \n    ${results.warnings.length > 0 ? `\n      <h2>Warnings (${results.warnings.length})</h2>\n      <ul class=\"warning\">\n        ${results.warnings.map(w => `<li>${w}</li>`).join('')}\n      </ul>\n    ` : ''}\n    \n    ${results.failures.length > 0 ? `\n      <h2>Failures (${results.failures.length})</h2>\n      <ul class=\"failed\">\n        ${results.failures.map(f => `<li>${f}</li>`).join('')}\n      </ul>\n    ` : ''}\n    \n    <p style=\"margin-top: 40px; color: #666; font-size: 14px;\">\n      Generated: ${new Date().toLocaleString()}\n    </p>\n  </div>\n</body>\n</html>\n    `;\n    \n    const reportPath = path.join('test-results', 'performance-budget.html');\n    await fs.writeFile(reportPath, html, 'utf-8');\n  }\n\n  printReport(results) {\n    console.log(chalk.cyan('\\n📊 Performance Budget Report\\n'));\n\n    // File sizes\n    if (results.details.sizes) {\n      console.log(chalk.white('File Sizes:'));\n      for (const [type, data] of Object.entries(results.details.sizes)) {\n        const budget = this.budget.sizes[type];\n        if (budget) {\n          const percentage = Math.round((data.current / budget.max) * 100);\n          const color = percentage > 100 ? chalk.red : percentage > 80 ? chalk.yellow : chalk.green;\n          console.log(color(`  ${type}: ${this.formatBytes(data.current)} / ${this.formatBytes(budget.max)} (${percentage}%)`));\n          \n          // Show largest files if over budget\n          if (percentage > 100 && data.files && data.files.length > 0) {\n            console.log(chalk.gray(`    Largest files:`));\n            data.files.slice(0, 3).forEach(file => {\n              console.log(chalk.gray(`      - ${file.path}: ${this.formatBytes(file.size)}`));\n            });\n          }\n        }\n      }\n    }\n\n    // Lighthouse scores\n    if (results.details.lighthouse) {\n      console.log(chalk.white('\\nLighthouse Scores:'));\n      for (const [metric, value] of Object.entries(results.details.lighthouse.scores)) {\n        if (value !== null) {\n          const color = value >= 90 ? chalk.green : value >= 50 ? chalk.yellow : chalk.red;\n          console.log(color(`  ${metric}: ${value}/100`));\n        }\n      }\n\n      console.log(chalk.white('\\nPerformance Metrics:'));\n      for (const [metric, value] of Object.entries(results.details.lighthouse.metrics)) {\n        const budget = this.budget.metrics[metric];\n        if (budget) {\n          const percentage = Math.round((value / budget.max) * 100);\n          const color = percentage > 100 ? chalk.red : percentage > 80 ? chalk.yellow : chalk.green;\n          const unit = metric === 'cls' ? '' : 'ms';\n          console.log(color(`  ${metric.toUpperCase()}: ${value}${unit} / ${budget.max}${unit} (${percentage}%)`));\n        }\n      }\n\n      // Show opportunities\n      if (results.details.lighthouse.opportunities && results.details.lighthouse.opportunities.length > 0) {\n        console.log(chalk.white('\\nOptimization Opportunities:'));\n        results.details.lighthouse.opportunities.slice(0, 5).forEach(opp => {\n          console.log(chalk.cyan(`  • ${opp.title}`));\n          if (opp.savings > 0) {\n            console.log(chalk.gray(`    Potential savings: ${opp.savings}ms`));\n          }\n        });\n      }\n    }\n\n    // Resource counts\n    if (results.details.resources) {\n      console.log(chalk.white('\\nResource Counts:'));\n      for (const [type, count] of Object.entries(results.details.resources)) {\n        const budget = this.budget.requests[type];\n        if (budget) {\n          const color = count > budget.max ? chalk.red : count > budget.warning ? chalk.yellow : chalk.green;\n          console.log(color(`  ${type}: ${count} / ${budget.max}`));\n        }\n      }\n    }\n\n    // Image optimization\n    if (results.details.images) {\n      const { totalImages, optimized, needsOptimization, formats } = results.details.images;\n      console.log(chalk.white('\\nImage Optimization:'));\n      console.log(chalk.white(`  Total images: ${totalImages}`));\n      console.log(chalk.white(`  Optimized: ${optimized}`));\n      if (needsOptimization.length > 0) {\n        console.log(chalk.yellow(`  Need optimization: ${needsOptimization.length}`));\n        needsOptimization.slice(0, 3).forEach(img => {\n          console.log(chalk.gray(`    - ${img.path}: ${this.formatBytes(img.size)}`));\n        });\n      }\n      console.log(chalk.white('  Formats:'));\n      Object.entries(formats).forEach(([format, count]) => {\n        console.log(chalk.white(`    ${format}: ${count}`));\n      });\n    }\n\n    // Warnings\n    if (results.warnings.length > 0) {\n      console.log(chalk.yellow(`\\n⚠ Warnings (${results.warnings.length}):`));\n      results.warnings.forEach(warning => {\n        console.log(chalk.yellow(`  • ${warning}`));\n      });\n    }\n\n    // Failures\n    if (results.failures.length > 0) {\n      console.log(chalk.red(`\\n✗ Failures (${results.failures.length}):`));\n      results.failures.forEach(failure => {\n        console.log(chalk.red(`  • ${failure}`));\n      });\n    }\n\n    // Summary\n    console.log(chalk.cyan('\\n📈 Summary:'));\n    console.log(chalk.white(`  Total page weight: ${this.formatBytes(results.details.sizes.total.current)}`));\n    console.log(chalk.white(`  Total resources: ${results.details.resources.total}`));\n    console.log(\n      results.passed \n        ? chalk.green('  Status: ✓ PASSED') \n        : chalk.red('  Status: ✗ FAILED')\n    );\n    \n    // Report location\n    console.log(chalk.cyan('\\n📄 Reports saved to:'));\n    console.log(chalk.white('  • test-results/performance-budget.json'));\n    console.log(chalk.white('  • test-results/performance-budget.html'));\n  }\n\n  formatBytes(bytes) {\n    if (bytes === 0) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }\n}\n\n// Export for use in build process\nmodule.exports = PerformanceBudget;\n\n// CLI execution\nif (require.main === module) {\n  const checker = new PerformanceBudget();\n  \n  checker.checkBudget()\n    .then(results => {\n      process.exit(results.passed ? 0 : 1);\n    })\n    .catch(error => {\n      console.error(chalk.red('Error:'), error);\n      process.exit(1);\n    });\n}\r\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\performance\\budget.js",
    "RelativePath": "tools\\performance\\budget.js"
  },
  {
    "Content": "// tools/search/build-index.js\n\nconst fs = require('fs').promises;\nconst path = require('path');\nconst glob = require('glob').sync;\nconst matter = require('gray-matter');\nconst chalk = require('chalk');\nconst ora = require('ora');\n\nclass SearchIndexBuilder {\n  constructor(options = {}) {\n    this.options = {\n      contentDir: options.contentDir || 'content',\n      outputPath: options.outputPath || 'static/search-index.json',\n      excludePatterns: options.excludePatterns || ['**/draft/**', '**/_index.md'],\n      languages: options.languages || ['en', 'es'],\n      ...options\n    };\n  }\n\n  async build() {\n    const spinner = ora('Building search index...').start();\n    \n    try {\n      const documents = [];\n      \n      // Process English content (default)\n      const enDocs = await this.processLanguage('en');\n      documents.push(...enDocs);\n      \n      // Process Spanish content if it exists\n      const esPath = path.join(this.options.contentDir, 'es');\n      if (require('fs').existsSync(esPath)) {\n        const esDocs = await this.processLanguage('es');\n        documents.push(...esDocs);\n      }\n      \n      // Sort by date\n      documents.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n      \n      // Write index file\n      await this.writeIndex(documents);\n      \n      spinner.succeed(chalk.green(`✓ Search index built with ${documents.length} documents`));\n      \n      // Print statistics\n      this.printStatistics(documents);\n      \n      return documents;\n    } catch (error) {\n      spinner.fail(chalk.red(`✗ Failed to build search index: ${error.message}`));\n      throw error;\n    }\n  }\n\n  async processLanguage(lang) {\n    const documents = [];\n    const basePath = lang === 'en' ? this.options.contentDir : path.join(this.options.contentDir, lang);\n    \n    // Find all markdown files\n    const pattern = path.join(basePath, '**/*.md').replace(/\\\\/g, '/');\n    const files = glob(pattern, {\n      ignore: this.options.excludePatterns\n    });\n    \n    for (const file of files) {\n      try {\n        const doc = await this.processFile(file, lang);\n        if (doc) {\n          documents.push(doc);\n        }\n      } catch (error) {\n        console.warn(chalk.yellow(`Warning: Failed to process ${file}: ${error.message}`));\n      }\n    }\n    \n    return documents;\n  }\n\n  async processFile(filePath, lang) {\n    // Read file\n    const content = await fs.readFile(filePath, 'utf-8');\n    const { data: frontmatter, content: markdown } = matter(content);\n    \n    // Skip drafts\n    if (frontmatter.draft === true) {\n      return null;\n    }\n    \n    // Extract plain text (simple markdown removal)\n    const plainText = markdown\n      .replace(/{{<[^>]+>}}/g, '') // Remove Hugo shortcodes\n      .replace(/{{%[^%]+%}}/g, '') // Remove Hugo shortcodes\n      .replace(/<!--[\\s\\S]*?-->/g, '') // Remove HTML comments\n      .replace(/```[\\s\\S]*?```/g, '') // Remove code blocks\n      .replace(/`[^`]+`/g, '') // Remove inline code\n      .replace(/\\[([^\\]]+)\\]\\([^)]+\\)/g, '$1') // Convert links to text\n      .replace(/#{1,6}\\s+/g, '') // Remove headers\n      .replace(/[*_~]+/g, '') // Remove emphasis\n      .replace(/\\n{3,}/g, '\\n\\n') // Clean up whitespace\n      .trim();\n    \n    // Generate URL\n    const url = this.generateUrl(filePath, lang);\n    \n    // Extract section from path\n    const section = this.extractSection(filePath);\n    \n    // Create document\n    const document = {\n      id: this.generateId(filePath),\n      title: frontmatter.title || 'Untitled',\n      description: frontmatter.description || frontmatter.summary || '',\n      content: this.truncateContent(plainText, 500),\n      tags: frontmatter.tags || [],\n      categories: frontmatter.categories || [],\n      section: section,\n      url: url,\n      date: frontmatter.date || new Date().toISOString(),\n      lastmod: frontmatter.lastmod || frontmatter.date || new Date().toISOString(),\n      language: lang,\n      image: frontmatter.featuredImage || frontmatter.image || null,\n      format: frontmatter.format || null,\n      type: frontmatter.type || null\n    };\n    \n    return document;\n  }\n\n  generateId(filePath) {\n    return filePath\n      .replace(/\\\\/g, '/')\n      .replace(/^content\\//, '')\n      .replace(/\\.md$/, '')\n      .replace(/\\//g, '-');\n  }\n\n  generateUrl(filePath, lang) {\n    let url = filePath\n      .replace(/\\\\/g, '/')\n      .replace(/^content/, '')\n      .replace(/\\.md$/, '/');\n    \n    // Handle language prefix\n    if (lang !== 'en') {\n      if (!url.startsWith(`/${lang}/`)) {\n        url = `/${lang}${url}`;\n      }\n    }\n    \n    // Clean up duplicate slashes\n    url = url.replace(/\\/+/g, '/');\n    \n    // Remove index from URLs\n    url = url.replace(/\\/index\\/$/, '/');\n    \n    return url;\n  }\n\n  extractSection(filePath) {\n    const parts = filePath.replace(/\\\\/g, '/').split('/');\n    \n    // Find the section (usually the first directory after content)\n    for (let i = 0; i < parts.length; i++) {\n      if (parts[i] === 'content') {\n        if (parts[i + 1] && parts[i + 1] !== 'content') {\n          // Check if it's a language directory\n          if (['en', 'es', 'fr', 'de'].includes(parts[i + 1])) {\n            return parts[i + 2] || 'page';\n          }\n          return parts[i + 1];\n        }\n      }\n    }\n    \n    return 'page';\n  }\n\n  truncateContent(text, maxLength) {\n    if (text.length <= maxLength) {\n      return text;\n    }\n    \n    // Truncate at word boundary\n    const truncated = text.substring(0, maxLength);\n    const lastSpace = truncated.lastIndexOf(' ');\n    \n    if (lastSpace > 0) {\n      return truncated.substring(0, lastSpace) + '...';\n    }\n    \n    return truncated + '...';\n  }\n\n  async writeIndex(documents) {\n    // Ensure output directory exists\n    const outputDir = path.dirname(this.options.outputPath);\n    await fs.mkdir(outputDir, { recursive: true });\n    \n    // Write JSON file\n    const json = JSON.stringify(documents, null, 2);\n    await fs.writeFile(this.options.outputPath, json, 'utf-8');\n    \n    // Also write a minified version\n    const minifiedPath = this.options.outputPath.replace('.json', '.min.json');\n    await fs.writeFile(minifiedPath, JSON.stringify(documents), 'utf-8');\n  }\n\n  printStatistics(documents) {\n    console.log(chalk.cyan('\\n📊 Search Index Statistics:'));\n    console.log(chalk.white(`   Total documents: ${documents.length}`));\n    \n    // Count by section\n    const sections = {};\n    documents.forEach(doc => {\n      sections[doc.section] = (sections[doc.section] || 0) + 1;\n    });\n    \n    console.log(chalk.cyan('\\n   By Section:'));\n    Object.entries(sections).forEach(([section, count]) => {\n      console.log(chalk.white(`     ${section}: ${count}`));\n    });\n  }\n}\n\n// CLI execution\nif (require.main === module) {\n  const builder = new SearchIndexBuilder();\n  \n  builder.build()\n    .then(() => {\n      console.log(chalk.green('\\n✅ Search index build complete!'));\n      process.exit(0);\n    })\n    .catch(error => {\n      console.error(chalk.red('\\n❌ Search index build failed:'), error);\n      process.exit(1);\n    });\n}\n\nmodule.exports = SearchIndexBuilder;\r\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\search\\build-index.js",
    "RelativePath": "tools\\search\\build-index.js"
  },
  {
    "Content": "#!/usr/bin/env node\r\n\r\nimport { Command } from 'commander';\r\nimport chalk from 'chalk';\r\nimport ora from 'ora';\r\nimport fs from 'fs/promises';\r\nimport path from 'path';\r\nimport { fileURLToPath } from 'url';\r\nimport { dirname } from 'path';\r\nimport Anthropic from '@anthropic-ai/sdk';\r\nimport matter from 'gray-matter';\r\nimport dotenv from 'dotenv';\r\n\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = dirname(__filename);\r\n\r\n// Load environment variables\r\ndotenv.config();\r\n\r\nconst program = new Command();\r\n\r\nclass Translator {\r\n    constructor() {\r\n        if (!process.env.ANTHROPIC_API_KEY) {\r\n            console.error(chalk.red('❌ ANTHROPIC_API_KEY not found in .env file'));\r\n            process.exit(1);\r\n        }\r\n        \r\n        this.anthropic = new Anthropic({\r\n            apiKey: process.env.ANTHROPIC_API_KEY\r\n        });\r\n    }\r\n    \r\n    async translateMarkdown(filePath, targetLang = 'es') {\r\n        const spinner = ora(`Translating ${path.basename(filePath)} to ${targetLang}...`).start();\r\n        \r\n        try {\r\n            // Read the file\r\n            const content = await fs.readFile(filePath, 'utf-8');\r\n            const { data: frontmatter, content: markdown } = matter(content);\r\n            \r\n            // Translate content\r\n            const translatedMarkdown = await this.translateText(markdown, targetLang);\r\n            \r\n            // Translate frontmatter fields\r\n            const translatedFrontmatter = { ...frontmatter };\r\n            if (frontmatter.title) {\r\n                translatedFrontmatter.title = await this.translateText(frontmatter.title, targetLang);\r\n            }\r\n            if (frontmatter.description) {\r\n                translatedFrontmatter.description = await this.translateText(frontmatter.description, targetLang);\r\n            }\r\n            \r\n            // Build output path\r\n            const outputPath = this.getTranslatedPath(filePath, targetLang);\r\n            \r\n            // Ensure directory exists\r\n            await fs.mkdir(path.dirname(outputPath), { recursive: true });\r\n            \r\n            // Write translated file\r\n            const output = matter.stringify(translatedMarkdown, translatedFrontmatter);\r\n            await fs.writeFile(outputPath, output, 'utf-8');\r\n            \r\n            spinner.succeed(chalk.green(`✓ Translated to ${outputPath}`));\r\n            return outputPath;\r\n            \r\n        } catch (error) {\r\n            spinner.fail(chalk.red(`✗ Failed: ${error.message}`));\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    async translateText(text, targetLang) {\r\n        const langMap = {\r\n            'es': 'Spanish',\r\n            'fr': 'French',\r\n            'de': 'German',\r\n            'it': 'Italian',\r\n            'pt': 'Portuguese',\r\n            'ja': 'Japanese',\r\n            'zh': 'Chinese'\r\n        };\r\n        \r\n        const targetLanguage = langMap[targetLang] || targetLang;\r\n        \r\n        const message = await this.anthropic.messages.create({\r\n            model: 'claude-3-opus-20240229',\r\n            max_tokens: 4000,\r\n            temperature: 0.3,\r\n            messages: [{\r\n                role: 'user',\r\n                content: `Translate the following text to ${targetLanguage}. Maintain the same tone, style, and any Markdown formatting. Only provide the translation, no explanations.\\n\\nText to translate:\\n${text}`\r\n            }]\r\n        });\r\n        \r\n        return message.content[0].text;\r\n    }\r\n    \r\n    getTranslatedPath(originalPath, targetLang) {\r\n        // Convert content/section/file.md to content/es/section/file.md\r\n        const parts = originalPath.split(path.sep);\r\n        const contentIndex = parts.indexOf('content');\r\n        \r\n        if (contentIndex !== -1) {\r\n            // Map English sections to Spanish\r\n            const sectionMap = {\r\n                'make': 'hacer',\r\n                'learn': 'aprender',\r\n                'think': 'pensar',\r\n                'meet': 'conocer',\r\n                'words': 'palabras',\r\n                'sounds': 'sonidos',\r\n                'visuals': 'visuales',\r\n                'built': 'construido',\r\n                'found': 'encontrado',\r\n                'strategies': 'estrategias',\r\n                'positions': 'posiciones',\r\n                'links': 'enlaces',\r\n                'me': 'yo',\r\n                'work': 'trabajo'\r\n            };\r\n            \r\n            // Insert language code after 'content'\r\n            parts.splice(contentIndex + 1, 0, targetLang);\r\n            \r\n            // Translate section names if Spanish\r\n            if (targetLang === 'es') {\r\n                for (let i = contentIndex + 2; i < parts.length - 1; i++) {\r\n                    if (sectionMap[parts[i]]) {\r\n                        parts[i] = sectionMap[parts[i]];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return parts.join(path.sep);\r\n    }\r\n}\r\n\r\nprogram\r\n    .name('hugo-translate')\r\n    .description('Translate Hugo content using Claude AI')\r\n    .version('1.0.0');\r\n\r\nprogram\r\n    .command('file <path>')\r\n    .description('Translate a single markdown file')\r\n    .option('-l, --lang <language>', 'Target language', 'es')\r\n    .action(async (filePath, options) => {\r\n        const translator = new Translator();\r\n        await translator.translateMarkdown(filePath, options.lang);\r\n    });\r\n\r\nprogram\r\n    .command('batch')\r\n    .description('Translate all content files')\r\n    .option('-l, --lang <language>', 'Target language', 'es')\r\n    .option('-s, --source <pattern>', 'Source pattern', 'content/**/*.md')\r\n    .action(async (options) => {\r\n        const translator = new Translator();\r\n        const glob = (await import('glob')).default;\r\n        \r\n        const files = await glob(options.source, {\r\n            ignore: [`content/${options.lang}/**`]\r\n        });\r\n        \r\n        console.log(chalk.cyan(`Found ${files.length} files to translate`));\r\n        \r\n        for (const file of files) {\r\n            await translator.translateMarkdown(file, options.lang);\r\n        }\r\n        \r\n        console.log(chalk.green('✓ All translations complete!'));\r\n    });\r\n\r\nprogram.parse();\r\n",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\translator\\cli.js",
    "RelativePath": "tools\\translator\\cli.js"
  },
  {
    "Content": "import Anthropic from '@anthropic-ai/sdk';\r\nimport fs from 'fs/promises';\r\nimport path from 'path';\r\nimport matter from 'gray-matter';\r\n\r\nexport class Translator {\r\n  constructor(apiKey) {\r\n    if (!apiKey) {\r\n      throw new Error('ANTHROPIC_API_KEY is required');\r\n    }\r\n    \r\n    this.client = new Anthropic({\r\n      apiKey: apiKey\r\n    });\r\n    \r\n    this.cache = new Map();\r\n  }\r\n  \r\n  async translateContent(content, targetLang) {\r\n    // Check cache\r\n    const cacheKey = `${targetLang}:${content.substring(0, 50)}`;\r\n    if (this.cache.has(cacheKey)) {\r\n      return this.cache.get(cacheKey);\r\n    }\r\n    \r\n    const prompt = `\r\n      Translate the following Markdown content to ${this.getLanguageName(targetLang)}.\r\n      Preserve all Markdown formatting, links, and code blocks.\r\n      Maintain the same tone and style.\r\n      Do not translate code blocks, URLs, or Hugo shortcodes.\r\n      \r\n      Content:\r\n      ${content}\r\n    `;\r\n    \r\n    try {\r\n      const response = await this.client.messages.create({\r\n        model: 'claude-3-opus-20240229',\r\n        max_tokens: 4000,\r\n        temperature: 0.3,\r\n        messages: [{\r\n          role: 'user',\r\n          content: prompt\r\n        }]\r\n      });\r\n      \r\n      const translated = response.content[0].text;\r\n      this.cache.set(cacheKey, translated);\r\n      \r\n      return translated;\r\n    } catch (error) {\r\n      console.error('Translation error:', error);\r\n      throw new Error(`Failed to translate content: ${error.message}`);\r\n    }\r\n  }\r\n  \r\n  async translateMetadata(frontmatter, targetLang) {\r\n    const translatable = ['title', 'description', 'summary'];\r\n    const translated = { ...frontmatter };\r\n    \r\n    for (const field of translatable) {\r\n      if (frontmatter[field]) {\r\n        translated[field] = await this.translateText(frontmatter[field], targetLang);\r\n      }\r\n    }\r\n    \r\n    // Update locale\r\n    translated.locale = this.getLocaleCode(targetLang);\r\n    \r\n    return translated;\r\n  }\r\n  \r\n  async translateText(text, targetLang) {\r\n    const prompt = `\r\n      Translate to ${this.getLanguageName(targetLang)}: \"${text}\"\r\n      Provide only the translation, no explanation.\r\n    `;\r\n    \r\n    const response = await this.client.messages.create({\r\n      model: 'claude-3-opus-20240229',\r\n      max_tokens: 500,\r\n      temperature: 0.3,\r\n      messages: [{\r\n        role: 'user',\r\n        content: prompt\r\n      }]\r\n    });\r\n    \r\n    return response.content[0].text.trim().replace(/^\"|\"$/g, '');\r\n  }\r\n  \r\n  async translateFile(filePath, targetLang) {\r\n    const content = await fs.readFile(filePath, 'utf-8');\r\n    const { data, content: body } = matter(content);\r\n    \r\n    const translatedBody = await this.translateContent(body, targetLang);\r\n    const translatedData = await this.translateMetadata(data, targetLang);\r\n    \r\n    const outputPath = this.getOutputPath(filePath, targetLang);\r\n    await this.saveTranslation(outputPath, translatedData, translatedBody);\r\n    \r\n    return outputPath;\r\n  }\r\n  \r\n  getOutputPath(filePath, targetLang) {\r\n    return filePath.replace('/content/', `/content/${targetLang}/`);\r\n  }\r\n  \r\n  async saveTranslation(outputPath, frontmatter, content) {\r\n    const dir = path.dirname(outputPath);\r\n    await fs.mkdir(dir, { recursive: true });\r\n    \r\n    const output = matter.stringify(content, frontmatter);\r\n    await fs.writeFile(outputPath, output, 'utf-8');\r\n  }\r\n  \r\n  getLanguageName(code) {\r\n    const languages = {\r\n      es: 'Spanish',\r\n      fr: 'French',\r\n      de: 'German',\r\n      it: 'Italian',\r\n      pt: 'Portuguese',\r\n      ja: 'Japanese',\r\n      zh: 'Chinese',\r\n      ko: 'Korean'\r\n    };\r\n    return languages[code] || code;\r\n  }\r\n  \r\n  getLocaleCode(code) {\r\n    const locales = {\r\n      es: 'es_ES',\r\n      fr: 'fr_FR',\r\n      de: 'de_DE',\r\n      it: 'it_IT',\r\n      pt: 'pt_PT',\r\n      ja: 'ja_JP',\r\n      zh: 'zh_CN',\r\n      ko: 'ko_KR'\r\n    };\r\n    return locales[code] || code;\r\n  }\r\n}",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\translator\\translator.js",
    "RelativePath": "tools\\translator\\translator.js"
  },
  {
    "Content": "// tools/translator/utils.js\r\n\r\nimport fs from 'fs/promises';\r\nimport { glob } from 'glob';\r\nimport matter from 'gray-matter';\r\nimport path from 'path';\r\n\r\n/**\r\n * Find all content files matching a pattern\r\n * @param {string} pattern - Glob pattern for finding files\r\n * @returns {Promise<string[]>} Array of file paths\r\n */\r\nexport async function findContentFiles(pattern) {\r\n    const files = await glob(pattern, {\r\n        ignore: [\r\n            '**/node_modules/**',\r\n            '**/public/**',\r\n            '**/resources/**',\r\n            '**/_index.md',\r\n            '**/es/**',\r\n            '**/fr/**',\r\n            '**/de/**'\r\n        ]\r\n    });\r\n\r\n    // Filter to only markdown files\r\n    return files.filter(file => file.endsWith('.md'));\r\n}\r\n\r\n/**\r\n * Parse markdown file with frontmatter\r\n * @param {string} content - Raw markdown content\r\n * @returns {Object} Parsed frontmatter and body\r\n */\r\nexport function parseMarkdown(content) {\r\n    const { data, content: body } = matter(content);\r\n    return {\r\n        frontmatter: data,\r\n        body: body.trim()\r\n    };\r\n}\r\n\r\n/**\r\n * Save translated content to file\r\n * @param {string} outputPath - Destination file path\r\n * @param {Object} frontmatter - Translated frontmatter\r\n * @param {string} body - Translated body content\r\n */\r\nexport async function saveTranslation(outputPath, frontmatter, body) {\r\n    // Ensure directory exists\r\n    const dir = path.dirname(outputPath);\r\n    await fs.mkdir(dir, { recursive: true });\r\n\r\n    // Combine frontmatter and body\r\n    const output = matter.stringify(body, frontmatter);\r\n\r\n    // Write file\r\n    await fs.writeFile(outputPath, output, 'utf-8');\r\n}\r\n\r\n/**\r\n * Get translated file path based on language\r\n * @param {string} originalPath - Original file path\r\n * @param {string} targetLang - Target language code\r\n * @returns {string} Translated file path\r\n */\r\nexport function getTranslatedPath(originalPath, targetLang) {\r\n    const parts = originalPath.split(path.sep);\r\n    const contentIndex = parts.indexOf('content');\r\n\r\n    if (contentIndex === -1) {\r\n        throw new Error('Not a content file');\r\n    }\r\n\r\n    // Language-specific section mappings\r\n    const sectionMaps = {\r\n        es: {\r\n            'make': 'hacer',\r\n            'learn': 'aprender',\r\n            'think': 'pensar',\r\n            'meet': 'conocer',\r\n            'words': 'palabras',\r\n            'sounds': 'sonidos',\r\n            'visuals': 'visuales',\r\n            'built': 'construido',\r\n            'found': 'encontrado',\r\n            'strategies': 'estrategias',\r\n            'positions': 'posiciones',\r\n            'links': 'enlaces',\r\n            'me': 'yo',\r\n            'work': 'trabajo'\r\n        },\r\n        fr: {\r\n            'make': 'faire',\r\n            'learn': 'apprendre',\r\n            'think': 'penser',\r\n            'meet': 'rencontrer',\r\n            'words': 'mots',\r\n            'sounds': 'sons',\r\n            'visuals': 'visuels',\r\n            'built': 'construit',\r\n            'found': 'trouvé',\r\n            'strategies': 'stratégies',\r\n            'positions': 'positions',\r\n            'links': 'liens',\r\n            'me': 'moi',\r\n            'work': 'travail'\r\n        }\r\n    };\r\n\r\n    // Clone parts array\r\n    const translatedParts = [...parts];\r\n\r\n    // Insert language code after 'content'\r\n    translatedParts.splice(contentIndex + 1, 0, targetLang);\r\n\r\n    // Translate section names if mapping exists\r\n    if (sectionMaps[targetLang]) {\r\n        const map = sectionMaps[targetLang];\r\n        for (let i = contentIndex + 2; i < translatedParts.length - 1; i++) {\r\n            if (map[translatedParts[i]]) {\r\n                translatedParts[i] = map[translatedParts[i]];\r\n            }\r\n        }\r\n    }\r\n\r\n    return translatedParts.join(path.sep);\r\n}\r\n\r\n/**\r\n * Check if a translation already exists\r\n * @param {string} filePath - Path to check\r\n * @returns {Promise<boolean>} True if file exists\r\n */\r\nexport async function translationExists(filePath) {\r\n    try {\r\n        await fs.access(filePath);\r\n        return true;\r\n    } catch {\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n * Get language name from code\r\n * @param {string} code - Language code\r\n * @returns {string} Full language name\r\n */\r\nexport function getLanguageName(code) {\r\n    const languages = {\r\n        es: 'Spanish',\r\n        fr: 'French',\r\n        de: 'German',\r\n        it: 'Italian',\r\n        pt: 'Portuguese',\r\n        ja: 'Japanese',\r\n        zh: 'Chinese',\r\n        ko: 'Korean',\r\n        ru: 'Russian',\r\n        ar: 'Arabic',\r\n        hi: 'Hindi'\r\n    };\r\n    return languages[code] || code;\r\n}\r\n\r\n/**\r\n * Validate language code\r\n * @param {string} code - Language code to validate\r\n * @returns {boolean} True if valid\r\n */\r\nexport function isValidLanguageCode(code) {\r\n    const validCodes = ['es', 'fr', 'de', 'it', 'pt', 'ja', 'zh', 'ko', 'ru', 'ar', 'hi'];\r\n    return validCodes.includes(code);\r\n}\r\n\r\n/**\r\n * Extract translatable strings from content\r\n * @param {string} content - Content to analyze\r\n * @returns {Array} Array of translatable segments\r\n */\r\nexport function extractTranslatableSegments(content) {\r\n    const segments = [];\r\n\r\n    // Split by code blocks to avoid translating them\r\n    const parts = content.split(/```[\\s\\S]*?```/);\r\n\r\n    parts.forEach((part, index) => {\r\n        if (part.trim()) {\r\n            // Split by paragraphs for better translation context\r\n            const paragraphs = part.split(/\\n\\n+/);\r\n            paragraphs.forEach(para => {\r\n                if (para.trim() && !para.startsWith('{{') && !para.startsWith('//')) {\r\n                    segments.push({\r\n                        index,\r\n                        type: 'text',\r\n                        content: para.trim()\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    return segments;\r\n}\r\n\r\n/**\r\n * Create translation report\r\n * @param {Array} files - Files processed\r\n * @param {string} targetLang - Target language\r\n * @returns {Object} Report object\r\n */\r\nexport function createTranslationReport(files, targetLang) {\r\n    const report = {\r\n        timestamp: new Date().toISOString(),\r\n        targetLanguage: targetLang,\r\n        totalFiles: files.length,\r\n        processedFiles: [],\r\n        failedFiles: [],\r\n        statistics: {\r\n            totalWords: 0,\r\n            totalCharacters: 0\r\n        }\r\n    };\r\n\r\n    return report;\r\n}\r\n\r\n/**\r\n * Estimate translation cost (for Claude API)\r\n * @param {string} content - Content to translate\r\n * @returns {Object} Cost estimation\r\n */\r\nexport function estimateTranslationCost(content) {\r\n    // Rough estimation based on Claude's pricing\r\n    // Assuming ~4 characters per token\r\n    const tokens = Math.ceil(content.length / 4);\r\n    const inputTokens = tokens;\r\n    const outputTokens = tokens * 1.2; // Translations are often slightly longer\r\n\r\n    // Claude-3 Opus pricing (as of 2024)\r\n    const inputCostPer1k = 0.015;\r\n    const outputCostPer1k = 0.075;\r\n\r\n    const estimatedCost = (\r\n        (inputTokens / 1000) * inputCostPer1k +\r\n        (outputTokens / 1000) * outputCostPer1k\r\n    );\r\n\r\n    return {\r\n        inputTokens,\r\n        outputTokens: Math.ceil(outputTokens),\r\n        estimatedCost: estimatedCost.toFixed(4),\r\n        currency: 'USD'\r\n    };\r\n}",
    "Path": "C:\\Users\\brand\\Development\\Project_Workspace\\portfolio_site\\tools\\translator\\utils.js",
    "RelativePath": "tools\\translator\\utils.js"
  }
]
