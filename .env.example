# =============================================================================
# PORTFOLIO SITE - ENVIRONMENT VARIABLES TEMPLATE
# =============================================================================
# 
# INSTRUCTIONS:
# 1. Copy this file to .env for development
# 2. Copy this file to .env.production for production (use Netlify env vars)
# 3. Update all placeholder values with your actual configuration
# 4. Never commit actual secrets to version control
# 
# SECURITY NOTES:
# - Use strong, unique secrets for production
# - Set sensitive values via hosting platform environment variables
# - Rotate secrets regularly
# - Use different secrets for each environment
#
# =============================================================================

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# Environment (development, staging, production)
NODE_ENV=development
HUGO_ENV=development
HUGO_VERSION=0.121.0

# Application Information
APP_NAME=Your Portfolio Site
APP_VERSION=1.0.0
BUILD_ID=

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Development Ports (adjust as needed)
DEV_PORT=1313
CMS_PORT=3334
BACKEND_PORT=3335
WS_PORT=3001

# Production Server Settings (for hosted environments)
HOST=0.0.0.0
PORT=3333

# =============================================================================
# SITE CONFIGURATION
# =============================================================================

# Site URLs (Update for your environment)
SITE_URL=http://localhost:1313
VITE_SITE_URL=http://localhost:1313
VITE_API_URL=http://localhost:3334/api

# Site Identity
SITE_NAME=Your Portfolio Site
SITE_DESCRIPTION=Professional portfolio and blog

# Hugo Configuration
HUGO_BASE_URL=http://localhost:1313

# =============================================================================
# SUPABASE CONFIGURATION
# =============================================================================
# 
# SETUP INSTRUCTIONS:
# 1. Create a Supabase project at https://supabase.com
# 2. Go to Settings > API in your Supabase dashboard
# 3. Copy your Project URL and API Keys
# 4. Replace the example values below
#
# SECURITY NOTE:
# - anon key is safe for client-side use
# - service_role key should NEVER be exposed to clients
# - Use environment variables for production

# Supabase Project Configuration
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_ANON_KEY=your-anon-key-here

# Frontend Environment Variables (Safe for client-side)
NEXT_PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-anon-key-here

# Backend Service Key (KEEP SECRET!)
SUPABASE_SERVICE_KEY=your-service-role-key-here

# Database Connection (Optional, for direct DB access)
SUPABASE_DB_URL=postgresql://postgres:[PASSWORD]@db.your-project-id.supabase.co:5432/postgres

# Supabase Security (Optional)
SUPABASE_JWT_SECRET=your-jwt-secret-here
SUPABASE_WEBHOOK_SECRET=your-webhook-secret-here

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================
# 
# SECURITY SETUP:
# 1. Generate strong, unique secrets for each environment
# 2. Use bcrypt to hash admin passwords: 
#    node -e "console.log(require('bcryptjs').hashSync('your-password', 12))"
# 3. Never commit actual secrets to version control
# 4. Use different secrets for dev/staging/production

# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-change-in-production
JWT_EXPIRY=7d
JWT_REFRESH_SECRET=your-refresh-token-secret-change-this
JWT_REFRESH_EXPIRES_IN=30d

# Session Configuration
SESSION_SECRET=your-session-secret-change-this
SESSION_MAX_AGE=86400000

# Admin Configuration
ADMIN_USERNAME=admin
ADMIN_EMAIL=admin@yourdomain.com
ADMIN_PASSWORD_HASH=your-bcrypt-hashed-password

# Security Settings
BCRYPT_ROUNDS=12
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# CORS Configuration
CORS_ORIGIN=http://localhost:1313
CORS_CREDENTIALS=true
ALLOWED_ORIGINS=http://localhost:1313,http://localhost:3334

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================
#
# EMAIL SETUP OPTIONS:
# 1. Gmail: Enable 2FA, create App Password
# 2. SendGrid: Get API key from sendgrid.com
# 3. Mailgun: Get API key from mailgun.com
# 4. AWS SES: Set up in AWS console
# 5. Disable: Leave SMTP_HOST empty to disable email

# SMTP Settings (Gmail example)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password
FROM_EMAIL=noreply@yourdomain.com
CONTACT_EMAIL=contact@yourdomain.com

# Alternative Email Services
SENDGRID_API_KEY=your-sendgrid-api-key
MAILGUN_API_KEY=your-mailgun-api-key
MAILGUN_DOMAIN=your-mailgun-domain

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Primary Database Type (postgresql for Supabase, sqlite for local dev)
DB_TYPE=sqlite
DB_HOST=localhost
DB_PORT=5432
DB_NAME=portfolio_db
DB_USER=postgres
DB_PASSWORD=your-db-password
DB_SSL=prefer

# Local Development Database (SQLite)
LOCAL_DB_PATH=./data/portfolio.db

# Connection Pool Settings
DB_POOL_MIN=2
DB_POOL_MAX=10
DB_IDLE_TIMEOUT=30000

# =============================================================================
# CACHING & PERFORMANCE
# =============================================================================

# Redis Cache (Optional - leave empty to disable)
REDIS_URL=redis://localhost:6379
REDIS_HOST=
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
CACHE_TTL=3600

# Performance Settings
COMPRESSION_ENABLED=true
ENABLE_CDN=false
CDN_URL=

# =============================================================================
# FILE STORAGE & UPLOADS
# =============================================================================

# Upload Configuration
UPLOAD_MAX_SIZE=10485760
ALLOWED_FILE_TYPES=jpg,jpeg,png,gif,webp,pdf,doc,docx
UPLOAD_DESTINATION=./uploads

# Storage Type (local, aws, cloudinary)
STORAGE_TYPE=local

# AWS S3 Configuration (if using cloud storage)
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_BUCKET_NAME=your-bucket-name
AWS_REGION=us-east-1

# Cloudinary Configuration (alternative cloud storage)
CLOUDINARY_URL=cloudinary://api_key:api_secret@cloud_name

# =============================================================================
# RATE LIMITING & SECURITY
# =============================================================================

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_SKIP_SUCCESSFUL=false

# Security Headers
HSTS_MAX_AGE=31536000
CSP_REPORT_URI=/api/csp-report

# =============================================================================
# MONITORING & ANALYTICS
# =============================================================================

# Logging Configuration
LOG_LEVEL=info
LOG_FILE=logs/app.log
LOG_MAX_SIZE=10m
LOG_MAX_FILES=7d

# Error Tracking (Sentry)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
SENTRY_ENVIRONMENT=development

# Analytics (Google Analytics)
GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX
ENABLE_ANALYTICS=false

# Performance Monitoring
APM_SERVICE_NAME=portfolio-site
APM_ENVIRONMENT=development

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Core Features
ENABLE_REGISTRATION=false
ENABLE_COMMENTS=false
ENABLE_CONTACT_FORM=true
ENABLE_SEARCH=true
ENABLE_BLOG=true

# Advanced Features
ENABLE_MULTILINGUAL=true
ENABLE_WEBHOOKS=false
ENABLE_REALTIME=false
ENABLE_STORAGE=true
ENABLE_LOGGING=true
ENABLE_BACKUP=false

# Development Features
DEBUG=true
ENABLE_DEBUG_ROUTES=false
HOT_RELOAD=true
MAINTENANCE_MODE=false
MOCK_SERVICES=false

# =============================================================================
# EXTERNAL INTEGRATIONS
# =============================================================================

# AI Services
ANTHROPIC_API_KEY=your-anthropic-api-key
OPENAI_API_KEY=your-openai-api-key

# Social Media APIs
GITHUB_TOKEN=your-github-token
TWITTER_API_KEY=your-twitter-api-key

# Webhooks
WEBHOOK_SECRET=your-webhook-secret

# =============================================================================
# BACKUP & RECOVERY
# =============================================================================

# Backup Configuration
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_COMPRESS=true

# Backup Storage
BACKUP_S3_BUCKET=your-backup-bucket
BACKUP_ENCRYPTION_KEY=your-backup-encryption-key

# =============================================================================
# DEVELOPMENT & TESTING
# =============================================================================

# Test Configuration
TEST_DATABASE_URL=sqlite::memory:
TEST_TIMEOUT=30000

# Development Tools
HOT_RELOAD=true
ENABLE_DEBUG_ROUTES=false
MOCK_SERVICES=false

# =============================================================================
# NETLIFY SPECIFIC CONFIGURATION
# =============================================================================

# Build Configuration
NETLIFY_FUNCTIONS_URL=/.netlify/functions
API_BASE_URL=/api

# Edge Functions
ENABLE_EDGE_FUNCTIONS=true

# =============================================================================
# LEGACY SUPPORT (for migration from older systems)
# =============================================================================

# Legacy Database URLs
DATABASE_URL=
MONGODB_URI=mongodb://localhost:27017/portfolio_db

# Legacy API Keys
LEGACY_API_KEY=

# =============================================================================
# ENVIRONMENT-SPECIFIC NOTES
# =============================================================================
# 
# FOR DEVELOPMENT (.env):
# - Use localhost URLs and weak secrets for faster development
# - Enable debug features and logging
# - Use SQLite for simplicity
# - Disable external services you don't need
#
# FOR STAGING (.env.staging):
# - Use staging service URLs
# - Enable some debug features for testing
# - Use medium-strength security
# - Test production-like behavior
#
# FOR PRODUCTION (.env.production):
# - Use production service URLs
# - Disable all debug features
# - Use strong security (12+ rounds bcrypt, long JWT secrets)
# - Enable monitoring and error tracking
# - Set all secrets via hosting platform environment variables
# - Never commit production secrets to version control
#
# =============================================================================
# QUICK SETUP CHECKLIST
# =============================================================================
# 
# □ 1. Copy this file to .env
# □ 2. Set up Supabase project and copy URL/keys
# □ 3. Generate strong JWT_SECRET and SESSION_SECRET
# □ 4. Hash admin password with bcrypt
# □ 5. Configure email settings (or disable SMTP_HOST)
# □ 6. Update CORS_ORIGIN with your domain
# □ 7. Set up error tracking (Sentry) if desired
# □ 8. Configure analytics if desired
# □ 9. Test configuration with: npm run test:config
# □ 10. For production: Set secrets via hosting platform
#
# =============================================================================